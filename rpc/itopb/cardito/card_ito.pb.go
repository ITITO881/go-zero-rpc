// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.19.4
// source: card_ito.proto

package cardito

import (
	empty "github.com/golang/protobuf/ptypes/empty"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CardDiscountDestroyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CardDiscountDestroyRequest) Reset() {
	*x = CardDiscountDestroyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_card_ito_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardDiscountDestroyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardDiscountDestroyRequest) ProtoMessage() {}

func (x *CardDiscountDestroyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_card_ito_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardDiscountDestroyRequest.ProtoReflect.Descriptor instead.
func (*CardDiscountDestroyRequest) Descriptor() ([]byte, []int) {
	return file_card_ito_proto_rawDescGZIP(), []int{0}
}

func (x *CardDiscountDestroyRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CardDiscountListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Meet          *int32  `protobuf:"varint,3,opt,name=meet,proto3,oneof" json:"meet,omitempty"`
	Percentage    *int32  `protobuf:"varint,4,opt,name=percentage,proto3,oneof" json:"percentage,omitempty"`
	LimitTime     *int32  `protobuf:"varint,5,opt,name=limit_time,json=limitTime,proto3,oneof" json:"limit_time,omitempty"`
	LimitTimeUnit *string `protobuf:"bytes,6,opt,name=limit_time_unit,json=limitTimeUnit,proto3,oneof" json:"limit_time_unit,omitempty"`
	IsValid       int32   `protobuf:"varint,7,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
	Parent        *int64  `protobuf:"varint,12,opt,name=parent,proto3,oneof" json:"parent,omitempty"`
	Filters       string  `protobuf:"bytes,13,opt,name=filters,proto3" json:"filters,omitempty"`
	IconUrl       *string `protobuf:"bytes,14,opt,name=icon_url,json=iconUrl,proto3,oneof" json:"icon_url,omitempty"`
	Remark        *string `protobuf:"bytes,15,opt,name=remark,proto3,oneof" json:"remark,omitempty"`
}

func (x *CardDiscountListRequest) Reset() {
	*x = CardDiscountListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_card_ito_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardDiscountListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardDiscountListRequest) ProtoMessage() {}

func (x *CardDiscountListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_card_ito_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardDiscountListRequest.ProtoReflect.Descriptor instead.
func (*CardDiscountListRequest) Descriptor() ([]byte, []int) {
	return file_card_ito_proto_rawDescGZIP(), []int{1}
}

func (x *CardDiscountListRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CardDiscountListRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CardDiscountListRequest) GetMeet() int32 {
	if x != nil && x.Meet != nil {
		return *x.Meet
	}
	return 0
}

func (x *CardDiscountListRequest) GetPercentage() int32 {
	if x != nil && x.Percentage != nil {
		return *x.Percentage
	}
	return 0
}

func (x *CardDiscountListRequest) GetLimitTime() int32 {
	if x != nil && x.LimitTime != nil {
		return *x.LimitTime
	}
	return 0
}

func (x *CardDiscountListRequest) GetLimitTimeUnit() string {
	if x != nil && x.LimitTimeUnit != nil {
		return *x.LimitTimeUnit
	}
	return ""
}

func (x *CardDiscountListRequest) GetIsValid() int32 {
	if x != nil {
		return x.IsValid
	}
	return 0
}

func (x *CardDiscountListRequest) GetParent() int64 {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return 0
}

func (x *CardDiscountListRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *CardDiscountListRequest) GetIconUrl() string {
	if x != nil && x.IconUrl != nil {
		return *x.IconUrl
	}
	return ""
}

func (x *CardDiscountListRequest) GetRemark() string {
	if x != nil && x.Remark != nil {
		return *x.Remark
	}
	return ""
}

type CardDiscountListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*CardDiscountResponse `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Count   int32                   `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *CardDiscountListResponse) Reset() {
	*x = CardDiscountListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_card_ito_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardDiscountListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardDiscountListResponse) ProtoMessage() {}

func (x *CardDiscountListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_card_ito_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardDiscountListResponse.ProtoReflect.Descriptor instead.
func (*CardDiscountListResponse) Descriptor() ([]byte, []int) {
	return file_card_ito_proto_rawDescGZIP(), []int{2}
}

func (x *CardDiscountListResponse) GetResults() []*CardDiscountResponse {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *CardDiscountListResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type CardDiscountOptionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeUnits []*LabelValueResponse `protobuf:"bytes,1,rep,name=time_units,json=timeUnits,proto3" json:"time_units,omitempty"`
	Status    []*LabelValueResponse `protobuf:"bytes,2,rep,name=status,proto3" json:"status,omitempty"`
}

func (x *CardDiscountOptionResponse) Reset() {
	*x = CardDiscountOptionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_card_ito_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardDiscountOptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardDiscountOptionResponse) ProtoMessage() {}

func (x *CardDiscountOptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_card_ito_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardDiscountOptionResponse.ProtoReflect.Descriptor instead.
func (*CardDiscountOptionResponse) Descriptor() ([]byte, []int) {
	return file_card_ito_proto_rawDescGZIP(), []int{3}
}

func (x *CardDiscountOptionResponse) GetTimeUnits() []*LabelValueResponse {
	if x != nil {
		return x.TimeUnits
	}
	return nil
}

func (x *CardDiscountOptionResponse) GetStatus() []*LabelValueResponse {
	if x != nil {
		return x.Status
	}
	return nil
}

type CardDiscountPartialUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XPartialUpdateFields []string `protobuf:"bytes,2,rep,name=_partial_update_fields,json=PartialUpdateFields,proto3" json:"_partial_update_fields,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Meet                 *int32   `protobuf:"varint,4,opt,name=meet,proto3,oneof" json:"meet,omitempty"`
	Percentage           *int32   `protobuf:"varint,5,opt,name=percentage,proto3,oneof" json:"percentage,omitempty"`
	LimitTime            *int32   `protobuf:"varint,6,opt,name=limit_time,json=limitTime,proto3,oneof" json:"limit_time,omitempty"`
	LimitTimeUnit        *string  `protobuf:"bytes,7,opt,name=limit_time_unit,json=limitTimeUnit,proto3,oneof" json:"limit_time_unit,omitempty"`
	IsValid              int32    `protobuf:"varint,8,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
	Parent               *int64   `protobuf:"varint,13,opt,name=parent,proto3,oneof" json:"parent,omitempty"`
	Filters              string   `protobuf:"bytes,14,opt,name=filters,proto3" json:"filters,omitempty"`
	IconUrl              *string  `protobuf:"bytes,15,opt,name=icon_url,json=iconUrl,proto3,oneof" json:"icon_url,omitempty"`
	Remark               *string  `protobuf:"bytes,16,opt,name=remark,proto3,oneof" json:"remark,omitempty"`
}

func (x *CardDiscountPartialUpdateRequest) Reset() {
	*x = CardDiscountPartialUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_card_ito_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardDiscountPartialUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardDiscountPartialUpdateRequest) ProtoMessage() {}

func (x *CardDiscountPartialUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_card_ito_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardDiscountPartialUpdateRequest.ProtoReflect.Descriptor instead.
func (*CardDiscountPartialUpdateRequest) Descriptor() ([]byte, []int) {
	return file_card_ito_proto_rawDescGZIP(), []int{4}
}

func (x *CardDiscountPartialUpdateRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CardDiscountPartialUpdateRequest) GetXPartialUpdateFields() []string {
	if x != nil {
		return x.XPartialUpdateFields
	}
	return nil
}

func (x *CardDiscountPartialUpdateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CardDiscountPartialUpdateRequest) GetMeet() int32 {
	if x != nil && x.Meet != nil {
		return *x.Meet
	}
	return 0
}

func (x *CardDiscountPartialUpdateRequest) GetPercentage() int32 {
	if x != nil && x.Percentage != nil {
		return *x.Percentage
	}
	return 0
}

func (x *CardDiscountPartialUpdateRequest) GetLimitTime() int32 {
	if x != nil && x.LimitTime != nil {
		return *x.LimitTime
	}
	return 0
}

func (x *CardDiscountPartialUpdateRequest) GetLimitTimeUnit() string {
	if x != nil && x.LimitTimeUnit != nil {
		return *x.LimitTimeUnit
	}
	return ""
}

func (x *CardDiscountPartialUpdateRequest) GetIsValid() int32 {
	if x != nil {
		return x.IsValid
	}
	return 0
}

func (x *CardDiscountPartialUpdateRequest) GetParent() int64 {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return 0
}

func (x *CardDiscountPartialUpdateRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *CardDiscountPartialUpdateRequest) GetIconUrl() string {
	if x != nil && x.IconUrl != nil {
		return *x.IconUrl
	}
	return ""
}

func (x *CardDiscountPartialUpdateRequest) GetRemark() string {
	if x != nil && x.Remark != nil {
		return *x.Remark
	}
	return ""
}

type CardDiscountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Meet          *int32  `protobuf:"varint,3,opt,name=meet,proto3,oneof" json:"meet,omitempty"`
	Percentage    *int32  `protobuf:"varint,4,opt,name=percentage,proto3,oneof" json:"percentage,omitempty"`
	LimitTime     *int32  `protobuf:"varint,5,opt,name=limit_time,json=limitTime,proto3,oneof" json:"limit_time,omitempty"`
	LimitTimeUnit *string `protobuf:"bytes,6,opt,name=limit_time_unit,json=limitTimeUnit,proto3,oneof" json:"limit_time_unit,omitempty"`
	IsValid       int32   `protobuf:"varint,7,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
	Parent        *int64  `protobuf:"varint,12,opt,name=parent,proto3,oneof" json:"parent,omitempty"`
	Filters       string  `protobuf:"bytes,13,opt,name=filters,proto3" json:"filters,omitempty"`
	IconUrl       *string `protobuf:"bytes,14,opt,name=icon_url,json=iconUrl,proto3,oneof" json:"icon_url,omitempty"`
	Remark        *string `protobuf:"bytes,15,opt,name=remark,proto3,oneof" json:"remark,omitempty"`
}

func (x *CardDiscountRequest) Reset() {
	*x = CardDiscountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_card_ito_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardDiscountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardDiscountRequest) ProtoMessage() {}

func (x *CardDiscountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_card_ito_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardDiscountRequest.ProtoReflect.Descriptor instead.
func (*CardDiscountRequest) Descriptor() ([]byte, []int) {
	return file_card_ito_proto_rawDescGZIP(), []int{5}
}

func (x *CardDiscountRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CardDiscountRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CardDiscountRequest) GetMeet() int32 {
	if x != nil && x.Meet != nil {
		return *x.Meet
	}
	return 0
}

func (x *CardDiscountRequest) GetPercentage() int32 {
	if x != nil && x.Percentage != nil {
		return *x.Percentage
	}
	return 0
}

func (x *CardDiscountRequest) GetLimitTime() int32 {
	if x != nil && x.LimitTime != nil {
		return *x.LimitTime
	}
	return 0
}

func (x *CardDiscountRequest) GetLimitTimeUnit() string {
	if x != nil && x.LimitTimeUnit != nil {
		return *x.LimitTimeUnit
	}
	return ""
}

func (x *CardDiscountRequest) GetIsValid() int32 {
	if x != nil {
		return x.IsValid
	}
	return 0
}

func (x *CardDiscountRequest) GetParent() int64 {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return 0
}

func (x *CardDiscountRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *CardDiscountRequest) GetIconUrl() string {
	if x != nil && x.IconUrl != nil {
		return *x.IconUrl
	}
	return ""
}

func (x *CardDiscountRequest) GetRemark() string {
	if x != nil && x.Remark != nil {
		return *x.Remark
	}
	return ""
}

type CardDiscountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Meet          *int32  `protobuf:"varint,3,opt,name=meet,proto3,oneof" json:"meet,omitempty"`
	Percentage    *int32  `protobuf:"varint,4,opt,name=percentage,proto3,oneof" json:"percentage,omitempty"`
	LimitTime     *int32  `protobuf:"varint,5,opt,name=limit_time,json=limitTime,proto3,oneof" json:"limit_time,omitempty"`
	LimitTimeUnit *string `protobuf:"bytes,6,opt,name=limit_time_unit,json=limitTimeUnit,proto3,oneof" json:"limit_time_unit,omitempty"`
	IsValid       int32   `protobuf:"varint,7,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
	CreateTime    string  `protobuf:"bytes,12,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime    string  `protobuf:"bytes,13,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	Parent        *int64  `protobuf:"varint,14,opt,name=parent,proto3,oneof" json:"parent,omitempty"`
	IconUrl       *string `protobuf:"bytes,15,opt,name=icon_url,json=iconUrl,proto3,oneof" json:"icon_url,omitempty"`
	Remark        *string `protobuf:"bytes,16,opt,name=remark,proto3,oneof" json:"remark,omitempty"`
}

func (x *CardDiscountResponse) Reset() {
	*x = CardDiscountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_card_ito_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardDiscountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardDiscountResponse) ProtoMessage() {}

func (x *CardDiscountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_card_ito_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardDiscountResponse.ProtoReflect.Descriptor instead.
func (*CardDiscountResponse) Descriptor() ([]byte, []int) {
	return file_card_ito_proto_rawDescGZIP(), []int{6}
}

func (x *CardDiscountResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CardDiscountResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CardDiscountResponse) GetMeet() int32 {
	if x != nil && x.Meet != nil {
		return *x.Meet
	}
	return 0
}

func (x *CardDiscountResponse) GetPercentage() int32 {
	if x != nil && x.Percentage != nil {
		return *x.Percentage
	}
	return 0
}

func (x *CardDiscountResponse) GetLimitTime() int32 {
	if x != nil && x.LimitTime != nil {
		return *x.LimitTime
	}
	return 0
}

func (x *CardDiscountResponse) GetLimitTimeUnit() string {
	if x != nil && x.LimitTimeUnit != nil {
		return *x.LimitTimeUnit
	}
	return ""
}

func (x *CardDiscountResponse) GetIsValid() int32 {
	if x != nil {
		return x.IsValid
	}
	return 0
}

func (x *CardDiscountResponse) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *CardDiscountResponse) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *CardDiscountResponse) GetParent() int64 {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return 0
}

func (x *CardDiscountResponse) GetIconUrl() string {
	if x != nil && x.IconUrl != nil {
		return *x.IconUrl
	}
	return ""
}

func (x *CardDiscountResponse) GetRemark() string {
	if x != nil && x.Remark != nil {
		return *x.Remark
	}
	return ""
}

type CardDiscountRetrieveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CardDiscountRetrieveRequest) Reset() {
	*x = CardDiscountRetrieveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_card_ito_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardDiscountRetrieveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardDiscountRetrieveRequest) ProtoMessage() {}

func (x *CardDiscountRetrieveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_card_ito_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardDiscountRetrieveRequest.ProtoReflect.Descriptor instead.
func (*CardDiscountRetrieveRequest) Descriptor() ([]byte, []int) {
	return file_card_ito_proto_rawDescGZIP(), []int{7}
}

func (x *CardDiscountRetrieveRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CardFullDiscountDestroyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CardFullDiscountDestroyRequest) Reset() {
	*x = CardFullDiscountDestroyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_card_ito_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardFullDiscountDestroyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardFullDiscountDestroyRequest) ProtoMessage() {}

func (x *CardFullDiscountDestroyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_card_ito_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardFullDiscountDestroyRequest.ProtoReflect.Descriptor instead.
func (*CardFullDiscountDestroyRequest) Descriptor() ([]byte, []int) {
	return file_card_ito_proto_rawDescGZIP(), []int{8}
}

func (x *CardFullDiscountDestroyRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CardFullDiscountListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Meet          *int32  `protobuf:"varint,3,opt,name=meet,proto3,oneof" json:"meet,omitempty"`
	Reduce        *int32  `protobuf:"varint,4,opt,name=reduce,proto3,oneof" json:"reduce,omitempty"`
	LimitTime     *int32  `protobuf:"varint,5,opt,name=limit_time,json=limitTime,proto3,oneof" json:"limit_time,omitempty"`
	LimitTimeUnit *string `protobuf:"bytes,6,opt,name=limit_time_unit,json=limitTimeUnit,proto3,oneof" json:"limit_time_unit,omitempty"`
	IsValid       int32   `protobuf:"varint,7,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
	Parent        *int64  `protobuf:"varint,12,opt,name=parent,proto3,oneof" json:"parent,omitempty"`
	Filters       string  `protobuf:"bytes,13,opt,name=filters,proto3" json:"filters,omitempty"`
	IconUrl       *string `protobuf:"bytes,14,opt,name=icon_url,json=iconUrl,proto3,oneof" json:"icon_url,omitempty"`
	Remark        *string `protobuf:"bytes,15,opt,name=remark,proto3,oneof" json:"remark,omitempty"`
}

func (x *CardFullDiscountListRequest) Reset() {
	*x = CardFullDiscountListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_card_ito_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardFullDiscountListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardFullDiscountListRequest) ProtoMessage() {}

func (x *CardFullDiscountListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_card_ito_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardFullDiscountListRequest.ProtoReflect.Descriptor instead.
func (*CardFullDiscountListRequest) Descriptor() ([]byte, []int) {
	return file_card_ito_proto_rawDescGZIP(), []int{9}
}

func (x *CardFullDiscountListRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CardFullDiscountListRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CardFullDiscountListRequest) GetMeet() int32 {
	if x != nil && x.Meet != nil {
		return *x.Meet
	}
	return 0
}

func (x *CardFullDiscountListRequest) GetReduce() int32 {
	if x != nil && x.Reduce != nil {
		return *x.Reduce
	}
	return 0
}

func (x *CardFullDiscountListRequest) GetLimitTime() int32 {
	if x != nil && x.LimitTime != nil {
		return *x.LimitTime
	}
	return 0
}

func (x *CardFullDiscountListRequest) GetLimitTimeUnit() string {
	if x != nil && x.LimitTimeUnit != nil {
		return *x.LimitTimeUnit
	}
	return ""
}

func (x *CardFullDiscountListRequest) GetIsValid() int32 {
	if x != nil {
		return x.IsValid
	}
	return 0
}

func (x *CardFullDiscountListRequest) GetParent() int64 {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return 0
}

func (x *CardFullDiscountListRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *CardFullDiscountListRequest) GetIconUrl() string {
	if x != nil && x.IconUrl != nil {
		return *x.IconUrl
	}
	return ""
}

func (x *CardFullDiscountListRequest) GetRemark() string {
	if x != nil && x.Remark != nil {
		return *x.Remark
	}
	return ""
}

type CardFullDiscountListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*CardFullDiscountResponse `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Count   int32                       `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *CardFullDiscountListResponse) Reset() {
	*x = CardFullDiscountListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_card_ito_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardFullDiscountListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardFullDiscountListResponse) ProtoMessage() {}

func (x *CardFullDiscountListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_card_ito_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardFullDiscountListResponse.ProtoReflect.Descriptor instead.
func (*CardFullDiscountListResponse) Descriptor() ([]byte, []int) {
	return file_card_ito_proto_rawDescGZIP(), []int{10}
}

func (x *CardFullDiscountListResponse) GetResults() []*CardFullDiscountResponse {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *CardFullDiscountListResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type CardFullDiscountOptionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeUnits []*LabelValueResponse `protobuf:"bytes,1,rep,name=time_units,json=timeUnits,proto3" json:"time_units,omitempty"`
	Status    []*LabelValueResponse `protobuf:"bytes,2,rep,name=status,proto3" json:"status,omitempty"`
}

func (x *CardFullDiscountOptionResponse) Reset() {
	*x = CardFullDiscountOptionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_card_ito_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardFullDiscountOptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardFullDiscountOptionResponse) ProtoMessage() {}

func (x *CardFullDiscountOptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_card_ito_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardFullDiscountOptionResponse.ProtoReflect.Descriptor instead.
func (*CardFullDiscountOptionResponse) Descriptor() ([]byte, []int) {
	return file_card_ito_proto_rawDescGZIP(), []int{11}
}

func (x *CardFullDiscountOptionResponse) GetTimeUnits() []*LabelValueResponse {
	if x != nil {
		return x.TimeUnits
	}
	return nil
}

func (x *CardFullDiscountOptionResponse) GetStatus() []*LabelValueResponse {
	if x != nil {
		return x.Status
	}
	return nil
}

type CardFullDiscountPartialUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XPartialUpdateFields []string `protobuf:"bytes,2,rep,name=_partial_update_fields,json=PartialUpdateFields,proto3" json:"_partial_update_fields,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Meet                 *int32   `protobuf:"varint,4,opt,name=meet,proto3,oneof" json:"meet,omitempty"`
	Reduce               *int32   `protobuf:"varint,5,opt,name=reduce,proto3,oneof" json:"reduce,omitempty"`
	LimitTime            *int32   `protobuf:"varint,6,opt,name=limit_time,json=limitTime,proto3,oneof" json:"limit_time,omitempty"`
	LimitTimeUnit        *string  `protobuf:"bytes,7,opt,name=limit_time_unit,json=limitTimeUnit,proto3,oneof" json:"limit_time_unit,omitempty"`
	IsValid              int32    `protobuf:"varint,8,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
	Parent               *int64   `protobuf:"varint,13,opt,name=parent,proto3,oneof" json:"parent,omitempty"`
	Filters              string   `protobuf:"bytes,14,opt,name=filters,proto3" json:"filters,omitempty"`
	IconUrl              *string  `protobuf:"bytes,15,opt,name=icon_url,json=iconUrl,proto3,oneof" json:"icon_url,omitempty"`
	Remark               *string  `protobuf:"bytes,16,opt,name=remark,proto3,oneof" json:"remark,omitempty"`
}

func (x *CardFullDiscountPartialUpdateRequest) Reset() {
	*x = CardFullDiscountPartialUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_card_ito_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardFullDiscountPartialUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardFullDiscountPartialUpdateRequest) ProtoMessage() {}

func (x *CardFullDiscountPartialUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_card_ito_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardFullDiscountPartialUpdateRequest.ProtoReflect.Descriptor instead.
func (*CardFullDiscountPartialUpdateRequest) Descriptor() ([]byte, []int) {
	return file_card_ito_proto_rawDescGZIP(), []int{12}
}

func (x *CardFullDiscountPartialUpdateRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CardFullDiscountPartialUpdateRequest) GetXPartialUpdateFields() []string {
	if x != nil {
		return x.XPartialUpdateFields
	}
	return nil
}

func (x *CardFullDiscountPartialUpdateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CardFullDiscountPartialUpdateRequest) GetMeet() int32 {
	if x != nil && x.Meet != nil {
		return *x.Meet
	}
	return 0
}

func (x *CardFullDiscountPartialUpdateRequest) GetReduce() int32 {
	if x != nil && x.Reduce != nil {
		return *x.Reduce
	}
	return 0
}

func (x *CardFullDiscountPartialUpdateRequest) GetLimitTime() int32 {
	if x != nil && x.LimitTime != nil {
		return *x.LimitTime
	}
	return 0
}

func (x *CardFullDiscountPartialUpdateRequest) GetLimitTimeUnit() string {
	if x != nil && x.LimitTimeUnit != nil {
		return *x.LimitTimeUnit
	}
	return ""
}

func (x *CardFullDiscountPartialUpdateRequest) GetIsValid() int32 {
	if x != nil {
		return x.IsValid
	}
	return 0
}

func (x *CardFullDiscountPartialUpdateRequest) GetParent() int64 {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return 0
}

func (x *CardFullDiscountPartialUpdateRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *CardFullDiscountPartialUpdateRequest) GetIconUrl() string {
	if x != nil && x.IconUrl != nil {
		return *x.IconUrl
	}
	return ""
}

func (x *CardFullDiscountPartialUpdateRequest) GetRemark() string {
	if x != nil && x.Remark != nil {
		return *x.Remark
	}
	return ""
}

type CardFullDiscountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Meet          *int32  `protobuf:"varint,3,opt,name=meet,proto3,oneof" json:"meet,omitempty"`
	Reduce        *int32  `protobuf:"varint,4,opt,name=reduce,proto3,oneof" json:"reduce,omitempty"`
	LimitTime     *int32  `protobuf:"varint,5,opt,name=limit_time,json=limitTime,proto3,oneof" json:"limit_time,omitempty"`
	LimitTimeUnit *string `protobuf:"bytes,6,opt,name=limit_time_unit,json=limitTimeUnit,proto3,oneof" json:"limit_time_unit,omitempty"`
	IsValid       int32   `protobuf:"varint,7,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
	Parent        *int64  `protobuf:"varint,12,opt,name=parent,proto3,oneof" json:"parent,omitempty"`
	Filters       string  `protobuf:"bytes,13,opt,name=filters,proto3" json:"filters,omitempty"`
	IconUrl       *string `protobuf:"bytes,14,opt,name=icon_url,json=iconUrl,proto3,oneof" json:"icon_url,omitempty"`
	Remark        *string `protobuf:"bytes,15,opt,name=remark,proto3,oneof" json:"remark,omitempty"`
}

func (x *CardFullDiscountRequest) Reset() {
	*x = CardFullDiscountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_card_ito_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardFullDiscountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardFullDiscountRequest) ProtoMessage() {}

func (x *CardFullDiscountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_card_ito_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardFullDiscountRequest.ProtoReflect.Descriptor instead.
func (*CardFullDiscountRequest) Descriptor() ([]byte, []int) {
	return file_card_ito_proto_rawDescGZIP(), []int{13}
}

func (x *CardFullDiscountRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CardFullDiscountRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CardFullDiscountRequest) GetMeet() int32 {
	if x != nil && x.Meet != nil {
		return *x.Meet
	}
	return 0
}

func (x *CardFullDiscountRequest) GetReduce() int32 {
	if x != nil && x.Reduce != nil {
		return *x.Reduce
	}
	return 0
}

func (x *CardFullDiscountRequest) GetLimitTime() int32 {
	if x != nil && x.LimitTime != nil {
		return *x.LimitTime
	}
	return 0
}

func (x *CardFullDiscountRequest) GetLimitTimeUnit() string {
	if x != nil && x.LimitTimeUnit != nil {
		return *x.LimitTimeUnit
	}
	return ""
}

func (x *CardFullDiscountRequest) GetIsValid() int32 {
	if x != nil {
		return x.IsValid
	}
	return 0
}

func (x *CardFullDiscountRequest) GetParent() int64 {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return 0
}

func (x *CardFullDiscountRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *CardFullDiscountRequest) GetIconUrl() string {
	if x != nil && x.IconUrl != nil {
		return *x.IconUrl
	}
	return ""
}

func (x *CardFullDiscountRequest) GetRemark() string {
	if x != nil && x.Remark != nil {
		return *x.Remark
	}
	return ""
}

type CardFullDiscountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Meet          *int32  `protobuf:"varint,3,opt,name=meet,proto3,oneof" json:"meet,omitempty"`
	Reduce        *int32  `protobuf:"varint,4,opt,name=reduce,proto3,oneof" json:"reduce,omitempty"`
	LimitTime     *int32  `protobuf:"varint,5,opt,name=limit_time,json=limitTime,proto3,oneof" json:"limit_time,omitempty"`
	LimitTimeUnit *string `protobuf:"bytes,6,opt,name=limit_time_unit,json=limitTimeUnit,proto3,oneof" json:"limit_time_unit,omitempty"`
	IsValid       int32   `protobuf:"varint,7,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
	CreateTime    string  `protobuf:"bytes,12,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime    string  `protobuf:"bytes,13,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	Parent        *int64  `protobuf:"varint,14,opt,name=parent,proto3,oneof" json:"parent,omitempty"`
	IconUrl       *string `protobuf:"bytes,15,opt,name=icon_url,json=iconUrl,proto3,oneof" json:"icon_url,omitempty"`
	Remark        *string `protobuf:"bytes,16,opt,name=remark,proto3,oneof" json:"remark,omitempty"`
}

func (x *CardFullDiscountResponse) Reset() {
	*x = CardFullDiscountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_card_ito_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardFullDiscountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardFullDiscountResponse) ProtoMessage() {}

func (x *CardFullDiscountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_card_ito_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardFullDiscountResponse.ProtoReflect.Descriptor instead.
func (*CardFullDiscountResponse) Descriptor() ([]byte, []int) {
	return file_card_ito_proto_rawDescGZIP(), []int{14}
}

func (x *CardFullDiscountResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CardFullDiscountResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CardFullDiscountResponse) GetMeet() int32 {
	if x != nil && x.Meet != nil {
		return *x.Meet
	}
	return 0
}

func (x *CardFullDiscountResponse) GetReduce() int32 {
	if x != nil && x.Reduce != nil {
		return *x.Reduce
	}
	return 0
}

func (x *CardFullDiscountResponse) GetLimitTime() int32 {
	if x != nil && x.LimitTime != nil {
		return *x.LimitTime
	}
	return 0
}

func (x *CardFullDiscountResponse) GetLimitTimeUnit() string {
	if x != nil && x.LimitTimeUnit != nil {
		return *x.LimitTimeUnit
	}
	return ""
}

func (x *CardFullDiscountResponse) GetIsValid() int32 {
	if x != nil {
		return x.IsValid
	}
	return 0
}

func (x *CardFullDiscountResponse) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *CardFullDiscountResponse) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *CardFullDiscountResponse) GetParent() int64 {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return 0
}

func (x *CardFullDiscountResponse) GetIconUrl() string {
	if x != nil && x.IconUrl != nil {
		return *x.IconUrl
	}
	return ""
}

func (x *CardFullDiscountResponse) GetRemark() string {
	if x != nil && x.Remark != nil {
		return *x.Remark
	}
	return ""
}

type CardFullDiscountRetrieveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CardFullDiscountRetrieveRequest) Reset() {
	*x = CardFullDiscountRetrieveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_card_ito_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardFullDiscountRetrieveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardFullDiscountRetrieveRequest) ProtoMessage() {}

func (x *CardFullDiscountRetrieveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_card_ito_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardFullDiscountRetrieveRequest.ProtoReflect.Descriptor instead.
func (*CardFullDiscountRetrieveRequest) Descriptor() ([]byte, []int) {
	return file_card_ito_proto_rawDescGZIP(), []int{15}
}

func (x *CardFullDiscountRetrieveRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CardMemberDestroyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CardMemberDestroyRequest) Reset() {
	*x = CardMemberDestroyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_card_ito_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardMemberDestroyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardMemberDestroyRequest) ProtoMessage() {}

func (x *CardMemberDestroyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_card_ito_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardMemberDestroyRequest.ProtoReflect.Descriptor instead.
func (*CardMemberDestroyRequest) Descriptor() ([]byte, []int) {
	return file_card_ito_proto_rawDescGZIP(), []int{16}
}

func (x *CardMemberDestroyRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CardMemberListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name           string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	MinPoint       *int32  `protobuf:"varint,3,opt,name=min_point,json=minPoint,proto3,oneof" json:"min_point,omitempty"`
	KeepalivePoint *int32  `protobuf:"varint,4,opt,name=keepalive_point,json=keepalivePoint,proto3,oneof" json:"keepalive_point,omitempty"`
	Term           int32   `protobuf:"varint,5,opt,name=term,proto3" json:"term,omitempty"`
	IsValid        int32   `protobuf:"varint,6,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
	Description    *string `protobuf:"bytes,11,opt,name=description,proto3,oneof" json:"description,omitempty"`
	Filters        string  `protobuf:"bytes,13,opt,name=filters,proto3" json:"filters,omitempty"`
	IconUrl        *string `protobuf:"bytes,14,opt,name=icon_url,json=iconUrl,proto3,oneof" json:"icon_url,omitempty"`
	Remark         *string `protobuf:"bytes,15,opt,name=remark,proto3,oneof" json:"remark,omitempty"`
}

func (x *CardMemberListRequest) Reset() {
	*x = CardMemberListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_card_ito_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardMemberListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardMemberListRequest) ProtoMessage() {}

func (x *CardMemberListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_card_ito_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardMemberListRequest.ProtoReflect.Descriptor instead.
func (*CardMemberListRequest) Descriptor() ([]byte, []int) {
	return file_card_ito_proto_rawDescGZIP(), []int{17}
}

func (x *CardMemberListRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CardMemberListRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CardMemberListRequest) GetMinPoint() int32 {
	if x != nil && x.MinPoint != nil {
		return *x.MinPoint
	}
	return 0
}

func (x *CardMemberListRequest) GetKeepalivePoint() int32 {
	if x != nil && x.KeepalivePoint != nil {
		return *x.KeepalivePoint
	}
	return 0
}

func (x *CardMemberListRequest) GetTerm() int32 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *CardMemberListRequest) GetIsValid() int32 {
	if x != nil {
		return x.IsValid
	}
	return 0
}

func (x *CardMemberListRequest) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *CardMemberListRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *CardMemberListRequest) GetIconUrl() string {
	if x != nil && x.IconUrl != nil {
		return *x.IconUrl
	}
	return ""
}

func (x *CardMemberListRequest) GetRemark() string {
	if x != nil && x.Remark != nil {
		return *x.Remark
	}
	return ""
}

type CardMemberListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*CardMemberResponse `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Count   int32                 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *CardMemberListResponse) Reset() {
	*x = CardMemberListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_card_ito_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardMemberListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardMemberListResponse) ProtoMessage() {}

func (x *CardMemberListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_card_ito_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardMemberListResponse.ProtoReflect.Descriptor instead.
func (*CardMemberListResponse) Descriptor() ([]byte, []int) {
	return file_card_ito_proto_rawDescGZIP(), []int{18}
}

func (x *CardMemberListResponse) GetResults() []*CardMemberResponse {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *CardMemberListResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type CardMemberPartialUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XPartialUpdateFields []string `protobuf:"bytes,2,rep,name=_partial_update_fields,json=PartialUpdateFields,proto3" json:"_partial_update_fields,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	MinPoint             *int32   `protobuf:"varint,4,opt,name=min_point,json=minPoint,proto3,oneof" json:"min_point,omitempty"`
	KeepalivePoint       *int32   `protobuf:"varint,5,opt,name=keepalive_point,json=keepalivePoint,proto3,oneof" json:"keepalive_point,omitempty"`
	Term                 int32    `protobuf:"varint,6,opt,name=term,proto3" json:"term,omitempty"`
	IsValid              int32    `protobuf:"varint,7,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
	Description          *string  `protobuf:"bytes,12,opt,name=description,proto3,oneof" json:"description,omitempty"`
	Filters              string   `protobuf:"bytes,14,opt,name=filters,proto3" json:"filters,omitempty"`
	IconUrl              *string  `protobuf:"bytes,15,opt,name=icon_url,json=iconUrl,proto3,oneof" json:"icon_url,omitempty"`
	Remark               *string  `protobuf:"bytes,16,opt,name=remark,proto3,oneof" json:"remark,omitempty"`
}

func (x *CardMemberPartialUpdateRequest) Reset() {
	*x = CardMemberPartialUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_card_ito_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardMemberPartialUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardMemberPartialUpdateRequest) ProtoMessage() {}

func (x *CardMemberPartialUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_card_ito_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardMemberPartialUpdateRequest.ProtoReflect.Descriptor instead.
func (*CardMemberPartialUpdateRequest) Descriptor() ([]byte, []int) {
	return file_card_ito_proto_rawDescGZIP(), []int{19}
}

func (x *CardMemberPartialUpdateRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CardMemberPartialUpdateRequest) GetXPartialUpdateFields() []string {
	if x != nil {
		return x.XPartialUpdateFields
	}
	return nil
}

func (x *CardMemberPartialUpdateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CardMemberPartialUpdateRequest) GetMinPoint() int32 {
	if x != nil && x.MinPoint != nil {
		return *x.MinPoint
	}
	return 0
}

func (x *CardMemberPartialUpdateRequest) GetKeepalivePoint() int32 {
	if x != nil && x.KeepalivePoint != nil {
		return *x.KeepalivePoint
	}
	return 0
}

func (x *CardMemberPartialUpdateRequest) GetTerm() int32 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *CardMemberPartialUpdateRequest) GetIsValid() int32 {
	if x != nil {
		return x.IsValid
	}
	return 0
}

func (x *CardMemberPartialUpdateRequest) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *CardMemberPartialUpdateRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *CardMemberPartialUpdateRequest) GetIconUrl() string {
	if x != nil && x.IconUrl != nil {
		return *x.IconUrl
	}
	return ""
}

func (x *CardMemberPartialUpdateRequest) GetRemark() string {
	if x != nil && x.Remark != nil {
		return *x.Remark
	}
	return ""
}

type CardMemberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name           string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	MinPoint       *int32  `protobuf:"varint,3,opt,name=min_point,json=minPoint,proto3,oneof" json:"min_point,omitempty"`
	KeepalivePoint *int32  `protobuf:"varint,4,opt,name=keepalive_point,json=keepalivePoint,proto3,oneof" json:"keepalive_point,omitempty"`
	Term           int32   `protobuf:"varint,5,opt,name=term,proto3" json:"term,omitempty"`
	IsValid        int32   `protobuf:"varint,6,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
	Description    *string `protobuf:"bytes,11,opt,name=description,proto3,oneof" json:"description,omitempty"`
	Filters        string  `protobuf:"bytes,13,opt,name=filters,proto3" json:"filters,omitempty"`
	IconUrl        *string `protobuf:"bytes,14,opt,name=icon_url,json=iconUrl,proto3,oneof" json:"icon_url,omitempty"`
	Remark         *string `protobuf:"bytes,15,opt,name=remark,proto3,oneof" json:"remark,omitempty"`
}

func (x *CardMemberRequest) Reset() {
	*x = CardMemberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_card_ito_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardMemberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardMemberRequest) ProtoMessage() {}

func (x *CardMemberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_card_ito_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardMemberRequest.ProtoReflect.Descriptor instead.
func (*CardMemberRequest) Descriptor() ([]byte, []int) {
	return file_card_ito_proto_rawDescGZIP(), []int{20}
}

func (x *CardMemberRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CardMemberRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CardMemberRequest) GetMinPoint() int32 {
	if x != nil && x.MinPoint != nil {
		return *x.MinPoint
	}
	return 0
}

func (x *CardMemberRequest) GetKeepalivePoint() int32 {
	if x != nil && x.KeepalivePoint != nil {
		return *x.KeepalivePoint
	}
	return 0
}

func (x *CardMemberRequest) GetTerm() int32 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *CardMemberRequest) GetIsValid() int32 {
	if x != nil {
		return x.IsValid
	}
	return 0
}

func (x *CardMemberRequest) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *CardMemberRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *CardMemberRequest) GetIconUrl() string {
	if x != nil && x.IconUrl != nil {
		return *x.IconUrl
	}
	return ""
}

func (x *CardMemberRequest) GetRemark() string {
	if x != nil && x.Remark != nil {
		return *x.Remark
	}
	return ""
}

type CardMemberResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name           string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	MinPoint       *int32  `protobuf:"varint,3,opt,name=min_point,json=minPoint,proto3,oneof" json:"min_point,omitempty"`
	KeepalivePoint *int32  `protobuf:"varint,4,opt,name=keepalive_point,json=keepalivePoint,proto3,oneof" json:"keepalive_point,omitempty"`
	Term           int32   `protobuf:"varint,5,opt,name=term,proto3" json:"term,omitempty"`
	IsValid        int32   `protobuf:"varint,6,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
	Description    *string `protobuf:"bytes,11,opt,name=description,proto3,oneof" json:"description,omitempty"`
	CreateTime     string  `protobuf:"bytes,12,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime     string  `protobuf:"bytes,13,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	IconUrl        *string `protobuf:"bytes,15,opt,name=icon_url,json=iconUrl,proto3,oneof" json:"icon_url,omitempty"`
	Remark         *string `protobuf:"bytes,16,opt,name=remark,proto3,oneof" json:"remark,omitempty"`
}

func (x *CardMemberResponse) Reset() {
	*x = CardMemberResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_card_ito_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardMemberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardMemberResponse) ProtoMessage() {}

func (x *CardMemberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_card_ito_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardMemberResponse.ProtoReflect.Descriptor instead.
func (*CardMemberResponse) Descriptor() ([]byte, []int) {
	return file_card_ito_proto_rawDescGZIP(), []int{21}
}

func (x *CardMemberResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CardMemberResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CardMemberResponse) GetMinPoint() int32 {
	if x != nil && x.MinPoint != nil {
		return *x.MinPoint
	}
	return 0
}

func (x *CardMemberResponse) GetKeepalivePoint() int32 {
	if x != nil && x.KeepalivePoint != nil {
		return *x.KeepalivePoint
	}
	return 0
}

func (x *CardMemberResponse) GetTerm() int32 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *CardMemberResponse) GetIsValid() int32 {
	if x != nil {
		return x.IsValid
	}
	return 0
}

func (x *CardMemberResponse) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *CardMemberResponse) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *CardMemberResponse) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *CardMemberResponse) GetIconUrl() string {
	if x != nil && x.IconUrl != nil {
		return *x.IconUrl
	}
	return ""
}

func (x *CardMemberResponse) GetRemark() string {
	if x != nil && x.Remark != nil {
		return *x.Remark
	}
	return ""
}

type CardMemberRetrieveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CardMemberRetrieveRequest) Reset() {
	*x = CardMemberRetrieveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_card_ito_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardMemberRetrieveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardMemberRetrieveRequest) ProtoMessage() {}

func (x *CardMemberRetrieveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_card_ito_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardMemberRetrieveRequest.ProtoReflect.Descriptor instead.
func (*CardMemberRetrieveRequest) Descriptor() ([]byte, []int) {
	return file_card_ito_proto_rawDescGZIP(), []int{22}
}

func (x *CardMemberRetrieveRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CardNutDestroyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CardNutDestroyRequest) Reset() {
	*x = CardNutDestroyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_card_ito_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardNutDestroyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardNutDestroyRequest) ProtoMessage() {}

func (x *CardNutDestroyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_card_ito_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardNutDestroyRequest.ProtoReflect.Descriptor instead.
func (*CardNutDestroyRequest) Descriptor() ([]byte, []int) {
	return file_card_ito_proto_rawDescGZIP(), []int{23}
}

func (x *CardNutDestroyRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CardNutListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name    *string `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Num     int32   `protobuf:"varint,3,opt,name=num,proto3" json:"num,omitempty"`
	IsValid int32   `protobuf:"varint,4,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
	Filters string  `protobuf:"bytes,10,opt,name=filters,proto3" json:"filters,omitempty"`
	IconUrl *string `protobuf:"bytes,11,opt,name=icon_url,json=iconUrl,proto3,oneof" json:"icon_url,omitempty"`
	Remark  *string `protobuf:"bytes,12,opt,name=remark,proto3,oneof" json:"remark,omitempty"`
}

func (x *CardNutListRequest) Reset() {
	*x = CardNutListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_card_ito_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardNutListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardNutListRequest) ProtoMessage() {}

func (x *CardNutListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_card_ito_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardNutListRequest.ProtoReflect.Descriptor instead.
func (*CardNutListRequest) Descriptor() ([]byte, []int) {
	return file_card_ito_proto_rawDescGZIP(), []int{24}
}

func (x *CardNutListRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CardNutListRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CardNutListRequest) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *CardNutListRequest) GetIsValid() int32 {
	if x != nil {
		return x.IsValid
	}
	return 0
}

func (x *CardNutListRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *CardNutListRequest) GetIconUrl() string {
	if x != nil && x.IconUrl != nil {
		return *x.IconUrl
	}
	return ""
}

func (x *CardNutListRequest) GetRemark() string {
	if x != nil && x.Remark != nil {
		return *x.Remark
	}
	return ""
}

type CardNutListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*CardNutResponse `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Count   int32              `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *CardNutListResponse) Reset() {
	*x = CardNutListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_card_ito_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardNutListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardNutListResponse) ProtoMessage() {}

func (x *CardNutListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_card_ito_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardNutListResponse.ProtoReflect.Descriptor instead.
func (*CardNutListResponse) Descriptor() ([]byte, []int) {
	return file_card_ito_proto_rawDescGZIP(), []int{25}
}

func (x *CardNutListResponse) GetResults() []*CardNutResponse {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *CardNutListResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type CardNutPartialUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XPartialUpdateFields []string `protobuf:"bytes,2,rep,name=_partial_update_fields,json=PartialUpdateFields,proto3" json:"_partial_update_fields,omitempty"`
	Name                 *string  `protobuf:"bytes,3,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Num                  int32    `protobuf:"varint,4,opt,name=num,proto3" json:"num,omitempty"`
	IsValid              int32    `protobuf:"varint,5,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
	Filters              string   `protobuf:"bytes,11,opt,name=filters,proto3" json:"filters,omitempty"`
	IconUrl              *string  `protobuf:"bytes,12,opt,name=icon_url,json=iconUrl,proto3,oneof" json:"icon_url,omitempty"`
	Remark               *string  `protobuf:"bytes,13,opt,name=remark,proto3,oneof" json:"remark,omitempty"`
}

func (x *CardNutPartialUpdateRequest) Reset() {
	*x = CardNutPartialUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_card_ito_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardNutPartialUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardNutPartialUpdateRequest) ProtoMessage() {}

func (x *CardNutPartialUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_card_ito_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardNutPartialUpdateRequest.ProtoReflect.Descriptor instead.
func (*CardNutPartialUpdateRequest) Descriptor() ([]byte, []int) {
	return file_card_ito_proto_rawDescGZIP(), []int{26}
}

func (x *CardNutPartialUpdateRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CardNutPartialUpdateRequest) GetXPartialUpdateFields() []string {
	if x != nil {
		return x.XPartialUpdateFields
	}
	return nil
}

func (x *CardNutPartialUpdateRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CardNutPartialUpdateRequest) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *CardNutPartialUpdateRequest) GetIsValid() int32 {
	if x != nil {
		return x.IsValid
	}
	return 0
}

func (x *CardNutPartialUpdateRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *CardNutPartialUpdateRequest) GetIconUrl() string {
	if x != nil && x.IconUrl != nil {
		return *x.IconUrl
	}
	return ""
}

func (x *CardNutPartialUpdateRequest) GetRemark() string {
	if x != nil && x.Remark != nil {
		return *x.Remark
	}
	return ""
}

type CardNutRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name    *string `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Num     int32   `protobuf:"varint,3,opt,name=num,proto3" json:"num,omitempty"`
	IsValid int32   `protobuf:"varint,4,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
	Filters string  `protobuf:"bytes,10,opt,name=filters,proto3" json:"filters,omitempty"`
	IconUrl *string `protobuf:"bytes,11,opt,name=icon_url,json=iconUrl,proto3,oneof" json:"icon_url,omitempty"`
	Remark  *string `protobuf:"bytes,12,opt,name=remark,proto3,oneof" json:"remark,omitempty"`
}

func (x *CardNutRequest) Reset() {
	*x = CardNutRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_card_ito_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardNutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardNutRequest) ProtoMessage() {}

func (x *CardNutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_card_ito_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardNutRequest.ProtoReflect.Descriptor instead.
func (*CardNutRequest) Descriptor() ([]byte, []int) {
	return file_card_ito_proto_rawDescGZIP(), []int{27}
}

func (x *CardNutRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CardNutRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CardNutRequest) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *CardNutRequest) GetIsValid() int32 {
	if x != nil {
		return x.IsValid
	}
	return 0
}

func (x *CardNutRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *CardNutRequest) GetIconUrl() string {
	if x != nil && x.IconUrl != nil {
		return *x.IconUrl
	}
	return ""
}

func (x *CardNutRequest) GetRemark() string {
	if x != nil && x.Remark != nil {
		return *x.Remark
	}
	return ""
}

type CardNutResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name       *string `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Num        int32   `protobuf:"varint,3,opt,name=num,proto3" json:"num,omitempty"`
	IsValid    int32   `protobuf:"varint,4,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
	CreateTime string  `protobuf:"bytes,9,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime string  `protobuf:"bytes,10,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	IconUrl    *string `protobuf:"bytes,11,opt,name=icon_url,json=iconUrl,proto3,oneof" json:"icon_url,omitempty"`
	Remark     *string `protobuf:"bytes,12,opt,name=remark,proto3,oneof" json:"remark,omitempty"`
}

func (x *CardNutResponse) Reset() {
	*x = CardNutResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_card_ito_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardNutResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardNutResponse) ProtoMessage() {}

func (x *CardNutResponse) ProtoReflect() protoreflect.Message {
	mi := &file_card_ito_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardNutResponse.ProtoReflect.Descriptor instead.
func (*CardNutResponse) Descriptor() ([]byte, []int) {
	return file_card_ito_proto_rawDescGZIP(), []int{28}
}

func (x *CardNutResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CardNutResponse) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CardNutResponse) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *CardNutResponse) GetIsValid() int32 {
	if x != nil {
		return x.IsValid
	}
	return 0
}

func (x *CardNutResponse) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *CardNutResponse) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *CardNutResponse) GetIconUrl() string {
	if x != nil && x.IconUrl != nil {
		return *x.IconUrl
	}
	return ""
}

func (x *CardNutResponse) GetRemark() string {
	if x != nil && x.Remark != nil {
		return *x.Remark
	}
	return ""
}

type CardNutRetrieveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CardNutRetrieveRequest) Reset() {
	*x = CardNutRetrieveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_card_ito_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardNutRetrieveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardNutRetrieveRequest) ProtoMessage() {}

func (x *CardNutRetrieveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_card_ito_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardNutRetrieveRequest.ProtoReflect.Descriptor instead.
func (*CardNutRetrieveRequest) Descriptor() ([]byte, []int) {
	return file_card_ito_proto_rawDescGZIP(), []int{29}
}

func (x *CardNutRetrieveRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CardRenewDestroyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CardRenewDestroyRequest) Reset() {
	*x = CardRenewDestroyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_card_ito_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardRenewDestroyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardRenewDestroyRequest) ProtoMessage() {}

func (x *CardRenewDestroyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_card_ito_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardRenewDestroyRequest.ProtoReflect.Descriptor instead.
func (*CardRenewDestroyRequest) Descriptor() ([]byte, []int) {
	return file_card_ito_proto_rawDescGZIP(), []int{30}
}

func (x *CardRenewDestroyRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CardRenewListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name           *string `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	ExtendTimeDiff *int32  `protobuf:"varint,3,opt,name=extend_time_diff,json=extendTimeDiff,proto3,oneof" json:"extend_time_diff,omitempty"`
	ActiveTimeDiff *int32  `protobuf:"varint,4,opt,name=active_time_diff,json=activeTimeDiff,proto3,oneof" json:"active_time_diff,omitempty"`
	ExtendTimeUnit string  `protobuf:"bytes,5,opt,name=extend_time_unit,json=extendTimeUnit,proto3" json:"extend_time_unit,omitempty"`
	ActiveTimeUnit string  `protobuf:"bytes,6,opt,name=active_time_unit,json=activeTimeUnit,proto3" json:"active_time_unit,omitempty"`
	IsValid        int32   `protobuf:"varint,7,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
	Filters        string  `protobuf:"bytes,13,opt,name=filters,proto3" json:"filters,omitempty"`
	IconUrl        *string `protobuf:"bytes,14,opt,name=icon_url,json=iconUrl,proto3,oneof" json:"icon_url,omitempty"`
	Remark         *string `protobuf:"bytes,15,opt,name=remark,proto3,oneof" json:"remark,omitempty"`
}

func (x *CardRenewListRequest) Reset() {
	*x = CardRenewListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_card_ito_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardRenewListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardRenewListRequest) ProtoMessage() {}

func (x *CardRenewListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_card_ito_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardRenewListRequest.ProtoReflect.Descriptor instead.
func (*CardRenewListRequest) Descriptor() ([]byte, []int) {
	return file_card_ito_proto_rawDescGZIP(), []int{31}
}

func (x *CardRenewListRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CardRenewListRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CardRenewListRequest) GetExtendTimeDiff() int32 {
	if x != nil && x.ExtendTimeDiff != nil {
		return *x.ExtendTimeDiff
	}
	return 0
}

func (x *CardRenewListRequest) GetActiveTimeDiff() int32 {
	if x != nil && x.ActiveTimeDiff != nil {
		return *x.ActiveTimeDiff
	}
	return 0
}

func (x *CardRenewListRequest) GetExtendTimeUnit() string {
	if x != nil {
		return x.ExtendTimeUnit
	}
	return ""
}

func (x *CardRenewListRequest) GetActiveTimeUnit() string {
	if x != nil {
		return x.ActiveTimeUnit
	}
	return ""
}

func (x *CardRenewListRequest) GetIsValid() int32 {
	if x != nil {
		return x.IsValid
	}
	return 0
}

func (x *CardRenewListRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *CardRenewListRequest) GetIconUrl() string {
	if x != nil && x.IconUrl != nil {
		return *x.IconUrl
	}
	return ""
}

func (x *CardRenewListRequest) GetRemark() string {
	if x != nil && x.Remark != nil {
		return *x.Remark
	}
	return ""
}

type CardRenewListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*CardRenewResponse `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Count   int32                `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *CardRenewListResponse) Reset() {
	*x = CardRenewListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_card_ito_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardRenewListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardRenewListResponse) ProtoMessage() {}

func (x *CardRenewListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_card_ito_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardRenewListResponse.ProtoReflect.Descriptor instead.
func (*CardRenewListResponse) Descriptor() ([]byte, []int) {
	return file_card_ito_proto_rawDescGZIP(), []int{32}
}

func (x *CardRenewListResponse) GetResults() []*CardRenewResponse {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *CardRenewListResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type CardRenewOptionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeUnits []*LabelValueResponse `protobuf:"bytes,1,rep,name=time_units,json=timeUnits,proto3" json:"time_units,omitempty"`
	Status    []*LabelValueResponse `protobuf:"bytes,2,rep,name=status,proto3" json:"status,omitempty"`
}

func (x *CardRenewOptionResponse) Reset() {
	*x = CardRenewOptionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_card_ito_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardRenewOptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardRenewOptionResponse) ProtoMessage() {}

func (x *CardRenewOptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_card_ito_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardRenewOptionResponse.ProtoReflect.Descriptor instead.
func (*CardRenewOptionResponse) Descriptor() ([]byte, []int) {
	return file_card_ito_proto_rawDescGZIP(), []int{33}
}

func (x *CardRenewOptionResponse) GetTimeUnits() []*LabelValueResponse {
	if x != nil {
		return x.TimeUnits
	}
	return nil
}

func (x *CardRenewOptionResponse) GetStatus() []*LabelValueResponse {
	if x != nil {
		return x.Status
	}
	return nil
}

type CardRenewPartialUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XPartialUpdateFields []string `protobuf:"bytes,2,rep,name=_partial_update_fields,json=PartialUpdateFields,proto3" json:"_partial_update_fields,omitempty"`
	Name                 *string  `protobuf:"bytes,3,opt,name=name,proto3,oneof" json:"name,omitempty"`
	ExtendTimeDiff       *int32   `protobuf:"varint,4,opt,name=extend_time_diff,json=extendTimeDiff,proto3,oneof" json:"extend_time_diff,omitempty"`
	ActiveTimeDiff       *int32   `protobuf:"varint,5,opt,name=active_time_diff,json=activeTimeDiff,proto3,oneof" json:"active_time_diff,omitempty"`
	ExtendTimeUnit       string   `protobuf:"bytes,6,opt,name=extend_time_unit,json=extendTimeUnit,proto3" json:"extend_time_unit,omitempty"`
	ActiveTimeUnit       string   `protobuf:"bytes,7,opt,name=active_time_unit,json=activeTimeUnit,proto3" json:"active_time_unit,omitempty"`
	IsValid              int32    `protobuf:"varint,8,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
	Filters              string   `protobuf:"bytes,14,opt,name=filters,proto3" json:"filters,omitempty"`
	IconUrl              *string  `protobuf:"bytes,15,opt,name=icon_url,json=iconUrl,proto3,oneof" json:"icon_url,omitempty"`
	Remark               *string  `protobuf:"bytes,16,opt,name=remark,proto3,oneof" json:"remark,omitempty"`
}

func (x *CardRenewPartialUpdateRequest) Reset() {
	*x = CardRenewPartialUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_card_ito_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardRenewPartialUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardRenewPartialUpdateRequest) ProtoMessage() {}

func (x *CardRenewPartialUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_card_ito_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardRenewPartialUpdateRequest.ProtoReflect.Descriptor instead.
func (*CardRenewPartialUpdateRequest) Descriptor() ([]byte, []int) {
	return file_card_ito_proto_rawDescGZIP(), []int{34}
}

func (x *CardRenewPartialUpdateRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CardRenewPartialUpdateRequest) GetXPartialUpdateFields() []string {
	if x != nil {
		return x.XPartialUpdateFields
	}
	return nil
}

func (x *CardRenewPartialUpdateRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CardRenewPartialUpdateRequest) GetExtendTimeDiff() int32 {
	if x != nil && x.ExtendTimeDiff != nil {
		return *x.ExtendTimeDiff
	}
	return 0
}

func (x *CardRenewPartialUpdateRequest) GetActiveTimeDiff() int32 {
	if x != nil && x.ActiveTimeDiff != nil {
		return *x.ActiveTimeDiff
	}
	return 0
}

func (x *CardRenewPartialUpdateRequest) GetExtendTimeUnit() string {
	if x != nil {
		return x.ExtendTimeUnit
	}
	return ""
}

func (x *CardRenewPartialUpdateRequest) GetActiveTimeUnit() string {
	if x != nil {
		return x.ActiveTimeUnit
	}
	return ""
}

func (x *CardRenewPartialUpdateRequest) GetIsValid() int32 {
	if x != nil {
		return x.IsValid
	}
	return 0
}

func (x *CardRenewPartialUpdateRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *CardRenewPartialUpdateRequest) GetIconUrl() string {
	if x != nil && x.IconUrl != nil {
		return *x.IconUrl
	}
	return ""
}

func (x *CardRenewPartialUpdateRequest) GetRemark() string {
	if x != nil && x.Remark != nil {
		return *x.Remark
	}
	return ""
}

type CardRenewRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name           *string `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	ExtendTimeDiff *int32  `protobuf:"varint,3,opt,name=extend_time_diff,json=extendTimeDiff,proto3,oneof" json:"extend_time_diff,omitempty"`
	ActiveTimeDiff *int32  `protobuf:"varint,4,opt,name=active_time_diff,json=activeTimeDiff,proto3,oneof" json:"active_time_diff,omitempty"`
	ExtendTimeUnit string  `protobuf:"bytes,5,opt,name=extend_time_unit,json=extendTimeUnit,proto3" json:"extend_time_unit,omitempty"`
	ActiveTimeUnit string  `protobuf:"bytes,6,opt,name=active_time_unit,json=activeTimeUnit,proto3" json:"active_time_unit,omitempty"`
	IsValid        int32   `protobuf:"varint,7,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
	Filters        string  `protobuf:"bytes,13,opt,name=filters,proto3" json:"filters,omitempty"`
	IconUrl        *string `protobuf:"bytes,14,opt,name=icon_url,json=iconUrl,proto3,oneof" json:"icon_url,omitempty"`
	Remark         *string `protobuf:"bytes,15,opt,name=remark,proto3,oneof" json:"remark,omitempty"`
}

func (x *CardRenewRequest) Reset() {
	*x = CardRenewRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_card_ito_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardRenewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardRenewRequest) ProtoMessage() {}

func (x *CardRenewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_card_ito_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardRenewRequest.ProtoReflect.Descriptor instead.
func (*CardRenewRequest) Descriptor() ([]byte, []int) {
	return file_card_ito_proto_rawDescGZIP(), []int{35}
}

func (x *CardRenewRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CardRenewRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CardRenewRequest) GetExtendTimeDiff() int32 {
	if x != nil && x.ExtendTimeDiff != nil {
		return *x.ExtendTimeDiff
	}
	return 0
}

func (x *CardRenewRequest) GetActiveTimeDiff() int32 {
	if x != nil && x.ActiveTimeDiff != nil {
		return *x.ActiveTimeDiff
	}
	return 0
}

func (x *CardRenewRequest) GetExtendTimeUnit() string {
	if x != nil {
		return x.ExtendTimeUnit
	}
	return ""
}

func (x *CardRenewRequest) GetActiveTimeUnit() string {
	if x != nil {
		return x.ActiveTimeUnit
	}
	return ""
}

func (x *CardRenewRequest) GetIsValid() int32 {
	if x != nil {
		return x.IsValid
	}
	return 0
}

func (x *CardRenewRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *CardRenewRequest) GetIconUrl() string {
	if x != nil && x.IconUrl != nil {
		return *x.IconUrl
	}
	return ""
}

func (x *CardRenewRequest) GetRemark() string {
	if x != nil && x.Remark != nil {
		return *x.Remark
	}
	return ""
}

type CardRenewResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name           *string `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	ExtendTimeDiff *int32  `protobuf:"varint,3,opt,name=extend_time_diff,json=extendTimeDiff,proto3,oneof" json:"extend_time_diff,omitempty"`
	ActiveTimeDiff *int32  `protobuf:"varint,4,opt,name=active_time_diff,json=activeTimeDiff,proto3,oneof" json:"active_time_diff,omitempty"`
	ExtendTimeUnit string  `protobuf:"bytes,5,opt,name=extend_time_unit,json=extendTimeUnit,proto3" json:"extend_time_unit,omitempty"`
	ActiveTimeUnit string  `protobuf:"bytes,6,opt,name=active_time_unit,json=activeTimeUnit,proto3" json:"active_time_unit,omitempty"`
	IsValid        int32   `protobuf:"varint,7,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
	CreateTime     string  `protobuf:"bytes,12,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime     string  `protobuf:"bytes,13,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	IconUrl        *string `protobuf:"bytes,15,opt,name=icon_url,json=iconUrl,proto3,oneof" json:"icon_url,omitempty"`
	Remark         *string `protobuf:"bytes,16,opt,name=remark,proto3,oneof" json:"remark,omitempty"`
}

func (x *CardRenewResponse) Reset() {
	*x = CardRenewResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_card_ito_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardRenewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardRenewResponse) ProtoMessage() {}

func (x *CardRenewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_card_ito_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardRenewResponse.ProtoReflect.Descriptor instead.
func (*CardRenewResponse) Descriptor() ([]byte, []int) {
	return file_card_ito_proto_rawDescGZIP(), []int{36}
}

func (x *CardRenewResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CardRenewResponse) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CardRenewResponse) GetExtendTimeDiff() int32 {
	if x != nil && x.ExtendTimeDiff != nil {
		return *x.ExtendTimeDiff
	}
	return 0
}

func (x *CardRenewResponse) GetActiveTimeDiff() int32 {
	if x != nil && x.ActiveTimeDiff != nil {
		return *x.ActiveTimeDiff
	}
	return 0
}

func (x *CardRenewResponse) GetExtendTimeUnit() string {
	if x != nil {
		return x.ExtendTimeUnit
	}
	return ""
}

func (x *CardRenewResponse) GetActiveTimeUnit() string {
	if x != nil {
		return x.ActiveTimeUnit
	}
	return ""
}

func (x *CardRenewResponse) GetIsValid() int32 {
	if x != nil {
		return x.IsValid
	}
	return 0
}

func (x *CardRenewResponse) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *CardRenewResponse) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *CardRenewResponse) GetIconUrl() string {
	if x != nil && x.IconUrl != nil {
		return *x.IconUrl
	}
	return ""
}

func (x *CardRenewResponse) GetRemark() string {
	if x != nil && x.Remark != nil {
		return *x.Remark
	}
	return ""
}

type CardRenewRetrieveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CardRenewRetrieveRequest) Reset() {
	*x = CardRenewRetrieveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_card_ito_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardRenewRetrieveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardRenewRetrieveRequest) ProtoMessage() {}

func (x *CardRenewRetrieveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_card_ito_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardRenewRetrieveRequest.ProtoReflect.Descriptor instead.
func (*CardRenewRetrieveRequest) Descriptor() ([]byte, []int) {
	return file_card_ito_proto_rawDescGZIP(), []int{37}
}

func (x *CardRenewRetrieveRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CardRepairDestroyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CardRepairDestroyRequest) Reset() {
	*x = CardRepairDestroyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_card_ito_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardRepairDestroyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardRepairDestroyRequest) ProtoMessage() {}

func (x *CardRepairDestroyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_card_ito_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardRepairDestroyRequest.ProtoReflect.Descriptor instead.
func (*CardRepairDestroyRequest) Descriptor() ([]byte, []int) {
	return file_card_ito_proto_rawDescGZIP(), []int{38}
}

func (x *CardRepairDestroyRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CardRepairListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name           *string `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	ExtendTimeDiff *int32  `protobuf:"varint,3,opt,name=extend_time_diff,json=extendTimeDiff,proto3,oneof" json:"extend_time_diff,omitempty"`
	ActiveTimeDiff *int32  `protobuf:"varint,4,opt,name=active_time_diff,json=activeTimeDiff,proto3,oneof" json:"active_time_diff,omitempty"`
	ExtendTimeUnit string  `protobuf:"bytes,5,opt,name=extend_time_unit,json=extendTimeUnit,proto3" json:"extend_time_unit,omitempty"`
	ActiveTimeUnit string  `protobuf:"bytes,6,opt,name=active_time_unit,json=activeTimeUnit,proto3" json:"active_time_unit,omitempty"`
	IsValid        int32   `protobuf:"varint,7,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
	Filters        string  `protobuf:"bytes,13,opt,name=filters,proto3" json:"filters,omitempty"`
	IconUrl        *string `protobuf:"bytes,14,opt,name=icon_url,json=iconUrl,proto3,oneof" json:"icon_url,omitempty"`
	Remark         *string `protobuf:"bytes,15,opt,name=remark,proto3,oneof" json:"remark,omitempty"`
}

func (x *CardRepairListRequest) Reset() {
	*x = CardRepairListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_card_ito_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardRepairListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardRepairListRequest) ProtoMessage() {}

func (x *CardRepairListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_card_ito_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardRepairListRequest.ProtoReflect.Descriptor instead.
func (*CardRepairListRequest) Descriptor() ([]byte, []int) {
	return file_card_ito_proto_rawDescGZIP(), []int{39}
}

func (x *CardRepairListRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CardRepairListRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CardRepairListRequest) GetExtendTimeDiff() int32 {
	if x != nil && x.ExtendTimeDiff != nil {
		return *x.ExtendTimeDiff
	}
	return 0
}

func (x *CardRepairListRequest) GetActiveTimeDiff() int32 {
	if x != nil && x.ActiveTimeDiff != nil {
		return *x.ActiveTimeDiff
	}
	return 0
}

func (x *CardRepairListRequest) GetExtendTimeUnit() string {
	if x != nil {
		return x.ExtendTimeUnit
	}
	return ""
}

func (x *CardRepairListRequest) GetActiveTimeUnit() string {
	if x != nil {
		return x.ActiveTimeUnit
	}
	return ""
}

func (x *CardRepairListRequest) GetIsValid() int32 {
	if x != nil {
		return x.IsValid
	}
	return 0
}

func (x *CardRepairListRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *CardRepairListRequest) GetIconUrl() string {
	if x != nil && x.IconUrl != nil {
		return *x.IconUrl
	}
	return ""
}

func (x *CardRepairListRequest) GetRemark() string {
	if x != nil && x.Remark != nil {
		return *x.Remark
	}
	return ""
}

type CardRepairListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*CardRepairResponse `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Count   int32                 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *CardRepairListResponse) Reset() {
	*x = CardRepairListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_card_ito_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardRepairListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardRepairListResponse) ProtoMessage() {}

func (x *CardRepairListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_card_ito_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardRepairListResponse.ProtoReflect.Descriptor instead.
func (*CardRepairListResponse) Descriptor() ([]byte, []int) {
	return file_card_ito_proto_rawDescGZIP(), []int{40}
}

func (x *CardRepairListResponse) GetResults() []*CardRepairResponse {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *CardRepairListResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type CardRepairOptionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeUnits []*LabelValueResponse `protobuf:"bytes,1,rep,name=time_units,json=timeUnits,proto3" json:"time_units,omitempty"`
	Status    []*LabelValueResponse `protobuf:"bytes,2,rep,name=status,proto3" json:"status,omitempty"`
}

func (x *CardRepairOptionResponse) Reset() {
	*x = CardRepairOptionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_card_ito_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardRepairOptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardRepairOptionResponse) ProtoMessage() {}

func (x *CardRepairOptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_card_ito_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardRepairOptionResponse.ProtoReflect.Descriptor instead.
func (*CardRepairOptionResponse) Descriptor() ([]byte, []int) {
	return file_card_ito_proto_rawDescGZIP(), []int{41}
}

func (x *CardRepairOptionResponse) GetTimeUnits() []*LabelValueResponse {
	if x != nil {
		return x.TimeUnits
	}
	return nil
}

func (x *CardRepairOptionResponse) GetStatus() []*LabelValueResponse {
	if x != nil {
		return x.Status
	}
	return nil
}

type CardRepairPartialUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XPartialUpdateFields []string `protobuf:"bytes,2,rep,name=_partial_update_fields,json=PartialUpdateFields,proto3" json:"_partial_update_fields,omitempty"`
	Name                 *string  `protobuf:"bytes,3,opt,name=name,proto3,oneof" json:"name,omitempty"`
	ExtendTimeDiff       *int32   `protobuf:"varint,4,opt,name=extend_time_diff,json=extendTimeDiff,proto3,oneof" json:"extend_time_diff,omitempty"`
	ActiveTimeDiff       *int32   `protobuf:"varint,5,opt,name=active_time_diff,json=activeTimeDiff,proto3,oneof" json:"active_time_diff,omitempty"`
	ExtendTimeUnit       string   `protobuf:"bytes,6,opt,name=extend_time_unit,json=extendTimeUnit,proto3" json:"extend_time_unit,omitempty"`
	ActiveTimeUnit       string   `protobuf:"bytes,7,opt,name=active_time_unit,json=activeTimeUnit,proto3" json:"active_time_unit,omitempty"`
	IsValid              int32    `protobuf:"varint,8,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
	Filters              string   `protobuf:"bytes,14,opt,name=filters,proto3" json:"filters,omitempty"`
	IconUrl              *string  `protobuf:"bytes,15,opt,name=icon_url,json=iconUrl,proto3,oneof" json:"icon_url,omitempty"`
	Remark               *string  `protobuf:"bytes,16,opt,name=remark,proto3,oneof" json:"remark,omitempty"`
}

func (x *CardRepairPartialUpdateRequest) Reset() {
	*x = CardRepairPartialUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_card_ito_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardRepairPartialUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardRepairPartialUpdateRequest) ProtoMessage() {}

func (x *CardRepairPartialUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_card_ito_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardRepairPartialUpdateRequest.ProtoReflect.Descriptor instead.
func (*CardRepairPartialUpdateRequest) Descriptor() ([]byte, []int) {
	return file_card_ito_proto_rawDescGZIP(), []int{42}
}

func (x *CardRepairPartialUpdateRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CardRepairPartialUpdateRequest) GetXPartialUpdateFields() []string {
	if x != nil {
		return x.XPartialUpdateFields
	}
	return nil
}

func (x *CardRepairPartialUpdateRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CardRepairPartialUpdateRequest) GetExtendTimeDiff() int32 {
	if x != nil && x.ExtendTimeDiff != nil {
		return *x.ExtendTimeDiff
	}
	return 0
}

func (x *CardRepairPartialUpdateRequest) GetActiveTimeDiff() int32 {
	if x != nil && x.ActiveTimeDiff != nil {
		return *x.ActiveTimeDiff
	}
	return 0
}

func (x *CardRepairPartialUpdateRequest) GetExtendTimeUnit() string {
	if x != nil {
		return x.ExtendTimeUnit
	}
	return ""
}

func (x *CardRepairPartialUpdateRequest) GetActiveTimeUnit() string {
	if x != nil {
		return x.ActiveTimeUnit
	}
	return ""
}

func (x *CardRepairPartialUpdateRequest) GetIsValid() int32 {
	if x != nil {
		return x.IsValid
	}
	return 0
}

func (x *CardRepairPartialUpdateRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *CardRepairPartialUpdateRequest) GetIconUrl() string {
	if x != nil && x.IconUrl != nil {
		return *x.IconUrl
	}
	return ""
}

func (x *CardRepairPartialUpdateRequest) GetRemark() string {
	if x != nil && x.Remark != nil {
		return *x.Remark
	}
	return ""
}

type CardRepairRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name           *string `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	ExtendTimeDiff *int32  `protobuf:"varint,3,opt,name=extend_time_diff,json=extendTimeDiff,proto3,oneof" json:"extend_time_diff,omitempty"`
	ActiveTimeDiff *int32  `protobuf:"varint,4,opt,name=active_time_diff,json=activeTimeDiff,proto3,oneof" json:"active_time_diff,omitempty"`
	ExtendTimeUnit string  `protobuf:"bytes,5,opt,name=extend_time_unit,json=extendTimeUnit,proto3" json:"extend_time_unit,omitempty"`
	ActiveTimeUnit string  `protobuf:"bytes,6,opt,name=active_time_unit,json=activeTimeUnit,proto3" json:"active_time_unit,omitempty"`
	IsValid        int32   `protobuf:"varint,7,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
	Filters        string  `protobuf:"bytes,13,opt,name=filters,proto3" json:"filters,omitempty"`
	IconUrl        *string `protobuf:"bytes,14,opt,name=icon_url,json=iconUrl,proto3,oneof" json:"icon_url,omitempty"`
	Remark         *string `protobuf:"bytes,15,opt,name=remark,proto3,oneof" json:"remark,omitempty"`
}

func (x *CardRepairRequest) Reset() {
	*x = CardRepairRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_card_ito_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardRepairRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardRepairRequest) ProtoMessage() {}

func (x *CardRepairRequest) ProtoReflect() protoreflect.Message {
	mi := &file_card_ito_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardRepairRequest.ProtoReflect.Descriptor instead.
func (*CardRepairRequest) Descriptor() ([]byte, []int) {
	return file_card_ito_proto_rawDescGZIP(), []int{43}
}

func (x *CardRepairRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CardRepairRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CardRepairRequest) GetExtendTimeDiff() int32 {
	if x != nil && x.ExtendTimeDiff != nil {
		return *x.ExtendTimeDiff
	}
	return 0
}

func (x *CardRepairRequest) GetActiveTimeDiff() int32 {
	if x != nil && x.ActiveTimeDiff != nil {
		return *x.ActiveTimeDiff
	}
	return 0
}

func (x *CardRepairRequest) GetExtendTimeUnit() string {
	if x != nil {
		return x.ExtendTimeUnit
	}
	return ""
}

func (x *CardRepairRequest) GetActiveTimeUnit() string {
	if x != nil {
		return x.ActiveTimeUnit
	}
	return ""
}

func (x *CardRepairRequest) GetIsValid() int32 {
	if x != nil {
		return x.IsValid
	}
	return 0
}

func (x *CardRepairRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *CardRepairRequest) GetIconUrl() string {
	if x != nil && x.IconUrl != nil {
		return *x.IconUrl
	}
	return ""
}

func (x *CardRepairRequest) GetRemark() string {
	if x != nil && x.Remark != nil {
		return *x.Remark
	}
	return ""
}

type CardRepairResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name           *string `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	ExtendTimeDiff *int32  `protobuf:"varint,3,opt,name=extend_time_diff,json=extendTimeDiff,proto3,oneof" json:"extend_time_diff,omitempty"`
	ActiveTimeDiff *int32  `protobuf:"varint,4,opt,name=active_time_diff,json=activeTimeDiff,proto3,oneof" json:"active_time_diff,omitempty"`
	ExtendTimeUnit string  `protobuf:"bytes,5,opt,name=extend_time_unit,json=extendTimeUnit,proto3" json:"extend_time_unit,omitempty"`
	ActiveTimeUnit string  `protobuf:"bytes,6,opt,name=active_time_unit,json=activeTimeUnit,proto3" json:"active_time_unit,omitempty"`
	IsValid        int32   `protobuf:"varint,7,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
	CreateTime     string  `protobuf:"bytes,12,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime     string  `protobuf:"bytes,13,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	IconUrl        *string `protobuf:"bytes,14,opt,name=icon_url,json=iconUrl,proto3,oneof" json:"icon_url,omitempty"`
	Remark         *string `protobuf:"bytes,15,opt,name=remark,proto3,oneof" json:"remark,omitempty"`
}

func (x *CardRepairResponse) Reset() {
	*x = CardRepairResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_card_ito_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardRepairResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardRepairResponse) ProtoMessage() {}

func (x *CardRepairResponse) ProtoReflect() protoreflect.Message {
	mi := &file_card_ito_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardRepairResponse.ProtoReflect.Descriptor instead.
func (*CardRepairResponse) Descriptor() ([]byte, []int) {
	return file_card_ito_proto_rawDescGZIP(), []int{44}
}

func (x *CardRepairResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CardRepairResponse) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CardRepairResponse) GetExtendTimeDiff() int32 {
	if x != nil && x.ExtendTimeDiff != nil {
		return *x.ExtendTimeDiff
	}
	return 0
}

func (x *CardRepairResponse) GetActiveTimeDiff() int32 {
	if x != nil && x.ActiveTimeDiff != nil {
		return *x.ActiveTimeDiff
	}
	return 0
}

func (x *CardRepairResponse) GetExtendTimeUnit() string {
	if x != nil {
		return x.ExtendTimeUnit
	}
	return ""
}

func (x *CardRepairResponse) GetActiveTimeUnit() string {
	if x != nil {
		return x.ActiveTimeUnit
	}
	return ""
}

func (x *CardRepairResponse) GetIsValid() int32 {
	if x != nil {
		return x.IsValid
	}
	return 0
}

func (x *CardRepairResponse) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *CardRepairResponse) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *CardRepairResponse) GetIconUrl() string {
	if x != nil && x.IconUrl != nil {
		return *x.IconUrl
	}
	return ""
}

func (x *CardRepairResponse) GetRemark() string {
	if x != nil && x.Remark != nil {
		return *x.Remark
	}
	return ""
}

type CardRepairRetrieveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CardRepairRetrieveRequest) Reset() {
	*x = CardRepairRetrieveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_card_ito_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardRepairRetrieveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardRepairRetrieveRequest) ProtoMessage() {}

func (x *CardRepairRetrieveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_card_ito_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardRepairRetrieveRequest.ProtoReflect.Descriptor instead.
func (*CardRepairRetrieveRequest) Descriptor() ([]byte, []int) {
	return file_card_ito_proto_rawDescGZIP(), []int{45}
}

func (x *CardRepairRetrieveRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CardTypeListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CardTypeListRequest) Reset() {
	*x = CardTypeListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_card_ito_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardTypeListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardTypeListRequest) ProtoMessage() {}

func (x *CardTypeListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_card_ito_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardTypeListRequest.ProtoReflect.Descriptor instead.
func (*CardTypeListRequest) Descriptor() ([]byte, []int) {
	return file_card_ito_proto_rawDescGZIP(), []int{46}
}

type CardTypeListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*CardTypeResponse `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *CardTypeListResponse) Reset() {
	*x = CardTypeListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_card_ito_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardTypeListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardTypeListResponse) ProtoMessage() {}

func (x *CardTypeListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_card_ito_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardTypeListResponse.ProtoReflect.Descriptor instead.
func (*CardTypeListResponse) Descriptor() ([]byte, []int) {
	return file_card_ito_proto_rawDescGZIP(), []int{47}
}

func (x *CardTypeListResponse) GetResults() []*CardTypeResponse {
	if x != nil {
		return x.Results
	}
	return nil
}

type CardTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int32                     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Renew        *CardRenewResponse        `protobuf:"bytes,2,opt,name=renew,proto3" json:"renew,omitempty"`
	Repair       *CardRepairResponse       `protobuf:"bytes,3,opt,name=repair,proto3" json:"repair,omitempty"`
	Nut          *CardNutResponse          `protobuf:"bytes,4,opt,name=nut,proto3" json:"nut,omitempty"`
	Member       *CardMemberResponse       `protobuf:"bytes,5,opt,name=member,proto3" json:"member,omitempty"`
	Discount     *CardDiscountResponse     `protobuf:"bytes,6,opt,name=discount,proto3" json:"discount,omitempty"`
	FullDiscount *CardFullDiscountResponse `protobuf:"bytes,7,opt,name=full_discount,json=fullDiscount,proto3" json:"full_discount,omitempty"`
}

func (x *CardTypeResponse) Reset() {
	*x = CardTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_card_ito_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardTypeResponse) ProtoMessage() {}

func (x *CardTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_card_ito_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardTypeResponse.ProtoReflect.Descriptor instead.
func (*CardTypeResponse) Descriptor() ([]byte, []int) {
	return file_card_ito_proto_rawDescGZIP(), []int{48}
}

func (x *CardTypeResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CardTypeResponse) GetRenew() *CardRenewResponse {
	if x != nil {
		return x.Renew
	}
	return nil
}

func (x *CardTypeResponse) GetRepair() *CardRepairResponse {
	if x != nil {
		return x.Repair
	}
	return nil
}

func (x *CardTypeResponse) GetNut() *CardNutResponse {
	if x != nil {
		return x.Nut
	}
	return nil
}

func (x *CardTypeResponse) GetMember() *CardMemberResponse {
	if x != nil {
		return x.Member
	}
	return nil
}

func (x *CardTypeResponse) GetDiscount() *CardDiscountResponse {
	if x != nil {
		return x.Discount
	}
	return nil
}

func (x *CardTypeResponse) GetFullDiscount() *CardFullDiscountResponse {
	if x != nil {
		return x.FullDiscount
	}
	return nil
}

type CardTypeRetrieveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CardTypeRetrieveRequest) Reset() {
	*x = CardTypeRetrieveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_card_ito_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardTypeRetrieveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardTypeRetrieveRequest) ProtoMessage() {}

func (x *CardTypeRetrieveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_card_ito_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardTypeRetrieveRequest.ProtoReflect.Descriptor instead.
func (*CardTypeRetrieveRequest) Descriptor() ([]byte, []int) {
	return file_card_ito_proto_rawDescGZIP(), []int{49}
}

func (x *CardTypeRetrieveRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type LabelValueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Label string `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
}

func (x *LabelValueResponse) Reset() {
	*x = LabelValueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_card_ito_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LabelValueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LabelValueResponse) ProtoMessage() {}

func (x *LabelValueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_card_ito_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LabelValueResponse.ProtoReflect.Descriptor instead.
func (*LabelValueResponse) Descriptor() ([]byte, []int) {
	return file_card_ito_proto_rawDescGZIP(), []int{50}
}

func (x *LabelValueResponse) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *LabelValueResponse) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

type OptionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OptionRequest) Reset() {
	*x = OptionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_card_ito_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OptionRequest) ProtoMessage() {}

func (x *OptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_card_ito_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OptionRequest.ProtoReflect.Descriptor instead.
func (*OptionRequest) Descriptor() ([]byte, []int) {
	return file_card_ito_proto_rawDescGZIP(), []int{51}
}

var File_card_ito_proto protoreflect.FileDescriptor

var file_card_ito_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x15, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63,
	0x61, 0x72, 0x64, 0x5f, 0x69, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2c, 0x0a, 0x1a, 0x43, 0x61, 0x72, 0x64, 0x44, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x22, 0xb9, 0x03, 0x0a, 0x17, 0x43, 0x61, 0x72, 0x64, 0x44, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x17, 0x0a, 0x04, 0x6d, 0x65, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x48, 0x00, 0x52, 0x04, 0x6d, 0x65, 0x65, 0x74, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x70,
	0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x01, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x22, 0x0a, 0x0a, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x48, 0x02, 0x52, 0x09, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x0f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52,
	0x0d, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x69, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x06,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x48, 0x04, 0x52, 0x06,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x73, 0x12, 0x1e, 0x0a, 0x08, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x07, 0x69, 0x63, 0x6f, 0x6e, 0x55, 0x72, 0x6c,
	0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x88, 0x01, 0x01,
	0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6d, 0x65, 0x65, 0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x65,
	0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x5f,
	0x75, 0x72, 0x6c, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x77,
	0x0a, 0x18, 0x43, 0x61, 0x72, 0x64, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x07, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x61,
	0x72, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f,
	0x69, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xa9, 0x01, 0x0a, 0x1a, 0x43, 0x61, 0x72, 0x64,
	0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x75,
	0x6e, 0x69, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x61, 0x72,
	0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69,
	0x74, 0x6f, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x73,
	0x12, 0x41, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0xf7, 0x03, 0x0a, 0x20, 0x43, 0x61, 0x72, 0x64, 0x44, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x33, 0x0a, 0x16, 0x5f, 0x70, 0x61, 0x72,
	0x74, 0x69, 0x61, 0x6c, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61,
	0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x17, 0x0a, 0x04, 0x6d, 0x65, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x00, 0x52, 0x04, 0x6d, 0x65, 0x65, 0x74, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x70, 0x65,
	0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01,
	0x52, 0x0a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x22, 0x0a, 0x0a, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x48, 0x02, 0x52, 0x09, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x0f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x0d,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x88, 0x01, 0x01,
	0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x69, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x06, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x48, 0x04, 0x52, 0x06, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x73, 0x12, 0x1e, 0x0a, 0x08, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x07, 0x69, 0x63, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x88,
	0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x06, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x88, 0x01, 0x01, 0x42,
	0x07, 0x0a, 0x05, 0x5f, 0x6d, 0x65, 0x65, 0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x75,
	0x72, 0x6c, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0xb5, 0x03,
	0x0a, 0x13, 0x43, 0x61, 0x72, 0x64, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x04, 0x6d, 0x65, 0x65,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x04, 0x6d, 0x65, 0x65, 0x74, 0x88,
	0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e,
	0x74, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x48, 0x02, 0x52, 0x09, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x0f, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x0d, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x55, 0x6e, 0x69, 0x74, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x69, 0x73, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x03, 0x48, 0x04, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01,
	0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x1e, 0x0a, 0x08, 0x69, 0x63,
	0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x07,
	0x69, 0x63, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x06, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6d, 0x65, 0x65, 0x74,
	0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x42,
	0x0d, 0x0a, 0x0b, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x12,
	0x0a, 0x10, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x75, 0x6e,
	0x69, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x42, 0x0b, 0x0a,
	0x09, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0xde, 0x03, 0x0a, 0x14, 0x43, 0x61, 0x72, 0x64, 0x44, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x17, 0x0a, 0x04, 0x6d, 0x65, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x48, 0x00, 0x52, 0x04, 0x6d, 0x65, 0x65, 0x74, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x70,
	0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x01, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x22, 0x0a, 0x0a, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x48, 0x02, 0x52, 0x09, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x0f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52,
	0x0d, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x69, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b,
	0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x48, 0x04,
	0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x69,
	0x63, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52,
	0x07, 0x69, 0x63, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x06, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6d, 0x65, 0x65,
	0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65,
	0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42,
	0x12, 0x0a, 0x10, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x75,
	0x6e, 0x69, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x42, 0x0b,
	0x0a, 0x09, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x42, 0x09, 0x0a, 0x07, 0x5f,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x2d, 0x0a, 0x1b, 0x43, 0x61, 0x72, 0x64, 0x44, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x30, 0x0a, 0x1e, 0x43, 0x61, 0x72, 0x64, 0x46, 0x75, 0x6c,
	0x6c, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0xb1, 0x03, 0x0a, 0x1b, 0x43, 0x61, 0x72, 0x64,
	0x46, 0x75, 0x6c, 0x6c, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x04, 0x6d,
	0x65, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x04, 0x6d, 0x65, 0x65,
	0x74, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x72, 0x65, 0x64, 0x75, 0x63, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x06, 0x72, 0x65, 0x64, 0x75, 0x63, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x22, 0x0a, 0x0a, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x48, 0x02, 0x52, 0x09, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x0f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03,
	0x52, 0x0d, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x88,
	0x01, 0x01, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x69, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x1b, 0x0a,
	0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x48, 0x04, 0x52,
	0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x73, 0x12, 0x1e, 0x0a, 0x08, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x07, 0x69, 0x63, 0x6f, 0x6e, 0x55, 0x72,
	0x6c, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x88, 0x01,
	0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6d, 0x65, 0x65, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72,
	0x65, 0x64, 0x75, 0x63, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x7f, 0x0a, 0x1c, 0x43,
	0x61, 0x72, 0x64, 0x46, 0x75, 0x6c, 0x6c, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x07, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x63,
	0x61, 0x72, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x61, 0x72, 0x64,
	0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x46, 0x75, 0x6c, 0x6c, 0x44, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x07, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xad, 0x01, 0x0a,
	0x1e, 0x43, 0x61, 0x72, 0x64, 0x46, 0x75, 0x6c, 0x6c, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x48, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x12, 0x41, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x61, 0x72, 0x64,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x74,
	0x6f, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xef, 0x03, 0x0a,
	0x24, 0x43, 0x61, 0x72, 0x64, 0x46, 0x75, 0x6c, 0x6c, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x33, 0x0a, 0x16, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61,
	0x6c, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17,
	0x0a, 0x04, 0x6d, 0x65, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x04,
	0x6d, 0x65, 0x65, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x72, 0x65, 0x64, 0x75, 0x63,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x06, 0x72, 0x65, 0x64, 0x75, 0x63,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x48, 0x02, 0x52, 0x09, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x0f, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x03, 0x52, 0x0d, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x55, 0x6e,
	0x69, 0x74, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x69, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64,
	0x12, 0x1b, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03,
	0x48, 0x04, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x18, 0x0a,
	0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x1e, 0x0a, 0x08, 0x69, 0x63, 0x6f, 0x6e, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x07, 0x69, 0x63, 0x6f,
	0x6e, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6d, 0x65, 0x65, 0x74, 0x42, 0x09, 0x0a,
	0x07, 0x5f, 0x72, 0x65, 0x64, 0x75, 0x63, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x5f,
	0x75, 0x72, 0x6c, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0xad,
	0x03, 0x0a, 0x17, 0x43, 0x61, 0x72, 0x64, 0x46, 0x75, 0x6c, 0x6c, 0x44, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17,
	0x0a, 0x04, 0x6d, 0x65, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x04,
	0x6d, 0x65, 0x65, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x72, 0x65, 0x64, 0x75, 0x63,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x06, 0x72, 0x65, 0x64, 0x75, 0x63,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x48, 0x02, 0x52, 0x09, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x0f, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x03, 0x52, 0x0d, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x55, 0x6e,
	0x69, 0x74, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x69, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64,
	0x12, 0x1b, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03,
	0x48, 0x04, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x18, 0x0a,
	0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x1e, 0x0a, 0x08, 0x69, 0x63, 0x6f, 0x6e, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x07, 0x69, 0x63, 0x6f,
	0x6e, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6d, 0x65, 0x65, 0x74, 0x42, 0x09, 0x0a,
	0x07, 0x5f, 0x72, 0x65, 0x64, 0x75, 0x63, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x5f,
	0x75, 0x72, 0x6c, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0xd6,
	0x03, 0x0a, 0x18, 0x43, 0x61, 0x72, 0x64, 0x46, 0x75, 0x6c, 0x6c, 0x44, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x17, 0x0a, 0x04, 0x6d, 0x65, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52,
	0x04, 0x6d, 0x65, 0x65, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x72, 0x65, 0x64, 0x75,
	0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x06, 0x72, 0x65, 0x64, 0x75,
	0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x48, 0x02, 0x52, 0x09, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x0f, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x03, 0x52, 0x0d, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x55,
	0x6e, 0x69, 0x74, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x69, 0x73, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x03, 0x48, 0x04, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01,
	0x12, 0x1e, 0x0a, 0x08, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x05, 0x52, 0x07, 0x69, 0x63, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01,
	0x12, 0x1b, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x06, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a,
	0x05, 0x5f, 0x6d, 0x65, 0x65, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72, 0x65, 0x64, 0x75, 0x63,
	0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x42, 0x12, 0x0a, 0x10, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f,
	0x75, 0x6e, 0x69, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x42,
	0x0b, 0x0a, 0x09, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x42, 0x09, 0x0a, 0x07,
	0x5f, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x31, 0x0a, 0x1f, 0x43, 0x61, 0x72, 0x64, 0x46,
	0x75, 0x6c, 0x6c, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x74, 0x72, 0x69,
	0x65, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2a, 0x0a, 0x18, 0x43, 0x61,
	0x72, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x82, 0x03, 0x0a, 0x15, 0x43, 0x61, 0x72, 0x64, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x5f, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a, 0x0f, 0x6b, 0x65, 0x65, 0x70, 0x61, 0x6c,
	0x69, 0x76, 0x65, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x01, 0x52, 0x0e, 0x6b, 0x65, 0x65, 0x70, 0x61, 0x6c, 0x69, 0x76, 0x65, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x88, 0x01, 0x01, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x72, 0x6d, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x74, 0x65, 0x72, 0x6d, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x69, 0x73, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x73, 0x12, 0x1e, 0x0a, 0x08, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x07, 0x69, 0x63, 0x6f, 0x6e, 0x55, 0x72,
	0x6c, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x88, 0x01,
	0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6d, 0x69, 0x6e, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x42,
	0x12, 0x0a, 0x10, 0x5f, 0x6b, 0x65, 0x65, 0x70, 0x61, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x73, 0x0a, 0x16, 0x43,
	0x61, 0x72, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43,
	0x61, 0x72, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0xc0, 0x03, 0x0a, 0x1e, 0x43, 0x61, 0x72, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50,
	0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x33, 0x0a, 0x16, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x5f,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x13, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x09,
	0x6d, 0x69, 0x6e, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x00, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x2c,
	0x0a, 0x0f, 0x6b, 0x65, 0x65, 0x70, 0x61, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x0e, 0x6b, 0x65, 0x65, 0x70, 0x61,
	0x6c, 0x69, 0x76, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x65, 0x72, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x65, 0x72, 0x6d,
	0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x69, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x02, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88,
	0x01, 0x01, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x1e, 0x0a, 0x08,
	0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03,
	0x52, 0x07, 0x69, 0x63, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x06,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6d, 0x69,
	0x6e, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x6b, 0x65, 0x65, 0x70,
	0x61, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x42, 0x0e, 0x0a, 0x0c, 0x5f,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0b, 0x0a, 0x09, 0x5f,
	0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x22, 0xfe, 0x02, 0x0a, 0x11, 0x43, 0x61, 0x72, 0x64, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x09, 0x6d, 0x69, 0x6e, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x48, 0x00, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12,
	0x2c, 0x0a, 0x0f, 0x6b, 0x65, 0x65, 0x70, 0x61, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x0e, 0x6b, 0x65, 0x65, 0x70,
	0x61, 0x6c, 0x69, 0x76, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x65, 0x72, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x65, 0x72,
	0x6d, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x69, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x02, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x88, 0x01, 0x01, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x1e, 0x0a,
	0x08, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x03, 0x52, 0x07, 0x69, 0x63, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a,
	0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52,
	0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6d,
	0x69, 0x6e, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x6b, 0x65, 0x65,
	0x70, 0x61, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x42, 0x0e, 0x0a, 0x0c,
	0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0b, 0x0a, 0x09,
	0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x22, 0xa7, 0x03, 0x0a, 0x12, 0x43, 0x61, 0x72, 0x64, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x48, 0x00, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x2c, 0x0a, 0x0f, 0x6b, 0x65, 0x65, 0x70, 0x61, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x0e, 0x6b, 0x65,
	0x65, 0x70, 0x61, 0x6c, 0x69, 0x76, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x65, 0x72, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74,
	0x65, 0x72, 0x6d, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x69, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x25,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x08, 0x69, 0x63, 0x6f, 0x6e, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x07, 0x69, 0x63, 0x6f,
	0x6e, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6d, 0x69, 0x6e, 0x5f, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x6b, 0x65, 0x65, 0x70, 0x61, 0x6c, 0x69, 0x76, 0x65,
	0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x5f,
	0x75, 0x72, 0x6c, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x2b,
	0x0a, 0x19, 0x43, 0x61, 0x72, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x74, 0x72,
	0x69, 0x65, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x27, 0x0a, 0x15, 0x43,
	0x61, 0x72, 0x64, 0x4e, 0x75, 0x74, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x69, 0x64, 0x22, 0xe2, 0x01, 0x0a, 0x12, 0x43, 0x61, 0x72, 0x64, 0x4e, 0x75, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x69, 0x73, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x1e, 0x0a, 0x08, 0x69,
	0x63, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52,
	0x07, 0x69, 0x63, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x06, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x42, 0x09,
	0x0a, 0x07, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x6d, 0x0a, 0x13, 0x43, 0x61, 0x72,
	0x64, 0x4e, 0x75, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x40, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x4e, 0x75,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xa0, 0x02, 0x0a, 0x1b, 0x43, 0x61, 0x72,
	0x64, 0x4e, 0x75, 0x74, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x33, 0x0a, 0x16, 0x5f, 0x70, 0x61, 0x72,
	0x74, 0x69, 0x61, 0x6c, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61,
	0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x17, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x69, 0x73, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x1e, 0x0a,
	0x08, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x01, 0x52, 0x07, 0x69, 0x63, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a,
	0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52,
	0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0xde, 0x01, 0x0a, 0x0e,
	0x43, 0x61, 0x72, 0x64, 0x4e, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x69, 0x73, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x1e,
	0x0a, 0x08, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x01, 0x52, 0x07, 0x69, 0x63, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x1b,
	0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02,
	0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x75, 0x72,
	0x6c, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x87, 0x02, 0x0a,
	0x0f, 0x43, 0x61, 0x72, 0x64, 0x4e, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x19, 0x0a, 0x08, 0x69,
	0x73, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x69,
	0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x08, 0x69, 0x63, 0x6f, 0x6e,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x07, 0x69, 0x63,
	0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0b,
	0x0a, 0x09, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x42, 0x09, 0x0a, 0x07, 0x5f,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x28, 0x0a, 0x16, 0x43, 0x61, 0x72, 0x64, 0x4e, 0x75,
	0x74, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x29, 0x0a, 0x17, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x44, 0x65, 0x73,
	0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0xae, 0x03, 0x0a, 0x14,
	0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a,
	0x10, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x64, 0x69, 0x66,
	0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x0e, 0x65, 0x78, 0x74, 0x65, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x69, 0x66, 0x66, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x10,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x64, 0x69, 0x66, 0x66,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x02, 0x52, 0x0e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x44, 0x69, 0x66, 0x66, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x10, 0x65,
	0x78, 0x74, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x69, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x73, 0x12, 0x1e, 0x0a, 0x08, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x07, 0x69, 0x63, 0x6f, 0x6e, 0x55, 0x72,
	0x6c, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x88, 0x01,
	0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x65,
	0x78, 0x74, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x42,
	0x13, 0x0a, 0x11, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f,
	0x64, 0x69, 0x66, 0x66, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x75, 0x72,
	0x6c, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x71, 0x0a, 0x15,
	0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43,
	0x61, 0x72, 0x64, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0xa6, 0x01, 0x0a, 0x17, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0a, 0x74,
	0x69, 0x6d, 0x65, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x29, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63,
	0x61, 0x72, 0x64, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x55, 0x6e, 0x69, 0x74, 0x73, 0x12, 0x41, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xec, 0x03, 0x0a, 0x1d, 0x43, 0x61, 0x72,
	0x64, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x33, 0x0a, 0x16, 0x5f, 0x70,
	0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x50, 0x61, 0x72, 0x74,
	0x69, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12,
	0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x10, 0x65, 0x78, 0x74, 0x65,
	0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x48, 0x01, 0x52, 0x0e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x44, 0x69, 0x66, 0x66, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x10, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x48, 0x02, 0x52, 0x0e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x44,
	0x69, 0x66, 0x66, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x10, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x55, 0x6e, 0x69, 0x74,
	0x12, 0x28, 0x0a, 0x10, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f,
	0x75, 0x6e, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73,
	0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x69, 0x73,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12,
	0x1e, 0x0a, 0x08, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x03, 0x52, 0x07, 0x69, 0x63, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12,
	0x1b, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x04, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x42,
	0x0b, 0x0a, 0x09, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x42, 0x09, 0x0a, 0x07,
	0x5f, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0xaa, 0x03, 0x0a, 0x10, 0x43, 0x61, 0x72, 0x64,
	0x52, 0x65, 0x6e, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x10, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x01, 0x52, 0x0e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x69, 0x66,
	0x66, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x10, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x02,
	0x52, 0x0e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x69, 0x66, 0x66,
	0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x10, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x65,
	0x78, 0x74, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x28, 0x0a,
	0x10, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x75, 0x6e, 0x69,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x69, 0x73, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x1e, 0x0a, 0x08,
	0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03,
	0x52, 0x07, 0x69, 0x63, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x06,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x42, 0x0b, 0x0a, 0x09,
	0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x22, 0xd3, 0x03, 0x0a, 0x11, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x6e,
	0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x10, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52,
	0x0e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x69, 0x66, 0x66, 0x88,
	0x01, 0x01, 0x12, 0x2d, 0x0a, 0x10, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x02, 0x52, 0x0e,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x69, 0x66, 0x66, 0x88, 0x01,
	0x01, 0x12, 0x28, 0x0a, 0x10, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x65, 0x78, 0x74,
	0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x69, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x08, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x07, 0x69, 0x63, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x88,
	0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x04, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x88, 0x01, 0x01, 0x42,
	0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x65, 0x78, 0x74,
	0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x42, 0x13, 0x0a,
	0x11, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x64, 0x69,
	0x66, 0x66, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x42,
	0x09, 0x0a, 0x07, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x2a, 0x0a, 0x18, 0x43, 0x61,
	0x72, 0x64, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2a, 0x0a, 0x18, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x70, 0x61, 0x69, 0x72, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x22, 0xaf, 0x03, 0x0a, 0x15, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x70, 0x61, 0x69,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x10, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x01, 0x52, 0x0e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x69, 0x66,
	0x66, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x10, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x02,
	0x52, 0x0e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x69, 0x66, 0x66,
	0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x10, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x65,
	0x78, 0x74, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x28, 0x0a,
	0x10, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x75, 0x6e, 0x69,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x69, 0x73, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x1e, 0x0a, 0x08,
	0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03,
	0x52, 0x07, 0x69, 0x63, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x06,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x42, 0x0b, 0x0a, 0x09,
	0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x22, 0x73, 0x0a, 0x16, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x70, 0x61,
	0x69, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43,
	0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x29, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63,
	0x61, 0x72, 0x64, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x70, 0x61,
	0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xa7, 0x01, 0x0a, 0x18, 0x43, 0x61,
	0x72, 0x64, 0x52, 0x65, 0x70, 0x61, 0x69, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x75,
	0x6e, 0x69, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x61, 0x72,
	0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69,
	0x74, 0x6f, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x73,
	0x12, 0x41, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0xed, 0x03, 0x0a, 0x1e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x70, 0x61,
	0x69, 0x72, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x33, 0x0a, 0x16, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69,
	0x61, 0x6c, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x17, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x10, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01,
	0x52, 0x0e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x69, 0x66, 0x66,
	0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x10, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x48, 0x02, 0x52,
	0x0e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x69, 0x66, 0x66, 0x88,
	0x01, 0x01, 0x12, 0x28, 0x0a, 0x10, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x65, 0x78,
	0x74, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x28, 0x0a, 0x10,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x75, 0x6e, 0x69, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x69, 0x73, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x1e, 0x0a, 0x08, 0x69,
	0x63, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52,
	0x07, 0x69, 0x63, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x06, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x42, 0x0b, 0x0a, 0x09, 0x5f,
	0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x22, 0xab, 0x03, 0x0a, 0x11, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x70, 0x61,
	0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x2d, 0x0a, 0x10, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x0e,
	0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x69, 0x66, 0x66, 0x88, 0x01,
	0x01, 0x12, 0x2d, 0x0a, 0x10, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x5f, 0x64, 0x69, 0x66, 0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x02, 0x52, 0x0e, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x69, 0x66, 0x66, 0x88, 0x01, 0x01,
	0x12, 0x28, 0x0a, 0x10, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f,
	0x75, 0x6e, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x65, 0x78, 0x74, 0x65,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x55, 0x6e, 0x69, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x69, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x1e, 0x0a, 0x08, 0x69, 0x63, 0x6f,
	0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x07, 0x69,
	0x63, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x72, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x06, 0x72, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42,
	0x13, 0x0a, 0x11, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f,
	0x64, 0x69, 0x66, 0x66, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x69, 0x63,
	0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x22, 0xd4, 0x03, 0x0a, 0x12, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x70, 0x61, 0x69, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x2d, 0x0a, 0x10, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x5f, 0x64, 0x69, 0x66, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x0e, 0x65,
	0x78, 0x74, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x69, 0x66, 0x66, 0x88, 0x01, 0x01,
	0x12, 0x2d, 0x0a, 0x10, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f,
	0x64, 0x69, 0x66, 0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x02, 0x52, 0x0e, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x69, 0x66, 0x66, 0x88, 0x01, 0x01, 0x12,
	0x28, 0x0a, 0x10, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x75,
	0x6e, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x65, 0x78, 0x74, 0x65, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x55,
	0x6e, 0x69, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x69, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1e, 0x0a, 0x08, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x03, 0x52, 0x07, 0x69, 0x63, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01,
	0x12, 0x1b, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x04, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a,
	0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e,
	0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x42, 0x13, 0x0a, 0x11, 0x5f,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x64, 0x69, 0x66, 0x66,
	0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x42, 0x09, 0x0a,
	0x07, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x2b, 0x0a, 0x19, 0x43, 0x61, 0x72, 0x64,
	0x52, 0x65, 0x70, 0x61, 0x69, 0x72, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x15, 0x0a, 0x13, 0x43, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x59, 0x0a, 0x14,
	0x43, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x61,
	0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x07,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22, 0xc1, 0x03, 0x0a, 0x10, 0x43, 0x61, 0x72, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3e, 0x0a, 0x05,
	0x72, 0x65, 0x6e, 0x65, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x61,
	0x72, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f,
	0x69, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x72, 0x65, 0x6e, 0x65, 0x77, 0x12, 0x41, 0x0a, 0x06,
	0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63,
	0x61, 0x72, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x61, 0x72, 0x64,
	0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x70, 0x61, 0x69, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x12,
	0x38, 0x0a, 0x03, 0x6e, 0x75, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63,
	0x61, 0x72, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x61, 0x72, 0x64,
	0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x4e, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x03, 0x6e, 0x75, 0x74, 0x12, 0x41, 0x0a, 0x06, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x61, 0x72, 0x64,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x74,
	0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x47, 0x0a, 0x08,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x61,
	0x72, 0x64, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x44, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x54, 0x0a, 0x0d, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x63,
	0x61, 0x72, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x61, 0x72, 0x64,
	0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x46, 0x75, 0x6c, 0x6c, 0x44, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0c, 0x66,
	0x75, 0x6c, 0x6c, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x29, 0x0a, 0x17, 0x43,
	0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x40, 0x0a, 0x12, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0x0f, 0x0a, 0x0d, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x32, 0xf3, 0x05, 0x0a, 0x16, 0x43, 0x61,
	0x72, 0x64, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x6c, 0x65, 0x72, 0x12, 0x63, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x2a,
	0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x61,
	0x72, 0x64, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x44, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x63, 0x61, 0x72,
	0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69,
	0x74, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x07, 0x44, 0x65, 0x73,
	0x74, 0x72, 0x6f, 0x79, 0x12, 0x31, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x72,
	0x64, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x00, 0x12, 0x69, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2e, 0x2e, 0x63, 0x61, 0x72, 0x64,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x74,
	0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x63, 0x61, 0x72, 0x64,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x74,
	0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x64, 0x0a, 0x07,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x24, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x74, 0x6f, 0x2e,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e,
	0x63, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x61, 0x72,
	0x64, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x77, 0x0a, 0x0d, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x37, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64,
	0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x63,
	0x61, 0x72, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x61, 0x72, 0x64,
	0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6d, 0x0a, 0x08, 0x52,
	0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x12, 0x32, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x74, 0x6f, 0x2e,
	0x43, 0x61, 0x72, 0x64, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x74, 0x72,
	0x69, 0x65, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x63, 0x61,
	0x72, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f,
	0x69, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x63, 0x0a, 0x06, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x2a, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x72,
	0x64, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2b, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x44, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32,
	0xa7, 0x06, 0x0a, 0x1a, 0x43, 0x61, 0x72, 0x64, 0x46, 0x75, 0x6c, 0x6c, 0x44, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x6b,
	0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x2e, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x74, 0x6f,
	0x2e, 0x43, 0x61, 0x72, 0x64, 0x46, 0x75, 0x6c, 0x6c, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x74, 0x6f,
	0x2e, 0x43, 0x61, 0x72, 0x64, 0x46, 0x75, 0x6c, 0x6c, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x07, 0x44,
	0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x12, 0x35, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43,
	0x61, 0x72, 0x64, 0x46, 0x75, 0x6c, 0x6c, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44,
	0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x71, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x32, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63,
	0x61, 0x72, 0x64, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x46, 0x75, 0x6c, 0x6c,
	0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64,
	0x46, 0x75, 0x6c, 0x6c, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x68, 0x0a, 0x07, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x24, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x63, 0x61,
	0x72, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f,
	0x69, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x46, 0x75, 0x6c, 0x6c, 0x44, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x7f, 0x0a, 0x0d, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x3b, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x61,
	0x72, 0x64, 0x46, 0x75, 0x6c, 0x6c, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x61,
	0x72, 0x74, 0x69, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x46,
	0x75, 0x6c, 0x6c, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x75, 0x0a, 0x08, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76,
	0x65, 0x12, 0x36, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x46, 0x75,
	0x6c, 0x6c, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65,
	0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x63, 0x61, 0x72, 0x64,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x74,
	0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x46, 0x75, 0x6c, 0x6c, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6b, 0x0a, 0x06,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x2e, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43,
	0x61, 0x72, 0x64, 0x46, 0x75, 0x6c, 0x6c, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43,
	0x61, 0x72, 0x64, 0x46, 0x75, 0x6c, 0x6c, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0xf5, 0x04, 0x0a, 0x14, 0x43, 0x61,
	0x72, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c,
	0x65, 0x72, 0x12, 0x5f, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x28, 0x2e, 0x63,
	0x61, 0x72, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x61, 0x72, 0x64,
	0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43,
	0x61, 0x72, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x07, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x12, 0x2f,
	0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x61,
	0x72, 0x64, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x65, 0x0a, 0x04, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x2c, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2d, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63,
	0x61, 0x72, 0x64, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x73, 0x0a, 0x0d, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x35, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x74, 0x6f,
	0x2e, 0x43, 0x61, 0x72, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x69, 0x0a, 0x08, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76,
	0x65, 0x12, 0x30, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x5f, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x28, 0x2e, 0x63, 0x61, 0x72,
	0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69,
	0x74, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x72,
	0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x32, 0xd1, 0x04, 0x0a, 0x11, 0x43, 0x61, 0x72, 0x64, 0x4e, 0x75, 0x74, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x59, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x12, 0x25, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x4e, 0x75,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x74, 0x6f,
	0x2e, 0x43, 0x61, 0x72, 0x64, 0x4e, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x51, 0x0a, 0x07, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x12, 0x2c, 0x2e,
	0x63, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x61, 0x72,
	0x64, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x4e, 0x75, 0x74, 0x44, 0x65, 0x73,
	0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x5f, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x29, 0x2e,
	0x63, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x61, 0x72,
	0x64, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x4e, 0x75, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x74, 0x6f,
	0x2e, 0x43, 0x61, 0x72, 0x64, 0x4e, 0x75, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6d, 0x0a, 0x0d, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61,
	0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x32, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x74, 0x6f, 0x2e,
	0x43, 0x61, 0x72, 0x64, 0x4e, 0x75, 0x74, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x63, 0x61,
	0x72, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f,
	0x69, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x4e, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x63, 0x0a, 0x08, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76,
	0x65, 0x12, 0x2d, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x4e, 0x75,
	0x74, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x26, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x4e, 0x75, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x06, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x25, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x72,
	0x64, 0x4e, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x63, 0x61,
	0x72, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f,
	0x69, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x4e, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0xcc, 0x05, 0x0a, 0x13, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x6e, 0x65, 0x77, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x5d, 0x0a,
	0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x27, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x74, 0x6f, 0x2e,
	0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x28, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x6e,
	0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x07,
	0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x12, 0x2e, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x74, 0x6f, 0x2e,
	0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x00, 0x12, 0x63, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2b, 0x2e, 0x63, 0x61, 0x72, 0x64,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x74,
	0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43,
	0x61, 0x72, 0x64, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x07, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x24, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x74, 0x6f, 0x2e,
	0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x71, 0x0a, 0x0d, 0x50, 0x61, 0x72,
	0x74, 0x69, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x34, 0x2e, 0x63, 0x61, 0x72,
	0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69,
	0x74, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x50, 0x61, 0x72, 0x74,
	0x69, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x28, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x6e,
	0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x08,
	0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x12, 0x2f, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x74, 0x6f,
	0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65,
	0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x63, 0x61, 0x72, 0x64,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x74,
	0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x27, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63,
	0x61, 0x72, 0x64, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x6e, 0x65,
	0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x74, 0x6f,
	0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x32, 0xd9, 0x05, 0x0a, 0x14, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x70,
	0x61, 0x69, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x5f, 0x0a,
	0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x28, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x74, 0x6f, 0x2e,
	0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x70, 0x61, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x29, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x70, 0x61, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x54,
	0x0a, 0x07, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x12, 0x2f, 0x2e, 0x63, 0x61, 0x72, 0x64,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x74,
	0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x70, 0x61, 0x69, 0x72, 0x44, 0x65, 0x73, 0x74,
	0x72, 0x6f, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x00, 0x12, 0x65, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2c, 0x2e, 0x63,
	0x61, 0x72, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x61, 0x72, 0x64,
	0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x70, 0x61, 0x69, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x63, 0x61, 0x72,
	0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69,
	0x74, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x70, 0x61, 0x69, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x07, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x24, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x63,
	0x61, 0x72, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x61, 0x72, 0x64,
	0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x70, 0x61, 0x69, 0x72, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x73, 0x0a, 0x0d, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x35, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x70,
	0x61, 0x69, 0x72, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x74, 0x6f, 0x2e,
	0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x70, 0x61, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x69, 0x0a, 0x08, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65,
	0x12, 0x30, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x70,
	0x61, 0x69, 0x72, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x29, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52,
	0x65, 0x70, 0x61, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x5f, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x28, 0x2e, 0x63, 0x61, 0x72, 0x64,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x74,
	0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x70, 0x61, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64,
	0x52, 0x65, 0x70, 0x61, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x32, 0xde, 0x01, 0x0a, 0x12, 0x43, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x61, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x2a, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63,
	0x61, 0x72, 0x64, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x63, 0x61,
	0x72, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f,
	0x69, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x65, 0x0a, 0x08, 0x52, 0x65,
	0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x12, 0x2e, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43,
	0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43,
	0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2e, 0x2f, 0x63, 0x61, 0x72, 0x64, 0x69, 0x74, 0x6f, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_card_ito_proto_rawDescOnce sync.Once
	file_card_ito_proto_rawDescData = file_card_ito_proto_rawDesc
)

func file_card_ito_proto_rawDescGZIP() []byte {
	file_card_ito_proto_rawDescOnce.Do(func() {
		file_card_ito_proto_rawDescData = protoimpl.X.CompressGZIP(file_card_ito_proto_rawDescData)
	})
	return file_card_ito_proto_rawDescData
}

var file_card_ito_proto_msgTypes = make([]protoimpl.MessageInfo, 52)
var file_card_ito_proto_goTypes = []interface{}{
	(*CardDiscountDestroyRequest)(nil),           // 0: card_service.card_ito.CardDiscountDestroyRequest
	(*CardDiscountListRequest)(nil),              // 1: card_service.card_ito.CardDiscountListRequest
	(*CardDiscountListResponse)(nil),             // 2: card_service.card_ito.CardDiscountListResponse
	(*CardDiscountOptionResponse)(nil),           // 3: card_service.card_ito.CardDiscountOptionResponse
	(*CardDiscountPartialUpdateRequest)(nil),     // 4: card_service.card_ito.CardDiscountPartialUpdateRequest
	(*CardDiscountRequest)(nil),                  // 5: card_service.card_ito.CardDiscountRequest
	(*CardDiscountResponse)(nil),                 // 6: card_service.card_ito.CardDiscountResponse
	(*CardDiscountRetrieveRequest)(nil),          // 7: card_service.card_ito.CardDiscountRetrieveRequest
	(*CardFullDiscountDestroyRequest)(nil),       // 8: card_service.card_ito.CardFullDiscountDestroyRequest
	(*CardFullDiscountListRequest)(nil),          // 9: card_service.card_ito.CardFullDiscountListRequest
	(*CardFullDiscountListResponse)(nil),         // 10: card_service.card_ito.CardFullDiscountListResponse
	(*CardFullDiscountOptionResponse)(nil),       // 11: card_service.card_ito.CardFullDiscountOptionResponse
	(*CardFullDiscountPartialUpdateRequest)(nil), // 12: card_service.card_ito.CardFullDiscountPartialUpdateRequest
	(*CardFullDiscountRequest)(nil),              // 13: card_service.card_ito.CardFullDiscountRequest
	(*CardFullDiscountResponse)(nil),             // 14: card_service.card_ito.CardFullDiscountResponse
	(*CardFullDiscountRetrieveRequest)(nil),      // 15: card_service.card_ito.CardFullDiscountRetrieveRequest
	(*CardMemberDestroyRequest)(nil),             // 16: card_service.card_ito.CardMemberDestroyRequest
	(*CardMemberListRequest)(nil),                // 17: card_service.card_ito.CardMemberListRequest
	(*CardMemberListResponse)(nil),               // 18: card_service.card_ito.CardMemberListResponse
	(*CardMemberPartialUpdateRequest)(nil),       // 19: card_service.card_ito.CardMemberPartialUpdateRequest
	(*CardMemberRequest)(nil),                    // 20: card_service.card_ito.CardMemberRequest
	(*CardMemberResponse)(nil),                   // 21: card_service.card_ito.CardMemberResponse
	(*CardMemberRetrieveRequest)(nil),            // 22: card_service.card_ito.CardMemberRetrieveRequest
	(*CardNutDestroyRequest)(nil),                // 23: card_service.card_ito.CardNutDestroyRequest
	(*CardNutListRequest)(nil),                   // 24: card_service.card_ito.CardNutListRequest
	(*CardNutListResponse)(nil),                  // 25: card_service.card_ito.CardNutListResponse
	(*CardNutPartialUpdateRequest)(nil),          // 26: card_service.card_ito.CardNutPartialUpdateRequest
	(*CardNutRequest)(nil),                       // 27: card_service.card_ito.CardNutRequest
	(*CardNutResponse)(nil),                      // 28: card_service.card_ito.CardNutResponse
	(*CardNutRetrieveRequest)(nil),               // 29: card_service.card_ito.CardNutRetrieveRequest
	(*CardRenewDestroyRequest)(nil),              // 30: card_service.card_ito.CardRenewDestroyRequest
	(*CardRenewListRequest)(nil),                 // 31: card_service.card_ito.CardRenewListRequest
	(*CardRenewListResponse)(nil),                // 32: card_service.card_ito.CardRenewListResponse
	(*CardRenewOptionResponse)(nil),              // 33: card_service.card_ito.CardRenewOptionResponse
	(*CardRenewPartialUpdateRequest)(nil),        // 34: card_service.card_ito.CardRenewPartialUpdateRequest
	(*CardRenewRequest)(nil),                     // 35: card_service.card_ito.CardRenewRequest
	(*CardRenewResponse)(nil),                    // 36: card_service.card_ito.CardRenewResponse
	(*CardRenewRetrieveRequest)(nil),             // 37: card_service.card_ito.CardRenewRetrieveRequest
	(*CardRepairDestroyRequest)(nil),             // 38: card_service.card_ito.CardRepairDestroyRequest
	(*CardRepairListRequest)(nil),                // 39: card_service.card_ito.CardRepairListRequest
	(*CardRepairListResponse)(nil),               // 40: card_service.card_ito.CardRepairListResponse
	(*CardRepairOptionResponse)(nil),             // 41: card_service.card_ito.CardRepairOptionResponse
	(*CardRepairPartialUpdateRequest)(nil),       // 42: card_service.card_ito.CardRepairPartialUpdateRequest
	(*CardRepairRequest)(nil),                    // 43: card_service.card_ito.CardRepairRequest
	(*CardRepairResponse)(nil),                   // 44: card_service.card_ito.CardRepairResponse
	(*CardRepairRetrieveRequest)(nil),            // 45: card_service.card_ito.CardRepairRetrieveRequest
	(*CardTypeListRequest)(nil),                  // 46: card_service.card_ito.CardTypeListRequest
	(*CardTypeListResponse)(nil),                 // 47: card_service.card_ito.CardTypeListResponse
	(*CardTypeResponse)(nil),                     // 48: card_service.card_ito.CardTypeResponse
	(*CardTypeRetrieveRequest)(nil),              // 49: card_service.card_ito.CardTypeRetrieveRequest
	(*LabelValueResponse)(nil),                   // 50: card_service.card_ito.LabelValueResponse
	(*OptionRequest)(nil),                        // 51: card_service.card_ito.OptionRequest
	(*empty.Empty)(nil),                          // 52: google.protobuf.Empty
}
var file_card_ito_proto_depIdxs = []int32{
	6,  // 0: card_service.card_ito.CardDiscountListResponse.results:type_name -> card_service.card_ito.CardDiscountResponse
	50, // 1: card_service.card_ito.CardDiscountOptionResponse.time_units:type_name -> card_service.card_ito.LabelValueResponse
	50, // 2: card_service.card_ito.CardDiscountOptionResponse.status:type_name -> card_service.card_ito.LabelValueResponse
	14, // 3: card_service.card_ito.CardFullDiscountListResponse.results:type_name -> card_service.card_ito.CardFullDiscountResponse
	50, // 4: card_service.card_ito.CardFullDiscountOptionResponse.time_units:type_name -> card_service.card_ito.LabelValueResponse
	50, // 5: card_service.card_ito.CardFullDiscountOptionResponse.status:type_name -> card_service.card_ito.LabelValueResponse
	21, // 6: card_service.card_ito.CardMemberListResponse.results:type_name -> card_service.card_ito.CardMemberResponse
	28, // 7: card_service.card_ito.CardNutListResponse.results:type_name -> card_service.card_ito.CardNutResponse
	36, // 8: card_service.card_ito.CardRenewListResponse.results:type_name -> card_service.card_ito.CardRenewResponse
	50, // 9: card_service.card_ito.CardRenewOptionResponse.time_units:type_name -> card_service.card_ito.LabelValueResponse
	50, // 10: card_service.card_ito.CardRenewOptionResponse.status:type_name -> card_service.card_ito.LabelValueResponse
	44, // 11: card_service.card_ito.CardRepairListResponse.results:type_name -> card_service.card_ito.CardRepairResponse
	50, // 12: card_service.card_ito.CardRepairOptionResponse.time_units:type_name -> card_service.card_ito.LabelValueResponse
	50, // 13: card_service.card_ito.CardRepairOptionResponse.status:type_name -> card_service.card_ito.LabelValueResponse
	48, // 14: card_service.card_ito.CardTypeListResponse.results:type_name -> card_service.card_ito.CardTypeResponse
	36, // 15: card_service.card_ito.CardTypeResponse.renew:type_name -> card_service.card_ito.CardRenewResponse
	44, // 16: card_service.card_ito.CardTypeResponse.repair:type_name -> card_service.card_ito.CardRepairResponse
	28, // 17: card_service.card_ito.CardTypeResponse.nut:type_name -> card_service.card_ito.CardNutResponse
	21, // 18: card_service.card_ito.CardTypeResponse.member:type_name -> card_service.card_ito.CardMemberResponse
	6,  // 19: card_service.card_ito.CardTypeResponse.discount:type_name -> card_service.card_ito.CardDiscountResponse
	14, // 20: card_service.card_ito.CardTypeResponse.full_discount:type_name -> card_service.card_ito.CardFullDiscountResponse
	5,  // 21: card_service.card_ito.CardDiscountController.Create:input_type -> card_service.card_ito.CardDiscountRequest
	0,  // 22: card_service.card_ito.CardDiscountController.Destroy:input_type -> card_service.card_ito.CardDiscountDestroyRequest
	1,  // 23: card_service.card_ito.CardDiscountController.List:input_type -> card_service.card_ito.CardDiscountListRequest
	51, // 24: card_service.card_ito.CardDiscountController.Options:input_type -> card_service.card_ito.OptionRequest
	4,  // 25: card_service.card_ito.CardDiscountController.PartialUpdate:input_type -> card_service.card_ito.CardDiscountPartialUpdateRequest
	7,  // 26: card_service.card_ito.CardDiscountController.Retrieve:input_type -> card_service.card_ito.CardDiscountRetrieveRequest
	5,  // 27: card_service.card_ito.CardDiscountController.Update:input_type -> card_service.card_ito.CardDiscountRequest
	13, // 28: card_service.card_ito.CardFullDiscountController.Create:input_type -> card_service.card_ito.CardFullDiscountRequest
	8,  // 29: card_service.card_ito.CardFullDiscountController.Destroy:input_type -> card_service.card_ito.CardFullDiscountDestroyRequest
	9,  // 30: card_service.card_ito.CardFullDiscountController.List:input_type -> card_service.card_ito.CardFullDiscountListRequest
	51, // 31: card_service.card_ito.CardFullDiscountController.Options:input_type -> card_service.card_ito.OptionRequest
	12, // 32: card_service.card_ito.CardFullDiscountController.PartialUpdate:input_type -> card_service.card_ito.CardFullDiscountPartialUpdateRequest
	15, // 33: card_service.card_ito.CardFullDiscountController.Retrieve:input_type -> card_service.card_ito.CardFullDiscountRetrieveRequest
	13, // 34: card_service.card_ito.CardFullDiscountController.Update:input_type -> card_service.card_ito.CardFullDiscountRequest
	20, // 35: card_service.card_ito.CardMemberController.Create:input_type -> card_service.card_ito.CardMemberRequest
	16, // 36: card_service.card_ito.CardMemberController.Destroy:input_type -> card_service.card_ito.CardMemberDestroyRequest
	17, // 37: card_service.card_ito.CardMemberController.List:input_type -> card_service.card_ito.CardMemberListRequest
	19, // 38: card_service.card_ito.CardMemberController.PartialUpdate:input_type -> card_service.card_ito.CardMemberPartialUpdateRequest
	22, // 39: card_service.card_ito.CardMemberController.Retrieve:input_type -> card_service.card_ito.CardMemberRetrieveRequest
	20, // 40: card_service.card_ito.CardMemberController.Update:input_type -> card_service.card_ito.CardMemberRequest
	27, // 41: card_service.card_ito.CardNutController.Create:input_type -> card_service.card_ito.CardNutRequest
	23, // 42: card_service.card_ito.CardNutController.Destroy:input_type -> card_service.card_ito.CardNutDestroyRequest
	24, // 43: card_service.card_ito.CardNutController.List:input_type -> card_service.card_ito.CardNutListRequest
	26, // 44: card_service.card_ito.CardNutController.PartialUpdate:input_type -> card_service.card_ito.CardNutPartialUpdateRequest
	29, // 45: card_service.card_ito.CardNutController.Retrieve:input_type -> card_service.card_ito.CardNutRetrieveRequest
	27, // 46: card_service.card_ito.CardNutController.Update:input_type -> card_service.card_ito.CardNutRequest
	35, // 47: card_service.card_ito.CardRenewController.Create:input_type -> card_service.card_ito.CardRenewRequest
	30, // 48: card_service.card_ito.CardRenewController.Destroy:input_type -> card_service.card_ito.CardRenewDestroyRequest
	31, // 49: card_service.card_ito.CardRenewController.List:input_type -> card_service.card_ito.CardRenewListRequest
	51, // 50: card_service.card_ito.CardRenewController.Options:input_type -> card_service.card_ito.OptionRequest
	34, // 51: card_service.card_ito.CardRenewController.PartialUpdate:input_type -> card_service.card_ito.CardRenewPartialUpdateRequest
	37, // 52: card_service.card_ito.CardRenewController.Retrieve:input_type -> card_service.card_ito.CardRenewRetrieveRequest
	35, // 53: card_service.card_ito.CardRenewController.Update:input_type -> card_service.card_ito.CardRenewRequest
	43, // 54: card_service.card_ito.CardRepairController.Create:input_type -> card_service.card_ito.CardRepairRequest
	38, // 55: card_service.card_ito.CardRepairController.Destroy:input_type -> card_service.card_ito.CardRepairDestroyRequest
	39, // 56: card_service.card_ito.CardRepairController.List:input_type -> card_service.card_ito.CardRepairListRequest
	51, // 57: card_service.card_ito.CardRepairController.Options:input_type -> card_service.card_ito.OptionRequest
	42, // 58: card_service.card_ito.CardRepairController.PartialUpdate:input_type -> card_service.card_ito.CardRepairPartialUpdateRequest
	45, // 59: card_service.card_ito.CardRepairController.Retrieve:input_type -> card_service.card_ito.CardRepairRetrieveRequest
	43, // 60: card_service.card_ito.CardRepairController.Update:input_type -> card_service.card_ito.CardRepairRequest
	46, // 61: card_service.card_ito.CardTypeController.List:input_type -> card_service.card_ito.CardTypeListRequest
	49, // 62: card_service.card_ito.CardTypeController.Retrieve:input_type -> card_service.card_ito.CardTypeRetrieveRequest
	6,  // 63: card_service.card_ito.CardDiscountController.Create:output_type -> card_service.card_ito.CardDiscountResponse
	52, // 64: card_service.card_ito.CardDiscountController.Destroy:output_type -> google.protobuf.Empty
	2,  // 65: card_service.card_ito.CardDiscountController.List:output_type -> card_service.card_ito.CardDiscountListResponse
	3,  // 66: card_service.card_ito.CardDiscountController.Options:output_type -> card_service.card_ito.CardDiscountOptionResponse
	6,  // 67: card_service.card_ito.CardDiscountController.PartialUpdate:output_type -> card_service.card_ito.CardDiscountResponse
	6,  // 68: card_service.card_ito.CardDiscountController.Retrieve:output_type -> card_service.card_ito.CardDiscountResponse
	6,  // 69: card_service.card_ito.CardDiscountController.Update:output_type -> card_service.card_ito.CardDiscountResponse
	14, // 70: card_service.card_ito.CardFullDiscountController.Create:output_type -> card_service.card_ito.CardFullDiscountResponse
	52, // 71: card_service.card_ito.CardFullDiscountController.Destroy:output_type -> google.protobuf.Empty
	10, // 72: card_service.card_ito.CardFullDiscountController.List:output_type -> card_service.card_ito.CardFullDiscountListResponse
	11, // 73: card_service.card_ito.CardFullDiscountController.Options:output_type -> card_service.card_ito.CardFullDiscountOptionResponse
	14, // 74: card_service.card_ito.CardFullDiscountController.PartialUpdate:output_type -> card_service.card_ito.CardFullDiscountResponse
	14, // 75: card_service.card_ito.CardFullDiscountController.Retrieve:output_type -> card_service.card_ito.CardFullDiscountResponse
	14, // 76: card_service.card_ito.CardFullDiscountController.Update:output_type -> card_service.card_ito.CardFullDiscountResponse
	21, // 77: card_service.card_ito.CardMemberController.Create:output_type -> card_service.card_ito.CardMemberResponse
	52, // 78: card_service.card_ito.CardMemberController.Destroy:output_type -> google.protobuf.Empty
	18, // 79: card_service.card_ito.CardMemberController.List:output_type -> card_service.card_ito.CardMemberListResponse
	21, // 80: card_service.card_ito.CardMemberController.PartialUpdate:output_type -> card_service.card_ito.CardMemberResponse
	21, // 81: card_service.card_ito.CardMemberController.Retrieve:output_type -> card_service.card_ito.CardMemberResponse
	21, // 82: card_service.card_ito.CardMemberController.Update:output_type -> card_service.card_ito.CardMemberResponse
	28, // 83: card_service.card_ito.CardNutController.Create:output_type -> card_service.card_ito.CardNutResponse
	52, // 84: card_service.card_ito.CardNutController.Destroy:output_type -> google.protobuf.Empty
	25, // 85: card_service.card_ito.CardNutController.List:output_type -> card_service.card_ito.CardNutListResponse
	28, // 86: card_service.card_ito.CardNutController.PartialUpdate:output_type -> card_service.card_ito.CardNutResponse
	28, // 87: card_service.card_ito.CardNutController.Retrieve:output_type -> card_service.card_ito.CardNutResponse
	28, // 88: card_service.card_ito.CardNutController.Update:output_type -> card_service.card_ito.CardNutResponse
	36, // 89: card_service.card_ito.CardRenewController.Create:output_type -> card_service.card_ito.CardRenewResponse
	52, // 90: card_service.card_ito.CardRenewController.Destroy:output_type -> google.protobuf.Empty
	32, // 91: card_service.card_ito.CardRenewController.List:output_type -> card_service.card_ito.CardRenewListResponse
	33, // 92: card_service.card_ito.CardRenewController.Options:output_type -> card_service.card_ito.CardRenewOptionResponse
	36, // 93: card_service.card_ito.CardRenewController.PartialUpdate:output_type -> card_service.card_ito.CardRenewResponse
	36, // 94: card_service.card_ito.CardRenewController.Retrieve:output_type -> card_service.card_ito.CardRenewResponse
	36, // 95: card_service.card_ito.CardRenewController.Update:output_type -> card_service.card_ito.CardRenewResponse
	44, // 96: card_service.card_ito.CardRepairController.Create:output_type -> card_service.card_ito.CardRepairResponse
	52, // 97: card_service.card_ito.CardRepairController.Destroy:output_type -> google.protobuf.Empty
	40, // 98: card_service.card_ito.CardRepairController.List:output_type -> card_service.card_ito.CardRepairListResponse
	41, // 99: card_service.card_ito.CardRepairController.Options:output_type -> card_service.card_ito.CardRepairOptionResponse
	44, // 100: card_service.card_ito.CardRepairController.PartialUpdate:output_type -> card_service.card_ito.CardRepairResponse
	44, // 101: card_service.card_ito.CardRepairController.Retrieve:output_type -> card_service.card_ito.CardRepairResponse
	44, // 102: card_service.card_ito.CardRepairController.Update:output_type -> card_service.card_ito.CardRepairResponse
	47, // 103: card_service.card_ito.CardTypeController.List:output_type -> card_service.card_ito.CardTypeListResponse
	48, // 104: card_service.card_ito.CardTypeController.Retrieve:output_type -> card_service.card_ito.CardTypeResponse
	63, // [63:105] is the sub-list for method output_type
	21, // [21:63] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_card_ito_proto_init() }
func file_card_ito_proto_init() {
	if File_card_ito_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_card_ito_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardDiscountDestroyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_card_ito_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardDiscountListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_card_ito_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardDiscountListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_card_ito_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardDiscountOptionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_card_ito_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardDiscountPartialUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_card_ito_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardDiscountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_card_ito_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardDiscountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_card_ito_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardDiscountRetrieveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_card_ito_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardFullDiscountDestroyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_card_ito_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardFullDiscountListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_card_ito_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardFullDiscountListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_card_ito_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardFullDiscountOptionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_card_ito_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardFullDiscountPartialUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_card_ito_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardFullDiscountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_card_ito_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardFullDiscountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_card_ito_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardFullDiscountRetrieveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_card_ito_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardMemberDestroyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_card_ito_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardMemberListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_card_ito_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardMemberListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_card_ito_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardMemberPartialUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_card_ito_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardMemberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_card_ito_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardMemberResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_card_ito_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardMemberRetrieveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_card_ito_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardNutDestroyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_card_ito_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardNutListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_card_ito_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardNutListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_card_ito_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardNutPartialUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_card_ito_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardNutRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_card_ito_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardNutResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_card_ito_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardNutRetrieveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_card_ito_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardRenewDestroyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_card_ito_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardRenewListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_card_ito_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardRenewListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_card_ito_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardRenewOptionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_card_ito_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardRenewPartialUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_card_ito_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardRenewRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_card_ito_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardRenewResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_card_ito_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardRenewRetrieveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_card_ito_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardRepairDestroyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_card_ito_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardRepairListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_card_ito_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardRepairListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_card_ito_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardRepairOptionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_card_ito_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardRepairPartialUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_card_ito_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardRepairRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_card_ito_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardRepairResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_card_ito_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardRepairRetrieveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_card_ito_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardTypeListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_card_ito_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardTypeListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_card_ito_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_card_ito_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardTypeRetrieveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_card_ito_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LabelValueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_card_ito_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OptionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_card_ito_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_card_ito_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_card_ito_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_card_ito_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_card_ito_proto_msgTypes[9].OneofWrappers = []interface{}{}
	file_card_ito_proto_msgTypes[12].OneofWrappers = []interface{}{}
	file_card_ito_proto_msgTypes[13].OneofWrappers = []interface{}{}
	file_card_ito_proto_msgTypes[14].OneofWrappers = []interface{}{}
	file_card_ito_proto_msgTypes[17].OneofWrappers = []interface{}{}
	file_card_ito_proto_msgTypes[19].OneofWrappers = []interface{}{}
	file_card_ito_proto_msgTypes[20].OneofWrappers = []interface{}{}
	file_card_ito_proto_msgTypes[21].OneofWrappers = []interface{}{}
	file_card_ito_proto_msgTypes[24].OneofWrappers = []interface{}{}
	file_card_ito_proto_msgTypes[26].OneofWrappers = []interface{}{}
	file_card_ito_proto_msgTypes[27].OneofWrappers = []interface{}{}
	file_card_ito_proto_msgTypes[28].OneofWrappers = []interface{}{}
	file_card_ito_proto_msgTypes[31].OneofWrappers = []interface{}{}
	file_card_ito_proto_msgTypes[34].OneofWrappers = []interface{}{}
	file_card_ito_proto_msgTypes[35].OneofWrappers = []interface{}{}
	file_card_ito_proto_msgTypes[36].OneofWrappers = []interface{}{}
	file_card_ito_proto_msgTypes[39].OneofWrappers = []interface{}{}
	file_card_ito_proto_msgTypes[42].OneofWrappers = []interface{}{}
	file_card_ito_proto_msgTypes[43].OneofWrappers = []interface{}{}
	file_card_ito_proto_msgTypes[44].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_card_ito_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   52,
			NumExtensions: 0,
			NumServices:   7,
		},
		GoTypes:           file_card_ito_proto_goTypes,
		DependencyIndexes: file_card_ito_proto_depIdxs,
		MessageInfos:      file_card_ito_proto_msgTypes,
	}.Build()
	File_card_ito_proto = out.File
	file_card_ito_proto_rawDesc = nil
	file_card_ito_proto_goTypes = nil
	file_card_ito_proto_depIdxs = nil
}
