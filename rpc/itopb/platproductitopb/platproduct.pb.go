// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.19.4
// source: platproduct.proto

package platproductitopb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *  create 新增操作 接口 *
type CreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Spu          string  `protobuf:"bytes,1,opt,name=spu,proto3" json:"spu,omitempty"`                 // 唯一性字段
	Sku          *string `protobuf:"bytes,2,opt,name=sku,proto3,oneof" json:"sku,omitempty"`           // 唯一性字段，且创建SKU时，必须绑定“正确”的SPU
	PlatCode     *string `protobuf:"bytes,4,opt,name=platCode,proto3,oneof" json:"platCode,omitempty"` // 唯一性字段
	PlatName     *string `protobuf:"bytes,3,opt,name=platName,proto3,oneof" json:"platName,omitempty"`
	PlatBrief    *string `protobuf:"bytes,5,opt,name=platBrief,proto3,oneof" json:"platBrief,omitempty"`       // 创建SKU时，默认值将复制SPU相应字段
	PlatDesc     *string `protobuf:"bytes,6,opt,name=platDesc,proto3,oneof" json:"platDesc,omitempty"`         // 创建SKU时，默认值将复制SPU相应字段
	PlatTag      *string `protobuf:"bytes,7,opt,name=platTag,proto3,oneof" json:"platTag,omitempty"`           // 创建SKU时，默认值将复制SPU相应字段
	PlatRetail   *string `protobuf:"bytes,8,opt,name=platRetail,proto3,oneof" json:"platRetail,omitempty"`     // 创建SKU时，默认值将复制SPU相应字段
	PlatDiscount *string `protobuf:"bytes,9,opt,name=platDiscount,proto3,oneof" json:"platDiscount,omitempty"` // 创建SKU时，默认值将复制SPU相应字段
}

func (x *CreateReq) Reset() {
	*x = CreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platproduct_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReq) ProtoMessage() {}

func (x *CreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_platproduct_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateReq.ProtoReflect.Descriptor instead.
func (*CreateReq) Descriptor() ([]byte, []int) {
	return file_platproduct_proto_rawDescGZIP(), []int{0}
}

func (x *CreateReq) GetSpu() string {
	if x != nil {
		return x.Spu
	}
	return ""
}

func (x *CreateReq) GetSku() string {
	if x != nil && x.Sku != nil {
		return *x.Sku
	}
	return ""
}

func (x *CreateReq) GetPlatCode() string {
	if x != nil && x.PlatCode != nil {
		return *x.PlatCode
	}
	return ""
}

func (x *CreateReq) GetPlatName() string {
	if x != nil && x.PlatName != nil {
		return *x.PlatName
	}
	return ""
}

func (x *CreateReq) GetPlatBrief() string {
	if x != nil && x.PlatBrief != nil {
		return *x.PlatBrief
	}
	return ""
}

func (x *CreateReq) GetPlatDesc() string {
	if x != nil && x.PlatDesc != nil {
		return *x.PlatDesc
	}
	return ""
}

func (x *CreateReq) GetPlatTag() string {
	if x != nil && x.PlatTag != nil {
		return *x.PlatTag
	}
	return ""
}

func (x *CreateReq) GetPlatRetail() string {
	if x != nil && x.PlatRetail != nil {
		return *x.PlatRetail
	}
	return ""
}

func (x *CreateReq) GetPlatDiscount() string {
	if x != nil && x.PlatDiscount != nil {
		return *x.PlatDiscount
	}
	return ""
}

type AffectedResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Affected int64 `protobuf:"varint,1,opt,name=affected,proto3" json:"affected,omitempty"`
}

func (x *AffectedResp) Reset() {
	*x = AffectedResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platproduct_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AffectedResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AffectedResp) ProtoMessage() {}

func (x *AffectedResp) ProtoReflect() protoreflect.Message {
	mi := &file_platproduct_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AffectedResp.ProtoReflect.Descriptor instead.
func (*AffectedResp) Descriptor() ([]byte, []int) {
	return file_platproduct_proto_rawDescGZIP(), []int{1}
}

func (x *AffectedResp) GetAffected() int64 {
	if x != nil {
		return x.Affected
	}
	return 0
}

// *  retrieve 单查操作 接口 （支持多条件，模糊查询）*
type RetrieveReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Spu      *string `protobuf:"bytes,1,opt,name=spu,proto3,oneof" json:"spu,omitempty"`           // 唯一性字段（spu/sku/platCode 每次只能有一个传值）
	Sku      *string `protobuf:"bytes,2,opt,name=sku,proto3,oneof" json:"sku,omitempty"`           // 唯一性字段（spu/sku/platCode 每次只能有一个传值）
	PlatCode *string `protobuf:"bytes,3,opt,name=platCode,proto3,oneof" json:"platCode,omitempty"` // 唯一性字段（spu/sku/platCode 每次只能有一个传值）
}

func (x *RetrieveReq) Reset() {
	*x = RetrieveReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platproduct_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveReq) ProtoMessage() {}

func (x *RetrieveReq) ProtoReflect() protoreflect.Message {
	mi := &file_platproduct_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveReq.ProtoReflect.Descriptor instead.
func (*RetrieveReq) Descriptor() ([]byte, []int) {
	return file_platproduct_proto_rawDescGZIP(), []int{2}
}

func (x *RetrieveReq) GetSpu() string {
	if x != nil && x.Spu != nil {
		return *x.Spu
	}
	return ""
}

func (x *RetrieveReq) GetSku() string {
	if x != nil && x.Sku != nil {
		return *x.Sku
	}
	return ""
}

func (x *RetrieveReq) GetPlatCode() string {
	if x != nil && x.PlatCode != nil {
		return *x.PlatCode
	}
	return ""
}

type ItemResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Spu          string `protobuf:"bytes,2,opt,name=spu,proto3" json:"spu,omitempty"`
	Sku          string `protobuf:"bytes,3,opt,name=sku,proto3" json:"sku,omitempty"`
	PlatName     string `protobuf:"bytes,4,opt,name=platName,proto3" json:"platName,omitempty"`
	PlatCode     string `protobuf:"bytes,5,opt,name=platCode,proto3" json:"platCode,omitempty"`
	PlatBrief    string `protobuf:"bytes,6,opt,name=platBrief,proto3" json:"platBrief,omitempty"`
	PlatDesc     string `protobuf:"bytes,7,opt,name=platDesc,proto3" json:"platDesc,omitempty"`
	PlatTag      string `protobuf:"bytes,8,opt,name=platTag,proto3" json:"platTag,omitempty"`
	PlatRetail   string `protobuf:"bytes,9,opt,name=platRetail,proto3" json:"platRetail,omitempty"`
	PlatDiscount string `protobuf:"bytes,10,opt,name=platDiscount,proto3" json:"platDiscount,omitempty"`
}

func (x *ItemResp) Reset() {
	*x = ItemResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platproduct_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemResp) ProtoMessage() {}

func (x *ItemResp) ProtoReflect() protoreflect.Message {
	mi := &file_platproduct_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemResp.ProtoReflect.Descriptor instead.
func (*ItemResp) Descriptor() ([]byte, []int) {
	return file_platproduct_proto_rawDescGZIP(), []int{3}
}

func (x *ItemResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ItemResp) GetSpu() string {
	if x != nil {
		return x.Spu
	}
	return ""
}

func (x *ItemResp) GetSku() string {
	if x != nil {
		return x.Sku
	}
	return ""
}

func (x *ItemResp) GetPlatName() string {
	if x != nil {
		return x.PlatName
	}
	return ""
}

func (x *ItemResp) GetPlatCode() string {
	if x != nil {
		return x.PlatCode
	}
	return ""
}

func (x *ItemResp) GetPlatBrief() string {
	if x != nil {
		return x.PlatBrief
	}
	return ""
}

func (x *ItemResp) GetPlatDesc() string {
	if x != nil {
		return x.PlatDesc
	}
	return ""
}

func (x *ItemResp) GetPlatTag() string {
	if x != nil {
		return x.PlatTag
	}
	return ""
}

func (x *ItemResp) GetPlatRetail() string {
	if x != nil {
		return x.PlatRetail
	}
	return ""
}

func (x *ItemResp) GetPlatDiscount() string {
	if x != nil {
		return x.PlatDiscount
	}
	return ""
}

// *  list 列表查操作 接口 （支持多条件，模糊查询，分页查询）*
type ListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Spu          *string `protobuf:"bytes,1,opt,name=spu,proto3,oneof" json:"spu,omitempty"`
	Sku          *string `protobuf:"bytes,2,opt,name=sku,proto3,oneof" json:"sku,omitempty"`
	PlatName     *string `protobuf:"bytes,3,opt,name=platName,proto3,oneof" json:"platName,omitempty"`
	PlatCode     *string `protobuf:"bytes,4,opt,name=platCode,proto3,oneof" json:"platCode,omitempty"`
	PlatBrief    *string `protobuf:"bytes,5,opt,name=platBrief,proto3,oneof" json:"platBrief,omitempty"`
	PlatDesc     *string `protobuf:"bytes,6,opt,name=platDesc,proto3,oneof" json:"platDesc,omitempty"`
	PlatTag      *string `protobuf:"bytes,7,opt,name=platTag,proto3,oneof" json:"platTag,omitempty"`
	PlatRetail   *string `protobuf:"bytes,8,opt,name=platRetail,proto3,oneof" json:"platRetail,omitempty"`
	PlatDiscount *string `protobuf:"bytes,9,opt,name=platDiscount,proto3,oneof" json:"platDiscount,omitempty"`
	Page         *int64  `protobuf:"varint,10,opt,name=page,proto3,oneof" json:"page,omitempty"`
	PageSize     *int64  `protobuf:"varint,11,opt,name=pageSize,proto3,oneof" json:"pageSize,omitempty"`
}

func (x *ListReq) Reset() {
	*x = ListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platproduct_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListReq) ProtoMessage() {}

func (x *ListReq) ProtoReflect() protoreflect.Message {
	mi := &file_platproduct_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListReq.ProtoReflect.Descriptor instead.
func (*ListReq) Descriptor() ([]byte, []int) {
	return file_platproduct_proto_rawDescGZIP(), []int{4}
}

func (x *ListReq) GetSpu() string {
	if x != nil && x.Spu != nil {
		return *x.Spu
	}
	return ""
}

func (x *ListReq) GetSku() string {
	if x != nil && x.Sku != nil {
		return *x.Sku
	}
	return ""
}

func (x *ListReq) GetPlatName() string {
	if x != nil && x.PlatName != nil {
		return *x.PlatName
	}
	return ""
}

func (x *ListReq) GetPlatCode() string {
	if x != nil && x.PlatCode != nil {
		return *x.PlatCode
	}
	return ""
}

func (x *ListReq) GetPlatBrief() string {
	if x != nil && x.PlatBrief != nil {
		return *x.PlatBrief
	}
	return ""
}

func (x *ListReq) GetPlatDesc() string {
	if x != nil && x.PlatDesc != nil {
		return *x.PlatDesc
	}
	return ""
}

func (x *ListReq) GetPlatTag() string {
	if x != nil && x.PlatTag != nil {
		return *x.PlatTag
	}
	return ""
}

func (x *ListReq) GetPlatRetail() string {
	if x != nil && x.PlatRetail != nil {
		return *x.PlatRetail
	}
	return ""
}

func (x *ListReq) GetPlatDiscount() string {
	if x != nil && x.PlatDiscount != nil {
		return *x.PlatDiscount
	}
	return ""
}

func (x *ListReq) GetPage() int64 {
	if x != nil && x.Page != nil {
		return *x.Page
	}
	return 0
}

func (x *ListReq) GetPageSize() int64 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

type ListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result []*ItemResp `protobuf:"bytes,1,rep,name=Result,proto3" json:"Result,omitempty"`
	Count  int64       `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *ListResp) Reset() {
	*x = ListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platproduct_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListResp) ProtoMessage() {}

func (x *ListResp) ProtoReflect() protoreflect.Message {
	mi := &file_platproduct_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListResp.ProtoReflect.Descriptor instead.
func (*ListResp) Descriptor() ([]byte, []int) {
	return file_platproduct_proto_rawDescGZIP(), []int{5}
}

func (x *ListResp) GetResult() []*ItemResp {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *ListResp) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

// *  Delete 单删 操作 接口 （基于Id）*
type DropReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Spu string  `protobuf:"bytes,1,opt,name=spu,proto3" json:"spu,omitempty"`
	Sku *string `protobuf:"bytes,2,opt,name=sku,proto3,oneof" json:"sku,omitempty"`
}

func (x *DropReq) Reset() {
	*x = DropReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platproduct_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DropReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropReq) ProtoMessage() {}

func (x *DropReq) ProtoReflect() protoreflect.Message {
	mi := &file_platproduct_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropReq.ProtoReflect.Descriptor instead.
func (*DropReq) Descriptor() ([]byte, []int) {
	return file_platproduct_proto_rawDescGZIP(), []int{6}
}

func (x *DropReq) GetSpu() string {
	if x != nil {
		return x.Spu
	}
	return ""
}

func (x *DropReq) GetSku() string {
	if x != nil && x.Sku != nil {
		return *x.Sku
	}
	return ""
}

// *  Update 单改 操作 接口 （指定Id）*
type UpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Spu          string  `protobuf:"bytes,2,opt,name=spu,proto3" json:"spu,omitempty"`       // spu 字段创建后，不能修改，只能删除
	Sku          *string `protobuf:"bytes,3,opt,name=sku,proto3,oneof" json:"sku,omitempty"` // sku 字段创建后，不能修改，只能删除
	PlatCode     *string `protobuf:"bytes,5,opt,name=platCode,proto3,oneof" json:"platCode,omitempty"`
	PlatName     *string `protobuf:"bytes,4,opt,name=platName,proto3,oneof" json:"platName,omitempty"`
	PlatBrief    *string `protobuf:"bytes,6,opt,name=platBrief,proto3,oneof" json:"platBrief,omitempty"`
	PlatDesc     *string `protobuf:"bytes,7,opt,name=platDesc,proto3,oneof" json:"platDesc,omitempty"`
	PlatTag      *string `protobuf:"bytes,8,opt,name=platTag,proto3,oneof" json:"platTag,omitempty"`
	PlatRetail   *string `protobuf:"bytes,9,opt,name=platRetail,proto3,oneof" json:"platRetail,omitempty"`
	PlatDiscount *string `protobuf:"bytes,10,opt,name=platDiscount,proto3,oneof" json:"platDiscount,omitempty"`
}

func (x *UpdateReq) Reset() {
	*x = UpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_platproduct_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateReq) ProtoMessage() {}

func (x *UpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_platproduct_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateReq.ProtoReflect.Descriptor instead.
func (*UpdateReq) Descriptor() ([]byte, []int) {
	return file_platproduct_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateReq) GetSpu() string {
	if x != nil {
		return x.Spu
	}
	return ""
}

func (x *UpdateReq) GetSku() string {
	if x != nil && x.Sku != nil {
		return *x.Sku
	}
	return ""
}

func (x *UpdateReq) GetPlatCode() string {
	if x != nil && x.PlatCode != nil {
		return *x.PlatCode
	}
	return ""
}

func (x *UpdateReq) GetPlatName() string {
	if x != nil && x.PlatName != nil {
		return *x.PlatName
	}
	return ""
}

func (x *UpdateReq) GetPlatBrief() string {
	if x != nil && x.PlatBrief != nil {
		return *x.PlatBrief
	}
	return ""
}

func (x *UpdateReq) GetPlatDesc() string {
	if x != nil && x.PlatDesc != nil {
		return *x.PlatDesc
	}
	return ""
}

func (x *UpdateReq) GetPlatTag() string {
	if x != nil && x.PlatTag != nil {
		return *x.PlatTag
	}
	return ""
}

func (x *UpdateReq) GetPlatRetail() string {
	if x != nil && x.PlatRetail != nil {
		return *x.PlatRetail
	}
	return ""
}

func (x *UpdateReq) GetPlatDiscount() string {
	if x != nil && x.PlatDiscount != nil {
		return *x.PlatDiscount
	}
	return ""
}

var File_platproduct_proto protoreflect.FileDescriptor

var file_platproduct_proto_rawDesc = []byte{
	0x0a, 0x11, 0x70, 0x6c, 0x61, 0x74, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x22, 0x90, 0x03, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x10, 0x0a, 0x03, 0x73, 0x70, 0x75, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x70,
	0x75, 0x12, 0x15, 0x0a, 0x03, 0x73, 0x6b, 0x75, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x03, 0x73, 0x6b, 0x75, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x08, 0x70, 0x6c,
	0x61, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x70, 0x6c, 0x61,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x08, 0x70,
	0x6c, 0x61, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x70, 0x6c,
	0x61, 0x74, 0x42, 0x72, 0x69, 0x65, 0x66, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52,
	0x09, 0x70, 0x6c, 0x61, 0x74, 0x42, 0x72, 0x69, 0x65, 0x66, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a,
	0x08, 0x70, 0x6c, 0x61, 0x74, 0x44, 0x65, 0x73, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x04, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x44, 0x65, 0x73, 0x63, 0x88, 0x01, 0x01, 0x12, 0x1d,
	0x0a, 0x07, 0x70, 0x6c, 0x61, 0x74, 0x54, 0x61, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x05, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x74, 0x54, 0x61, 0x67, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a,
	0x0a, 0x70, 0x6c, 0x61, 0x74, 0x52, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x06, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x52, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x88,
	0x01, 0x01, 0x12, 0x27, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x74,
	0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f,
	0x73, 0x6b, 0x75, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x43, 0x6f, 0x64, 0x65,
	0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x0c, 0x0a,
	0x0a, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x42, 0x72, 0x69, 0x65, 0x66, 0x42, 0x0b, 0x0a, 0x09, 0x5f,
	0x70, 0x6c, 0x61, 0x74, 0x44, 0x65, 0x73, 0x63, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x70, 0x6c, 0x61,
	0x74, 0x54, 0x61, 0x67, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x52, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x44, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x2a, 0x0a, 0x0c, 0x41, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x61, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x22, 0x79, 0x0a, 0x0b, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x15, 0x0a, 0x03, 0x73, 0x70, 0x75, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03,
	0x73, 0x70, 0x75, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x73, 0x6b, 0x75, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x03, 0x73, 0x6b, 0x75, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a,
	0x08, 0x70, 0x6c, 0x61, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x02, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x42, 0x06,
	0x0a, 0x04, 0x5f, 0x73, 0x70, 0x75, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x73, 0x6b, 0x75, 0x42, 0x0b,
	0x0a, 0x09, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x8e, 0x02, 0x0a, 0x08,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x70, 0x75, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x70, 0x75, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x6b,
	0x75, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x6b, 0x75, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x6c, 0x61, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x6c, 0x61, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x74, 0x42, 0x72, 0x69, 0x65,
	0x66, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x6c, 0x61, 0x74, 0x42, 0x72, 0x69,
	0x65, 0x66, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x44, 0x65, 0x73, 0x63, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x44, 0x65, 0x73, 0x63, 0x12, 0x18,
	0x0a, 0x07, 0x70, 0x6c, 0x61, 0x74, 0x54, 0x61, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x70, 0x6c, 0x61, 0x74, 0x54, 0x61, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x74,
	0x52, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c,
	0x61, 0x74, 0x52, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x74,
	0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x70, 0x6c, 0x61, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xeb, 0x03, 0x0a,
	0x07, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x03, 0x73, 0x70, 0x75, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x73, 0x70, 0x75, 0x88, 0x01, 0x01, 0x12,
	0x15, 0x0a, 0x03, 0x73, 0x6b, 0x75, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x03,
	0x73, 0x6b, 0x75, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61,
	0x74, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x74,
	0x42, 0x72, 0x69, 0x65, 0x66, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x09, 0x70,
	0x6c, 0x61, 0x74, 0x42, 0x72, 0x69, 0x65, 0x66, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x70,
	0x6c, 0x61, 0x74, 0x44, 0x65, 0x73, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52,
	0x08, 0x70, 0x6c, 0x61, 0x74, 0x44, 0x65, 0x73, 0x63, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07,
	0x70, 0x6c, 0x61, 0x74, 0x54, 0x61, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52,
	0x07, 0x70, 0x6c, 0x61, 0x74, 0x54, 0x61, 0x67, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x70,
	0x6c, 0x61, 0x74, 0x52, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x07, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x52, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x88, 0x01, 0x01,
	0x12, 0x27, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x44, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x48, 0x09, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x03, 0x48, 0x0a, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x73, 0x70, 0x75, 0x42, 0x06, 0x0a, 0x04, 0x5f,
	0x73, 0x6b, 0x75, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x0c, 0x0a,
	0x0a, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x42, 0x72, 0x69, 0x65, 0x66, 0x42, 0x0b, 0x0a, 0x09, 0x5f,
	0x70, 0x6c, 0x61, 0x74, 0x44, 0x65, 0x73, 0x63, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x70, 0x6c, 0x61,
	0x74, 0x54, 0x61, 0x67, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x52, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x44, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x42, 0x0b, 0x0a,
	0x09, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x50, 0x0a, 0x08, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x5f, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x52, 0x06,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x3a, 0x0a, 0x07,
	0x44, 0x72, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x70, 0x75, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x70, 0x75, 0x12, 0x15, 0x0a, 0x03, 0x73, 0x6b, 0x75,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x73, 0x6b, 0x75, 0x88, 0x01, 0x01,
	0x42, 0x06, 0x0a, 0x04, 0x5f, 0x73, 0x6b, 0x75, 0x22, 0x90, 0x03, 0x0a, 0x09, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x70, 0x75, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x70, 0x75, 0x12, 0x15, 0x0a, 0x03, 0x73, 0x6b, 0x75, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x73, 0x6b, 0x75, 0x88, 0x01, 0x01, 0x12,
	0x1f, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x01, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x1f, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x02, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x21, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x74, 0x42, 0x72, 0x69, 0x65, 0x66, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x09, 0x70, 0x6c, 0x61, 0x74, 0x42, 0x72, 0x69, 0x65,
	0x66, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x44, 0x65, 0x73, 0x63,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x44, 0x65,
	0x73, 0x63, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x74, 0x54, 0x61, 0x67,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x74, 0x54, 0x61,
	0x67, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x52, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74,
	0x52, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0c, 0x70, 0x6c, 0x61,
	0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x07, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x88,
	0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x73, 0x6b, 0x75, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70,
	0x6c, 0x61, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x6c, 0x61, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x42, 0x72, 0x69,
	0x65, 0x66, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x44, 0x65, 0x73, 0x63, 0x42,
	0x0a, 0x0a, 0x08, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x54, 0x61, 0x67, 0x42, 0x0d, 0x0a, 0x0b, 0x5f,
	0x70, 0x6c, 0x61, 0x74, 0x52, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x70,
	0x6c, 0x61, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x32, 0xc1, 0x02, 0x0a, 0x0e,
	0x50, 0x6c, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x74, 0x6f, 0x12, 0x3d,
	0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x17, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x5f,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x1a, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x2e, 0x41, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3d, 0x0a,
	0x08, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x12, 0x19, 0x2e, 0x70, 0x6c, 0x61, 0x74,
	0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x35, 0x0a, 0x04,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x15, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x70, 0x6c,
	0x61, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x3b, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x15, 0x2e,
	0x70, 0x6c, 0x61, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x44, 0x72, 0x6f,
	0x70, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x2e, 0x41, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x3d, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x17, 0x2e, 0x70, 0x6c, 0x61,
	0x74, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x2e, 0x41, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x42,
	0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_platproduct_proto_rawDescOnce sync.Once
	file_platproduct_proto_rawDescData = file_platproduct_proto_rawDesc
)

func file_platproduct_proto_rawDescGZIP() []byte {
	file_platproduct_proto_rawDescOnce.Do(func() {
		file_platproduct_proto_rawDescData = protoimpl.X.CompressGZIP(file_platproduct_proto_rawDescData)
	})
	return file_platproduct_proto_rawDescData
}

var file_platproduct_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_platproduct_proto_goTypes = []interface{}{
	(*CreateReq)(nil),    // 0: plat_product.CreateReq
	(*AffectedResp)(nil), // 1: plat_product.AffectedResp
	(*RetrieveReq)(nil),  // 2: plat_product.RetrieveReq
	(*ItemResp)(nil),     // 3: plat_product.ItemResp
	(*ListReq)(nil),      // 4: plat_product.ListReq
	(*ListResp)(nil),     // 5: plat_product.ListResp
	(*DropReq)(nil),      // 6: plat_product.DropReq
	(*UpdateReq)(nil),    // 7: plat_product.UpdateReq
}
var file_platproduct_proto_depIdxs = []int32{
	3, // 0: plat_product.ListResp.Result:type_name -> plat_product.ItemResp
	0, // 1: plat_product.PlatProductIto.Create:input_type -> plat_product.CreateReq
	2, // 2: plat_product.PlatProductIto.Retrieve:input_type -> plat_product.RetrieveReq
	4, // 3: plat_product.PlatProductIto.List:input_type -> plat_product.ListReq
	6, // 4: plat_product.PlatProductIto.Delete:input_type -> plat_product.DropReq
	7, // 5: plat_product.PlatProductIto.Update:input_type -> plat_product.UpdateReq
	1, // 6: plat_product.PlatProductIto.Create:output_type -> plat_product.AffectedResp
	3, // 7: plat_product.PlatProductIto.Retrieve:output_type -> plat_product.ItemResp
	5, // 8: plat_product.PlatProductIto.List:output_type -> plat_product.ListResp
	1, // 9: plat_product.PlatProductIto.Delete:output_type -> plat_product.AffectedResp
	1, // 10: plat_product.PlatProductIto.Update:output_type -> plat_product.AffectedResp
	6, // [6:11] is the sub-list for method output_type
	1, // [1:6] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_platproduct_proto_init() }
func file_platproduct_proto_init() {
	if File_platproduct_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_platproduct_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platproduct_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AffectedResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platproduct_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platproduct_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platproduct_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platproduct_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platproduct_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DropReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_platproduct_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_platproduct_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_platproduct_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_platproduct_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_platproduct_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_platproduct_proto_msgTypes[7].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_platproduct_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_platproduct_proto_goTypes,
		DependencyIndexes: file_platproduct_proto_depIdxs,
		MessageInfos:      file_platproduct_proto_msgTypes,
	}.Build()
	File_platproduct_proto = out.File
	file_platproduct_proto_rawDesc = nil
	file_platproduct_proto_goTypes = nil
	file_platproduct_proto_depIdxs = nil
}
