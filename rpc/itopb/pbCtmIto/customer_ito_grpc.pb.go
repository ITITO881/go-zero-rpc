// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v3.19.4
// source: customer_ito.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	CtmItoController_ChangeSelectedAllCart_FullMethodName = "/customer_service.customer_ito.CtmItoController/ChangeSelectedAllCart"
	CtmItoController_Create_FullMethodName                = "/customer_service.customer_ito.CtmItoController/Create"
	CtmItoController_CreateAddr_FullMethodName            = "/customer_service.customer_ito.CtmItoController/CreateAddr"
	CtmItoController_CreateCart_FullMethodName            = "/customer_service.customer_ito.CtmItoController/CreateCart"
	CtmItoController_DefaultAddr_FullMethodName           = "/customer_service.customer_ito.CtmItoController/DefaultAddr"
	CtmItoController_Destroy_FullMethodName               = "/customer_service.customer_ito.CtmItoController/Destroy"
	CtmItoController_DestroyAddr_FullMethodName           = "/customer_service.customer_ito.CtmItoController/DestroyAddr"
	CtmItoController_DestroyCart_FullMethodName           = "/customer_service.customer_ito.CtmItoController/DestroyCart"
	CtmItoController_List_FullMethodName                  = "/customer_service.customer_ito.CtmItoController/List"
	CtmItoController_ListAddr_FullMethodName              = "/customer_service.customer_ito.CtmItoController/ListAddr"
	CtmItoController_ListCart_FullMethodName              = "/customer_service.customer_ito.CtmItoController/ListCart"
	CtmItoController_PartialUpdate_FullMethodName         = "/customer_service.customer_ito.CtmItoController/PartialUpdate"
	CtmItoController_Retrieve_FullMethodName              = "/customer_service.customer_ito.CtmItoController/Retrieve"
	CtmItoController_RetrieveAddr_FullMethodName          = "/customer_service.customer_ito.CtmItoController/RetrieveAddr"
	CtmItoController_RetrieveCart_FullMethodName          = "/customer_service.customer_ito.CtmItoController/RetrieveCart"
	CtmItoController_Update_FullMethodName                = "/customer_service.customer_ito.CtmItoController/Update"
	CtmItoController_UpdateAddr_FullMethodName            = "/customer_service.customer_ito.CtmItoController/UpdateAddr"
	CtmItoController_UpdateCart_FullMethodName            = "/customer_service.customer_ito.CtmItoController/UpdateCart"
)

// CtmItoControllerClient is the client API for CtmItoController service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type CtmItoControllerClient interface {
	ChangeSelectedAllCart(ctx context.Context, in *CtmCartSelectedAllChangeRequest, opts ...grpc.CallOption) (*CtmItoChangeSelectedAllCartResponse, error)
	Create(ctx context.Context, in *CtmBaseRequest, opts ...grpc.CallOption) (*CtmBaseResponse, error)
	CreateAddr(ctx context.Context, in *CtmAddrCreateRequest, opts ...grpc.CallOption) (*CtmAddrResponse, error)
	CreateCart(ctx context.Context, in *CtmCartCreateRequest, opts ...grpc.CallOption) (*CtmCartResponse, error)
	DefaultAddr(ctx context.Context, in *CtmDefaultAddrRequest, opts ...grpc.CallOption) (*CtmItoDefaultAddrResponse, error)
	Destroy(ctx context.Context, in *CtmBaseDestroyRequest, opts ...grpc.CallOption) (*CtmBaseDestroyResponse, error)
	DestroyAddr(ctx context.Context, in *CtmAddrDestroyRequest, opts ...grpc.CallOption) (*CtmAddrDestroyResponse, error)
	DestroyCart(ctx context.Context, in *CtmCartDestroyRequest, opts ...grpc.CallOption) (*CtmCartDestroyResponse, error)
	List(ctx context.Context, in *CtmBaseListRequest, opts ...grpc.CallOption) (*CtmBaseListResponse, error)
	ListAddr(ctx context.Context, in *CtmAddrListRequest, opts ...grpc.CallOption) (*CtmAddrListResponse, error)
	ListCart(ctx context.Context, in *CtmCartListRequest, opts ...grpc.CallOption) (*CtmCartListResponse, error)
	PartialUpdate(ctx context.Context, in *CtmBasePartialUpdateRequest, opts ...grpc.CallOption) (*CtmBaseResponse, error)
	Retrieve(ctx context.Context, in *CtmBaseRetrieveRequest, opts ...grpc.CallOption) (*CtmBaseResponse, error)
	RetrieveAddr(ctx context.Context, in *CtmAddrRetrieveRequest, opts ...grpc.CallOption) (*CtmAddrResponse, error)
	RetrieveCart(ctx context.Context, in *CtmCartRetrieveRequest, opts ...grpc.CallOption) (*CtmCartResponse, error)
	Update(ctx context.Context, in *CtmBaseRequest, opts ...grpc.CallOption) (*CtmBaseResponse, error)
	UpdateAddr(ctx context.Context, in *CtmAddrUpdateRequest, opts ...grpc.CallOption) (*CtmAddrResponse, error)
	UpdateCart(ctx context.Context, in *CtmCartUpdateRequest, opts ...grpc.CallOption) (*CtmCartResponse, error)
}

type ctmItoControllerClient struct {
	cc grpc.ClientConnInterface
}

func NewCtmItoControllerClient(cc grpc.ClientConnInterface) CtmItoControllerClient {
	return &ctmItoControllerClient{cc}
}

func (c *ctmItoControllerClient) ChangeSelectedAllCart(ctx context.Context, in *CtmCartSelectedAllChangeRequest, opts ...grpc.CallOption) (*CtmItoChangeSelectedAllCartResponse, error) {
	out := new(CtmItoChangeSelectedAllCartResponse)
	err := c.cc.Invoke(ctx, CtmItoController_ChangeSelectedAllCart_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoControllerClient) Create(ctx context.Context, in *CtmBaseRequest, opts ...grpc.CallOption) (*CtmBaseResponse, error) {
	out := new(CtmBaseResponse)
	err := c.cc.Invoke(ctx, CtmItoController_Create_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoControllerClient) CreateAddr(ctx context.Context, in *CtmAddrCreateRequest, opts ...grpc.CallOption) (*CtmAddrResponse, error) {
	out := new(CtmAddrResponse)
	err := c.cc.Invoke(ctx, CtmItoController_CreateAddr_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoControllerClient) CreateCart(ctx context.Context, in *CtmCartCreateRequest, opts ...grpc.CallOption) (*CtmCartResponse, error) {
	out := new(CtmCartResponse)
	err := c.cc.Invoke(ctx, CtmItoController_CreateCart_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoControllerClient) DefaultAddr(ctx context.Context, in *CtmDefaultAddrRequest, opts ...grpc.CallOption) (*CtmItoDefaultAddrResponse, error) {
	out := new(CtmItoDefaultAddrResponse)
	err := c.cc.Invoke(ctx, CtmItoController_DefaultAddr_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoControllerClient) Destroy(ctx context.Context, in *CtmBaseDestroyRequest, opts ...grpc.CallOption) (*CtmBaseDestroyResponse, error) {
	out := new(CtmBaseDestroyResponse)
	err := c.cc.Invoke(ctx, CtmItoController_Destroy_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoControllerClient) DestroyAddr(ctx context.Context, in *CtmAddrDestroyRequest, opts ...grpc.CallOption) (*CtmAddrDestroyResponse, error) {
	out := new(CtmAddrDestroyResponse)
	err := c.cc.Invoke(ctx, CtmItoController_DestroyAddr_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoControllerClient) DestroyCart(ctx context.Context, in *CtmCartDestroyRequest, opts ...grpc.CallOption) (*CtmCartDestroyResponse, error) {
	out := new(CtmCartDestroyResponse)
	err := c.cc.Invoke(ctx, CtmItoController_DestroyCart_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoControllerClient) List(ctx context.Context, in *CtmBaseListRequest, opts ...grpc.CallOption) (*CtmBaseListResponse, error) {
	out := new(CtmBaseListResponse)
	err := c.cc.Invoke(ctx, CtmItoController_List_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoControllerClient) ListAddr(ctx context.Context, in *CtmAddrListRequest, opts ...grpc.CallOption) (*CtmAddrListResponse, error) {
	out := new(CtmAddrListResponse)
	err := c.cc.Invoke(ctx, CtmItoController_ListAddr_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoControllerClient) ListCart(ctx context.Context, in *CtmCartListRequest, opts ...grpc.CallOption) (*CtmCartListResponse, error) {
	out := new(CtmCartListResponse)
	err := c.cc.Invoke(ctx, CtmItoController_ListCart_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoControllerClient) PartialUpdate(ctx context.Context, in *CtmBasePartialUpdateRequest, opts ...grpc.CallOption) (*CtmBaseResponse, error) {
	out := new(CtmBaseResponse)
	err := c.cc.Invoke(ctx, CtmItoController_PartialUpdate_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoControllerClient) Retrieve(ctx context.Context, in *CtmBaseRetrieveRequest, opts ...grpc.CallOption) (*CtmBaseResponse, error) {
	out := new(CtmBaseResponse)
	err := c.cc.Invoke(ctx, CtmItoController_Retrieve_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoControllerClient) RetrieveAddr(ctx context.Context, in *CtmAddrRetrieveRequest, opts ...grpc.CallOption) (*CtmAddrResponse, error) {
	out := new(CtmAddrResponse)
	err := c.cc.Invoke(ctx, CtmItoController_RetrieveAddr_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoControllerClient) RetrieveCart(ctx context.Context, in *CtmCartRetrieveRequest, opts ...grpc.CallOption) (*CtmCartResponse, error) {
	out := new(CtmCartResponse)
	err := c.cc.Invoke(ctx, CtmItoController_RetrieveCart_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoControllerClient) Update(ctx context.Context, in *CtmBaseRequest, opts ...grpc.CallOption) (*CtmBaseResponse, error) {
	out := new(CtmBaseResponse)
	err := c.cc.Invoke(ctx, CtmItoController_Update_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoControllerClient) UpdateAddr(ctx context.Context, in *CtmAddrUpdateRequest, opts ...grpc.CallOption) (*CtmAddrResponse, error) {
	out := new(CtmAddrResponse)
	err := c.cc.Invoke(ctx, CtmItoController_UpdateAddr_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoControllerClient) UpdateCart(ctx context.Context, in *CtmCartUpdateRequest, opts ...grpc.CallOption) (*CtmCartResponse, error) {
	out := new(CtmCartResponse)
	err := c.cc.Invoke(ctx, CtmItoController_UpdateCart_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CtmItoControllerServer is the server API for CtmItoController service.
// All implementations must embed UnimplementedCtmItoControllerServer
// for forward compatibility
type CtmItoControllerServer interface {
	ChangeSelectedAllCart(context.Context, *CtmCartSelectedAllChangeRequest) (*CtmItoChangeSelectedAllCartResponse, error)
	Create(context.Context, *CtmBaseRequest) (*CtmBaseResponse, error)
	CreateAddr(context.Context, *CtmAddrCreateRequest) (*CtmAddrResponse, error)
	CreateCart(context.Context, *CtmCartCreateRequest) (*CtmCartResponse, error)
	DefaultAddr(context.Context, *CtmDefaultAddrRequest) (*CtmItoDefaultAddrResponse, error)
	Destroy(context.Context, *CtmBaseDestroyRequest) (*CtmBaseDestroyResponse, error)
	DestroyAddr(context.Context, *CtmAddrDestroyRequest) (*CtmAddrDestroyResponse, error)
	DestroyCart(context.Context, *CtmCartDestroyRequest) (*CtmCartDestroyResponse, error)
	List(context.Context, *CtmBaseListRequest) (*CtmBaseListResponse, error)
	ListAddr(context.Context, *CtmAddrListRequest) (*CtmAddrListResponse, error)
	ListCart(context.Context, *CtmCartListRequest) (*CtmCartListResponse, error)
	PartialUpdate(context.Context, *CtmBasePartialUpdateRequest) (*CtmBaseResponse, error)
	Retrieve(context.Context, *CtmBaseRetrieveRequest) (*CtmBaseResponse, error)
	RetrieveAddr(context.Context, *CtmAddrRetrieveRequest) (*CtmAddrResponse, error)
	RetrieveCart(context.Context, *CtmCartRetrieveRequest) (*CtmCartResponse, error)
	Update(context.Context, *CtmBaseRequest) (*CtmBaseResponse, error)
	UpdateAddr(context.Context, *CtmAddrUpdateRequest) (*CtmAddrResponse, error)
	UpdateCart(context.Context, *CtmCartUpdateRequest) (*CtmCartResponse, error)
	mustEmbedUnimplementedCtmItoControllerServer()
}

// UnimplementedCtmItoControllerServer must be embedded to have forward compatible implementations.
type UnimplementedCtmItoControllerServer struct {
}

func (UnimplementedCtmItoControllerServer) ChangeSelectedAllCart(context.Context, *CtmCartSelectedAllChangeRequest) (*CtmItoChangeSelectedAllCartResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeSelectedAllCart not implemented")
}
func (UnimplementedCtmItoControllerServer) Create(context.Context, *CtmBaseRequest) (*CtmBaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (UnimplementedCtmItoControllerServer) CreateAddr(context.Context, *CtmAddrCreateRequest) (*CtmAddrResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAddr not implemented")
}
func (UnimplementedCtmItoControllerServer) CreateCart(context.Context, *CtmCartCreateRequest) (*CtmCartResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCart not implemented")
}
func (UnimplementedCtmItoControllerServer) DefaultAddr(context.Context, *CtmDefaultAddrRequest) (*CtmItoDefaultAddrResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DefaultAddr not implemented")
}
func (UnimplementedCtmItoControllerServer) Destroy(context.Context, *CtmBaseDestroyRequest) (*CtmBaseDestroyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Destroy not implemented")
}
func (UnimplementedCtmItoControllerServer) DestroyAddr(context.Context, *CtmAddrDestroyRequest) (*CtmAddrDestroyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DestroyAddr not implemented")
}
func (UnimplementedCtmItoControllerServer) DestroyCart(context.Context, *CtmCartDestroyRequest) (*CtmCartDestroyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DestroyCart not implemented")
}
func (UnimplementedCtmItoControllerServer) List(context.Context, *CtmBaseListRequest) (*CtmBaseListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (UnimplementedCtmItoControllerServer) ListAddr(context.Context, *CtmAddrListRequest) (*CtmAddrListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListAddr not implemented")
}
func (UnimplementedCtmItoControllerServer) ListCart(context.Context, *CtmCartListRequest) (*CtmCartListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListCart not implemented")
}
func (UnimplementedCtmItoControllerServer) PartialUpdate(context.Context, *CtmBasePartialUpdateRequest) (*CtmBaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PartialUpdate not implemented")
}
func (UnimplementedCtmItoControllerServer) Retrieve(context.Context, *CtmBaseRetrieveRequest) (*CtmBaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Retrieve not implemented")
}
func (UnimplementedCtmItoControllerServer) RetrieveAddr(context.Context, *CtmAddrRetrieveRequest) (*CtmAddrResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RetrieveAddr not implemented")
}
func (UnimplementedCtmItoControllerServer) RetrieveCart(context.Context, *CtmCartRetrieveRequest) (*CtmCartResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RetrieveCart not implemented")
}
func (UnimplementedCtmItoControllerServer) Update(context.Context, *CtmBaseRequest) (*CtmBaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (UnimplementedCtmItoControllerServer) UpdateAddr(context.Context, *CtmAddrUpdateRequest) (*CtmAddrResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateAddr not implemented")
}
func (UnimplementedCtmItoControllerServer) UpdateCart(context.Context, *CtmCartUpdateRequest) (*CtmCartResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCart not implemented")
}
func (UnimplementedCtmItoControllerServer) mustEmbedUnimplementedCtmItoControllerServer() {}

// UnsafeCtmItoControllerServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to CtmItoControllerServer will
// result in compilation errors.
type UnsafeCtmItoControllerServer interface {
	mustEmbedUnimplementedCtmItoControllerServer()
}

func RegisterCtmItoControllerServer(s grpc.ServiceRegistrar, srv CtmItoControllerServer) {
	s.RegisterService(&CtmItoController_ServiceDesc, srv)
}

func _CtmItoController_ChangeSelectedAllCart_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CtmCartSelectedAllChangeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoControllerServer).ChangeSelectedAllCart(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoController_ChangeSelectedAllCart_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoControllerServer).ChangeSelectedAllCart(ctx, req.(*CtmCartSelectedAllChangeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoController_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CtmBaseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoControllerServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoController_Create_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoControllerServer).Create(ctx, req.(*CtmBaseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoController_CreateAddr_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CtmAddrCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoControllerServer).CreateAddr(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoController_CreateAddr_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoControllerServer).CreateAddr(ctx, req.(*CtmAddrCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoController_CreateCart_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CtmCartCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoControllerServer).CreateCart(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoController_CreateCart_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoControllerServer).CreateCart(ctx, req.(*CtmCartCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoController_DefaultAddr_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CtmDefaultAddrRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoControllerServer).DefaultAddr(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoController_DefaultAddr_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoControllerServer).DefaultAddr(ctx, req.(*CtmDefaultAddrRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoController_Destroy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CtmBaseDestroyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoControllerServer).Destroy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoController_Destroy_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoControllerServer).Destroy(ctx, req.(*CtmBaseDestroyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoController_DestroyAddr_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CtmAddrDestroyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoControllerServer).DestroyAddr(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoController_DestroyAddr_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoControllerServer).DestroyAddr(ctx, req.(*CtmAddrDestroyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoController_DestroyCart_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CtmCartDestroyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoControllerServer).DestroyCart(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoController_DestroyCart_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoControllerServer).DestroyCart(ctx, req.(*CtmCartDestroyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoController_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CtmBaseListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoControllerServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoController_List_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoControllerServer).List(ctx, req.(*CtmBaseListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoController_ListAddr_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CtmAddrListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoControllerServer).ListAddr(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoController_ListAddr_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoControllerServer).ListAddr(ctx, req.(*CtmAddrListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoController_ListCart_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CtmCartListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoControllerServer).ListCart(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoController_ListCart_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoControllerServer).ListCart(ctx, req.(*CtmCartListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoController_PartialUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CtmBasePartialUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoControllerServer).PartialUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoController_PartialUpdate_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoControllerServer).PartialUpdate(ctx, req.(*CtmBasePartialUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoController_Retrieve_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CtmBaseRetrieveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoControllerServer).Retrieve(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoController_Retrieve_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoControllerServer).Retrieve(ctx, req.(*CtmBaseRetrieveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoController_RetrieveAddr_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CtmAddrRetrieveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoControllerServer).RetrieveAddr(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoController_RetrieveAddr_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoControllerServer).RetrieveAddr(ctx, req.(*CtmAddrRetrieveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoController_RetrieveCart_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CtmCartRetrieveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoControllerServer).RetrieveCart(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoController_RetrieveCart_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoControllerServer).RetrieveCart(ctx, req.(*CtmCartRetrieveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoController_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CtmBaseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoControllerServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoController_Update_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoControllerServer).Update(ctx, req.(*CtmBaseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoController_UpdateAddr_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CtmAddrUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoControllerServer).UpdateAddr(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoController_UpdateAddr_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoControllerServer).UpdateAddr(ctx, req.(*CtmAddrUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoController_UpdateCart_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CtmCartUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoControllerServer).UpdateCart(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoController_UpdateCart_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoControllerServer).UpdateCart(ctx, req.(*CtmCartUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// CtmItoController_ServiceDesc is the grpc.ServiceDesc for CtmItoController service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var CtmItoController_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "customer_service.customer_ito.CtmItoController",
	HandlerType: (*CtmItoControllerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ChangeSelectedAllCart",
			Handler:    _CtmItoController_ChangeSelectedAllCart_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _CtmItoController_Create_Handler,
		},
		{
			MethodName: "CreateAddr",
			Handler:    _CtmItoController_CreateAddr_Handler,
		},
		{
			MethodName: "CreateCart",
			Handler:    _CtmItoController_CreateCart_Handler,
		},
		{
			MethodName: "DefaultAddr",
			Handler:    _CtmItoController_DefaultAddr_Handler,
		},
		{
			MethodName: "Destroy",
			Handler:    _CtmItoController_Destroy_Handler,
		},
		{
			MethodName: "DestroyAddr",
			Handler:    _CtmItoController_DestroyAddr_Handler,
		},
		{
			MethodName: "DestroyCart",
			Handler:    _CtmItoController_DestroyCart_Handler,
		},
		{
			MethodName: "List",
			Handler:    _CtmItoController_List_Handler,
		},
		{
			MethodName: "ListAddr",
			Handler:    _CtmItoController_ListAddr_Handler,
		},
		{
			MethodName: "ListCart",
			Handler:    _CtmItoController_ListCart_Handler,
		},
		{
			MethodName: "PartialUpdate",
			Handler:    _CtmItoController_PartialUpdate_Handler,
		},
		{
			MethodName: "Retrieve",
			Handler:    _CtmItoController_Retrieve_Handler,
		},
		{
			MethodName: "RetrieveAddr",
			Handler:    _CtmItoController_RetrieveAddr_Handler,
		},
		{
			MethodName: "RetrieveCart",
			Handler:    _CtmItoController_RetrieveCart_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _CtmItoController_Update_Handler,
		},
		{
			MethodName: "UpdateAddr",
			Handler:    _CtmItoController_UpdateAddr_Handler,
		},
		{
			MethodName: "UpdateCart",
			Handler:    _CtmItoController_UpdateCart_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "customer_ito.proto",
}
