// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.19.4
// source: customer_ito.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CtmBaseDestroyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CtmBaseDestroyResponse) Reset() {
	*x = CtmBaseDestroyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmBaseDestroyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmBaseDestroyResponse) ProtoMessage() {}

func (x *CtmBaseDestroyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmBaseDestroyResponse.ProtoReflect.Descriptor instead.
func (*CtmBaseDestroyResponse) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{0}
}

type CtmAddrDestroyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CtmAddrDestroyResponse) Reset() {
	*x = CtmAddrDestroyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmAddrDestroyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmAddrDestroyResponse) ProtoMessage() {}

func (x *CtmAddrDestroyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmAddrDestroyResponse.ProtoReflect.Descriptor instead.
func (*CtmAddrDestroyResponse) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{1}
}

type CtmCartDestroyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CtmCartDestroyResponse) Reset() {
	*x = CtmCartDestroyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmCartDestroyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmCartDestroyResponse) ProtoMessage() {}

func (x *CtmCartDestroyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmCartDestroyResponse.ProtoReflect.Descriptor instead.
func (*CtmCartDestroyResponse) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{2}
}

type CtmAddrCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Filters        string  `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
	Province       string  `protobuf:"bytes,3,opt,name=province,proto3" json:"province,omitempty"`
	City           string  `protobuf:"bytes,4,opt,name=city,proto3" json:"city,omitempty"`
	District       string  `protobuf:"bytes,5,opt,name=district,proto3" json:"district,omitempty"`
	AddrDetail     string  `protobuf:"bytes,6,opt,name=addr_detail,json=addrDetail,proto3" json:"addr_detail,omitempty"`
	AddrTag        *string `protobuf:"bytes,7,opt,name=addr_tag,json=addrTag,proto3,oneof" json:"addr_tag,omitempty"`
	ZipCode        *string `protobuf:"bytes,8,opt,name=zip_code,json=zipCode,proto3,oneof" json:"zip_code,omitempty"`
	IsDefault      bool    `protobuf:"varint,9,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty"`
	Receiver       string  `protobuf:"bytes,10,opt,name=receiver,proto3" json:"receiver,omitempty"`
	ReceiverMobile string  `protobuf:"bytes,11,opt,name=receiver_mobile,json=receiverMobile,proto3" json:"receiver_mobile,omitempty"`
	Ctm            int64   `protobuf:"varint,12,opt,name=ctm,proto3" json:"ctm,omitempty"`
}

func (x *CtmAddrCreateRequest) Reset() {
	*x = CtmAddrCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmAddrCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmAddrCreateRequest) ProtoMessage() {}

func (x *CtmAddrCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmAddrCreateRequest.ProtoReflect.Descriptor instead.
func (*CtmAddrCreateRequest) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{3}
}

func (x *CtmAddrCreateRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CtmAddrCreateRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *CtmAddrCreateRequest) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *CtmAddrCreateRequest) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *CtmAddrCreateRequest) GetDistrict() string {
	if x != nil {
		return x.District
	}
	return ""
}

func (x *CtmAddrCreateRequest) GetAddrDetail() string {
	if x != nil {
		return x.AddrDetail
	}
	return ""
}

func (x *CtmAddrCreateRequest) GetAddrTag() string {
	if x != nil && x.AddrTag != nil {
		return *x.AddrTag
	}
	return ""
}

func (x *CtmAddrCreateRequest) GetZipCode() string {
	if x != nil && x.ZipCode != nil {
		return *x.ZipCode
	}
	return ""
}

func (x *CtmAddrCreateRequest) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

func (x *CtmAddrCreateRequest) GetReceiver() string {
	if x != nil {
		return x.Receiver
	}
	return ""
}

func (x *CtmAddrCreateRequest) GetReceiverMobile() string {
	if x != nil {
		return x.ReceiverMobile
	}
	return ""
}

func (x *CtmAddrCreateRequest) GetCtm() int64 {
	if x != nil {
		return x.Ctm
	}
	return 0
}

type CtmAddrDestroyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CtmAddrDestroyRequest) Reset() {
	*x = CtmAddrDestroyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmAddrDestroyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmAddrDestroyRequest) ProtoMessage() {}

func (x *CtmAddrDestroyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmAddrDestroyRequest.ProtoReflect.Descriptor instead.
func (*CtmAddrDestroyRequest) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{4}
}

func (x *CtmAddrDestroyRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CtmAddrListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters string `protobuf:"bytes,1,opt,name=filters,proto3" json:"filters,omitempty"`
}

func (x *CtmAddrListRequest) Reset() {
	*x = CtmAddrListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmAddrListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmAddrListRequest) ProtoMessage() {}

func (x *CtmAddrListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmAddrListRequest.ProtoReflect.Descriptor instead.
func (*CtmAddrListRequest) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{5}
}

func (x *CtmAddrListRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

type CtmAddrListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*CtmAddrResponse `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Count   int32              `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *CtmAddrListResponse) Reset() {
	*x = CtmAddrListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmAddrListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmAddrListResponse) ProtoMessage() {}

func (x *CtmAddrListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmAddrListResponse.ProtoReflect.Descriptor instead.
func (*CtmAddrListResponse) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{6}
}

func (x *CtmAddrListResponse) GetResults() []*CtmAddrResponse {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *CtmAddrListResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type CtmAddrResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreateTime     string  `protobuf:"bytes,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime     string  `protobuf:"bytes,3,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	Province       string  `protobuf:"bytes,4,opt,name=province,proto3" json:"province,omitempty"`
	City           string  `protobuf:"bytes,5,opt,name=city,proto3" json:"city,omitempty"`
	District       string  `protobuf:"bytes,6,opt,name=district,proto3" json:"district,omitempty"`
	AddrDetail     string  `protobuf:"bytes,7,opt,name=addr_detail,json=addrDetail,proto3" json:"addr_detail,omitempty"`
	AddrTag        *string `protobuf:"bytes,8,opt,name=addr_tag,json=addrTag,proto3,oneof" json:"addr_tag,omitempty"`
	ZipCode        *string `protobuf:"bytes,9,opt,name=zip_code,json=zipCode,proto3,oneof" json:"zip_code,omitempty"`
	IsDefault      bool    `protobuf:"varint,10,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty"`
	Receiver       string  `protobuf:"bytes,11,opt,name=receiver,proto3" json:"receiver,omitempty"`
	ReceiverMobile string  `protobuf:"bytes,12,opt,name=receiver_mobile,json=receiverMobile,proto3" json:"receiver_mobile,omitempty"`
	Ctm            int64   `protobuf:"varint,13,opt,name=ctm,proto3" json:"ctm,omitempty"`
}

func (x *CtmAddrResponse) Reset() {
	*x = CtmAddrResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmAddrResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmAddrResponse) ProtoMessage() {}

func (x *CtmAddrResponse) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmAddrResponse.ProtoReflect.Descriptor instead.
func (*CtmAddrResponse) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{7}
}

func (x *CtmAddrResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CtmAddrResponse) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *CtmAddrResponse) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *CtmAddrResponse) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *CtmAddrResponse) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *CtmAddrResponse) GetDistrict() string {
	if x != nil {
		return x.District
	}
	return ""
}

func (x *CtmAddrResponse) GetAddrDetail() string {
	if x != nil {
		return x.AddrDetail
	}
	return ""
}

func (x *CtmAddrResponse) GetAddrTag() string {
	if x != nil && x.AddrTag != nil {
		return *x.AddrTag
	}
	return ""
}

func (x *CtmAddrResponse) GetZipCode() string {
	if x != nil && x.ZipCode != nil {
		return *x.ZipCode
	}
	return ""
}

func (x *CtmAddrResponse) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

func (x *CtmAddrResponse) GetReceiver() string {
	if x != nil {
		return x.Receiver
	}
	return ""
}

func (x *CtmAddrResponse) GetReceiverMobile() string {
	if x != nil {
		return x.ReceiverMobile
	}
	return ""
}

func (x *CtmAddrResponse) GetCtm() int64 {
	if x != nil {
		return x.Ctm
	}
	return 0
}

type CtmAddrRetrieveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CtmAddrRetrieveRequest) Reset() {
	*x = CtmAddrRetrieveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmAddrRetrieveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmAddrRetrieveRequest) ProtoMessage() {}

func (x *CtmAddrRetrieveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmAddrRetrieveRequest.ProtoReflect.Descriptor instead.
func (*CtmAddrRetrieveRequest) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{8}
}

func (x *CtmAddrRetrieveRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CtmAddrUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Filters              string   `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
	XPartialUpdateFields []string `protobuf:"bytes,3,rep,name=_partial_update_fields,json=PartialUpdateFields,proto3" json:"_partial_update_fields,omitempty"`
	Province             string   `protobuf:"bytes,4,opt,name=province,proto3" json:"province,omitempty"`
	City                 string   `protobuf:"bytes,5,opt,name=city,proto3" json:"city,omitempty"`
	District             string   `protobuf:"bytes,6,opt,name=district,proto3" json:"district,omitempty"`
	AddrDetail           string   `protobuf:"bytes,7,opt,name=addr_detail,json=addrDetail,proto3" json:"addr_detail,omitempty"`
	AddrTag              *string  `protobuf:"bytes,8,opt,name=addr_tag,json=addrTag,proto3,oneof" json:"addr_tag,omitempty"`
	ZipCode              *string  `protobuf:"bytes,9,opt,name=zip_code,json=zipCode,proto3,oneof" json:"zip_code,omitempty"`
	IsDefault            bool     `protobuf:"varint,10,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty"`
	Receiver             string   `protobuf:"bytes,11,opt,name=receiver,proto3" json:"receiver,omitempty"`
	ReceiverMobile       string   `protobuf:"bytes,12,opt,name=receiver_mobile,json=receiverMobile,proto3" json:"receiver_mobile,omitempty"`
	Ctm                  int64    `protobuf:"varint,13,opt,name=ctm,proto3" json:"ctm,omitempty"`
}

func (x *CtmAddrUpdateRequest) Reset() {
	*x = CtmAddrUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmAddrUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmAddrUpdateRequest) ProtoMessage() {}

func (x *CtmAddrUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmAddrUpdateRequest.ProtoReflect.Descriptor instead.
func (*CtmAddrUpdateRequest) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{9}
}

func (x *CtmAddrUpdateRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CtmAddrUpdateRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *CtmAddrUpdateRequest) GetXPartialUpdateFields() []string {
	if x != nil {
		return x.XPartialUpdateFields
	}
	return nil
}

func (x *CtmAddrUpdateRequest) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *CtmAddrUpdateRequest) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *CtmAddrUpdateRequest) GetDistrict() string {
	if x != nil {
		return x.District
	}
	return ""
}

func (x *CtmAddrUpdateRequest) GetAddrDetail() string {
	if x != nil {
		return x.AddrDetail
	}
	return ""
}

func (x *CtmAddrUpdateRequest) GetAddrTag() string {
	if x != nil && x.AddrTag != nil {
		return *x.AddrTag
	}
	return ""
}

func (x *CtmAddrUpdateRequest) GetZipCode() string {
	if x != nil && x.ZipCode != nil {
		return *x.ZipCode
	}
	return ""
}

func (x *CtmAddrUpdateRequest) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

func (x *CtmAddrUpdateRequest) GetReceiver() string {
	if x != nil {
		return x.Receiver
	}
	return ""
}

func (x *CtmAddrUpdateRequest) GetReceiverMobile() string {
	if x != nil {
		return x.ReceiverMobile
	}
	return ""
}

func (x *CtmAddrUpdateRequest) GetCtm() int64 {
	if x != nil {
		return x.Ctm
	}
	return 0
}

type CtmBaseDestroyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MpOpenId string `protobuf:"bytes,1,opt,name=mp_openId,json=mpOpenId,proto3" json:"mp_openId,omitempty"`
}

func (x *CtmBaseDestroyRequest) Reset() {
	*x = CtmBaseDestroyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmBaseDestroyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmBaseDestroyRequest) ProtoMessage() {}

func (x *CtmBaseDestroyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmBaseDestroyRequest.ProtoReflect.Descriptor instead.
func (*CtmBaseDestroyRequest) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{10}
}

func (x *CtmBaseDestroyRequest) GetMpOpenId() string {
	if x != nil {
		return x.MpOpenId
	}
	return ""
}

type CtmBaseListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Filters      string  `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
	Avatar       *string `protobuf:"bytes,3,opt,name=avatar,proto3,oneof" json:"avatar,omitempty"`
	Name         *string `protobuf:"bytes,4,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Mobile       *string `protobuf:"bytes,5,opt,name=mobile,proto3,oneof" json:"mobile,omitempty"`
	Gender       *int32  `protobuf:"varint,6,opt,name=gender,proto3,oneof" json:"gender,omitempty"`
	Birthday     *string `protobuf:"bytes,7,opt,name=birthday,proto3,oneof" json:"birthday,omitempty"`
	Describe     *string `protobuf:"bytes,8,opt,name=describe,proto3,oneof" json:"describe,omitempty"`
	DwMemId      *string `protobuf:"bytes,9,opt,name=dw_memId,json=dwMemId,proto3,oneof" json:"dw_memId,omitempty"`
	PlatformName *string `protobuf:"bytes,10,opt,name=platform_name,json=platformName,proto3,oneof" json:"platform_name,omitempty"`
	PlatUnionId  *string `protobuf:"bytes,11,opt,name=plat_unionId,json=platUnionId,proto3,oneof" json:"plat_unionId,omitempty"`
	MpOpenId     string  `protobuf:"bytes,12,opt,name=mp_openId,json=mpOpenId,proto3" json:"mp_openId,omitempty"`
	Nickname     *string `protobuf:"bytes,13,opt,name=nickname,proto3,oneof" json:"nickname,omitempty"`
	ChannelCode  *string `protobuf:"bytes,14,opt,name=channel_code,json=channelCode,proto3,oneof" json:"channel_code,omitempty"`
}

func (x *CtmBaseListRequest) Reset() {
	*x = CtmBaseListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmBaseListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmBaseListRequest) ProtoMessage() {}

func (x *CtmBaseListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmBaseListRequest.ProtoReflect.Descriptor instead.
func (*CtmBaseListRequest) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{11}
}

func (x *CtmBaseListRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CtmBaseListRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *CtmBaseListRequest) GetAvatar() string {
	if x != nil && x.Avatar != nil {
		return *x.Avatar
	}
	return ""
}

func (x *CtmBaseListRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CtmBaseListRequest) GetMobile() string {
	if x != nil && x.Mobile != nil {
		return *x.Mobile
	}
	return ""
}

func (x *CtmBaseListRequest) GetGender() int32 {
	if x != nil && x.Gender != nil {
		return *x.Gender
	}
	return 0
}

func (x *CtmBaseListRequest) GetBirthday() string {
	if x != nil && x.Birthday != nil {
		return *x.Birthday
	}
	return ""
}

func (x *CtmBaseListRequest) GetDescribe() string {
	if x != nil && x.Describe != nil {
		return *x.Describe
	}
	return ""
}

func (x *CtmBaseListRequest) GetDwMemId() string {
	if x != nil && x.DwMemId != nil {
		return *x.DwMemId
	}
	return ""
}

func (x *CtmBaseListRequest) GetPlatformName() string {
	if x != nil && x.PlatformName != nil {
		return *x.PlatformName
	}
	return ""
}

func (x *CtmBaseListRequest) GetPlatUnionId() string {
	if x != nil && x.PlatUnionId != nil {
		return *x.PlatUnionId
	}
	return ""
}

func (x *CtmBaseListRequest) GetMpOpenId() string {
	if x != nil {
		return x.MpOpenId
	}
	return ""
}

func (x *CtmBaseListRequest) GetNickname() string {
	if x != nil && x.Nickname != nil {
		return *x.Nickname
	}
	return ""
}

func (x *CtmBaseListRequest) GetChannelCode() string {
	if x != nil && x.ChannelCode != nil {
		return *x.ChannelCode
	}
	return ""
}

type CtmBaseListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*CtmBaseResponse `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Count   int32              `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *CtmBaseListResponse) Reset() {
	*x = CtmBaseListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmBaseListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmBaseListResponse) ProtoMessage() {}

func (x *CtmBaseListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmBaseListResponse.ProtoReflect.Descriptor instead.
func (*CtmBaseListResponse) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{12}
}

func (x *CtmBaseListResponse) GetResults() []*CtmBaseResponse {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *CtmBaseListResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type CtmBasePartialUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Filters              string   `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
	XPartialUpdateFields []string `protobuf:"bytes,3,rep,name=_partial_update_fields,json=PartialUpdateFields,proto3" json:"_partial_update_fields,omitempty"`
	Avatar               *string  `protobuf:"bytes,4,opt,name=avatar,proto3,oneof" json:"avatar,omitempty"`
	Name                 *string  `protobuf:"bytes,5,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Mobile               *string  `protobuf:"bytes,6,opt,name=mobile,proto3,oneof" json:"mobile,omitempty"`
	Gender               *int32   `protobuf:"varint,7,opt,name=gender,proto3,oneof" json:"gender,omitempty"`
	Birthday             *string  `protobuf:"bytes,8,opt,name=birthday,proto3,oneof" json:"birthday,omitempty"`
	Describe             *string  `protobuf:"bytes,9,opt,name=describe,proto3,oneof" json:"describe,omitempty"`
	DwMemId              *string  `protobuf:"bytes,10,opt,name=dw_memId,json=dwMemId,proto3,oneof" json:"dw_memId,omitempty"`
	PlatformName         *string  `protobuf:"bytes,11,opt,name=platform_name,json=platformName,proto3,oneof" json:"platform_name,omitempty"`
	PlatUnionId          *string  `protobuf:"bytes,12,opt,name=plat_unionId,json=platUnionId,proto3,oneof" json:"plat_unionId,omitempty"`
	MpOpenId             string   `protobuf:"bytes,13,opt,name=mp_openId,json=mpOpenId,proto3" json:"mp_openId,omitempty"`
	Nickname             *string  `protobuf:"bytes,14,opt,name=nickname,proto3,oneof" json:"nickname,omitempty"`
	ChannelCode          *string  `protobuf:"bytes,15,opt,name=channel_code,json=channelCode,proto3,oneof" json:"channel_code,omitempty"`
}

func (x *CtmBasePartialUpdateRequest) Reset() {
	*x = CtmBasePartialUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmBasePartialUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmBasePartialUpdateRequest) ProtoMessage() {}

func (x *CtmBasePartialUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmBasePartialUpdateRequest.ProtoReflect.Descriptor instead.
func (*CtmBasePartialUpdateRequest) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{13}
}

func (x *CtmBasePartialUpdateRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CtmBasePartialUpdateRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *CtmBasePartialUpdateRequest) GetXPartialUpdateFields() []string {
	if x != nil {
		return x.XPartialUpdateFields
	}
	return nil
}

func (x *CtmBasePartialUpdateRequest) GetAvatar() string {
	if x != nil && x.Avatar != nil {
		return *x.Avatar
	}
	return ""
}

func (x *CtmBasePartialUpdateRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CtmBasePartialUpdateRequest) GetMobile() string {
	if x != nil && x.Mobile != nil {
		return *x.Mobile
	}
	return ""
}

func (x *CtmBasePartialUpdateRequest) GetGender() int32 {
	if x != nil && x.Gender != nil {
		return *x.Gender
	}
	return 0
}

func (x *CtmBasePartialUpdateRequest) GetBirthday() string {
	if x != nil && x.Birthday != nil {
		return *x.Birthday
	}
	return ""
}

func (x *CtmBasePartialUpdateRequest) GetDescribe() string {
	if x != nil && x.Describe != nil {
		return *x.Describe
	}
	return ""
}

func (x *CtmBasePartialUpdateRequest) GetDwMemId() string {
	if x != nil && x.DwMemId != nil {
		return *x.DwMemId
	}
	return ""
}

func (x *CtmBasePartialUpdateRequest) GetPlatformName() string {
	if x != nil && x.PlatformName != nil {
		return *x.PlatformName
	}
	return ""
}

func (x *CtmBasePartialUpdateRequest) GetPlatUnionId() string {
	if x != nil && x.PlatUnionId != nil {
		return *x.PlatUnionId
	}
	return ""
}

func (x *CtmBasePartialUpdateRequest) GetMpOpenId() string {
	if x != nil {
		return x.MpOpenId
	}
	return ""
}

func (x *CtmBasePartialUpdateRequest) GetNickname() string {
	if x != nil && x.Nickname != nil {
		return *x.Nickname
	}
	return ""
}

func (x *CtmBasePartialUpdateRequest) GetChannelCode() string {
	if x != nil && x.ChannelCode != nil {
		return *x.ChannelCode
	}
	return ""
}

type CtmBaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Filters      string  `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
	Avatar       *string `protobuf:"bytes,3,opt,name=avatar,proto3,oneof" json:"avatar,omitempty"`
	Name         *string `protobuf:"bytes,4,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Mobile       *string `protobuf:"bytes,5,opt,name=mobile,proto3,oneof" json:"mobile,omitempty"`
	Gender       *int32  `protobuf:"varint,6,opt,name=gender,proto3,oneof" json:"gender,omitempty"`
	Birthday     *string `protobuf:"bytes,7,opt,name=birthday,proto3,oneof" json:"birthday,omitempty"`
	Describe     *string `protobuf:"bytes,8,opt,name=describe,proto3,oneof" json:"describe,omitempty"`
	DwMemId      *string `protobuf:"bytes,9,opt,name=dw_memId,json=dwMemId,proto3,oneof" json:"dw_memId,omitempty"`
	PlatformName *string `protobuf:"bytes,10,opt,name=platform_name,json=platformName,proto3,oneof" json:"platform_name,omitempty"`
	PlatUnionId  *string `protobuf:"bytes,11,opt,name=plat_unionId,json=platUnionId,proto3,oneof" json:"plat_unionId,omitempty"`
	MpOpenId     string  `protobuf:"bytes,12,opt,name=mp_openId,json=mpOpenId,proto3" json:"mp_openId,omitempty"`
	Nickname     *string `protobuf:"bytes,13,opt,name=nickname,proto3,oneof" json:"nickname,omitempty"`
	ChannelCode  *string `protobuf:"bytes,14,opt,name=channel_code,json=channelCode,proto3,oneof" json:"channel_code,omitempty"`
}

func (x *CtmBaseRequest) Reset() {
	*x = CtmBaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmBaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmBaseRequest) ProtoMessage() {}

func (x *CtmBaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmBaseRequest.ProtoReflect.Descriptor instead.
func (*CtmBaseRequest) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{14}
}

func (x *CtmBaseRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CtmBaseRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *CtmBaseRequest) GetAvatar() string {
	if x != nil && x.Avatar != nil {
		return *x.Avatar
	}
	return ""
}

func (x *CtmBaseRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CtmBaseRequest) GetMobile() string {
	if x != nil && x.Mobile != nil {
		return *x.Mobile
	}
	return ""
}

func (x *CtmBaseRequest) GetGender() int32 {
	if x != nil && x.Gender != nil {
		return *x.Gender
	}
	return 0
}

func (x *CtmBaseRequest) GetBirthday() string {
	if x != nil && x.Birthday != nil {
		return *x.Birthday
	}
	return ""
}

func (x *CtmBaseRequest) GetDescribe() string {
	if x != nil && x.Describe != nil {
		return *x.Describe
	}
	return ""
}

func (x *CtmBaseRequest) GetDwMemId() string {
	if x != nil && x.DwMemId != nil {
		return *x.DwMemId
	}
	return ""
}

func (x *CtmBaseRequest) GetPlatformName() string {
	if x != nil && x.PlatformName != nil {
		return *x.PlatformName
	}
	return ""
}

func (x *CtmBaseRequest) GetPlatUnionId() string {
	if x != nil && x.PlatUnionId != nil {
		return *x.PlatUnionId
	}
	return ""
}

func (x *CtmBaseRequest) GetMpOpenId() string {
	if x != nil {
		return x.MpOpenId
	}
	return ""
}

func (x *CtmBaseRequest) GetNickname() string {
	if x != nil && x.Nickname != nil {
		return *x.Nickname
	}
	return ""
}

func (x *CtmBaseRequest) GetChannelCode() string {
	if x != nil && x.ChannelCode != nil {
		return *x.ChannelCode
	}
	return ""
}

type CtmBaseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int32              `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	GenderName   string             `protobuf:"bytes,2,opt,name=gender_name,json=genderName,proto3" json:"gender_name,omitempty"`
	CtmAddresses []*CtmAddrResponse `protobuf:"bytes,3,rep,name=ctm_addresses,json=ctmAddresses,proto3" json:"ctm_addresses,omitempty"`
	CreateTime   string             `protobuf:"bytes,4,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime   string             `protobuf:"bytes,5,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	Avatar       *string            `protobuf:"bytes,6,opt,name=avatar,proto3,oneof" json:"avatar,omitempty"`
	Name         *string            `protobuf:"bytes,7,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Mobile       *string            `protobuf:"bytes,8,opt,name=mobile,proto3,oneof" json:"mobile,omitempty"`
	Gender       *int32             `protobuf:"varint,9,opt,name=gender,proto3,oneof" json:"gender,omitempty"`
	Birthday     *string            `protobuf:"bytes,10,opt,name=birthday,proto3,oneof" json:"birthday,omitempty"`
	Describe     *string            `protobuf:"bytes,11,opt,name=describe,proto3,oneof" json:"describe,omitempty"`
	DwMemId      *string            `protobuf:"bytes,12,opt,name=dw_memId,json=dwMemId,proto3,oneof" json:"dw_memId,omitempty"`
	PlatformName *string            `protobuf:"bytes,13,opt,name=platform_name,json=platformName,proto3,oneof" json:"platform_name,omitempty"`
	PlatUnionId  *string            `protobuf:"bytes,14,opt,name=plat_unionId,json=platUnionId,proto3,oneof" json:"plat_unionId,omitempty"`
	MpOpenId     string             `protobuf:"bytes,15,opt,name=mp_openId,json=mpOpenId,proto3" json:"mp_openId,omitempty"`
	Nickname     *string            `protobuf:"bytes,16,opt,name=nickname,proto3,oneof" json:"nickname,omitempty"`
	ChannelCode  *string            `protobuf:"bytes,17,opt,name=channel_code,json=channelCode,proto3,oneof" json:"channel_code,omitempty"`
}

func (x *CtmBaseResponse) Reset() {
	*x = CtmBaseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmBaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmBaseResponse) ProtoMessage() {}

func (x *CtmBaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmBaseResponse.ProtoReflect.Descriptor instead.
func (*CtmBaseResponse) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{15}
}

func (x *CtmBaseResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CtmBaseResponse) GetGenderName() string {
	if x != nil {
		return x.GenderName
	}
	return ""
}

func (x *CtmBaseResponse) GetCtmAddresses() []*CtmAddrResponse {
	if x != nil {
		return x.CtmAddresses
	}
	return nil
}

func (x *CtmBaseResponse) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *CtmBaseResponse) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *CtmBaseResponse) GetAvatar() string {
	if x != nil && x.Avatar != nil {
		return *x.Avatar
	}
	return ""
}

func (x *CtmBaseResponse) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CtmBaseResponse) GetMobile() string {
	if x != nil && x.Mobile != nil {
		return *x.Mobile
	}
	return ""
}

func (x *CtmBaseResponse) GetGender() int32 {
	if x != nil && x.Gender != nil {
		return *x.Gender
	}
	return 0
}

func (x *CtmBaseResponse) GetBirthday() string {
	if x != nil && x.Birthday != nil {
		return *x.Birthday
	}
	return ""
}

func (x *CtmBaseResponse) GetDescribe() string {
	if x != nil && x.Describe != nil {
		return *x.Describe
	}
	return ""
}

func (x *CtmBaseResponse) GetDwMemId() string {
	if x != nil && x.DwMemId != nil {
		return *x.DwMemId
	}
	return ""
}

func (x *CtmBaseResponse) GetPlatformName() string {
	if x != nil && x.PlatformName != nil {
		return *x.PlatformName
	}
	return ""
}

func (x *CtmBaseResponse) GetPlatUnionId() string {
	if x != nil && x.PlatUnionId != nil {
		return *x.PlatUnionId
	}
	return ""
}

func (x *CtmBaseResponse) GetMpOpenId() string {
	if x != nil {
		return x.MpOpenId
	}
	return ""
}

func (x *CtmBaseResponse) GetNickname() string {
	if x != nil && x.Nickname != nil {
		return *x.Nickname
	}
	return ""
}

func (x *CtmBaseResponse) GetChannelCode() string {
	if x != nil && x.ChannelCode != nil {
		return *x.ChannelCode
	}
	return ""
}

type CtmBaseRetrieveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MpOpenId string `protobuf:"bytes,1,opt,name=mp_openId,json=mpOpenId,proto3" json:"mp_openId,omitempty"`
}

func (x *CtmBaseRetrieveRequest) Reset() {
	*x = CtmBaseRetrieveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmBaseRetrieveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmBaseRetrieveRequest) ProtoMessage() {}

func (x *CtmBaseRetrieveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmBaseRetrieveRequest.ProtoReflect.Descriptor instead.
func (*CtmBaseRetrieveRequest) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{16}
}

func (x *CtmBaseRetrieveRequest) GetMpOpenId() string {
	if x != nil {
		return x.MpOpenId
	}
	return ""
}

type CtmCartCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Filters    string `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
	Spu        string `protobuf:"bytes,3,opt,name=spu,proto3" json:"spu,omitempty"`
	SkuId      int32  `protobuf:"varint,4,opt,name=sku_id,json=skuId,proto3" json:"sku_id,omitempty"`
	Sku        string `protobuf:"bytes,5,opt,name=sku,proto3" json:"sku,omitempty"`
	OrderNum   int32  `protobuf:"varint,6,opt,name=order_num,json=orderNum,proto3" json:"order_num,omitempty"`
	Price      string `protobuf:"bytes,7,opt,name=price,proto3" json:"price,omitempty"`
	IsSelected bool   `protobuf:"varint,8,opt,name=is_selected,json=isSelected,proto3" json:"is_selected,omitempty"`
	AttrsText  string `protobuf:"bytes,9,opt,name=attrs_text,json=attrsText,proto3" json:"attrs_text,omitempty"`
	Ctm        int64  `protobuf:"varint,10,opt,name=ctm,proto3" json:"ctm,omitempty"`
}

func (x *CtmCartCreateRequest) Reset() {
	*x = CtmCartCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmCartCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmCartCreateRequest) ProtoMessage() {}

func (x *CtmCartCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmCartCreateRequest.ProtoReflect.Descriptor instead.
func (*CtmCartCreateRequest) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{17}
}

func (x *CtmCartCreateRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CtmCartCreateRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *CtmCartCreateRequest) GetSpu() string {
	if x != nil {
		return x.Spu
	}
	return ""
}

func (x *CtmCartCreateRequest) GetSkuId() int32 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

func (x *CtmCartCreateRequest) GetSku() string {
	if x != nil {
		return x.Sku
	}
	return ""
}

func (x *CtmCartCreateRequest) GetOrderNum() int32 {
	if x != nil {
		return x.OrderNum
	}
	return 0
}

func (x *CtmCartCreateRequest) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *CtmCartCreateRequest) GetIsSelected() bool {
	if x != nil {
		return x.IsSelected
	}
	return false
}

func (x *CtmCartCreateRequest) GetAttrsText() string {
	if x != nil {
		return x.AttrsText
	}
	return ""
}

func (x *CtmCartCreateRequest) GetCtm() int64 {
	if x != nil {
		return x.Ctm
	}
	return 0
}

type CtmCartDestroyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CtmCartDestroyRequest) Reset() {
	*x = CtmCartDestroyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmCartDestroyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmCartDestroyRequest) ProtoMessage() {}

func (x *CtmCartDestroyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmCartDestroyRequest.ProtoReflect.Descriptor instead.
func (*CtmCartDestroyRequest) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{18}
}

func (x *CtmCartDestroyRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CtmCartListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters string `protobuf:"bytes,1,opt,name=filters,proto3" json:"filters,omitempty"`
}

func (x *CtmCartListRequest) Reset() {
	*x = CtmCartListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmCartListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmCartListRequest) ProtoMessage() {}

func (x *CtmCartListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmCartListRequest.ProtoReflect.Descriptor instead.
func (*CtmCartListRequest) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{19}
}

func (x *CtmCartListRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

type CtmCartListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*CtmCartResponse `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Count   int32              `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *CtmCartListResponse) Reset() {
	*x = CtmCartListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmCartListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmCartListResponse) ProtoMessage() {}

func (x *CtmCartListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmCartListResponse.ProtoReflect.Descriptor instead.
func (*CtmCartListResponse) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{20}
}

func (x *CtmCartListResponse) GetResults() []*CtmCartResponse {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *CtmCartListResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type CtmCartResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreateTime string `protobuf:"bytes,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime string `protobuf:"bytes,3,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	Spu        string `protobuf:"bytes,4,opt,name=spu,proto3" json:"spu,omitempty"`
	SkuId      int32  `protobuf:"varint,5,opt,name=sku_id,json=skuId,proto3" json:"sku_id,omitempty"`
	Sku        string `protobuf:"bytes,6,opt,name=sku,proto3" json:"sku,omitempty"`
	OrderNum   int32  `protobuf:"varint,7,opt,name=order_num,json=orderNum,proto3" json:"order_num,omitempty"`
	Price      string `protobuf:"bytes,8,opt,name=price,proto3" json:"price,omitempty"`
	IsSelected bool   `protobuf:"varint,9,opt,name=is_selected,json=isSelected,proto3" json:"is_selected,omitempty"`
	AttrsText  string `protobuf:"bytes,10,opt,name=attrs_text,json=attrsText,proto3" json:"attrs_text,omitempty"`
	Ctm        int64  `protobuf:"varint,11,opt,name=ctm,proto3" json:"ctm,omitempty"`
}

func (x *CtmCartResponse) Reset() {
	*x = CtmCartResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmCartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmCartResponse) ProtoMessage() {}

func (x *CtmCartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmCartResponse.ProtoReflect.Descriptor instead.
func (*CtmCartResponse) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{21}
}

func (x *CtmCartResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CtmCartResponse) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *CtmCartResponse) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *CtmCartResponse) GetSpu() string {
	if x != nil {
		return x.Spu
	}
	return ""
}

func (x *CtmCartResponse) GetSkuId() int32 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

func (x *CtmCartResponse) GetSku() string {
	if x != nil {
		return x.Sku
	}
	return ""
}

func (x *CtmCartResponse) GetOrderNum() int32 {
	if x != nil {
		return x.OrderNum
	}
	return 0
}

func (x *CtmCartResponse) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *CtmCartResponse) GetIsSelected() bool {
	if x != nil {
		return x.IsSelected
	}
	return false
}

func (x *CtmCartResponse) GetAttrsText() string {
	if x != nil {
		return x.AttrsText
	}
	return ""
}

func (x *CtmCartResponse) GetCtm() int64 {
	if x != nil {
		return x.Ctm
	}
	return 0
}

type CtmCartRetrieveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CtmCartRetrieveRequest) Reset() {
	*x = CtmCartRetrieveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmCartRetrieveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmCartRetrieveRequest) ProtoMessage() {}

func (x *CtmCartRetrieveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmCartRetrieveRequest.ProtoReflect.Descriptor instead.
func (*CtmCartRetrieveRequest) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{22}
}

func (x *CtmCartRetrieveRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CtmCartSelectedAllChangeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ctm        int64 `protobuf:"varint,1,opt,name=ctm,proto3" json:"ctm,omitempty"`
	IsSelected bool  `protobuf:"varint,2,opt,name=is_selected,json=isSelected,proto3" json:"is_selected,omitempty"`
}

func (x *CtmCartSelectedAllChangeRequest) Reset() {
	*x = CtmCartSelectedAllChangeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmCartSelectedAllChangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmCartSelectedAllChangeRequest) ProtoMessage() {}

func (x *CtmCartSelectedAllChangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmCartSelectedAllChangeRequest.ProtoReflect.Descriptor instead.
func (*CtmCartSelectedAllChangeRequest) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{23}
}

func (x *CtmCartSelectedAllChangeRequest) GetCtm() int64 {
	if x != nil {
		return x.Ctm
	}
	return 0
}

func (x *CtmCartSelectedAllChangeRequest) GetIsSelected() bool {
	if x != nil {
		return x.IsSelected
	}
	return false
}

type CtmCartUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Filters              string   `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
	XPartialUpdateFields []string `protobuf:"bytes,3,rep,name=_partial_update_fields,json=PartialUpdateFields,proto3" json:"_partial_update_fields,omitempty"`
	Spu                  string   `protobuf:"bytes,4,opt,name=spu,proto3" json:"spu,omitempty"`
	SkuId                int32    `protobuf:"varint,5,opt,name=sku_id,json=skuId,proto3" json:"sku_id,omitempty"`
	Sku                  string   `protobuf:"bytes,6,opt,name=sku,proto3" json:"sku,omitempty"`
	OrderNum             int32    `protobuf:"varint,7,opt,name=order_num,json=orderNum,proto3" json:"order_num,omitempty"`
	Price                string   `protobuf:"bytes,8,opt,name=price,proto3" json:"price,omitempty"`
	IsSelected           bool     `protobuf:"varint,9,opt,name=is_selected,json=isSelected,proto3" json:"is_selected,omitempty"`
	AttrsText            string   `protobuf:"bytes,10,opt,name=attrs_text,json=attrsText,proto3" json:"attrs_text,omitempty"`
	Ctm                  int64    `protobuf:"varint,11,opt,name=ctm,proto3" json:"ctm,omitempty"`
}

func (x *CtmCartUpdateRequest) Reset() {
	*x = CtmCartUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmCartUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmCartUpdateRequest) ProtoMessage() {}

func (x *CtmCartUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmCartUpdateRequest.ProtoReflect.Descriptor instead.
func (*CtmCartUpdateRequest) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{24}
}

func (x *CtmCartUpdateRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CtmCartUpdateRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *CtmCartUpdateRequest) GetXPartialUpdateFields() []string {
	if x != nil {
		return x.XPartialUpdateFields
	}
	return nil
}

func (x *CtmCartUpdateRequest) GetSpu() string {
	if x != nil {
		return x.Spu
	}
	return ""
}

func (x *CtmCartUpdateRequest) GetSkuId() int32 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

func (x *CtmCartUpdateRequest) GetSku() string {
	if x != nil {
		return x.Sku
	}
	return ""
}

func (x *CtmCartUpdateRequest) GetOrderNum() int32 {
	if x != nil {
		return x.OrderNum
	}
	return 0
}

func (x *CtmCartUpdateRequest) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *CtmCartUpdateRequest) GetIsSelected() bool {
	if x != nil {
		return x.IsSelected
	}
	return false
}

func (x *CtmCartUpdateRequest) GetAttrsText() string {
	if x != nil {
		return x.AttrsText
	}
	return ""
}

func (x *CtmCartUpdateRequest) GetCtm() int64 {
	if x != nil {
		return x.Ctm
	}
	return 0
}

type CtmDefaultAddrRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CtmDefaultAddrRequest) Reset() {
	*x = CtmDefaultAddrRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmDefaultAddrRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmDefaultAddrRequest) ProtoMessage() {}

func (x *CtmDefaultAddrRequest) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmDefaultAddrRequest.ProtoReflect.Descriptor instead.
func (*CtmDefaultAddrRequest) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{25}
}

type CtmItoChangeSelectedAllCartResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Affected int32 `protobuf:"varint,1,opt,name=affected,proto3" json:"affected,omitempty"`
}

func (x *CtmItoChangeSelectedAllCartResponse) Reset() {
	*x = CtmItoChangeSelectedAllCartResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmItoChangeSelectedAllCartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmItoChangeSelectedAllCartResponse) ProtoMessage() {}

func (x *CtmItoChangeSelectedAllCartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmItoChangeSelectedAllCartResponse.ProtoReflect.Descriptor instead.
func (*CtmItoChangeSelectedAllCartResponse) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{26}
}

func (x *CtmItoChangeSelectedAllCartResponse) GetAffected() int32 {
	if x != nil {
		return x.Affected
	}
	return 0
}

type CtmItoDefaultAddrResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CtmItoDefaultAddrResponse) Reset() {
	*x = CtmItoDefaultAddrResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customer_ito_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmItoDefaultAddrResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmItoDefaultAddrResponse) ProtoMessage() {}

func (x *CtmItoDefaultAddrResponse) ProtoReflect() protoreflect.Message {
	mi := &file_customer_ito_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmItoDefaultAddrResponse.ProtoReflect.Descriptor instead.
func (*CtmItoDefaultAddrResponse) Descriptor() ([]byte, []int) {
	return file_customer_ito_proto_rawDescGZIP(), []int{27}
}

func (x *CtmItoDefaultAddrResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

var File_customer_ito_proto protoreflect.FileDescriptor

var file_customer_ito_proto_rawDesc = []byte{
	0x0a, 0x12, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x69, 0x74, 0x6f, 0x22, 0x18, 0x0a, 0x16, 0x43, 0x74, 0x6d, 0x42, 0x61, 0x73, 0x65, 0x44, 0x65,
	0x73, 0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x18, 0x0a,
	0x16, 0x43, 0x74, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x18, 0x0a, 0x16, 0x43, 0x74, 0x6d, 0x43, 0x61,
	0x72, 0x74, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0xfd, 0x02, 0x0a, 0x14, 0x43, 0x74, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x64, 0x64, 0x72, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x64, 0x64, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x12, 0x1e, 0x0a, 0x08, 0x61, 0x64, 0x64, 0x72, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x54, 0x61, 0x67, 0x88, 0x01,
	0x01, 0x12, 0x1e, 0x0a, 0x08, 0x7a, 0x69, 0x70, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x07, 0x7a, 0x69, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x12, 0x27, 0x0a, 0x0f,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x4d,
	0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x74, 0x6d, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x63, 0x74, 0x6d, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x5f, 0x74, 0x61, 0x67, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x7a, 0x69, 0x70, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x22, 0x27, 0x0a, 0x15, 0x43, 0x74, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x44, 0x65, 0x73, 0x74,
	0x72, 0x6f, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2e, 0x0a, 0x12, 0x43, 0x74,
	0x6d, 0x41, 0x64, 0x64, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x22, 0x75, 0x0a, 0x13, 0x43, 0x74,
	0x6d, 0x41, 0x64, 0x64, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x48, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69,
	0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0xa0, 0x03, 0x0a, 0x0f, 0x43, 0x74, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x74, 0x72,
	0x69, 0x63, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x73, 0x74, 0x72,
	0x69, 0x63, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x64, 0x64, 0x72, 0x5f, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x64, 0x64, 0x72, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x12, 0x1e, 0x0a, 0x08, 0x61, 0x64, 0x64, 0x72, 0x5f, 0x74, 0x61, 0x67,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x54, 0x61,
	0x67, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x7a, 0x69, 0x70, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x07, 0x7a, 0x69, 0x70, 0x43, 0x6f, 0x64,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x12,
	0x27, 0x0a, 0x0f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x62, 0x69,
	0x6c, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x74, 0x6d, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x63, 0x74, 0x6d, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x5f, 0x74, 0x61, 0x67, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x7a, 0x69, 0x70, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x22, 0x28, 0x0a, 0x16, 0x43, 0x74, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x52,
	0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0xb2,
	0x03, 0x0a, 0x14, 0x43, 0x74, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x73, 0x12, 0x33, 0x0a, 0x16, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x13, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e,
	0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e,
	0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69,
	0x63, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69,
	0x63, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x64, 0x64, 0x72, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x64, 0x64, 0x72, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x12, 0x1e, 0x0a, 0x08, 0x61, 0x64, 0x64, 0x72, 0x5f, 0x74, 0x61, 0x67, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x54, 0x61, 0x67,
	0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x7a, 0x69, 0x70, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x07, 0x7a, 0x69, 0x70, 0x43, 0x6f, 0x64, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x12, 0x27,
	0x0a, 0x0f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x62, 0x69, 0x6c,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x74, 0x6d, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x63, 0x74, 0x6d, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x5f, 0x74, 0x61, 0x67, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x7a, 0x69, 0x70, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x22, 0x34, 0x0a, 0x15, 0x43, 0x74, 0x6d, 0x42, 0x61, 0x73, 0x65, 0x44, 0x65,
	0x73, 0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x6d, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6d, 0x70, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x22, 0xda, 0x04, 0x0a, 0x12, 0x43, 0x74,
	0x6d, 0x42, 0x61, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x1b, 0x0a, 0x06, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x1b, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x02, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a,
	0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x48, 0x03, 0x52,
	0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x62, 0x69,
	0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x08,
	0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52,
	0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08,
	0x64, 0x77, 0x5f, 0x6d, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06,
	0x52, 0x07, 0x64, 0x77, 0x4d, 0x65, 0x6d, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x4e,
	0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x5f, 0x75,
	0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x0b,
	0x70, 0x6c, 0x61, 0x74, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1b,
	0x0a, 0x09, 0x6d, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6d, 0x70, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x08, 0x6e,
	0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52,
	0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x0a, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x64,
	0x65, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x42,
	0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6d, 0x6f, 0x62,
	0x69, 0x6c, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x42, 0x0b,
	0x0a, 0x09, 0x5f, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x42, 0x0b, 0x0a, 0x09, 0x5f,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x64, 0x77, 0x5f,
	0x6d, 0x65, 0x6d, 0x49, 0x64, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x70, 0x6c, 0x61, 0x74,
	0x5f, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6e, 0x69, 0x63,
	0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x75, 0x0a, 0x13, 0x43, 0x74, 0x6d, 0x42, 0x61, 0x73,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a,
	0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43,
	0x74, 0x6d, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x07,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x98, 0x05,
	0x0a, 0x1b, 0x43, 0x74, 0x6d, 0x42, 0x61, 0x73, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x33, 0x0a, 0x16, 0x5f, 0x70, 0x61, 0x72, 0x74,
	0x69, 0x61, 0x6c, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x1b, 0x0a, 0x06,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x02, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x1b, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x03, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08,
	0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04,
	0x52, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a,
	0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x05, 0x52, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1e,
	0x0a, 0x08, 0x64, 0x77, 0x5f, 0x6d, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x06, 0x52, 0x07, 0x64, 0x77, 0x4d, 0x65, 0x6d, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x28,
	0x0a, 0x0d, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x74,
	0x5f, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08,
	0x52, 0x0b, 0x70, 0x6c, 0x61, 0x74, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x88, 0x01, 0x01,
	0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x70, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x26,
	0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x0a, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43,
	0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6d,
	0x6f, 0x62, 0x69, 0x6c, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x42, 0x0b, 0x0a,
	0x09, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x64,
	0x77, 0x5f, 0x6d, 0x65, 0x6d, 0x49, 0x64, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x70, 0x6c,
	0x61, 0x74, 0x5f, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6e,
	0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x22, 0xd6, 0x04, 0x0a, 0x0e, 0x43, 0x74, 0x6d,
	0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x1b, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x88,
	0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x6d,
	0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x06, 0x6d,
	0x6f, 0x62, 0x69, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x48, 0x03, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61,
	0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68,
	0x64, 0x61, 0x79, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x08, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x64, 0x77, 0x5f, 0x6d, 0x65,
	0x6d, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x07, 0x64, 0x77, 0x4d,
	0x65, 0x6d, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07,
	0x52, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x26, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x5f, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x74, 0x55,
	0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x70, 0x5f,
	0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x70,
	0x4f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b,
	0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0a, 0x52,
	0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x42,
	0x09, 0x0a, 0x07, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x42, 0x09,
	0x0a, 0x07, 0x5f, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x62, 0x69,
	0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x64, 0x77, 0x5f, 0x6d, 0x65, 0x6d, 0x49, 0x64,
	0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x5f, 0x75, 0x6e, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65,
	0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x22, 0xf5, 0x05, 0x0a, 0x0f, 0x43, 0x74, 0x6d, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x67, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x53, 0x0a, 0x0d, 0x63, 0x74, 0x6d, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74,
	0x6d, 0x41, 0x64, 0x64, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0c, 0x63,
	0x74, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a,
	0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x1b, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05,
	0x48, 0x03, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a,
	0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x04, 0x52, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x88, 0x01, 0x01, 0x12, 0x1f,
	0x0a, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x05, 0x52, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x1e, 0x0a, 0x08, 0x64, 0x77, 0x5f, 0x6d, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x06, 0x52, 0x07, 0x64, 0x77, 0x4d, 0x65, 0x6d, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12,
	0x28, 0x0a, 0x0d, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x70, 0x6c, 0x61,
	0x74, 0x5f, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x08, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x74, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x88, 0x01,
	0x01, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x70, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x1f,
	0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x26, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0a, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f,
	0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x67, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x42, 0x0b,
	0x0a, 0x09, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f,
	0x64, 0x77, 0x5f, 0x6d, 0x65, 0x6d, 0x49, 0x64, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x70,
	0x6c, 0x61, 0x74, 0x5f, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f,
	0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x35, 0x0a, 0x16, 0x43, 0x74, 0x6d,
	0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x70, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x64,
	0x22, 0x80, 0x02, 0x0a, 0x14, 0x43, 0x74, 0x6d, 0x43, 0x61, 0x72, 0x74, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x70, 0x75, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x73, 0x70, 0x75, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x6b, 0x75, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x73, 0x6b, 0x75, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x6b, 0x75, 0x12, 0x1b,
	0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x74, 0x74, 0x72, 0x73, 0x54, 0x65, 0x78,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x74, 0x6d, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x63, 0x74, 0x6d, 0x22, 0x27, 0x0a, 0x15, 0x43, 0x74, 0x6d, 0x43, 0x61, 0x72, 0x74, 0x44, 0x65,
	0x73, 0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2e, 0x0a, 0x12,
	0x43, 0x74, 0x6d, 0x43, 0x61, 0x72, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x22, 0x75, 0x0a, 0x13,
	0x43, 0x74, 0x6d, 0x43, 0x61, 0x72, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x43, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0xa3, 0x02, 0x0a, 0x0f, 0x43, 0x74, 0x6d, 0x43, 0x61, 0x72, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x70, 0x75,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x70, 0x75, 0x12, 0x15, 0x0a, 0x06, 0x73,
	0x6b, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x6b, 0x75,
	0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x6b, 0x75, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x73, 0x6b, 0x75, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x75,
	0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x75,
	0x6d, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x73, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72,
	0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x74,
	0x74, 0x72, 0x73, 0x54, 0x65, 0x78, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x74, 0x6d, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x63, 0x74, 0x6d, 0x22, 0x28, 0x0a, 0x16, 0x43, 0x74, 0x6d,
	0x43, 0x61, 0x72, 0x74, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x54, 0x0a, 0x1f, 0x43, 0x74, 0x6d, 0x43, 0x61, 0x72, 0x74, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x41, 0x6c, 0x6c, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x74, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x63, 0x74, 0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x73,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69,
	0x73, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x22, 0xb5, 0x02, 0x0a, 0x14, 0x43, 0x74,
	0x6d, 0x43, 0x61, 0x72, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x33, 0x0a, 0x16,
	0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x50, 0x61,
	0x72, 0x74, 0x69, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x70, 0x75, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x73, 0x70, 0x75, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x6b, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x6b,
	0x75, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x6b, 0x75, 0x12, 0x1b, 0x0a, 0x09,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x74, 0x74, 0x72, 0x73, 0x54, 0x65, 0x78, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x63, 0x74, 0x6d, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x63, 0x74,
	0x6d, 0x22, 0x17, 0x0a, 0x15, 0x43, 0x74, 0x6d, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x41,
	0x64, 0x64, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x41, 0x0a, 0x23, 0x43, 0x74,
	0x6d, 0x49, 0x74, 0x6f, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x41, 0x6c, 0x6c, 0x43, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x22, 0x2b, 0x0a,
	0x19, 0x43, 0x74, 0x6d, 0x49, 0x74, 0x6f, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x41, 0x64,
	0x64, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x32, 0x94, 0x11, 0x0a, 0x10, 0x43,
	0x74, 0x6d, 0x49, 0x74, 0x6f, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x12,
	0x9d, 0x01, 0x0a, 0x15, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x41, 0x6c, 0x6c, 0x43, 0x61, 0x72, 0x74, 0x12, 0x3e, 0x2e, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x43, 0x61, 0x72,
	0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x41, 0x6c, 0x6c, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x42, 0x2e, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x49, 0x74, 0x6f,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x41, 0x6c,
	0x6c, 0x43, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x69, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x2d, 0x2e, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x42, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x42, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x73, 0x0a, 0x0a, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x12, 0x33, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x41, 0x64, 0x64, 0x72,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74,
	0x6d, 0x41, 0x64, 0x64, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x73, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x74, 0x12, 0x33, 0x2e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74,
	0x6d, 0x43, 0x61, 0x72, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69,
	0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x43, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x7f, 0x0a, 0x0b, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x41,
	0x64, 0x64, 0x72, 0x12, 0x34, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x41, 0x64,
	0x64, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x49, 0x74, 0x6f,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x41, 0x64, 0x64, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x78, 0x0a, 0x07, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79,
	0x12, 0x34, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f,
	0x2e, 0x43, 0x74, 0x6d, 0x42, 0x61, 0x73, 0x65, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x42, 0x61, 0x73, 0x65, 0x44, 0x65,
	0x73, 0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x7c, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x41, 0x64, 0x64, 0x72, 0x12, 0x34,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43,
	0x74, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x44, 0x65, 0x73, 0x74,
	0x72, 0x6f, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7c, 0x0a,
	0x0b, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x43, 0x61, 0x72, 0x74, 0x12, 0x34, 0x2e, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d,
	0x43, 0x61, 0x72, 0x74, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x35, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69,
	0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x43, 0x61, 0x72, 0x74, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6f, 0x0a, 0x04, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x31, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x42, 0x61, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x42, 0x61, 0x73, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x73, 0x0a, 0x08,
	0x4c, 0x69, 0x73, 0x74, 0x41, 0x64, 0x64, 0x72, 0x12, 0x31, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x41, 0x64, 0x64, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x41,
	0x64, 0x64, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x73, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x72, 0x74, 0x12, 0x31, 0x2e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74,
	0x6d, 0x43, 0x61, 0x72, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x32, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f,
	0x2e, 0x43, 0x74, 0x6d, 0x43, 0x61, 0x72, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7d, 0x0a, 0x0d, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61,
	0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x3a, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x42, 0x61, 0x73, 0x65, 0x50,
	0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x73, 0x0a, 0x08, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76,
	0x65, 0x12, 0x35, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74,
	0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x42, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x77, 0x0a, 0x0c, 0x52, 0x65,
	0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x41, 0x64, 0x64, 0x72, 0x12, 0x35, 0x2e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x41, 0x64,
	0x64, 0x72, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2e, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74,
	0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x77, 0x0a, 0x0c, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x43,
	0x61, 0x72, 0x74, 0x12, 0x35, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x43, 0x61, 0x72, 0x74, 0x52, 0x65, 0x74, 0x72, 0x69,
	0x65, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x43, 0x61,
	0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x69, 0x0a, 0x06,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x2d, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x73, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x64, 0x64, 0x72, 0x12, 0x33, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x41, 0x64,
	0x64, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x73, 0x0a, 0x0a,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x74, 0x12, 0x33, 0x2e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x43, 0x61,
	0x72, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2e, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e,
	0x43, 0x74, 0x6d, 0x43, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_customer_ito_proto_rawDescOnce sync.Once
	file_customer_ito_proto_rawDescData = file_customer_ito_proto_rawDesc
)

func file_customer_ito_proto_rawDescGZIP() []byte {
	file_customer_ito_proto_rawDescOnce.Do(func() {
		file_customer_ito_proto_rawDescData = protoimpl.X.CompressGZIP(file_customer_ito_proto_rawDescData)
	})
	return file_customer_ito_proto_rawDescData
}

var file_customer_ito_proto_msgTypes = make([]protoimpl.MessageInfo, 28)
var file_customer_ito_proto_goTypes = []interface{}{
	(*CtmBaseDestroyResponse)(nil),              // 0: customer_service.customer_ito.CtmBaseDestroyResponse
	(*CtmAddrDestroyResponse)(nil),              // 1: customer_service.customer_ito.CtmAddrDestroyResponse
	(*CtmCartDestroyResponse)(nil),              // 2: customer_service.customer_ito.CtmCartDestroyResponse
	(*CtmAddrCreateRequest)(nil),                // 3: customer_service.customer_ito.CtmAddrCreateRequest
	(*CtmAddrDestroyRequest)(nil),               // 4: customer_service.customer_ito.CtmAddrDestroyRequest
	(*CtmAddrListRequest)(nil),                  // 5: customer_service.customer_ito.CtmAddrListRequest
	(*CtmAddrListResponse)(nil),                 // 6: customer_service.customer_ito.CtmAddrListResponse
	(*CtmAddrResponse)(nil),                     // 7: customer_service.customer_ito.CtmAddrResponse
	(*CtmAddrRetrieveRequest)(nil),              // 8: customer_service.customer_ito.CtmAddrRetrieveRequest
	(*CtmAddrUpdateRequest)(nil),                // 9: customer_service.customer_ito.CtmAddrUpdateRequest
	(*CtmBaseDestroyRequest)(nil),               // 10: customer_service.customer_ito.CtmBaseDestroyRequest
	(*CtmBaseListRequest)(nil),                  // 11: customer_service.customer_ito.CtmBaseListRequest
	(*CtmBaseListResponse)(nil),                 // 12: customer_service.customer_ito.CtmBaseListResponse
	(*CtmBasePartialUpdateRequest)(nil),         // 13: customer_service.customer_ito.CtmBasePartialUpdateRequest
	(*CtmBaseRequest)(nil),                      // 14: customer_service.customer_ito.CtmBaseRequest
	(*CtmBaseResponse)(nil),                     // 15: customer_service.customer_ito.CtmBaseResponse
	(*CtmBaseRetrieveRequest)(nil),              // 16: customer_service.customer_ito.CtmBaseRetrieveRequest
	(*CtmCartCreateRequest)(nil),                // 17: customer_service.customer_ito.CtmCartCreateRequest
	(*CtmCartDestroyRequest)(nil),               // 18: customer_service.customer_ito.CtmCartDestroyRequest
	(*CtmCartListRequest)(nil),                  // 19: customer_service.customer_ito.CtmCartListRequest
	(*CtmCartListResponse)(nil),                 // 20: customer_service.customer_ito.CtmCartListResponse
	(*CtmCartResponse)(nil),                     // 21: customer_service.customer_ito.CtmCartResponse
	(*CtmCartRetrieveRequest)(nil),              // 22: customer_service.customer_ito.CtmCartRetrieveRequest
	(*CtmCartSelectedAllChangeRequest)(nil),     // 23: customer_service.customer_ito.CtmCartSelectedAllChangeRequest
	(*CtmCartUpdateRequest)(nil),                // 24: customer_service.customer_ito.CtmCartUpdateRequest
	(*CtmDefaultAddrRequest)(nil),               // 25: customer_service.customer_ito.CtmDefaultAddrRequest
	(*CtmItoChangeSelectedAllCartResponse)(nil), // 26: customer_service.customer_ito.CtmItoChangeSelectedAllCartResponse
	(*CtmItoDefaultAddrResponse)(nil),           // 27: customer_service.customer_ito.CtmItoDefaultAddrResponse
}
var file_customer_ito_proto_depIdxs = []int32{
	7,  // 0: customer_service.customer_ito.CtmAddrListResponse.results:type_name -> customer_service.customer_ito.CtmAddrResponse
	15, // 1: customer_service.customer_ito.CtmBaseListResponse.results:type_name -> customer_service.customer_ito.CtmBaseResponse
	7,  // 2: customer_service.customer_ito.CtmBaseResponse.ctm_addresses:type_name -> customer_service.customer_ito.CtmAddrResponse
	21, // 3: customer_service.customer_ito.CtmCartListResponse.results:type_name -> customer_service.customer_ito.CtmCartResponse
	23, // 4: customer_service.customer_ito.CtmItoController.ChangeSelectedAllCart:input_type -> customer_service.customer_ito.CtmCartSelectedAllChangeRequest
	14, // 5: customer_service.customer_ito.CtmItoController.Create:input_type -> customer_service.customer_ito.CtmBaseRequest
	3,  // 6: customer_service.customer_ito.CtmItoController.CreateAddr:input_type -> customer_service.customer_ito.CtmAddrCreateRequest
	17, // 7: customer_service.customer_ito.CtmItoController.CreateCart:input_type -> customer_service.customer_ito.CtmCartCreateRequest
	25, // 8: customer_service.customer_ito.CtmItoController.DefaultAddr:input_type -> customer_service.customer_ito.CtmDefaultAddrRequest
	10, // 9: customer_service.customer_ito.CtmItoController.Destroy:input_type -> customer_service.customer_ito.CtmBaseDestroyRequest
	4,  // 10: customer_service.customer_ito.CtmItoController.DestroyAddr:input_type -> customer_service.customer_ito.CtmAddrDestroyRequest
	18, // 11: customer_service.customer_ito.CtmItoController.DestroyCart:input_type -> customer_service.customer_ito.CtmCartDestroyRequest
	11, // 12: customer_service.customer_ito.CtmItoController.List:input_type -> customer_service.customer_ito.CtmBaseListRequest
	5,  // 13: customer_service.customer_ito.CtmItoController.ListAddr:input_type -> customer_service.customer_ito.CtmAddrListRequest
	19, // 14: customer_service.customer_ito.CtmItoController.ListCart:input_type -> customer_service.customer_ito.CtmCartListRequest
	13, // 15: customer_service.customer_ito.CtmItoController.PartialUpdate:input_type -> customer_service.customer_ito.CtmBasePartialUpdateRequest
	16, // 16: customer_service.customer_ito.CtmItoController.Retrieve:input_type -> customer_service.customer_ito.CtmBaseRetrieveRequest
	8,  // 17: customer_service.customer_ito.CtmItoController.RetrieveAddr:input_type -> customer_service.customer_ito.CtmAddrRetrieveRequest
	22, // 18: customer_service.customer_ito.CtmItoController.RetrieveCart:input_type -> customer_service.customer_ito.CtmCartRetrieveRequest
	14, // 19: customer_service.customer_ito.CtmItoController.Update:input_type -> customer_service.customer_ito.CtmBaseRequest
	9,  // 20: customer_service.customer_ito.CtmItoController.UpdateAddr:input_type -> customer_service.customer_ito.CtmAddrUpdateRequest
	24, // 21: customer_service.customer_ito.CtmItoController.UpdateCart:input_type -> customer_service.customer_ito.CtmCartUpdateRequest
	26, // 22: customer_service.customer_ito.CtmItoController.ChangeSelectedAllCart:output_type -> customer_service.customer_ito.CtmItoChangeSelectedAllCartResponse
	15, // 23: customer_service.customer_ito.CtmItoController.Create:output_type -> customer_service.customer_ito.CtmBaseResponse
	7,  // 24: customer_service.customer_ito.CtmItoController.CreateAddr:output_type -> customer_service.customer_ito.CtmAddrResponse
	21, // 25: customer_service.customer_ito.CtmItoController.CreateCart:output_type -> customer_service.customer_ito.CtmCartResponse
	27, // 26: customer_service.customer_ito.CtmItoController.DefaultAddr:output_type -> customer_service.customer_ito.CtmItoDefaultAddrResponse
	0,  // 27: customer_service.customer_ito.CtmItoController.Destroy:output_type -> customer_service.customer_ito.CtmBaseDestroyResponse
	1,  // 28: customer_service.customer_ito.CtmItoController.DestroyAddr:output_type -> customer_service.customer_ito.CtmAddrDestroyResponse
	2,  // 29: customer_service.customer_ito.CtmItoController.DestroyCart:output_type -> customer_service.customer_ito.CtmCartDestroyResponse
	12, // 30: customer_service.customer_ito.CtmItoController.List:output_type -> customer_service.customer_ito.CtmBaseListResponse
	6,  // 31: customer_service.customer_ito.CtmItoController.ListAddr:output_type -> customer_service.customer_ito.CtmAddrListResponse
	20, // 32: customer_service.customer_ito.CtmItoController.ListCart:output_type -> customer_service.customer_ito.CtmCartListResponse
	15, // 33: customer_service.customer_ito.CtmItoController.PartialUpdate:output_type -> customer_service.customer_ito.CtmBaseResponse
	15, // 34: customer_service.customer_ito.CtmItoController.Retrieve:output_type -> customer_service.customer_ito.CtmBaseResponse
	7,  // 35: customer_service.customer_ito.CtmItoController.RetrieveAddr:output_type -> customer_service.customer_ito.CtmAddrResponse
	21, // 36: customer_service.customer_ito.CtmItoController.RetrieveCart:output_type -> customer_service.customer_ito.CtmCartResponse
	15, // 37: customer_service.customer_ito.CtmItoController.Update:output_type -> customer_service.customer_ito.CtmBaseResponse
	7,  // 38: customer_service.customer_ito.CtmItoController.UpdateAddr:output_type -> customer_service.customer_ito.CtmAddrResponse
	21, // 39: customer_service.customer_ito.CtmItoController.UpdateCart:output_type -> customer_service.customer_ito.CtmCartResponse
	22, // [22:40] is the sub-list for method output_type
	4,  // [4:22] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_customer_ito_proto_init() }
func file_customer_ito_proto_init() {
	if File_customer_ito_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_customer_ito_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmBaseDestroyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmAddrDestroyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmCartDestroyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmAddrCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmAddrDestroyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmAddrListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmAddrListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmAddrResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmAddrRetrieveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmAddrUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmBaseDestroyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmBaseListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmBaseListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmBasePartialUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmBaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmBaseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmBaseRetrieveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmCartCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmCartDestroyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmCartListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmCartListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmCartResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmCartRetrieveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmCartSelectedAllChangeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmCartUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmDefaultAddrRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmItoChangeSelectedAllCartResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customer_ito_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmItoDefaultAddrResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_customer_ito_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_customer_ito_proto_msgTypes[7].OneofWrappers = []interface{}{}
	file_customer_ito_proto_msgTypes[9].OneofWrappers = []interface{}{}
	file_customer_ito_proto_msgTypes[11].OneofWrappers = []interface{}{}
	file_customer_ito_proto_msgTypes[13].OneofWrappers = []interface{}{}
	file_customer_ito_proto_msgTypes[14].OneofWrappers = []interface{}{}
	file_customer_ito_proto_msgTypes[15].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_customer_ito_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   28,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_customer_ito_proto_goTypes,
		DependencyIndexes: file_customer_ito_proto_depIdxs,
		MessageInfos:      file_customer_ito_proto_msgTypes,
	}.Build()
	File_customer_ito_proto = out.File
	file_customer_ito_proto_rawDesc = nil
	file_customer_ito_proto_goTypes = nil
	file_customer_ito_proto_depIdxs = nil
}
