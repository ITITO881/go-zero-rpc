// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.19.4
// source: distribution_ito.proto

package pbdistribution

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NextTidRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StoreNo string `protobuf:"bytes,1,opt,name=store_no,json=storeNo,proto3" json:"store_no,omitempty"`
}

func (x *NextTidRequest) Reset() {
	*x = NextTidRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_distribution_ito_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NextTidRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NextTidRequest) ProtoMessage() {}

func (x *NextTidRequest) ProtoReflect() protoreflect.Message {
	mi := &file_distribution_ito_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NextTidRequest.ProtoReflect.Descriptor instead.
func (*NextTidRequest) Descriptor() ([]byte, []int) {
	return file_distribution_ito_proto_rawDescGZIP(), []int{0}
}

func (x *NextTidRequest) GetStoreNo() string {
	if x != nil {
		return x.StoreNo
	}
	return ""
}

type NextTidResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tid string `protobuf:"bytes,1,opt,name=tid,proto3" json:"tid,omitempty"`
}

func (x *NextTidResponse) Reset() {
	*x = NextTidResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_distribution_ito_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NextTidResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NextTidResponse) ProtoMessage() {}

func (x *NextTidResponse) ProtoReflect() protoreflect.Message {
	mi := &file_distribution_ito_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NextTidResponse.ProtoReflect.Descriptor instead.
func (*NextTidResponse) Descriptor() ([]byte, []int) {
	return file_distribution_ito_proto_rawDescGZIP(), []int{1}
}

func (x *NextTidResponse) GetTid() string {
	if x != nil {
		return x.Tid
	}
	return ""
}

type StoreTradesDestroyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	EditUserId string `protobuf:"bytes,2,opt,name=edit_user_id,json=editUserId,proto3" json:"edit_user_id,omitempty"`
	EditUser   string `protobuf:"bytes,3,opt,name=edit_user,json=editUser,proto3" json:"edit_user,omitempty"`
}

func (x *StoreTradesDestroyRequest) Reset() {
	*x = StoreTradesDestroyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_distribution_ito_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreTradesDestroyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreTradesDestroyRequest) ProtoMessage() {}

func (x *StoreTradesDestroyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_distribution_ito_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreTradesDestroyRequest.ProtoReflect.Descriptor instead.
func (*StoreTradesDestroyRequest) Descriptor() ([]byte, []int) {
	return file_distribution_ito_proto_rawDescGZIP(), []int{2}
}

func (x *StoreTradesDestroyRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *StoreTradesDestroyRequest) GetEditUserId() string {
	if x != nil {
		return x.EditUserId
	}
	return ""
}

func (x *StoreTradesDestroyRequest) GetEditUser() string {
	if x != nil {
		return x.EditUser
	}
	return ""
}

type StoreTradesListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int32                    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Filters          string                   `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
	TradeEmployees   []*TradeEmployeesRequest `protobuf:"bytes,3,rep,name=trade_employees,json=tradeEmployees,proto3" json:"trade_employees,omitempty"`
	TradeDetails     []*TradeDetailsRequest   `protobuf:"bytes,4,rep,name=trade_details,json=tradeDetails,proto3" json:"trade_details,omitempty"`
	Tid              string                   `protobuf:"bytes,5,opt,name=tid,proto3" json:"tid,omitempty"`
	TradeDate        string                   `protobuf:"bytes,6,opt,name=trade_date,json=tradeDate,proto3" json:"trade_date,omitempty"`
	StoreNo          string                   `protobuf:"bytes,7,opt,name=store_no,json=storeNo,proto3" json:"store_no,omitempty"`
	StoreName        string                   `protobuf:"bytes,8,opt,name=store_name,json=storeName,proto3" json:"store_name,omitempty"`
	Deleted          *string                  `protobuf:"bytes,9,opt,name=deleted,proto3,oneof" json:"deleted,omitempty"`
	CustomerName     *string                  `protobuf:"bytes,10,opt,name=customer_name,json=customerName,proto3,oneof" json:"customer_name,omitempty"`
	Sex              *string                  `protobuf:"bytes,11,opt,name=sex,proto3,oneof" json:"sex,omitempty"`
	Age              *string                  `protobuf:"bytes,12,opt,name=age,proto3,oneof" json:"age,omitempty"`
	Tel              *string                  `protobuf:"bytes,13,opt,name=tel,proto3,oneof" json:"tel,omitempty"`
	ReceiverProvince *int32                   `protobuf:"varint,14,opt,name=receiver_province,json=receiverProvince,proto3,oneof" json:"receiver_province,omitempty"`
	ReceiverCity     *int32                   `protobuf:"varint,15,opt,name=receiver_city,json=receiverCity,proto3,oneof" json:"receiver_city,omitempty"`
	ReceiverDistrict *int32                   `protobuf:"varint,16,opt,name=receiver_district,json=receiverDistrict,proto3,oneof" json:"receiver_district,omitempty"`
	ReceiverArea     *string                  `protobuf:"bytes,17,opt,name=receiver_area,json=receiverArea,proto3,oneof" json:"receiver_area,omitempty"`
	Address          *string                  `protobuf:"bytes,18,opt,name=address,proto3,oneof" json:"address,omitempty"`
	Remark           *string                  `protobuf:"bytes,19,opt,name=remark,proto3,oneof" json:"remark,omitempty"`
	TradeFrom        *string                  `protobuf:"bytes,20,opt,name=trade_from,json=tradeFrom,proto3,oneof" json:"trade_from,omitempty"`
	EditUserId       *string                  `protobuf:"bytes,21,opt,name=edit_user_id,json=editUserId,proto3,oneof" json:"edit_user_id,omitempty"`
	EditUser         *string                  `protobuf:"bytes,22,opt,name=edit_user,json=editUser,proto3,oneof" json:"edit_user,omitempty"`
}

func (x *StoreTradesListRequest) Reset() {
	*x = StoreTradesListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_distribution_ito_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreTradesListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreTradesListRequest) ProtoMessage() {}

func (x *StoreTradesListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_distribution_ito_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreTradesListRequest.ProtoReflect.Descriptor instead.
func (*StoreTradesListRequest) Descriptor() ([]byte, []int) {
	return file_distribution_ito_proto_rawDescGZIP(), []int{3}
}

func (x *StoreTradesListRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *StoreTradesListRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *StoreTradesListRequest) GetTradeEmployees() []*TradeEmployeesRequest {
	if x != nil {
		return x.TradeEmployees
	}
	return nil
}

func (x *StoreTradesListRequest) GetTradeDetails() []*TradeDetailsRequest {
	if x != nil {
		return x.TradeDetails
	}
	return nil
}

func (x *StoreTradesListRequest) GetTid() string {
	if x != nil {
		return x.Tid
	}
	return ""
}

func (x *StoreTradesListRequest) GetTradeDate() string {
	if x != nil {
		return x.TradeDate
	}
	return ""
}

func (x *StoreTradesListRequest) GetStoreNo() string {
	if x != nil {
		return x.StoreNo
	}
	return ""
}

func (x *StoreTradesListRequest) GetStoreName() string {
	if x != nil {
		return x.StoreName
	}
	return ""
}

func (x *StoreTradesListRequest) GetDeleted() string {
	if x != nil && x.Deleted != nil {
		return *x.Deleted
	}
	return ""
}

func (x *StoreTradesListRequest) GetCustomerName() string {
	if x != nil && x.CustomerName != nil {
		return *x.CustomerName
	}
	return ""
}

func (x *StoreTradesListRequest) GetSex() string {
	if x != nil && x.Sex != nil {
		return *x.Sex
	}
	return ""
}

func (x *StoreTradesListRequest) GetAge() string {
	if x != nil && x.Age != nil {
		return *x.Age
	}
	return ""
}

func (x *StoreTradesListRequest) GetTel() string {
	if x != nil && x.Tel != nil {
		return *x.Tel
	}
	return ""
}

func (x *StoreTradesListRequest) GetReceiverProvince() int32 {
	if x != nil && x.ReceiverProvince != nil {
		return *x.ReceiverProvince
	}
	return 0
}

func (x *StoreTradesListRequest) GetReceiverCity() int32 {
	if x != nil && x.ReceiverCity != nil {
		return *x.ReceiverCity
	}
	return 0
}

func (x *StoreTradesListRequest) GetReceiverDistrict() int32 {
	if x != nil && x.ReceiverDistrict != nil {
		return *x.ReceiverDistrict
	}
	return 0
}

func (x *StoreTradesListRequest) GetReceiverArea() string {
	if x != nil && x.ReceiverArea != nil {
		return *x.ReceiverArea
	}
	return ""
}

func (x *StoreTradesListRequest) GetAddress() string {
	if x != nil && x.Address != nil {
		return *x.Address
	}
	return ""
}

func (x *StoreTradesListRequest) GetRemark() string {
	if x != nil && x.Remark != nil {
		return *x.Remark
	}
	return ""
}

func (x *StoreTradesListRequest) GetTradeFrom() string {
	if x != nil && x.TradeFrom != nil {
		return *x.TradeFrom
	}
	return ""
}

func (x *StoreTradesListRequest) GetEditUserId() string {
	if x != nil && x.EditUserId != nil {
		return *x.EditUserId
	}
	return ""
}

func (x *StoreTradesListRequest) GetEditUser() string {
	if x != nil && x.EditUser != nil {
		return *x.EditUser
	}
	return ""
}

type StoreTradesListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*StoreTradesResponse `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Count   int32                  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *StoreTradesListResponse) Reset() {
	*x = StoreTradesListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_distribution_ito_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreTradesListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreTradesListResponse) ProtoMessage() {}

func (x *StoreTradesListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_distribution_ito_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreTradesListResponse.ProtoReflect.Descriptor instead.
func (*StoreTradesListResponse) Descriptor() ([]byte, []int) {
	return file_distribution_ito_proto_rawDescGZIP(), []int{4}
}

func (x *StoreTradesListResponse) GetResults() []*StoreTradesResponse {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *StoreTradesListResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type StoreTradesPartialUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   int32                    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Filters              string                   `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
	TradeEmployees       []*TradeEmployeesRequest `protobuf:"bytes,3,rep,name=trade_employees,json=tradeEmployees,proto3" json:"trade_employees,omitempty"`
	TradeDetails         []*TradeDetailsRequest   `protobuf:"bytes,4,rep,name=trade_details,json=tradeDetails,proto3" json:"trade_details,omitempty"`
	XPartialUpdateFields []string                 `protobuf:"bytes,5,rep,name=_partial_update_fields,json=PartialUpdateFields,proto3" json:"_partial_update_fields,omitempty"`
	Tid                  string                   `protobuf:"bytes,6,opt,name=tid,proto3" json:"tid,omitempty"`
	TradeDate            string                   `protobuf:"bytes,7,opt,name=trade_date,json=tradeDate,proto3" json:"trade_date,omitempty"`
	StoreNo              string                   `protobuf:"bytes,8,opt,name=store_no,json=storeNo,proto3" json:"store_no,omitempty"`
	StoreName            string                   `protobuf:"bytes,9,opt,name=store_name,json=storeName,proto3" json:"store_name,omitempty"`
	Deleted              *string                  `protobuf:"bytes,10,opt,name=deleted,proto3,oneof" json:"deleted,omitempty"`
	CustomerName         *string                  `protobuf:"bytes,11,opt,name=customer_name,json=customerName,proto3,oneof" json:"customer_name,omitempty"`
	Sex                  *string                  `protobuf:"bytes,12,opt,name=sex,proto3,oneof" json:"sex,omitempty"`
	Age                  *string                  `protobuf:"bytes,13,opt,name=age,proto3,oneof" json:"age,omitempty"`
	Tel                  *string                  `protobuf:"bytes,14,opt,name=tel,proto3,oneof" json:"tel,omitempty"`
	ReceiverProvince     *int32                   `protobuf:"varint,15,opt,name=receiver_province,json=receiverProvince,proto3,oneof" json:"receiver_province,omitempty"`
	ReceiverCity         *int32                   `protobuf:"varint,16,opt,name=receiver_city,json=receiverCity,proto3,oneof" json:"receiver_city,omitempty"`
	ReceiverDistrict     *int32                   `protobuf:"varint,17,opt,name=receiver_district,json=receiverDistrict,proto3,oneof" json:"receiver_district,omitempty"`
	ReceiverArea         *string                  `protobuf:"bytes,18,opt,name=receiver_area,json=receiverArea,proto3,oneof" json:"receiver_area,omitempty"`
	Address              *string                  `protobuf:"bytes,19,opt,name=address,proto3,oneof" json:"address,omitempty"`
	Remark               *string                  `protobuf:"bytes,20,opt,name=remark,proto3,oneof" json:"remark,omitempty"`
	TradeFrom            *string                  `protobuf:"bytes,21,opt,name=trade_from,json=tradeFrom,proto3,oneof" json:"trade_from,omitempty"`
	EditUserId           *string                  `protobuf:"bytes,22,opt,name=edit_user_id,json=editUserId,proto3,oneof" json:"edit_user_id,omitempty"`
	EditUser             *string                  `protobuf:"bytes,23,opt,name=edit_user,json=editUser,proto3,oneof" json:"edit_user,omitempty"`
}

func (x *StoreTradesPartialUpdateRequest) Reset() {
	*x = StoreTradesPartialUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_distribution_ito_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreTradesPartialUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreTradesPartialUpdateRequest) ProtoMessage() {}

func (x *StoreTradesPartialUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_distribution_ito_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreTradesPartialUpdateRequest.ProtoReflect.Descriptor instead.
func (*StoreTradesPartialUpdateRequest) Descriptor() ([]byte, []int) {
	return file_distribution_ito_proto_rawDescGZIP(), []int{5}
}

func (x *StoreTradesPartialUpdateRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *StoreTradesPartialUpdateRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *StoreTradesPartialUpdateRequest) GetTradeEmployees() []*TradeEmployeesRequest {
	if x != nil {
		return x.TradeEmployees
	}
	return nil
}

func (x *StoreTradesPartialUpdateRequest) GetTradeDetails() []*TradeDetailsRequest {
	if x != nil {
		return x.TradeDetails
	}
	return nil
}

func (x *StoreTradesPartialUpdateRequest) GetXPartialUpdateFields() []string {
	if x != nil {
		return x.XPartialUpdateFields
	}
	return nil
}

func (x *StoreTradesPartialUpdateRequest) GetTid() string {
	if x != nil {
		return x.Tid
	}
	return ""
}

func (x *StoreTradesPartialUpdateRequest) GetTradeDate() string {
	if x != nil {
		return x.TradeDate
	}
	return ""
}

func (x *StoreTradesPartialUpdateRequest) GetStoreNo() string {
	if x != nil {
		return x.StoreNo
	}
	return ""
}

func (x *StoreTradesPartialUpdateRequest) GetStoreName() string {
	if x != nil {
		return x.StoreName
	}
	return ""
}

func (x *StoreTradesPartialUpdateRequest) GetDeleted() string {
	if x != nil && x.Deleted != nil {
		return *x.Deleted
	}
	return ""
}

func (x *StoreTradesPartialUpdateRequest) GetCustomerName() string {
	if x != nil && x.CustomerName != nil {
		return *x.CustomerName
	}
	return ""
}

func (x *StoreTradesPartialUpdateRequest) GetSex() string {
	if x != nil && x.Sex != nil {
		return *x.Sex
	}
	return ""
}

func (x *StoreTradesPartialUpdateRequest) GetAge() string {
	if x != nil && x.Age != nil {
		return *x.Age
	}
	return ""
}

func (x *StoreTradesPartialUpdateRequest) GetTel() string {
	if x != nil && x.Tel != nil {
		return *x.Tel
	}
	return ""
}

func (x *StoreTradesPartialUpdateRequest) GetReceiverProvince() int32 {
	if x != nil && x.ReceiverProvince != nil {
		return *x.ReceiverProvince
	}
	return 0
}

func (x *StoreTradesPartialUpdateRequest) GetReceiverCity() int32 {
	if x != nil && x.ReceiverCity != nil {
		return *x.ReceiverCity
	}
	return 0
}

func (x *StoreTradesPartialUpdateRequest) GetReceiverDistrict() int32 {
	if x != nil && x.ReceiverDistrict != nil {
		return *x.ReceiverDistrict
	}
	return 0
}

func (x *StoreTradesPartialUpdateRequest) GetReceiverArea() string {
	if x != nil && x.ReceiverArea != nil {
		return *x.ReceiverArea
	}
	return ""
}

func (x *StoreTradesPartialUpdateRequest) GetAddress() string {
	if x != nil && x.Address != nil {
		return *x.Address
	}
	return ""
}

func (x *StoreTradesPartialUpdateRequest) GetRemark() string {
	if x != nil && x.Remark != nil {
		return *x.Remark
	}
	return ""
}

func (x *StoreTradesPartialUpdateRequest) GetTradeFrom() string {
	if x != nil && x.TradeFrom != nil {
		return *x.TradeFrom
	}
	return ""
}

func (x *StoreTradesPartialUpdateRequest) GetEditUserId() string {
	if x != nil && x.EditUserId != nil {
		return *x.EditUserId
	}
	return ""
}

func (x *StoreTradesPartialUpdateRequest) GetEditUser() string {
	if x != nil && x.EditUser != nil {
		return *x.EditUser
	}
	return ""
}

type StoreTradesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int32                    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Filters          string                   `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
	TradeEmployees   []*TradeEmployeesRequest `protobuf:"bytes,3,rep,name=trade_employees,json=tradeEmployees,proto3" json:"trade_employees,omitempty"`
	TradeDetails     []*TradeDetailsRequest   `protobuf:"bytes,4,rep,name=trade_details,json=tradeDetails,proto3" json:"trade_details,omitempty"`
	Tid              string                   `protobuf:"bytes,5,opt,name=tid,proto3" json:"tid,omitempty"`
	TradeDate        string                   `protobuf:"bytes,6,opt,name=trade_date,json=tradeDate,proto3" json:"trade_date,omitempty"`
	StoreNo          string                   `protobuf:"bytes,7,opt,name=store_no,json=storeNo,proto3" json:"store_no,omitempty"`
	StoreName        string                   `protobuf:"bytes,8,opt,name=store_name,json=storeName,proto3" json:"store_name,omitempty"`
	Deleted          *string                  `protobuf:"bytes,9,opt,name=deleted,proto3,oneof" json:"deleted,omitempty"`
	CustomerName     *string                  `protobuf:"bytes,10,opt,name=customer_name,json=customerName,proto3,oneof" json:"customer_name,omitempty"`
	Sex              *string                  `protobuf:"bytes,11,opt,name=sex,proto3,oneof" json:"sex,omitempty"`
	Age              *string                  `protobuf:"bytes,12,opt,name=age,proto3,oneof" json:"age,omitempty"`
	Tel              *string                  `protobuf:"bytes,13,opt,name=tel,proto3,oneof" json:"tel,omitempty"`
	ReceiverProvince *int32                   `protobuf:"varint,14,opt,name=receiver_province,json=receiverProvince,proto3,oneof" json:"receiver_province,omitempty"`
	ReceiverCity     *int32                   `protobuf:"varint,15,opt,name=receiver_city,json=receiverCity,proto3,oneof" json:"receiver_city,omitempty"`
	ReceiverDistrict *int32                   `protobuf:"varint,16,opt,name=receiver_district,json=receiverDistrict,proto3,oneof" json:"receiver_district,omitempty"`
	ReceiverArea     *string                  `protobuf:"bytes,17,opt,name=receiver_area,json=receiverArea,proto3,oneof" json:"receiver_area,omitempty"`
	Address          *string                  `protobuf:"bytes,18,opt,name=address,proto3,oneof" json:"address,omitempty"`
	Remark           *string                  `protobuf:"bytes,19,opt,name=remark,proto3,oneof" json:"remark,omitempty"`
	TradeFrom        *string                  `protobuf:"bytes,20,opt,name=trade_from,json=tradeFrom,proto3,oneof" json:"trade_from,omitempty"`
	EditUserId       *string                  `protobuf:"bytes,21,opt,name=edit_user_id,json=editUserId,proto3,oneof" json:"edit_user_id,omitempty"`
	EditUser         *string                  `protobuf:"bytes,22,opt,name=edit_user,json=editUser,proto3,oneof" json:"edit_user,omitempty"`
}

func (x *StoreTradesRequest) Reset() {
	*x = StoreTradesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_distribution_ito_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreTradesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreTradesRequest) ProtoMessage() {}

func (x *StoreTradesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_distribution_ito_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreTradesRequest.ProtoReflect.Descriptor instead.
func (*StoreTradesRequest) Descriptor() ([]byte, []int) {
	return file_distribution_ito_proto_rawDescGZIP(), []int{6}
}

func (x *StoreTradesRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *StoreTradesRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *StoreTradesRequest) GetTradeEmployees() []*TradeEmployeesRequest {
	if x != nil {
		return x.TradeEmployees
	}
	return nil
}

func (x *StoreTradesRequest) GetTradeDetails() []*TradeDetailsRequest {
	if x != nil {
		return x.TradeDetails
	}
	return nil
}

func (x *StoreTradesRequest) GetTid() string {
	if x != nil {
		return x.Tid
	}
	return ""
}

func (x *StoreTradesRequest) GetTradeDate() string {
	if x != nil {
		return x.TradeDate
	}
	return ""
}

func (x *StoreTradesRequest) GetStoreNo() string {
	if x != nil {
		return x.StoreNo
	}
	return ""
}

func (x *StoreTradesRequest) GetStoreName() string {
	if x != nil {
		return x.StoreName
	}
	return ""
}

func (x *StoreTradesRequest) GetDeleted() string {
	if x != nil && x.Deleted != nil {
		return *x.Deleted
	}
	return ""
}

func (x *StoreTradesRequest) GetCustomerName() string {
	if x != nil && x.CustomerName != nil {
		return *x.CustomerName
	}
	return ""
}

func (x *StoreTradesRequest) GetSex() string {
	if x != nil && x.Sex != nil {
		return *x.Sex
	}
	return ""
}

func (x *StoreTradesRequest) GetAge() string {
	if x != nil && x.Age != nil {
		return *x.Age
	}
	return ""
}

func (x *StoreTradesRequest) GetTel() string {
	if x != nil && x.Tel != nil {
		return *x.Tel
	}
	return ""
}

func (x *StoreTradesRequest) GetReceiverProvince() int32 {
	if x != nil && x.ReceiverProvince != nil {
		return *x.ReceiverProvince
	}
	return 0
}

func (x *StoreTradesRequest) GetReceiverCity() int32 {
	if x != nil && x.ReceiverCity != nil {
		return *x.ReceiverCity
	}
	return 0
}

func (x *StoreTradesRequest) GetReceiverDistrict() int32 {
	if x != nil && x.ReceiverDistrict != nil {
		return *x.ReceiverDistrict
	}
	return 0
}

func (x *StoreTradesRequest) GetReceiverArea() string {
	if x != nil && x.ReceiverArea != nil {
		return *x.ReceiverArea
	}
	return ""
}

func (x *StoreTradesRequest) GetAddress() string {
	if x != nil && x.Address != nil {
		return *x.Address
	}
	return ""
}

func (x *StoreTradesRequest) GetRemark() string {
	if x != nil && x.Remark != nil {
		return *x.Remark
	}
	return ""
}

func (x *StoreTradesRequest) GetTradeFrom() string {
	if x != nil && x.TradeFrom != nil {
		return *x.TradeFrom
	}
	return ""
}

func (x *StoreTradesRequest) GetEditUserId() string {
	if x != nil && x.EditUserId != nil {
		return *x.EditUserId
	}
	return ""
}

func (x *StoreTradesRequest) GetEditUser() string {
	if x != nil && x.EditUser != nil {
		return *x.EditUser
	}
	return ""
}

type StoreTradesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int32                     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TradeEmployees   []*TradeEmployeesResponse `protobuf:"bytes,2,rep,name=trade_employees,json=tradeEmployees,proto3" json:"trade_employees,omitempty"`
	TradeDetails     []*TradeDetailsResponse   `protobuf:"bytes,3,rep,name=trade_details,json=tradeDetails,proto3" json:"trade_details,omitempty"`
	Created          string                    `protobuf:"bytes,4,opt,name=created,proto3" json:"created,omitempty"`
	Modified         string                    `protobuf:"bytes,5,opt,name=modified,proto3" json:"modified,omitempty"`
	Tid              string                    `protobuf:"bytes,6,opt,name=tid,proto3" json:"tid,omitempty"`
	TradeDate        string                    `protobuf:"bytes,7,opt,name=trade_date,json=tradeDate,proto3" json:"trade_date,omitempty"`
	StoreNo          string                    `protobuf:"bytes,8,opt,name=store_no,json=storeNo,proto3" json:"store_no,omitempty"`
	StoreName        string                    `protobuf:"bytes,9,opt,name=store_name,json=storeName,proto3" json:"store_name,omitempty"`
	Deleted          *string                   `protobuf:"bytes,10,opt,name=deleted,proto3,oneof" json:"deleted,omitempty"`
	CustomerName     *string                   `protobuf:"bytes,11,opt,name=customer_name,json=customerName,proto3,oneof" json:"customer_name,omitempty"`
	Sex              *string                   `protobuf:"bytes,12,opt,name=sex,proto3,oneof" json:"sex,omitempty"`
	Age              *string                   `protobuf:"bytes,13,opt,name=age,proto3,oneof" json:"age,omitempty"`
	Tel              *string                   `protobuf:"bytes,14,opt,name=tel,proto3,oneof" json:"tel,omitempty"`
	ReceiverProvince *int32                    `protobuf:"varint,15,opt,name=receiver_province,json=receiverProvince,proto3,oneof" json:"receiver_province,omitempty"`
	ReceiverCity     *int32                    `protobuf:"varint,16,opt,name=receiver_city,json=receiverCity,proto3,oneof" json:"receiver_city,omitempty"`
	ReceiverDistrict *int32                    `protobuf:"varint,17,opt,name=receiver_district,json=receiverDistrict,proto3,oneof" json:"receiver_district,omitempty"`
	ReceiverArea     *string                   `protobuf:"bytes,18,opt,name=receiver_area,json=receiverArea,proto3,oneof" json:"receiver_area,omitempty"`
	Address          *string                   `protobuf:"bytes,19,opt,name=address,proto3,oneof" json:"address,omitempty"`
	Remark           *string                   `protobuf:"bytes,20,opt,name=remark,proto3,oneof" json:"remark,omitempty"`
	TradeFrom        *string                   `protobuf:"bytes,21,opt,name=trade_from,json=tradeFrom,proto3,oneof" json:"trade_from,omitempty"`
	EditUserId       *string                   `protobuf:"bytes,22,opt,name=edit_user_id,json=editUserId,proto3,oneof" json:"edit_user_id,omitempty"`
	EditUser         *string                   `protobuf:"bytes,23,opt,name=edit_user,json=editUser,proto3,oneof" json:"edit_user,omitempty"`
}

func (x *StoreTradesResponse) Reset() {
	*x = StoreTradesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_distribution_ito_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreTradesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreTradesResponse) ProtoMessage() {}

func (x *StoreTradesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_distribution_ito_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreTradesResponse.ProtoReflect.Descriptor instead.
func (*StoreTradesResponse) Descriptor() ([]byte, []int) {
	return file_distribution_ito_proto_rawDescGZIP(), []int{7}
}

func (x *StoreTradesResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *StoreTradesResponse) GetTradeEmployees() []*TradeEmployeesResponse {
	if x != nil {
		return x.TradeEmployees
	}
	return nil
}

func (x *StoreTradesResponse) GetTradeDetails() []*TradeDetailsResponse {
	if x != nil {
		return x.TradeDetails
	}
	return nil
}

func (x *StoreTradesResponse) GetCreated() string {
	if x != nil {
		return x.Created
	}
	return ""
}

func (x *StoreTradesResponse) GetModified() string {
	if x != nil {
		return x.Modified
	}
	return ""
}

func (x *StoreTradesResponse) GetTid() string {
	if x != nil {
		return x.Tid
	}
	return ""
}

func (x *StoreTradesResponse) GetTradeDate() string {
	if x != nil {
		return x.TradeDate
	}
	return ""
}

func (x *StoreTradesResponse) GetStoreNo() string {
	if x != nil {
		return x.StoreNo
	}
	return ""
}

func (x *StoreTradesResponse) GetStoreName() string {
	if x != nil {
		return x.StoreName
	}
	return ""
}

func (x *StoreTradesResponse) GetDeleted() string {
	if x != nil && x.Deleted != nil {
		return *x.Deleted
	}
	return ""
}

func (x *StoreTradesResponse) GetCustomerName() string {
	if x != nil && x.CustomerName != nil {
		return *x.CustomerName
	}
	return ""
}

func (x *StoreTradesResponse) GetSex() string {
	if x != nil && x.Sex != nil {
		return *x.Sex
	}
	return ""
}

func (x *StoreTradesResponse) GetAge() string {
	if x != nil && x.Age != nil {
		return *x.Age
	}
	return ""
}

func (x *StoreTradesResponse) GetTel() string {
	if x != nil && x.Tel != nil {
		return *x.Tel
	}
	return ""
}

func (x *StoreTradesResponse) GetReceiverProvince() int32 {
	if x != nil && x.ReceiverProvince != nil {
		return *x.ReceiverProvince
	}
	return 0
}

func (x *StoreTradesResponse) GetReceiverCity() int32 {
	if x != nil && x.ReceiverCity != nil {
		return *x.ReceiverCity
	}
	return 0
}

func (x *StoreTradesResponse) GetReceiverDistrict() int32 {
	if x != nil && x.ReceiverDistrict != nil {
		return *x.ReceiverDistrict
	}
	return 0
}

func (x *StoreTradesResponse) GetReceiverArea() string {
	if x != nil && x.ReceiverArea != nil {
		return *x.ReceiverArea
	}
	return ""
}

func (x *StoreTradesResponse) GetAddress() string {
	if x != nil && x.Address != nil {
		return *x.Address
	}
	return ""
}

func (x *StoreTradesResponse) GetRemark() string {
	if x != nil && x.Remark != nil {
		return *x.Remark
	}
	return ""
}

func (x *StoreTradesResponse) GetTradeFrom() string {
	if x != nil && x.TradeFrom != nil {
		return *x.TradeFrom
	}
	return ""
}

func (x *StoreTradesResponse) GetEditUserId() string {
	if x != nil && x.EditUserId != nil {
		return *x.EditUserId
	}
	return ""
}

func (x *StoreTradesResponse) GetEditUser() string {
	if x != nil && x.EditUser != nil {
		return *x.EditUser
	}
	return ""
}

type StoreTradesRetrieveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *StoreTradesRetrieveRequest) Reset() {
	*x = StoreTradesRetrieveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_distribution_ito_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreTradesRetrieveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreTradesRetrieveRequest) ProtoMessage() {}

func (x *StoreTradesRetrieveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_distribution_ito_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreTradesRetrieveRequest.ProtoReflect.Descriptor instead.
func (*StoreTradesRetrieveRequest) Descriptor() ([]byte, []int) {
	return file_distribution_ito_proto_rawDescGZIP(), []int{8}
}

func (x *StoreTradesRetrieveRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type TradeDetailsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ProdCode     *string  `protobuf:"bytes,2,opt,name=prod_code,json=prodCode,proto3,oneof" json:"prod_code,omitempty"`
	SpecCode     *string  `protobuf:"bytes,3,opt,name=spec_code,json=specCode,proto3,oneof" json:"spec_code,omitempty"`
	ProdName     *string  `protobuf:"bytes,4,opt,name=prod_name,json=prodName,proto3,oneof" json:"prod_name,omitempty"`
	ProdCat      *string  `protobuf:"bytes,5,opt,name=prod_cat,json=prodCat,proto3,oneof" json:"prod_cat,omitempty"`
	ProdSer      *string  `protobuf:"bytes,6,opt,name=prod_ser,json=prodSer,proto3,oneof" json:"prod_ser,omitempty"`
	ProdColor    *string  `protobuf:"bytes,7,opt,name=prod_color,json=prodColor,proto3,oneof" json:"prod_color,omitempty"`
	ProdSize     *string  `protobuf:"bytes,8,opt,name=prod_size,json=prodSize,proto3,oneof" json:"prod_size,omitempty"`
	RetailPrice  float32  `protobuf:"fixed32,9,opt,name=retail_price,json=retailPrice,proto3" json:"retail_price,omitempty"`
	RetailAmount float32  `protobuf:"fixed32,10,opt,name=retail_amount,json=retailAmount,proto3" json:"retail_amount,omitempty"`
	SharePrice   *float32 `protobuf:"fixed32,11,opt,name=share_price,json=sharePrice,proto3,oneof" json:"share_price,omitempty"`
	ShareAmount  *float32 `protobuf:"fixed32,12,opt,name=share_amount,json=shareAmount,proto3,oneof" json:"share_amount,omitempty"`
	Discount     *float32 `protobuf:"fixed32,13,opt,name=discount,proto3,oneof" json:"discount,omitempty"`
	Num          int32    `protobuf:"varint,14,opt,name=num,proto3" json:"num,omitempty"`
	IsMaster     *bool    `protobuf:"varint,15,opt,name=is_master,json=isMaster,proto3,oneof" json:"is_master,omitempty"`
	Status       string   `protobuf:"bytes,16,opt,name=status,proto3" json:"status,omitempty"`
	Style        *string  `protobuf:"bytes,17,opt,name=style,proto3,oneof" json:"style,omitempty"`
	Remark       *string  `protobuf:"bytes,18,opt,name=remark,proto3,oneof" json:"remark,omitempty"`
}

func (x *TradeDetailsRequest) Reset() {
	*x = TradeDetailsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_distribution_ito_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TradeDetailsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeDetailsRequest) ProtoMessage() {}

func (x *TradeDetailsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_distribution_ito_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeDetailsRequest.ProtoReflect.Descriptor instead.
func (*TradeDetailsRequest) Descriptor() ([]byte, []int) {
	return file_distribution_ito_proto_rawDescGZIP(), []int{9}
}

func (x *TradeDetailsRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TradeDetailsRequest) GetProdCode() string {
	if x != nil && x.ProdCode != nil {
		return *x.ProdCode
	}
	return ""
}

func (x *TradeDetailsRequest) GetSpecCode() string {
	if x != nil && x.SpecCode != nil {
		return *x.SpecCode
	}
	return ""
}

func (x *TradeDetailsRequest) GetProdName() string {
	if x != nil && x.ProdName != nil {
		return *x.ProdName
	}
	return ""
}

func (x *TradeDetailsRequest) GetProdCat() string {
	if x != nil && x.ProdCat != nil {
		return *x.ProdCat
	}
	return ""
}

func (x *TradeDetailsRequest) GetProdSer() string {
	if x != nil && x.ProdSer != nil {
		return *x.ProdSer
	}
	return ""
}

func (x *TradeDetailsRequest) GetProdColor() string {
	if x != nil && x.ProdColor != nil {
		return *x.ProdColor
	}
	return ""
}

func (x *TradeDetailsRequest) GetProdSize() string {
	if x != nil && x.ProdSize != nil {
		return *x.ProdSize
	}
	return ""
}

func (x *TradeDetailsRequest) GetRetailPrice() float32 {
	if x != nil {
		return x.RetailPrice
	}
	return 0
}

func (x *TradeDetailsRequest) GetRetailAmount() float32 {
	if x != nil {
		return x.RetailAmount
	}
	return 0
}

func (x *TradeDetailsRequest) GetSharePrice() float32 {
	if x != nil && x.SharePrice != nil {
		return *x.SharePrice
	}
	return 0
}

func (x *TradeDetailsRequest) GetShareAmount() float32 {
	if x != nil && x.ShareAmount != nil {
		return *x.ShareAmount
	}
	return 0
}

func (x *TradeDetailsRequest) GetDiscount() float32 {
	if x != nil && x.Discount != nil {
		return *x.Discount
	}
	return 0
}

func (x *TradeDetailsRequest) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *TradeDetailsRequest) GetIsMaster() bool {
	if x != nil && x.IsMaster != nil {
		return *x.IsMaster
	}
	return false
}

func (x *TradeDetailsRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *TradeDetailsRequest) GetStyle() string {
	if x != nil && x.Style != nil {
		return *x.Style
	}
	return ""
}

func (x *TradeDetailsRequest) GetRemark() string {
	if x != nil && x.Remark != nil {
		return *x.Remark
	}
	return ""
}

type TradeDetailsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ProdCode     *string  `protobuf:"bytes,2,opt,name=prod_code,json=prodCode,proto3,oneof" json:"prod_code,omitempty"`
	SpecCode     *string  `protobuf:"bytes,3,opt,name=spec_code,json=specCode,proto3,oneof" json:"spec_code,omitempty"`
	ProdName     *string  `protobuf:"bytes,4,opt,name=prod_name,json=prodName,proto3,oneof" json:"prod_name,omitempty"`
	ProdCat      *string  `protobuf:"bytes,5,opt,name=prod_cat,json=prodCat,proto3,oneof" json:"prod_cat,omitempty"`
	ProdSer      *string  `protobuf:"bytes,6,opt,name=prod_ser,json=prodSer,proto3,oneof" json:"prod_ser,omitempty"`
	ProdColor    *string  `protobuf:"bytes,7,opt,name=prod_color,json=prodColor,proto3,oneof" json:"prod_color,omitempty"`
	ProdSize     *string  `protobuf:"bytes,8,opt,name=prod_size,json=prodSize,proto3,oneof" json:"prod_size,omitempty"`
	RetailPrice  float32  `protobuf:"fixed32,9,opt,name=retail_price,json=retailPrice,proto3" json:"retail_price,omitempty"`
	RetailAmount float32  `protobuf:"fixed32,10,opt,name=retail_amount,json=retailAmount,proto3" json:"retail_amount,omitempty"`
	SharePrice   *float32 `protobuf:"fixed32,11,opt,name=share_price,json=sharePrice,proto3,oneof" json:"share_price,omitempty"`
	ShareAmount  *float32 `protobuf:"fixed32,12,opt,name=share_amount,json=shareAmount,proto3,oneof" json:"share_amount,omitempty"`
	Discount     *float32 `protobuf:"fixed32,13,opt,name=discount,proto3,oneof" json:"discount,omitempty"`
	Num          int32    `protobuf:"varint,14,opt,name=num,proto3" json:"num,omitempty"`
	IsMaster     *bool    `protobuf:"varint,15,opt,name=is_master,json=isMaster,proto3,oneof" json:"is_master,omitempty"`
	Status       string   `protobuf:"bytes,16,opt,name=status,proto3" json:"status,omitempty"`
	Style        *string  `protobuf:"bytes,17,opt,name=style,proto3,oneof" json:"style,omitempty"`
	Remark       *string  `protobuf:"bytes,18,opt,name=remark,proto3,oneof" json:"remark,omitempty"`
	Trade        int64    `protobuf:"varint,19,opt,name=trade,proto3" json:"trade,omitempty"`
}

func (x *TradeDetailsResponse) Reset() {
	*x = TradeDetailsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_distribution_ito_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TradeDetailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeDetailsResponse) ProtoMessage() {}

func (x *TradeDetailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_distribution_ito_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeDetailsResponse.ProtoReflect.Descriptor instead.
func (*TradeDetailsResponse) Descriptor() ([]byte, []int) {
	return file_distribution_ito_proto_rawDescGZIP(), []int{10}
}

func (x *TradeDetailsResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TradeDetailsResponse) GetProdCode() string {
	if x != nil && x.ProdCode != nil {
		return *x.ProdCode
	}
	return ""
}

func (x *TradeDetailsResponse) GetSpecCode() string {
	if x != nil && x.SpecCode != nil {
		return *x.SpecCode
	}
	return ""
}

func (x *TradeDetailsResponse) GetProdName() string {
	if x != nil && x.ProdName != nil {
		return *x.ProdName
	}
	return ""
}

func (x *TradeDetailsResponse) GetProdCat() string {
	if x != nil && x.ProdCat != nil {
		return *x.ProdCat
	}
	return ""
}

func (x *TradeDetailsResponse) GetProdSer() string {
	if x != nil && x.ProdSer != nil {
		return *x.ProdSer
	}
	return ""
}

func (x *TradeDetailsResponse) GetProdColor() string {
	if x != nil && x.ProdColor != nil {
		return *x.ProdColor
	}
	return ""
}

func (x *TradeDetailsResponse) GetProdSize() string {
	if x != nil && x.ProdSize != nil {
		return *x.ProdSize
	}
	return ""
}

func (x *TradeDetailsResponse) GetRetailPrice() float32 {
	if x != nil {
		return x.RetailPrice
	}
	return 0
}

func (x *TradeDetailsResponse) GetRetailAmount() float32 {
	if x != nil {
		return x.RetailAmount
	}
	return 0
}

func (x *TradeDetailsResponse) GetSharePrice() float32 {
	if x != nil && x.SharePrice != nil {
		return *x.SharePrice
	}
	return 0
}

func (x *TradeDetailsResponse) GetShareAmount() float32 {
	if x != nil && x.ShareAmount != nil {
		return *x.ShareAmount
	}
	return 0
}

func (x *TradeDetailsResponse) GetDiscount() float32 {
	if x != nil && x.Discount != nil {
		return *x.Discount
	}
	return 0
}

func (x *TradeDetailsResponse) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *TradeDetailsResponse) GetIsMaster() bool {
	if x != nil && x.IsMaster != nil {
		return *x.IsMaster
	}
	return false
}

func (x *TradeDetailsResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *TradeDetailsResponse) GetStyle() string {
	if x != nil && x.Style != nil {
		return *x.Style
	}
	return ""
}

func (x *TradeDetailsResponse) GetRemark() string {
	if x != nil && x.Remark != nil {
		return *x.Remark
	}
	return ""
}

func (x *TradeDetailsResponse) GetTrade() int64 {
	if x != nil {
		return x.Trade
	}
	return 0
}

type TradeEmployeesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	EmployeeNo   string  `protobuf:"bytes,2,opt,name=employee_no,json=employeeNo,proto3" json:"employee_no,omitempty"`
	EmployeeName string  `protobuf:"bytes,3,opt,name=employee_name,json=employeeName,proto3" json:"employee_name,omitempty"`
	SharePercent float32 `protobuf:"fixed32,4,opt,name=share_percent,json=sharePercent,proto3" json:"share_percent,omitempty"`
}

func (x *TradeEmployeesRequest) Reset() {
	*x = TradeEmployeesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_distribution_ito_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TradeEmployeesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeEmployeesRequest) ProtoMessage() {}

func (x *TradeEmployeesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_distribution_ito_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeEmployeesRequest.ProtoReflect.Descriptor instead.
func (*TradeEmployeesRequest) Descriptor() ([]byte, []int) {
	return file_distribution_ito_proto_rawDescGZIP(), []int{11}
}

func (x *TradeEmployeesRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TradeEmployeesRequest) GetEmployeeNo() string {
	if x != nil {
		return x.EmployeeNo
	}
	return ""
}

func (x *TradeEmployeesRequest) GetEmployeeName() string {
	if x != nil {
		return x.EmployeeName
	}
	return ""
}

func (x *TradeEmployeesRequest) GetSharePercent() float32 {
	if x != nil {
		return x.SharePercent
	}
	return 0
}

type TradeEmployeesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	EmployeeNo   string  `protobuf:"bytes,2,opt,name=employee_no,json=employeeNo,proto3" json:"employee_no,omitempty"`
	EmployeeName string  `protobuf:"bytes,3,opt,name=employee_name,json=employeeName,proto3" json:"employee_name,omitempty"`
	SharePercent float32 `protobuf:"fixed32,4,opt,name=share_percent,json=sharePercent,proto3" json:"share_percent,omitempty"`
	Trade        int64   `protobuf:"varint,5,opt,name=trade,proto3" json:"trade,omitempty"`
}

func (x *TradeEmployeesResponse) Reset() {
	*x = TradeEmployeesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_distribution_ito_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TradeEmployeesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeEmployeesResponse) ProtoMessage() {}

func (x *TradeEmployeesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_distribution_ito_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeEmployeesResponse.ProtoReflect.Descriptor instead.
func (*TradeEmployeesResponse) Descriptor() ([]byte, []int) {
	return file_distribution_ito_proto_rawDescGZIP(), []int{12}
}

func (x *TradeEmployeesResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TradeEmployeesResponse) GetEmployeeNo() string {
	if x != nil {
		return x.EmployeeNo
	}
	return ""
}

func (x *TradeEmployeesResponse) GetEmployeeName() string {
	if x != nil {
		return x.EmployeeName
	}
	return ""
}

func (x *TradeEmployeesResponse) GetSharePercent() float32 {
	if x != nil {
		return x.SharePercent
	}
	return 0
}

func (x *TradeEmployeesResponse) GetTrade() int64 {
	if x != nil {
		return x.Trade
	}
	return 0
}

var File_distribution_ito_proto protoreflect.FileDescriptor

var file_distribution_ito_proto_rawDesc = []byte{
	0x0a, 0x16, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x74, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x25, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x64,
	0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x74, 0x6f, 0x1a,
	0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2b, 0x0a, 0x0e,
	0x4e, 0x65, 0x78, 0x74, 0x54, 0x69, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x4e, 0x6f, 0x22, 0x23, 0x0a, 0x0f, 0x4e, 0x65, 0x78,
	0x74, 0x54, 0x69, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x74, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x69, 0x64, 0x22, 0x6a,
	0x0a, 0x19, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x73, 0x44, 0x65, 0x73,
	0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x65,
	0x64, 0x69, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x65, 0x64, 0x69, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x65, 0x64, 0x69, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x65, 0x64, 0x69, 0x74, 0x55, 0x73, 0x65, 0x72, 0x22, 0xaf, 0x08, 0x0a, 0x16, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12,
	0x65, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x64, 0x69, 0x73, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x74, 0x6f,
	0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x45, 0x6d, 0x70,
	0x6c, 0x6f, 0x79, 0x65, 0x65, 0x73, 0x12, 0x5f, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e,
	0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x64, 0x65,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x72, 0x61,
	0x64, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74,
	0x72, 0x61, 0x64, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x4e, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x88, 0x01,
	0x01, 0x12, 0x28, 0x0a, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0c, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x73,
	0x65, 0x78, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x03, 0x73, 0x65, 0x78, 0x88,
	0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x61, 0x67, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x03, 0x52, 0x03, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x74, 0x65, 0x6c,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x03, 0x74, 0x65, 0x6c, 0x88, 0x01, 0x01,
	0x12, 0x30, 0x0a, 0x11, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x48, 0x05, 0x52, 0x10, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x63,
	0x69, 0x74, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x48, 0x06, 0x52, 0x0c, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x72, 0x43, 0x69, 0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x11,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63,
	0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x48, 0x07, 0x52, 0x10, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x88, 0x01, 0x01, 0x12, 0x28,
	0x0a, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x41, 0x72, 0x65, 0x61, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0a, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x66, 0x72,
	0x6f, 0x6d, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0b, 0x52, 0x09, 0x74, 0x72, 0x61, 0x64,
	0x65, 0x46, 0x72, 0x6f, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0c, 0x65, 0x64, 0x69, 0x74,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0c,
	0x52, 0x0a, 0x65, 0x64, 0x69, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12,
	0x20, 0x0a, 0x09, 0x65, 0x64, 0x69, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x16, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x0d, 0x52, 0x08, 0x65, 0x64, 0x69, 0x74, 0x55, 0x73, 0x65, 0x72, 0x88, 0x01,
	0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x42, 0x10, 0x0a,
	0x0e, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42,
	0x06, 0x0a, 0x04, 0x5f, 0x73, 0x65, 0x78, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x61, 0x67, 0x65, 0x42,
	0x06, 0x0a, 0x04, 0x5f, 0x74, 0x65, 0x6c, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x42, 0x10, 0x0a,
	0x0e, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x63, 0x69, 0x74, 0x79, 0x42,
	0x14, 0x0a, 0x12, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x64, 0x69, 0x73,
	0x74, 0x72, 0x69, 0x63, 0x74, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x42, 0x0d,
	0x0a, 0x0b, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x42, 0x0f, 0x0a,
	0x0d, 0x5f, 0x65, 0x64, 0x69, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x42, 0x0c,
	0x0a, 0x0a, 0x5f, 0x65, 0x64, 0x69, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x22, 0x85, 0x01, 0x0a,
	0x17, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x64, 0x69, 0x73, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x74,
	0x6f, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0xed, 0x08, 0x0a, 0x1f, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x54, 0x72,
	0x61, 0x64, 0x65, 0x73, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x73, 0x12, 0x65, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x65, 0x6d, 0x70, 0x6c,
	0x6f, 0x79, 0x65, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x64, 0x69,
	0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x64, 0x65,
	0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x73, 0x12, 0x5f, 0x0a, 0x0d, 0x74, 0x72, 0x61,
	0x64, 0x65, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x3a, 0x2e, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0c, 0x74, 0x72,
	0x61, 0x64, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x33, 0x0a, 0x16, 0x5f, 0x70,
	0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x50, 0x61, 0x72, 0x74,
	0x69, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12,
	0x10, 0x0a, 0x03, 0x74, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x69,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x72, 0x61, 0x64, 0x65, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x4e, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x07, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x01, 0x52, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x02, 0x52, 0x03, 0x73, 0x65, 0x78, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x61, 0x67,
	0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x03, 0x61, 0x67, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x15, 0x0a, 0x03, 0x74, 0x65, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04,
	0x52, 0x03, 0x74, 0x65, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x11, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x05, 0x48, 0x05, 0x52, 0x10, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x63, 0x69, 0x74, 0x79, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x05, 0x48, 0x06, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x43, 0x69, 0x74,
	0x79, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x11, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72,
	0x5f, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x07, 0x52, 0x10, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x44, 0x69, 0x73, 0x74, 0x72,
	0x69, 0x63, 0x74, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52,
	0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x41, 0x72, 0x65, 0x61, 0x88, 0x01, 0x01,
	0x12, 0x1d, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x88, 0x01, 0x01, 0x12,
	0x1b, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x0a, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a,
	0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x0b, 0x52, 0x09, 0x74, 0x72, 0x61, 0x64, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x88, 0x01, 0x01,
	0x12, 0x25, 0x0a, 0x0c, 0x65, 0x64, 0x69, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0c, 0x52, 0x0a, 0x65, 0x64, 0x69, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x65, 0x64, 0x69, 0x74, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0d, 0x52, 0x08, 0x65, 0x64,
	0x69, 0x74, 0x55, 0x73, 0x65, 0x72, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x73, 0x65, 0x78, 0x42,
	0x06, 0x0a, 0x04, 0x5f, 0x61, 0x67, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x74, 0x65, 0x6c, 0x42,
	0x14, 0x0a, 0x12, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x6e, 0x63, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x5f, 0x63, 0x69, 0x74, 0x79, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x42, 0x10, 0x0a,
	0x0e, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x42,
	0x0a, 0x0a, 0x08, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x09, 0x0a, 0x07, 0x5f,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65,
	0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x65, 0x64, 0x69, 0x74, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x65, 0x64, 0x69, 0x74, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x22, 0xab, 0x08, 0x0a, 0x12, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x54, 0x72,
	0x61, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x65, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x65,
	0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3c,
	0x2e, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x45, 0x6d, 0x70, 0x6c,
	0x6f, 0x79, 0x65, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0e, 0x74, 0x72,
	0x61, 0x64, 0x65, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x73, 0x12, 0x5f, 0x0a, 0x0d,
	0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x64, 0x69, 0x73, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x61, 0x64,
	0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x0c, 0x74, 0x72, 0x61, 0x64, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x10, 0x0a,
	0x03, 0x74, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x69, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x72, 0x61, 0x64, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x4e, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01,
	0x52, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x15, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02,
	0x52, 0x03, 0x73, 0x65, 0x78, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x61, 0x67, 0x65, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x03, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x15, 0x0a, 0x03, 0x74, 0x65, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x03,
	0x74, 0x65, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x11, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x05, 0x48, 0x05, 0x52, 0x10, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x6e, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x5f, 0x63, 0x69, 0x74, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x06, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x43, 0x69, 0x74, 0x79, 0x88,
	0x01, 0x01, 0x12, 0x30, 0x0a, 0x11, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x64,
	0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x48, 0x07, 0x52,
	0x10, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63,
	0x74, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72,
	0x5f, 0x61, 0x72, 0x65, 0x61, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x0c, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x41, 0x72, 0x65, 0x61, 0x88, 0x01, 0x01, 0x12, 0x1d,
	0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a,
	0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0a, 0x52,
	0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x74, 0x72,
	0x61, 0x64, 0x65, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0b,
	0x52, 0x09, 0x74, 0x72, 0x61, 0x64, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x25,
	0x0a, 0x0c, 0x65, 0x64, 0x69, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x0c, 0x52, 0x0a, 0x65, 0x64, 0x69, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x65, 0x64, 0x69, 0x74, 0x5f, 0x75, 0x73,
	0x65, 0x72, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0d, 0x52, 0x08, 0x65, 0x64, 0x69, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x73, 0x65, 0x78, 0x42, 0x06, 0x0a,
	0x04, 0x5f, 0x61, 0x67, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x74, 0x65, 0x6c, 0x42, 0x14, 0x0a,
	0x12, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x6e, 0x63, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72,
	0x5f, 0x63, 0x69, 0x74, 0x79, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x42, 0x10, 0x0a, 0x0e, 0x5f,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x42, 0x0a, 0x0a,
	0x08, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x66,
	0x72, 0x6f, 0x6d, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x65, 0x64, 0x69, 0x74, 0x5f, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x65, 0x64, 0x69, 0x74, 0x5f, 0x75, 0x73,
	0x65, 0x72, 0x22, 0xca, 0x08, 0x0a, 0x13, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x54, 0x72, 0x61, 0x64,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x66, 0x0a, 0x0f, 0x74, 0x72,
	0x61, 0x64, 0x65, 0x5f, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x64, 0x69, 0x73, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x61, 0x64,
	0x65, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65,
	0x65, 0x73, 0x12, 0x60, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x64, 0x69, 0x73, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x74,
	0x6f, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x64, 0x65, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x69,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x74, 0x72, 0x61, 0x64, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x4e, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0c, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x15,
	0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x03, 0x73,
	0x65, 0x78, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x61, 0x67, 0x65, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x03, 0x52, 0x03, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03,
	0x74, 0x65, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x03, 0x74, 0x65, 0x6c,
	0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x11, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x48, 0x05,
	0x52, 0x10, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e,
	0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x5f, 0x63, 0x69, 0x74, 0x79, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x48, 0x06, 0x52, 0x0c,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x43, 0x69, 0x74, 0x79, 0x88, 0x01, 0x01, 0x12,
	0x30, 0x0a, 0x11, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x64, 0x69, 0x73, 0x74,
	0x72, 0x69, 0x63, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x48, 0x07, 0x52, 0x10, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x28, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x72,
	0x65, 0x61, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x41, 0x72, 0x65, 0x61, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0a, 0x52, 0x06, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x64, 0x65,
	0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0b, 0x52, 0x09, 0x74,
	0x72, 0x61, 0x64, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0c, 0x65,
	0x64, 0x69, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x0c, 0x52, 0x0a, 0x65, 0x64, 0x69, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x88,
	0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x65, 0x64, 0x69, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18,
	0x17, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0d, 0x52, 0x08, 0x65, 0x64, 0x69, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x73, 0x65, 0x78, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x61,
	0x67, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x74, 0x65, 0x6c, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65,
	0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x63, 0x69,
	0x74, 0x79, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f,
	0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x66, 0x72, 0x6f, 0x6d,
	0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x65, 0x64, 0x69, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x65, 0x64, 0x69, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x22,
	0x2c, 0x0a, 0x1a, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x73, 0x52, 0x65,
	0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0xfe, 0x05,
	0x0a, 0x13, 0x54, 0x72, 0x61, 0x64, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x64,
	0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x73, 0x70, 0x65, 0x63, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x08, 0x73, 0x70,
	0x65, 0x63, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x70, 0x72, 0x6f,
	0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x08,
	0x70, 0x72, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x70,
	0x72, 0x6f, 0x64, 0x5f, 0x63, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52,
	0x07, 0x70, 0x72, 0x6f, 0x64, 0x43, 0x61, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x70,
	0x72, 0x6f, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52,
	0x07, 0x70, 0x72, 0x6f, 0x64, 0x53, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x70,
	0x72, 0x6f, 0x64, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x05, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x12,
	0x20, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x06, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x72, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0b, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x02, 0x48, 0x07,
	0x52, 0x0a, 0x73, 0x68, 0x61, 0x72, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x26, 0x0a, 0x0c, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x02, 0x48, 0x08, 0x52, 0x0b, 0x73, 0x68, 0x61, 0x72, 0x65, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x02, 0x48, 0x09, 0x52, 0x08, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x20, 0x0a, 0x09, 0x69, 0x73,
	0x5f, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x48, 0x0a, 0x52,
	0x08, 0x69, 0x73, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x19, 0x0a, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x0b, 0x52, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x1b, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x0c, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a,
	0x5f, 0x70, 0x72, 0x6f, 0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x73,
	0x70, 0x65, 0x63, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x72, 0x6f,
	0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x5f,
	0x63, 0x61, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x5f, 0x73, 0x65, 0x72,
	0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x42,
	0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x42, 0x0e, 0x0a,
	0x0c, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x42, 0x0f, 0x0a,
	0x0d, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x0b,
	0x0a, 0x09, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x0c, 0x0a, 0x0a, 0x5f,
	0x69, 0x73, 0x5f, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x73, 0x74,
	0x79, 0x6c, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x95,
	0x06, 0x0a, 0x14, 0x54, 0x72, 0x61, 0x64, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x70, 0x72,
	0x6f, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x73, 0x70, 0x65,
	0x63, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x08,
	0x73, 0x70, 0x65, 0x63, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x70,
	0x72, 0x6f, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02,
	0x52, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a,
	0x08, 0x70, 0x72, 0x6f, 0x64, 0x5f, 0x63, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x03, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x43, 0x61, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a,
	0x08, 0x70, 0x72, 0x6f, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x04, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x53, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x64, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x05, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x88, 0x01,
	0x01, 0x12, 0x20, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x53, 0x69, 0x7a, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x72, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x72,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0b, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x02,
	0x48, 0x07, 0x52, 0x0a, 0x73, 0x68, 0x61, 0x72, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x26, 0x0a, 0x0c, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x02, 0x48, 0x08, 0x52, 0x0b, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x02, 0x48, 0x09, 0x52, 0x08, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75,
	0x6d, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x20, 0x0a, 0x09,
	0x69, 0x73, 0x5f, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x48,
	0x0a, 0x52, 0x08, 0x69, 0x73, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x19, 0x0a, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0b, 0x52, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x1b, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x0c, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x88, 0x01, 0x01, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x72, 0x61, 0x64, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74,
	0x72, 0x61, 0x64, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0b,
	0x0a, 0x09, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x5f, 0x63, 0x61, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f,
	0x70, 0x72, 0x6f, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x72, 0x6f,
	0x64, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x72, 0x6f, 0x64,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x69, 0x73, 0x5f, 0x6d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x92, 0x01, 0x0a, 0x15, 0x54, 0x72, 0x61, 0x64, 0x65,
	0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x5f, 0x6e, 0x6f, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x4e,
	0x6f, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79,
	0x65, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f,
	0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x22, 0xa9, 0x01, 0x0a, 0x16,
	0x54, 0x72, 0x61, 0x64, 0x65, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79,
	0x65, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6d, 0x70,
	0x6c, 0x6f, 0x79, 0x65, 0x65, 0x4e, 0x6f, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6d, 0x70, 0x6c, 0x6f,
	0x79, 0x65, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x0c, 0x73, 0x68, 0x61, 0x72, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x72, 0x61, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x74, 0x72, 0x61, 0x64, 0x65, 0x32, 0xc6, 0x07, 0x0a, 0x1c, 0x44, 0x69, 0x73, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x73, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x81, 0x01, 0x0a, 0x06, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x12, 0x39, 0x2e, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x64, 0x69, 0x73, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a,
	0x2e, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x54, 0x72, 0x61, 0x64,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x65, 0x0a, 0x07,
	0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x12, 0x40, 0x2e, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x64,
	0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x74, 0x6f, 0x2e,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x73, 0x44, 0x65, 0x73, 0x74, 0x72,
	0x6f, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x12, 0x86, 0x01, 0x0a, 0x13, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x65, 0x78, 0x74, 0x54, 0x69, 0x64, 0x12, 0x35, 0x2e, 0x64, 0x69,
	0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x74, 0x6f, 0x2e, 0x4e, 0x65, 0x78, 0x74, 0x54, 0x69, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x36, 0x2e, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x4e, 0x65, 0x78, 0x74, 0x54,
	0x69, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x87, 0x01, 0x0a,
	0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3d, 0x2e, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x64, 0x69, 0x73,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x3e, 0x2e, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x64, 0x69, 0x73, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x95, 0x01, 0x0a, 0x0d, 0x50, 0x61, 0x72, 0x74, 0x69,
	0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x46, 0x2e, 0x64, 0x69, 0x73, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x74, 0x6f,
	0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x73, 0x50, 0x61, 0x72, 0x74,
	0x69, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x3a, 0x2e, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x54, 0x72,
	0x61, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x8b,
	0x01, 0x0a, 0x08, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x12, 0x41, 0x2e, 0x64, 0x69,
	0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x73, 0x52,
	0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a,
	0x2e, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x54, 0x72, 0x61, 0x64,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x81, 0x01, 0x0a,
	0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x39, 0x2e, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x64,
	0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x74, 0x6f, 0x2e,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x54, 0x72, 0x61, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x42, 0x13, 0x5a, 0x11, 0x2e, 0x2e, 0x2f, 0x70, 0x62, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_distribution_ito_proto_rawDescOnce sync.Once
	file_distribution_ito_proto_rawDescData = file_distribution_ito_proto_rawDesc
)

func file_distribution_ito_proto_rawDescGZIP() []byte {
	file_distribution_ito_proto_rawDescOnce.Do(func() {
		file_distribution_ito_proto_rawDescData = protoimpl.X.CompressGZIP(file_distribution_ito_proto_rawDescData)
	})
	return file_distribution_ito_proto_rawDescData
}

var file_distribution_ito_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_distribution_ito_proto_goTypes = []interface{}{
	(*NextTidRequest)(nil),                  // 0: distribution_service.distribution_ito.NextTidRequest
	(*NextTidResponse)(nil),                 // 1: distribution_service.distribution_ito.NextTidResponse
	(*StoreTradesDestroyRequest)(nil),       // 2: distribution_service.distribution_ito.StoreTradesDestroyRequest
	(*StoreTradesListRequest)(nil),          // 3: distribution_service.distribution_ito.StoreTradesListRequest
	(*StoreTradesListResponse)(nil),         // 4: distribution_service.distribution_ito.StoreTradesListResponse
	(*StoreTradesPartialUpdateRequest)(nil), // 5: distribution_service.distribution_ito.StoreTradesPartialUpdateRequest
	(*StoreTradesRequest)(nil),              // 6: distribution_service.distribution_ito.StoreTradesRequest
	(*StoreTradesResponse)(nil),             // 7: distribution_service.distribution_ito.StoreTradesResponse
	(*StoreTradesRetrieveRequest)(nil),      // 8: distribution_service.distribution_ito.StoreTradesRetrieveRequest
	(*TradeDetailsRequest)(nil),             // 9: distribution_service.distribution_ito.TradeDetailsRequest
	(*TradeDetailsResponse)(nil),            // 10: distribution_service.distribution_ito.TradeDetailsResponse
	(*TradeEmployeesRequest)(nil),           // 11: distribution_service.distribution_ito.TradeEmployeesRequest
	(*TradeEmployeesResponse)(nil),          // 12: distribution_service.distribution_ito.TradeEmployeesResponse
	(*emptypb.Empty)(nil),                   // 13: google.protobuf.Empty
}
var file_distribution_ito_proto_depIdxs = []int32{
	11, // 0: distribution_service.distribution_ito.StoreTradesListRequest.trade_employees:type_name -> distribution_service.distribution_ito.TradeEmployeesRequest
	9,  // 1: distribution_service.distribution_ito.StoreTradesListRequest.trade_details:type_name -> distribution_service.distribution_ito.TradeDetailsRequest
	7,  // 2: distribution_service.distribution_ito.StoreTradesListResponse.results:type_name -> distribution_service.distribution_ito.StoreTradesResponse
	11, // 3: distribution_service.distribution_ito.StoreTradesPartialUpdateRequest.trade_employees:type_name -> distribution_service.distribution_ito.TradeEmployeesRequest
	9,  // 4: distribution_service.distribution_ito.StoreTradesPartialUpdateRequest.trade_details:type_name -> distribution_service.distribution_ito.TradeDetailsRequest
	11, // 5: distribution_service.distribution_ito.StoreTradesRequest.trade_employees:type_name -> distribution_service.distribution_ito.TradeEmployeesRequest
	9,  // 6: distribution_service.distribution_ito.StoreTradesRequest.trade_details:type_name -> distribution_service.distribution_ito.TradeDetailsRequest
	12, // 7: distribution_service.distribution_ito.StoreTradesResponse.trade_employees:type_name -> distribution_service.distribution_ito.TradeEmployeesResponse
	10, // 8: distribution_service.distribution_ito.StoreTradesResponse.trade_details:type_name -> distribution_service.distribution_ito.TradeDetailsResponse
	6,  // 9: distribution_service.distribution_ito.DistributionTradesController.Create:input_type -> distribution_service.distribution_ito.StoreTradesRequest
	2,  // 10: distribution_service.distribution_ito.DistributionTradesController.Destroy:input_type -> distribution_service.distribution_ito.StoreTradesDestroyRequest
	0,  // 11: distribution_service.distribution_ito.DistributionTradesController.DistributionNextTid:input_type -> distribution_service.distribution_ito.NextTidRequest
	3,  // 12: distribution_service.distribution_ito.DistributionTradesController.List:input_type -> distribution_service.distribution_ito.StoreTradesListRequest
	5,  // 13: distribution_service.distribution_ito.DistributionTradesController.PartialUpdate:input_type -> distribution_service.distribution_ito.StoreTradesPartialUpdateRequest
	8,  // 14: distribution_service.distribution_ito.DistributionTradesController.Retrieve:input_type -> distribution_service.distribution_ito.StoreTradesRetrieveRequest
	6,  // 15: distribution_service.distribution_ito.DistributionTradesController.Update:input_type -> distribution_service.distribution_ito.StoreTradesRequest
	7,  // 16: distribution_service.distribution_ito.DistributionTradesController.Create:output_type -> distribution_service.distribution_ito.StoreTradesResponse
	13, // 17: distribution_service.distribution_ito.DistributionTradesController.Destroy:output_type -> google.protobuf.Empty
	1,  // 18: distribution_service.distribution_ito.DistributionTradesController.DistributionNextTid:output_type -> distribution_service.distribution_ito.NextTidResponse
	4,  // 19: distribution_service.distribution_ito.DistributionTradesController.List:output_type -> distribution_service.distribution_ito.StoreTradesListResponse
	7,  // 20: distribution_service.distribution_ito.DistributionTradesController.PartialUpdate:output_type -> distribution_service.distribution_ito.StoreTradesResponse
	7,  // 21: distribution_service.distribution_ito.DistributionTradesController.Retrieve:output_type -> distribution_service.distribution_ito.StoreTradesResponse
	7,  // 22: distribution_service.distribution_ito.DistributionTradesController.Update:output_type -> distribution_service.distribution_ito.StoreTradesResponse
	16, // [16:23] is the sub-list for method output_type
	9,  // [9:16] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_distribution_ito_proto_init() }
func file_distribution_ito_proto_init() {
	if File_distribution_ito_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_distribution_ito_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NextTidRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_distribution_ito_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NextTidResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_distribution_ito_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreTradesDestroyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_distribution_ito_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreTradesListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_distribution_ito_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreTradesListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_distribution_ito_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreTradesPartialUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_distribution_ito_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreTradesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_distribution_ito_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreTradesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_distribution_ito_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreTradesRetrieveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_distribution_ito_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TradeDetailsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_distribution_ito_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TradeDetailsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_distribution_ito_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TradeEmployeesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_distribution_ito_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TradeEmployeesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_distribution_ito_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_distribution_ito_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_distribution_ito_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_distribution_ito_proto_msgTypes[7].OneofWrappers = []interface{}{}
	file_distribution_ito_proto_msgTypes[9].OneofWrappers = []interface{}{}
	file_distribution_ito_proto_msgTypes[10].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_distribution_ito_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_distribution_ito_proto_goTypes,
		DependencyIndexes: file_distribution_ito_proto_depIdxs,
		MessageInfos:      file_distribution_ito_proto_msgTypes,
	}.Build()
	File_distribution_ito_proto = out.File
	file_distribution_ito_proto_rawDesc = nil
	file_distribution_ito_proto_goTypes = nil
	file_distribution_ito_proto_depIdxs = nil
}
