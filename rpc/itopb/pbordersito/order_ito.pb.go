// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.19.4
// source: order_ito.proto

package pbordersito

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CtmCouponDestroyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CtmCouponDestroyResponse) Reset() {
	*x = CtmCouponDestroyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmCouponDestroyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmCouponDestroyResponse) ProtoMessage() {}

func (x *CtmCouponDestroyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmCouponDestroyResponse.ProtoReflect.Descriptor instead.
func (*CtmCouponDestroyResponse) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{0}
}

type CtmOrderConfDestroyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CtmOrderConfDestroyResponse) Reset() {
	*x = CtmOrderConfDestroyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmOrderConfDestroyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmOrderConfDestroyResponse) ProtoMessage() {}

func (x *CtmOrderConfDestroyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmOrderConfDestroyResponse.ProtoReflect.Descriptor instead.
func (*CtmOrderConfDestroyResponse) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{1}
}

type CtmOrderDestroyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CtmOrderDestroyResponse) Reset() {
	*x = CtmOrderDestroyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmOrderDestroyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmOrderDestroyResponse) ProtoMessage() {}

func (x *CtmOrderDestroyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmOrderDestroyResponse.ProtoReflect.Descriptor instead.
func (*CtmOrderDestroyResponse) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{2}
}

type CtmRefundReasonDestroyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CtmRefundReasonDestroyResponse) Reset() {
	*x = CtmRefundReasonDestroyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmRefundReasonDestroyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmRefundReasonDestroyResponse) ProtoMessage() {}

func (x *CtmRefundReasonDestroyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmRefundReasonDestroyResponse.ProtoReflect.Descriptor instead.
func (*CtmRefundReasonDestroyResponse) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{3}
}

type TradeStatusOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code  int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *TradeStatusOptions) Reset() {
	*x = TradeStatusOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TradeStatusOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeStatusOptions) ProtoMessage() {}

func (x *TradeStatusOptions) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeStatusOptions.ProtoReflect.Descriptor instead.
func (*TradeStatusOptions) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{4}
}

func (x *TradeStatusOptions) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *TradeStatusOptions) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type TradeStatusOptionsListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*TradeStatusOptions `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Count   int32                 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *TradeStatusOptionsListResponse) Reset() {
	*x = TradeStatusOptionsListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TradeStatusOptionsListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeStatusOptionsListResponse) ProtoMessage() {}

func (x *TradeStatusOptionsListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeStatusOptionsListResponse.ProtoReflect.Descriptor instead.
func (*TradeStatusOptionsListResponse) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{5}
}

func (x *TradeStatusOptionsListResponse) GetResults() []*TradeStatusOptions {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *TradeStatusOptionsListResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type TradeStatusOptionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TradeStatusOptionsRequest) Reset() {
	*x = TradeStatusOptionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TradeStatusOptionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeStatusOptionsRequest) ProtoMessage() {}

func (x *TradeStatusOptionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeStatusOptionsRequest.ProtoReflect.Descriptor instead.
func (*TradeStatusOptionsRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{6}
}

type ChildrenBatchUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	IsValid bool  `protobuf:"varint,2,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
}

func (x *ChildrenBatchUpdateRequest) Reset() {
	*x = ChildrenBatchUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChildrenBatchUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChildrenBatchUpdateRequest) ProtoMessage() {}

func (x *ChildrenBatchUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChildrenBatchUpdateRequest.ProtoReflect.Descriptor instead.
func (*ChildrenBatchUpdateRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{7}
}

func (x *ChildrenBatchUpdateRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ChildrenBatchUpdateRequest) GetIsValid() bool {
	if x != nil {
		return x.IsValid
	}
	return false
}

type ChildrenBatchUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Affected int32 `protobuf:"varint,1,opt,name=affected,proto3" json:"affected,omitempty"`
}

func (x *ChildrenBatchUpdateResponse) Reset() {
	*x = ChildrenBatchUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChildrenBatchUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChildrenBatchUpdateResponse) ProtoMessage() {}

func (x *ChildrenBatchUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChildrenBatchUpdateResponse.ProtoReflect.Descriptor instead.
func (*ChildrenBatchUpdateResponse) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{8}
}

func (x *ChildrenBatchUpdateResponse) GetAffected() int32 {
	if x != nil {
		return x.Affected
	}
	return 0
}

type RefundReasonCheckListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderConfig int64 `protobuf:"varint,1,opt,name=order_config,json=orderConfig,proto3" json:"order_config,omitempty"`
	Type        int32 `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *RefundReasonCheckListRequest) Reset() {
	*x = RefundReasonCheckListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefundReasonCheckListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefundReasonCheckListRequest) ProtoMessage() {}

func (x *RefundReasonCheckListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefundReasonCheckListRequest.ProtoReflect.Descriptor instead.
func (*RefundReasonCheckListRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{9}
}

func (x *RefundReasonCheckListRequest) GetOrderConfig() int64 {
	if x != nil {
		return x.OrderConfig
	}
	return 0
}

func (x *RefundReasonCheckListRequest) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type RefundReasonCheckListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReasonName string `protobuf:"bytes,1,opt,name=reason_name,json=reasonName,proto3" json:"reason_name,omitempty"`
	ReasonCode string `protobuf:"bytes,2,opt,name=reason_code,json=reasonCode,proto3" json:"reason_code,omitempty"`
}

func (x *RefundReasonCheckListResponse) Reset() {
	*x = RefundReasonCheckListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefundReasonCheckListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefundReasonCheckListResponse) ProtoMessage() {}

func (x *RefundReasonCheckListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefundReasonCheckListResponse.ProtoReflect.Descriptor instead.
func (*RefundReasonCheckListResponse) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{10}
}

func (x *RefundReasonCheckListResponse) GetReasonName() string {
	if x != nil {
		return x.ReasonName
	}
	return ""
}

func (x *RefundReasonCheckListResponse) GetReasonCode() string {
	if x != nil {
		return x.ReasonCode
	}
	return ""
}

type RefundReasonOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code  int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *RefundReasonOption) Reset() {
	*x = RefundReasonOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefundReasonOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefundReasonOption) ProtoMessage() {}

func (x *RefundReasonOption) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefundReasonOption.ProtoReflect.Descriptor instead.
func (*RefundReasonOption) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{11}
}

func (x *RefundReasonOption) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *RefundReasonOption) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type RefundReasonOptionListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*RefundReasonOption `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Count   int32                 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *RefundReasonOptionListResponse) Reset() {
	*x = RefundReasonOptionListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefundReasonOptionListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefundReasonOptionListResponse) ProtoMessage() {}

func (x *RefundReasonOptionListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefundReasonOptionListResponse.ProtoReflect.Descriptor instead.
func (*RefundReasonOptionListResponse) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{12}
}

func (x *RefundReasonOptionListResponse) GetResults() []*RefundReasonOption {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *RefundReasonOptionListResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type RefundReasonOptionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RefundReasonOptionsRequest) Reset() {
	*x = RefundReasonOptionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefundReasonOptionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefundReasonOptionsRequest) ProtoMessage() {}

func (x *RefundReasonOptionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefundReasonOptionsRequest.ProtoReflect.Descriptor instead.
func (*RefundReasonOptionsRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{13}
}

type ReasonTypeOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code  int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ReasonTypeOption) Reset() {
	*x = ReasonTypeOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReasonTypeOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReasonTypeOption) ProtoMessage() {}

func (x *ReasonTypeOption) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReasonTypeOption.ProtoReflect.Descriptor instead.
func (*ReasonTypeOption) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{14}
}

func (x *ReasonTypeOption) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ReasonTypeOption) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type ReasonTypeOptionListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*ReasonTypeOption `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Count   int32               `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *ReasonTypeOptionListResponse) Reset() {
	*x = ReasonTypeOptionListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReasonTypeOptionListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReasonTypeOptionListResponse) ProtoMessage() {}

func (x *ReasonTypeOptionListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReasonTypeOptionListResponse.ProtoReflect.Descriptor instead.
func (*ReasonTypeOptionListResponse) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{15}
}

func (x *ReasonTypeOptionListResponse) GetResults() []*ReasonTypeOption {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *ReasonTypeOptionListResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ReasonTypeOptionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TradeType int32 `protobuf:"varint,1,opt,name=trade_type,json=tradeType,proto3" json:"trade_type,omitempty"`
}

func (x *ReasonTypeOptionsRequest) Reset() {
	*x = ReasonTypeOptionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReasonTypeOptionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReasonTypeOptionsRequest) ProtoMessage() {}

func (x *ReasonTypeOptionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReasonTypeOptionsRequest.ProtoReflect.Descriptor instead.
func (*ReasonTypeOptionsRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{16}
}

func (x *ReasonTypeOptionsRequest) GetTradeType() int32 {
	if x != nil {
		return x.TradeType
	}
	return 0
}

type CtmRefundReasonChildrenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreateTime  string  `protobuf:"bytes,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime  string  `protobuf:"bytes,3,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	Type        int32   `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
	ReasonCode  int32   `protobuf:"varint,5,opt,name=reason_code,json=reasonCode,proto3" json:"reason_code,omitempty"`
	ReasonName  string  `protobuf:"bytes,6,opt,name=reason_name,json=reasonName,proto3" json:"reason_name,omitempty"`
	ReasonDesc  *string `protobuf:"bytes,7,opt,name=reason_desc,json=reasonDesc,proto3,oneof" json:"reason_desc,omitempty"`
	IsValid     bool    `protobuf:"varint,8,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
	OrderConfig *int64  `protobuf:"varint,9,opt,name=order_config,json=orderConfig,proto3,oneof" json:"order_config,omitempty"`
	Parent      *int64  `protobuf:"varint,10,opt,name=parent,proto3,oneof" json:"parent,omitempty"`
}

func (x *CtmRefundReasonChildrenResponse) Reset() {
	*x = CtmRefundReasonChildrenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmRefundReasonChildrenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmRefundReasonChildrenResponse) ProtoMessage() {}

func (x *CtmRefundReasonChildrenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmRefundReasonChildrenResponse.ProtoReflect.Descriptor instead.
func (*CtmRefundReasonChildrenResponse) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{17}
}

func (x *CtmRefundReasonChildrenResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CtmRefundReasonChildrenResponse) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *CtmRefundReasonChildrenResponse) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *CtmRefundReasonChildrenResponse) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *CtmRefundReasonChildrenResponse) GetReasonCode() int32 {
	if x != nil {
		return x.ReasonCode
	}
	return 0
}

func (x *CtmRefundReasonChildrenResponse) GetReasonName() string {
	if x != nil {
		return x.ReasonName
	}
	return ""
}

func (x *CtmRefundReasonChildrenResponse) GetReasonDesc() string {
	if x != nil && x.ReasonDesc != nil {
		return *x.ReasonDesc
	}
	return ""
}

func (x *CtmRefundReasonChildrenResponse) GetIsValid() bool {
	if x != nil {
		return x.IsValid
	}
	return false
}

func (x *CtmRefundReasonChildrenResponse) GetOrderConfig() int64 {
	if x != nil && x.OrderConfig != nil {
		return *x.OrderConfig
	}
	return 0
}

func (x *CtmRefundReasonChildrenResponse) GetParent() int64 {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return 0
}

type TradeReasonOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32                              `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreateTime  string                             `protobuf:"bytes,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime  string                             `protobuf:"bytes,3,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	Type        int32                              `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
	ReasonCode  int32                              `protobuf:"varint,5,opt,name=reason_code,json=reasonCode,proto3" json:"reason_code,omitempty"`
	ReasonName  string                             `protobuf:"bytes,6,opt,name=reason_name,json=reasonName,proto3" json:"reason_name,omitempty"`
	ReasonDesc  *string                            `protobuf:"bytes,7,opt,name=reason_desc,json=reasonDesc,proto3,oneof" json:"reason_desc,omitempty"`
	IsValid     bool                               `protobuf:"varint,8,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
	OrderConfig *int64                             `protobuf:"varint,9,opt,name=order_config,json=orderConfig,proto3,oneof" json:"order_config,omitempty"`
	Parent      *int64                             `protobuf:"varint,10,opt,name=parent,proto3,oneof" json:"parent,omitempty"`
	TypeName    string                             `protobuf:"bytes,11,opt,name=type_name,json=typeName,proto3" json:"type_name,omitempty"`
	Children    []*CtmRefundReasonChildrenResponse `protobuf:"bytes,12,rep,name=children,proto3" json:"children,omitempty"`
}

func (x *TradeReasonOption) Reset() {
	*x = TradeReasonOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TradeReasonOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeReasonOption) ProtoMessage() {}

func (x *TradeReasonOption) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeReasonOption.ProtoReflect.Descriptor instead.
func (*TradeReasonOption) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{18}
}

func (x *TradeReasonOption) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TradeReasonOption) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *TradeReasonOption) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *TradeReasonOption) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *TradeReasonOption) GetReasonCode() int32 {
	if x != nil {
		return x.ReasonCode
	}
	return 0
}

func (x *TradeReasonOption) GetReasonName() string {
	if x != nil {
		return x.ReasonName
	}
	return ""
}

func (x *TradeReasonOption) GetReasonDesc() string {
	if x != nil && x.ReasonDesc != nil {
		return *x.ReasonDesc
	}
	return ""
}

func (x *TradeReasonOption) GetIsValid() bool {
	if x != nil {
		return x.IsValid
	}
	return false
}

func (x *TradeReasonOption) GetOrderConfig() int64 {
	if x != nil && x.OrderConfig != nil {
		return *x.OrderConfig
	}
	return 0
}

func (x *TradeReasonOption) GetParent() int64 {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return 0
}

func (x *TradeReasonOption) GetTypeName() string {
	if x != nil {
		return x.TypeName
	}
	return ""
}

func (x *TradeReasonOption) GetChildren() []*CtmRefundReasonChildrenResponse {
	if x != nil {
		return x.Children
	}
	return nil
}

type TradeReasonOptionListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*TradeReasonOption `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Count   int32                `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *TradeReasonOptionListResponse) Reset() {
	*x = TradeReasonOptionListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TradeReasonOptionListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeReasonOptionListResponse) ProtoMessage() {}

func (x *TradeReasonOptionListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeReasonOptionListResponse.ProtoReflect.Descriptor instead.
func (*TradeReasonOptionListResponse) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{19}
}

func (x *TradeReasonOptionListResponse) GetResults() []*TradeReasonOption {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *TradeReasonOptionListResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type TradeReasonOptionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TradeType int32  `protobuf:"varint,1,opt,name=trade_type,json=tradeType,proto3" json:"trade_type,omitempty"`
	Filters   string `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
}

func (x *TradeReasonOptionsRequest) Reset() {
	*x = TradeReasonOptionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TradeReasonOptionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeReasonOptionsRequest) ProtoMessage() {}

func (x *TradeReasonOptionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeReasonOptionsRequest.ProtoReflect.Descriptor instead.
func (*TradeReasonOptionsRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{20}
}

func (x *TradeReasonOptionsRequest) GetTradeType() int32 {
	if x != nil {
		return x.TradeType
	}
	return 0
}

func (x *TradeReasonOptionsRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

type CtmCouponCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CouponSku      string  `protobuf:"bytes,2,opt,name=coupon_sku,json=couponSku,proto3" json:"coupon_sku,omitempty"`
	CouponName     string  `protobuf:"bytes,3,opt,name=coupon_name,json=couponName,proto3" json:"coupon_name,omitempty"`
	CouponCode     string  `protobuf:"bytes,4,opt,name=coupon_code,json=couponCode,proto3" json:"coupon_code,omitempty"`
	CouponIntro    *string `protobuf:"bytes,5,opt,name=coupon_intro,json=couponIntro,proto3,oneof" json:"coupon_intro,omitempty"`
	MeetType       int32   `protobuf:"varint,6,opt,name=meet_type,json=meetType,proto3" json:"meet_type,omitempty"`
	DiscountType   int32   `protobuf:"varint,7,opt,name=discount_type,json=discountType,proto3" json:"discount_type,omitempty"`
	TriggerAmount  *string `protobuf:"bytes,8,opt,name=trigger_amount,json=triggerAmount,proto3,oneof" json:"trigger_amount,omitempty"`
	DiscountAmount *string `protobuf:"bytes,9,opt,name=discount_amount,json=discountAmount,proto3,oneof" json:"discount_amount,omitempty"`
	TriggerQty     *string `protobuf:"bytes,10,opt,name=trigger_qty,json=triggerQty,proto3,oneof" json:"trigger_qty,omitempty"`
	Discount       *string `protobuf:"bytes,11,opt,name=discount,proto3,oneof" json:"discount,omitempty"`
	CanStack       bool    `protobuf:"varint,12,opt,name=can_stack,json=canStack,proto3" json:"can_stack,omitempty"`
	CouponStatus   int32   `protobuf:"varint,13,opt,name=coupon_status,json=couponStatus,proto3" json:"coupon_status,omitempty"`
	AcquireTime    *string `protobuf:"bytes,14,opt,name=acquire_time,json=acquireTime,proto3,oneof" json:"acquire_time,omitempty"`
	ClaimTime      *string `protobuf:"bytes,15,opt,name=claim_time,json=claimTime,proto3,oneof" json:"claim_time,omitempty"`
	ProdRange      *string `protobuf:"bytes,16,opt,name=prod_range,json=prodRange,proto3,oneof" json:"prod_range,omitempty"`
	StartTime      *string `protobuf:"bytes,17,opt,name=start_time,json=startTime,proto3,oneof" json:"start_time,omitempty"`
	ExpireTime     *string `protobuf:"bytes,18,opt,name=expire_time,json=expireTime,proto3,oneof" json:"expire_time,omitempty"`
	Ctm            int64   `protobuf:"varint,19,opt,name=ctm,proto3" json:"ctm,omitempty"`
	OrderUsed      *int64  `protobuf:"varint,20,opt,name=order_used,json=orderUsed,proto3,oneof" json:"order_used,omitempty"`
}

func (x *CtmCouponCreateRequest) Reset() {
	*x = CtmCouponCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmCouponCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmCouponCreateRequest) ProtoMessage() {}

func (x *CtmCouponCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmCouponCreateRequest.ProtoReflect.Descriptor instead.
func (*CtmCouponCreateRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{21}
}

func (x *CtmCouponCreateRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CtmCouponCreateRequest) GetCouponSku() string {
	if x != nil {
		return x.CouponSku
	}
	return ""
}

func (x *CtmCouponCreateRequest) GetCouponName() string {
	if x != nil {
		return x.CouponName
	}
	return ""
}

func (x *CtmCouponCreateRequest) GetCouponCode() string {
	if x != nil {
		return x.CouponCode
	}
	return ""
}

func (x *CtmCouponCreateRequest) GetCouponIntro() string {
	if x != nil && x.CouponIntro != nil {
		return *x.CouponIntro
	}
	return ""
}

func (x *CtmCouponCreateRequest) GetMeetType() int32 {
	if x != nil {
		return x.MeetType
	}
	return 0
}

func (x *CtmCouponCreateRequest) GetDiscountType() int32 {
	if x != nil {
		return x.DiscountType
	}
	return 0
}

func (x *CtmCouponCreateRequest) GetTriggerAmount() string {
	if x != nil && x.TriggerAmount != nil {
		return *x.TriggerAmount
	}
	return ""
}

func (x *CtmCouponCreateRequest) GetDiscountAmount() string {
	if x != nil && x.DiscountAmount != nil {
		return *x.DiscountAmount
	}
	return ""
}

func (x *CtmCouponCreateRequest) GetTriggerQty() string {
	if x != nil && x.TriggerQty != nil {
		return *x.TriggerQty
	}
	return ""
}

func (x *CtmCouponCreateRequest) GetDiscount() string {
	if x != nil && x.Discount != nil {
		return *x.Discount
	}
	return ""
}

func (x *CtmCouponCreateRequest) GetCanStack() bool {
	if x != nil {
		return x.CanStack
	}
	return false
}

func (x *CtmCouponCreateRequest) GetCouponStatus() int32 {
	if x != nil {
		return x.CouponStatus
	}
	return 0
}

func (x *CtmCouponCreateRequest) GetAcquireTime() string {
	if x != nil && x.AcquireTime != nil {
		return *x.AcquireTime
	}
	return ""
}

func (x *CtmCouponCreateRequest) GetClaimTime() string {
	if x != nil && x.ClaimTime != nil {
		return *x.ClaimTime
	}
	return ""
}

func (x *CtmCouponCreateRequest) GetProdRange() string {
	if x != nil && x.ProdRange != nil {
		return *x.ProdRange
	}
	return ""
}

func (x *CtmCouponCreateRequest) GetStartTime() string {
	if x != nil && x.StartTime != nil {
		return *x.StartTime
	}
	return ""
}

func (x *CtmCouponCreateRequest) GetExpireTime() string {
	if x != nil && x.ExpireTime != nil {
		return *x.ExpireTime
	}
	return ""
}

func (x *CtmCouponCreateRequest) GetCtm() int64 {
	if x != nil {
		return x.Ctm
	}
	return 0
}

func (x *CtmCouponCreateRequest) GetOrderUsed() int64 {
	if x != nil && x.OrderUsed != nil {
		return *x.OrderUsed
	}
	return 0
}

type CtmCouponDestroyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CtmCouponDestroyRequest) Reset() {
	*x = CtmCouponDestroyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmCouponDestroyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmCouponDestroyRequest) ProtoMessage() {}

func (x *CtmCouponDestroyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmCouponDestroyRequest.ProtoReflect.Descriptor instead.
func (*CtmCouponDestroyRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{22}
}

func (x *CtmCouponDestroyRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CtmCouponListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CtmCouponListRequest) Reset() {
	*x = CtmCouponListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmCouponListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmCouponListRequest) ProtoMessage() {}

func (x *CtmCouponListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmCouponListRequest.ProtoReflect.Descriptor instead.
func (*CtmCouponListRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{23}
}

type CtmCouponListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*CtmCouponResponse `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Count   int32                `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *CtmCouponListResponse) Reset() {
	*x = CtmCouponListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmCouponListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmCouponListResponse) ProtoMessage() {}

func (x *CtmCouponListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmCouponListResponse.ProtoReflect.Descriptor instead.
func (*CtmCouponListResponse) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{24}
}

func (x *CtmCouponListResponse) GetResults() []*CtmCouponResponse {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *CtmCouponListResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type CtmCouponResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreateTime     string  `protobuf:"bytes,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime     string  `protobuf:"bytes,3,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	CouponSku      string  `protobuf:"bytes,4,opt,name=coupon_sku,json=couponSku,proto3" json:"coupon_sku,omitempty"`
	CouponName     string  `protobuf:"bytes,5,opt,name=coupon_name,json=couponName,proto3" json:"coupon_name,omitempty"`
	CouponCode     string  `protobuf:"bytes,6,opt,name=coupon_code,json=couponCode,proto3" json:"coupon_code,omitempty"`
	CouponIntro    *string `protobuf:"bytes,7,opt,name=coupon_intro,json=couponIntro,proto3,oneof" json:"coupon_intro,omitempty"`
	MeetType       int32   `protobuf:"varint,8,opt,name=meet_type,json=meetType,proto3" json:"meet_type,omitempty"`
	DiscountType   int32   `protobuf:"varint,9,opt,name=discount_type,json=discountType,proto3" json:"discount_type,omitempty"`
	TriggerAmount  *string `protobuf:"bytes,10,opt,name=trigger_amount,json=triggerAmount,proto3,oneof" json:"trigger_amount,omitempty"`
	DiscountAmount *string `protobuf:"bytes,11,opt,name=discount_amount,json=discountAmount,proto3,oneof" json:"discount_amount,omitempty"`
	TriggerQty     *string `protobuf:"bytes,12,opt,name=trigger_qty,json=triggerQty,proto3,oneof" json:"trigger_qty,omitempty"`
	Discount       *string `protobuf:"bytes,13,opt,name=discount,proto3,oneof" json:"discount,omitempty"`
	CanStack       bool    `protobuf:"varint,14,opt,name=can_stack,json=canStack,proto3" json:"can_stack,omitempty"`
	CouponStatus   int32   `protobuf:"varint,15,opt,name=coupon_status,json=couponStatus,proto3" json:"coupon_status,omitempty"`
	AcquireTime    *string `protobuf:"bytes,16,opt,name=acquire_time,json=acquireTime,proto3,oneof" json:"acquire_time,omitempty"`
	ClaimTime      *string `protobuf:"bytes,17,opt,name=claim_time,json=claimTime,proto3,oneof" json:"claim_time,omitempty"`
	ProdRange      *string `protobuf:"bytes,18,opt,name=prod_range,json=prodRange,proto3,oneof" json:"prod_range,omitempty"`
	StartTime      *string `protobuf:"bytes,19,opt,name=start_time,json=startTime,proto3,oneof" json:"start_time,omitempty"`
	ExpireTime     *string `protobuf:"bytes,20,opt,name=expire_time,json=expireTime,proto3,oneof" json:"expire_time,omitempty"`
	Ctm            int64   `protobuf:"varint,21,opt,name=ctm,proto3" json:"ctm,omitempty"`
	OrderUsed      *int64  `protobuf:"varint,22,opt,name=order_used,json=orderUsed,proto3,oneof" json:"order_used,omitempty"`
}

func (x *CtmCouponResponse) Reset() {
	*x = CtmCouponResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmCouponResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmCouponResponse) ProtoMessage() {}

func (x *CtmCouponResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmCouponResponse.ProtoReflect.Descriptor instead.
func (*CtmCouponResponse) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{25}
}

func (x *CtmCouponResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CtmCouponResponse) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *CtmCouponResponse) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *CtmCouponResponse) GetCouponSku() string {
	if x != nil {
		return x.CouponSku
	}
	return ""
}

func (x *CtmCouponResponse) GetCouponName() string {
	if x != nil {
		return x.CouponName
	}
	return ""
}

func (x *CtmCouponResponse) GetCouponCode() string {
	if x != nil {
		return x.CouponCode
	}
	return ""
}

func (x *CtmCouponResponse) GetCouponIntro() string {
	if x != nil && x.CouponIntro != nil {
		return *x.CouponIntro
	}
	return ""
}

func (x *CtmCouponResponse) GetMeetType() int32 {
	if x != nil {
		return x.MeetType
	}
	return 0
}

func (x *CtmCouponResponse) GetDiscountType() int32 {
	if x != nil {
		return x.DiscountType
	}
	return 0
}

func (x *CtmCouponResponse) GetTriggerAmount() string {
	if x != nil && x.TriggerAmount != nil {
		return *x.TriggerAmount
	}
	return ""
}

func (x *CtmCouponResponse) GetDiscountAmount() string {
	if x != nil && x.DiscountAmount != nil {
		return *x.DiscountAmount
	}
	return ""
}

func (x *CtmCouponResponse) GetTriggerQty() string {
	if x != nil && x.TriggerQty != nil {
		return *x.TriggerQty
	}
	return ""
}

func (x *CtmCouponResponse) GetDiscount() string {
	if x != nil && x.Discount != nil {
		return *x.Discount
	}
	return ""
}

func (x *CtmCouponResponse) GetCanStack() bool {
	if x != nil {
		return x.CanStack
	}
	return false
}

func (x *CtmCouponResponse) GetCouponStatus() int32 {
	if x != nil {
		return x.CouponStatus
	}
	return 0
}

func (x *CtmCouponResponse) GetAcquireTime() string {
	if x != nil && x.AcquireTime != nil {
		return *x.AcquireTime
	}
	return ""
}

func (x *CtmCouponResponse) GetClaimTime() string {
	if x != nil && x.ClaimTime != nil {
		return *x.ClaimTime
	}
	return ""
}

func (x *CtmCouponResponse) GetProdRange() string {
	if x != nil && x.ProdRange != nil {
		return *x.ProdRange
	}
	return ""
}

func (x *CtmCouponResponse) GetStartTime() string {
	if x != nil && x.StartTime != nil {
		return *x.StartTime
	}
	return ""
}

func (x *CtmCouponResponse) GetExpireTime() string {
	if x != nil && x.ExpireTime != nil {
		return *x.ExpireTime
	}
	return ""
}

func (x *CtmCouponResponse) GetCtm() int64 {
	if x != nil {
		return x.Ctm
	}
	return 0
}

func (x *CtmCouponResponse) GetOrderUsed() int64 {
	if x != nil && x.OrderUsed != nil {
		return *x.OrderUsed
	}
	return 0
}

type CtmCouponRetrieveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CtmCouponRetrieveRequest) Reset() {
	*x = CtmCouponRetrieveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmCouponRetrieveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmCouponRetrieveRequest) ProtoMessage() {}

func (x *CtmCouponRetrieveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmCouponRetrieveRequest.ProtoReflect.Descriptor instead.
func (*CtmCouponRetrieveRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{26}
}

func (x *CtmCouponRetrieveRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CtmCouponUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XPartialUpdateFields []string `protobuf:"bytes,2,rep,name=_partial_update_fields,json=PartialUpdateFields,proto3" json:"_partial_update_fields,omitempty"`
	CouponSku            string   `protobuf:"bytes,3,opt,name=coupon_sku,json=couponSku,proto3" json:"coupon_sku,omitempty"`
	CouponName           string   `protobuf:"bytes,4,opt,name=coupon_name,json=couponName,proto3" json:"coupon_name,omitempty"`
	CouponCode           string   `protobuf:"bytes,5,opt,name=coupon_code,json=couponCode,proto3" json:"coupon_code,omitempty"`
	CouponIntro          *string  `protobuf:"bytes,6,opt,name=coupon_intro,json=couponIntro,proto3,oneof" json:"coupon_intro,omitempty"`
	MeetType             int32    `protobuf:"varint,7,opt,name=meet_type,json=meetType,proto3" json:"meet_type,omitempty"`
	DiscountType         int32    `protobuf:"varint,8,opt,name=discount_type,json=discountType,proto3" json:"discount_type,omitempty"`
	TriggerAmount        *string  `protobuf:"bytes,9,opt,name=trigger_amount,json=triggerAmount,proto3,oneof" json:"trigger_amount,omitempty"`
	DiscountAmount       *string  `protobuf:"bytes,10,opt,name=discount_amount,json=discountAmount,proto3,oneof" json:"discount_amount,omitempty"`
	TriggerQty           *string  `protobuf:"bytes,11,opt,name=trigger_qty,json=triggerQty,proto3,oneof" json:"trigger_qty,omitempty"`
	Discount             *string  `protobuf:"bytes,12,opt,name=discount,proto3,oneof" json:"discount,omitempty"`
	CanStack             bool     `protobuf:"varint,13,opt,name=can_stack,json=canStack,proto3" json:"can_stack,omitempty"`
	CouponStatus         int32    `protobuf:"varint,14,opt,name=coupon_status,json=couponStatus,proto3" json:"coupon_status,omitempty"`
	AcquireTime          *string  `protobuf:"bytes,15,opt,name=acquire_time,json=acquireTime,proto3,oneof" json:"acquire_time,omitempty"`
	ClaimTime            *string  `protobuf:"bytes,16,opt,name=claim_time,json=claimTime,proto3,oneof" json:"claim_time,omitempty"`
	ProdRange            *string  `protobuf:"bytes,17,opt,name=prod_range,json=prodRange,proto3,oneof" json:"prod_range,omitempty"`
	StartTime            *string  `protobuf:"bytes,18,opt,name=start_time,json=startTime,proto3,oneof" json:"start_time,omitempty"`
	ExpireTime           *string  `protobuf:"bytes,19,opt,name=expire_time,json=expireTime,proto3,oneof" json:"expire_time,omitempty"`
	Ctm                  int64    `protobuf:"varint,20,opt,name=ctm,proto3" json:"ctm,omitempty"`
	OrderUsed            *int64   `protobuf:"varint,21,opt,name=order_used,json=orderUsed,proto3,oneof" json:"order_used,omitempty"`
}

func (x *CtmCouponUpdateRequest) Reset() {
	*x = CtmCouponUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmCouponUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmCouponUpdateRequest) ProtoMessage() {}

func (x *CtmCouponUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmCouponUpdateRequest.ProtoReflect.Descriptor instead.
func (*CtmCouponUpdateRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{27}
}

func (x *CtmCouponUpdateRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CtmCouponUpdateRequest) GetXPartialUpdateFields() []string {
	if x != nil {
		return x.XPartialUpdateFields
	}
	return nil
}

func (x *CtmCouponUpdateRequest) GetCouponSku() string {
	if x != nil {
		return x.CouponSku
	}
	return ""
}

func (x *CtmCouponUpdateRequest) GetCouponName() string {
	if x != nil {
		return x.CouponName
	}
	return ""
}

func (x *CtmCouponUpdateRequest) GetCouponCode() string {
	if x != nil {
		return x.CouponCode
	}
	return ""
}

func (x *CtmCouponUpdateRequest) GetCouponIntro() string {
	if x != nil && x.CouponIntro != nil {
		return *x.CouponIntro
	}
	return ""
}

func (x *CtmCouponUpdateRequest) GetMeetType() int32 {
	if x != nil {
		return x.MeetType
	}
	return 0
}

func (x *CtmCouponUpdateRequest) GetDiscountType() int32 {
	if x != nil {
		return x.DiscountType
	}
	return 0
}

func (x *CtmCouponUpdateRequest) GetTriggerAmount() string {
	if x != nil && x.TriggerAmount != nil {
		return *x.TriggerAmount
	}
	return ""
}

func (x *CtmCouponUpdateRequest) GetDiscountAmount() string {
	if x != nil && x.DiscountAmount != nil {
		return *x.DiscountAmount
	}
	return ""
}

func (x *CtmCouponUpdateRequest) GetTriggerQty() string {
	if x != nil && x.TriggerQty != nil {
		return *x.TriggerQty
	}
	return ""
}

func (x *CtmCouponUpdateRequest) GetDiscount() string {
	if x != nil && x.Discount != nil {
		return *x.Discount
	}
	return ""
}

func (x *CtmCouponUpdateRequest) GetCanStack() bool {
	if x != nil {
		return x.CanStack
	}
	return false
}

func (x *CtmCouponUpdateRequest) GetCouponStatus() int32 {
	if x != nil {
		return x.CouponStatus
	}
	return 0
}

func (x *CtmCouponUpdateRequest) GetAcquireTime() string {
	if x != nil && x.AcquireTime != nil {
		return *x.AcquireTime
	}
	return ""
}

func (x *CtmCouponUpdateRequest) GetClaimTime() string {
	if x != nil && x.ClaimTime != nil {
		return *x.ClaimTime
	}
	return ""
}

func (x *CtmCouponUpdateRequest) GetProdRange() string {
	if x != nil && x.ProdRange != nil {
		return *x.ProdRange
	}
	return ""
}

func (x *CtmCouponUpdateRequest) GetStartTime() string {
	if x != nil && x.StartTime != nil {
		return *x.StartTime
	}
	return ""
}

func (x *CtmCouponUpdateRequest) GetExpireTime() string {
	if x != nil && x.ExpireTime != nil {
		return *x.ExpireTime
	}
	return ""
}

func (x *CtmCouponUpdateRequest) GetCtm() int64 {
	if x != nil {
		return x.Ctm
	}
	return 0
}

func (x *CtmCouponUpdateRequest) GetOrderUsed() int64 {
	if x != nil && x.OrderUsed != nil {
		return *x.OrderUsed
	}
	return 0
}

type CtmRefundReasonCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Type        int32   `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	ReasonCode  int32   `protobuf:"varint,3,opt,name=reason_code,json=reasonCode,proto3" json:"reason_code,omitempty"`
	ReasonName  string  `protobuf:"bytes,4,opt,name=reason_name,json=reasonName,proto3" json:"reason_name,omitempty"`
	ReasonDesc  *string `protobuf:"bytes,5,opt,name=reason_desc,json=reasonDesc,proto3,oneof" json:"reason_desc,omitempty"`
	IsValid     bool    `protobuf:"varint,6,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
	OrderConfig *int64  `protobuf:"varint,7,opt,name=order_config,json=orderConfig,proto3,oneof" json:"order_config,omitempty"`
	Parent      *int64  `protobuf:"varint,8,opt,name=parent,proto3,oneof" json:"parent,omitempty"`
}

func (x *CtmRefundReasonCreateRequest) Reset() {
	*x = CtmRefundReasonCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmRefundReasonCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmRefundReasonCreateRequest) ProtoMessage() {}

func (x *CtmRefundReasonCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmRefundReasonCreateRequest.ProtoReflect.Descriptor instead.
func (*CtmRefundReasonCreateRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{28}
}

func (x *CtmRefundReasonCreateRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CtmRefundReasonCreateRequest) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *CtmRefundReasonCreateRequest) GetReasonCode() int32 {
	if x != nil {
		return x.ReasonCode
	}
	return 0
}

func (x *CtmRefundReasonCreateRequest) GetReasonName() string {
	if x != nil {
		return x.ReasonName
	}
	return ""
}

func (x *CtmRefundReasonCreateRequest) GetReasonDesc() string {
	if x != nil && x.ReasonDesc != nil {
		return *x.ReasonDesc
	}
	return ""
}

func (x *CtmRefundReasonCreateRequest) GetIsValid() bool {
	if x != nil {
		return x.IsValid
	}
	return false
}

func (x *CtmRefundReasonCreateRequest) GetOrderConfig() int64 {
	if x != nil && x.OrderConfig != nil {
		return *x.OrderConfig
	}
	return 0
}

func (x *CtmRefundReasonCreateRequest) GetParent() int64 {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return 0
}

type CtmRefundReasonDestroyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CtmRefundReasonDestroyRequest) Reset() {
	*x = CtmRefundReasonDestroyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmRefundReasonDestroyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmRefundReasonDestroyRequest) ProtoMessage() {}

func (x *CtmRefundReasonDestroyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmRefundReasonDestroyRequest.ProtoReflect.Descriptor instead.
func (*CtmRefundReasonDestroyRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{29}
}

func (x *CtmRefundReasonDestroyRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CtmRefundReasonListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CtmRefundReasonListRequest) Reset() {
	*x = CtmRefundReasonListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmRefundReasonListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmRefundReasonListRequest) ProtoMessage() {}

func (x *CtmRefundReasonListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmRefundReasonListRequest.ProtoReflect.Descriptor instead.
func (*CtmRefundReasonListRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{30}
}

type CtmRefundReasonListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*CtmRefundReasonResponse `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Count   int32                      `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *CtmRefundReasonListResponse) Reset() {
	*x = CtmRefundReasonListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmRefundReasonListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmRefundReasonListResponse) ProtoMessage() {}

func (x *CtmRefundReasonListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmRefundReasonListResponse.ProtoReflect.Descriptor instead.
func (*CtmRefundReasonListResponse) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{31}
}

func (x *CtmRefundReasonListResponse) GetResults() []*CtmRefundReasonResponse {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *CtmRefundReasonListResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type CtmRefundReasonResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32                              `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreateTime  string                             `protobuf:"bytes,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime  string                             `protobuf:"bytes,3,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	Type        int32                              `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
	ReasonCode  int32                              `protobuf:"varint,5,opt,name=reason_code,json=reasonCode,proto3" json:"reason_code,omitempty"`
	ReasonName  string                             `protobuf:"bytes,6,opt,name=reason_name,json=reasonName,proto3" json:"reason_name,omitempty"`
	ReasonDesc  *string                            `protobuf:"bytes,7,opt,name=reason_desc,json=reasonDesc,proto3,oneof" json:"reason_desc,omitempty"`
	IsValid     bool                               `protobuf:"varint,8,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
	OrderConfig *int64                             `protobuf:"varint,9,opt,name=order_config,json=orderConfig,proto3,oneof" json:"order_config,omitempty"`
	Parent      *int64                             `protobuf:"varint,10,opt,name=parent,proto3,oneof" json:"parent,omitempty"`
	TypeName    string                             `protobuf:"bytes,11,opt,name=type_name,json=typeName,proto3" json:"type_name,omitempty"`
	Children    []*CtmRefundReasonChildrenResponse `protobuf:"bytes,12,rep,name=children,proto3" json:"children,omitempty"`
}

func (x *CtmRefundReasonResponse) Reset() {
	*x = CtmRefundReasonResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmRefundReasonResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmRefundReasonResponse) ProtoMessage() {}

func (x *CtmRefundReasonResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmRefundReasonResponse.ProtoReflect.Descriptor instead.
func (*CtmRefundReasonResponse) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{32}
}

func (x *CtmRefundReasonResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CtmRefundReasonResponse) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *CtmRefundReasonResponse) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *CtmRefundReasonResponse) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *CtmRefundReasonResponse) GetReasonCode() int32 {
	if x != nil {
		return x.ReasonCode
	}
	return 0
}

func (x *CtmRefundReasonResponse) GetReasonName() string {
	if x != nil {
		return x.ReasonName
	}
	return ""
}

func (x *CtmRefundReasonResponse) GetReasonDesc() string {
	if x != nil && x.ReasonDesc != nil {
		return *x.ReasonDesc
	}
	return ""
}

func (x *CtmRefundReasonResponse) GetIsValid() bool {
	if x != nil {
		return x.IsValid
	}
	return false
}

func (x *CtmRefundReasonResponse) GetOrderConfig() int64 {
	if x != nil && x.OrderConfig != nil {
		return *x.OrderConfig
	}
	return 0
}

func (x *CtmRefundReasonResponse) GetParent() int64 {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return 0
}

func (x *CtmRefundReasonResponse) GetTypeName() string {
	if x != nil {
		return x.TypeName
	}
	return ""
}

func (x *CtmRefundReasonResponse) GetChildren() []*CtmRefundReasonChildrenResponse {
	if x != nil {
		return x.Children
	}
	return nil
}

type CtmRefundReasonRetrieveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CtmRefundReasonRetrieveRequest) Reset() {
	*x = CtmRefundReasonRetrieveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmRefundReasonRetrieveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmRefundReasonRetrieveRequest) ProtoMessage() {}

func (x *CtmRefundReasonRetrieveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmRefundReasonRetrieveRequest.ProtoReflect.Descriptor instead.
func (*CtmRefundReasonRetrieveRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{33}
}

func (x *CtmRefundReasonRetrieveRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CtmRefundReasonUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XPartialUpdateFields []string `protobuf:"bytes,2,rep,name=_partial_update_fields,json=PartialUpdateFields,proto3" json:"_partial_update_fields,omitempty"`
	Type                 int32    `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	ReasonCode           int32    `protobuf:"varint,4,opt,name=reason_code,json=reasonCode,proto3" json:"reason_code,omitempty"`
	ReasonName           string   `protobuf:"bytes,5,opt,name=reason_name,json=reasonName,proto3" json:"reason_name,omitempty"`
	ReasonDesc           *string  `protobuf:"bytes,6,opt,name=reason_desc,json=reasonDesc,proto3,oneof" json:"reason_desc,omitempty"`
	IsValid              bool     `protobuf:"varint,7,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
	OrderConfig          *int64   `protobuf:"varint,8,opt,name=order_config,json=orderConfig,proto3,oneof" json:"order_config,omitempty"`
	Parent               *int64   `protobuf:"varint,9,opt,name=parent,proto3,oneof" json:"parent,omitempty"`
}

func (x *CtmRefundReasonUpdateRequest) Reset() {
	*x = CtmRefundReasonUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmRefundReasonUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmRefundReasonUpdateRequest) ProtoMessage() {}

func (x *CtmRefundReasonUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmRefundReasonUpdateRequest.ProtoReflect.Descriptor instead.
func (*CtmRefundReasonUpdateRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{34}
}

func (x *CtmRefundReasonUpdateRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CtmRefundReasonUpdateRequest) GetXPartialUpdateFields() []string {
	if x != nil {
		return x.XPartialUpdateFields
	}
	return nil
}

func (x *CtmRefundReasonUpdateRequest) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *CtmRefundReasonUpdateRequest) GetReasonCode() int32 {
	if x != nil {
		return x.ReasonCode
	}
	return 0
}

func (x *CtmRefundReasonUpdateRequest) GetReasonName() string {
	if x != nil {
		return x.ReasonName
	}
	return ""
}

func (x *CtmRefundReasonUpdateRequest) GetReasonDesc() string {
	if x != nil && x.ReasonDesc != nil {
		return *x.ReasonDesc
	}
	return ""
}

func (x *CtmRefundReasonUpdateRequest) GetIsValid() bool {
	if x != nil {
		return x.IsValid
	}
	return false
}

func (x *CtmRefundReasonUpdateRequest) GetOrderConfig() int64 {
	if x != nil && x.OrderConfig != nil {
		return *x.OrderConfig
	}
	return 0
}

func (x *CtmRefundReasonUpdateRequest) GetParent() int64 {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return 0
}

type CtmOrderConfDestroyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CtmOrderConfDestroyRequest) Reset() {
	*x = CtmOrderConfDestroyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmOrderConfDestroyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmOrderConfDestroyRequest) ProtoMessage() {}

func (x *CtmOrderConfDestroyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmOrderConfDestroyRequest.ProtoReflect.Descriptor instead.
func (*CtmOrderConfDestroyRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{35}
}

func (x *CtmOrderConfDestroyRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CtmOrderConfCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	PlatName        string `protobuf:"bytes,2,opt,name=plat_name,json=platName,proto3" json:"plat_name,omitempty"`
	TradeType       int32  `protobuf:"varint,3,opt,name=trade_type,json=tradeType,proto3" json:"trade_type,omitempty"`
	ShopNo          string `protobuf:"bytes,4,opt,name=shop_no,json=shopNo,proto3" json:"shop_no,omitempty"`
	ShopName        string `protobuf:"bytes,5,opt,name=shop_name,json=shopName,proto3" json:"shop_name,omitempty"`
	WarehouseNo     string `protobuf:"bytes,6,opt,name=warehouse_no,json=warehouseNo,proto3" json:"warehouse_no,omitempty"`
	WarehouseName   string `protobuf:"bytes,7,opt,name=warehouse_name,json=warehouseName,proto3" json:"warehouse_name,omitempty"`
	UserId          int32  `protobuf:"varint,8,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserName        string `protobuf:"bytes,9,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	ConfirmOvertime int32  `protobuf:"varint,10,opt,name=confirm_overtime,json=confirmOvertime,proto3" json:"confirm_overtime,omitempty"`
	FinishOvertime  int32  `protobuf:"varint,11,opt,name=finish_overtime,json=finishOvertime,proto3" json:"finish_overtime,omitempty"`
	ExpireTime      int32  `protobuf:"varint,12,opt,name=expire_time,json=expireTime,proto3" json:"expire_time,omitempty"`
}

func (x *CtmOrderConfCreateRequest) Reset() {
	*x = CtmOrderConfCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmOrderConfCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmOrderConfCreateRequest) ProtoMessage() {}

func (x *CtmOrderConfCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmOrderConfCreateRequest.ProtoReflect.Descriptor instead.
func (*CtmOrderConfCreateRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{36}
}

func (x *CtmOrderConfCreateRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CtmOrderConfCreateRequest) GetPlatName() string {
	if x != nil {
		return x.PlatName
	}
	return ""
}

func (x *CtmOrderConfCreateRequest) GetTradeType() int32 {
	if x != nil {
		return x.TradeType
	}
	return 0
}

func (x *CtmOrderConfCreateRequest) GetShopNo() string {
	if x != nil {
		return x.ShopNo
	}
	return ""
}

func (x *CtmOrderConfCreateRequest) GetShopName() string {
	if x != nil {
		return x.ShopName
	}
	return ""
}

func (x *CtmOrderConfCreateRequest) GetWarehouseNo() string {
	if x != nil {
		return x.WarehouseNo
	}
	return ""
}

func (x *CtmOrderConfCreateRequest) GetWarehouseName() string {
	if x != nil {
		return x.WarehouseName
	}
	return ""
}

func (x *CtmOrderConfCreateRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CtmOrderConfCreateRequest) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *CtmOrderConfCreateRequest) GetConfirmOvertime() int32 {
	if x != nil {
		return x.ConfirmOvertime
	}
	return 0
}

func (x *CtmOrderConfCreateRequest) GetFinishOvertime() int32 {
	if x != nil {
		return x.FinishOvertime
	}
	return 0
}

func (x *CtmOrderConfCreateRequest) GetExpireTime() int32 {
	if x != nil {
		return x.ExpireTime
	}
	return 0
}

type CtmOrderConfListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CtmOrderConfListRequest) Reset() {
	*x = CtmOrderConfListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmOrderConfListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmOrderConfListRequest) ProtoMessage() {}

func (x *CtmOrderConfListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmOrderConfListRequest.ProtoReflect.Descriptor instead.
func (*CtmOrderConfListRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{37}
}

type CtmOrderConfListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*CtmOrderConfResponse `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Count   int32                   `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *CtmOrderConfListResponse) Reset() {
	*x = CtmOrderConfListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmOrderConfListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmOrderConfListResponse) ProtoMessage() {}

func (x *CtmOrderConfListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmOrderConfListResponse.ProtoReflect.Descriptor instead.
func (*CtmOrderConfListResponse) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{38}
}

func (x *CtmOrderConfListResponse) GetResults() []*CtmOrderConfResponse {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *CtmOrderConfListResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type CtmOrderConfResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreateTime      string `protobuf:"bytes,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime      string `protobuf:"bytes,3,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	PlatName        string `protobuf:"bytes,4,opt,name=plat_name,json=platName,proto3" json:"plat_name,omitempty"`
	TradeType       int32  `protobuf:"varint,5,opt,name=trade_type,json=tradeType,proto3" json:"trade_type,omitempty"`
	ShopNo          string `protobuf:"bytes,6,opt,name=shop_no,json=shopNo,proto3" json:"shop_no,omitempty"`
	ShopName        string `protobuf:"bytes,7,opt,name=shop_name,json=shopName,proto3" json:"shop_name,omitempty"`
	WarehouseNo     string `protobuf:"bytes,8,opt,name=warehouse_no,json=warehouseNo,proto3" json:"warehouse_no,omitempty"`
	WarehouseName   string `protobuf:"bytes,9,opt,name=warehouse_name,json=warehouseName,proto3" json:"warehouse_name,omitempty"`
	UserId          int32  `protobuf:"varint,10,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserName        string `protobuf:"bytes,11,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	ConfirmOvertime int32  `protobuf:"varint,12,opt,name=confirm_overtime,json=confirmOvertime,proto3" json:"confirm_overtime,omitempty"`
	FinishOvertime  int32  `protobuf:"varint,13,opt,name=finish_overtime,json=finishOvertime,proto3" json:"finish_overtime,omitempty"`
	ExpireTime      int32  `protobuf:"varint,14,opt,name=expire_time,json=expireTime,proto3" json:"expire_time,omitempty"`
}

func (x *CtmOrderConfResponse) Reset() {
	*x = CtmOrderConfResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmOrderConfResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmOrderConfResponse) ProtoMessage() {}

func (x *CtmOrderConfResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmOrderConfResponse.ProtoReflect.Descriptor instead.
func (*CtmOrderConfResponse) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{39}
}

func (x *CtmOrderConfResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CtmOrderConfResponse) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *CtmOrderConfResponse) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *CtmOrderConfResponse) GetPlatName() string {
	if x != nil {
		return x.PlatName
	}
	return ""
}

func (x *CtmOrderConfResponse) GetTradeType() int32 {
	if x != nil {
		return x.TradeType
	}
	return 0
}

func (x *CtmOrderConfResponse) GetShopNo() string {
	if x != nil {
		return x.ShopNo
	}
	return ""
}

func (x *CtmOrderConfResponse) GetShopName() string {
	if x != nil {
		return x.ShopName
	}
	return ""
}

func (x *CtmOrderConfResponse) GetWarehouseNo() string {
	if x != nil {
		return x.WarehouseNo
	}
	return ""
}

func (x *CtmOrderConfResponse) GetWarehouseName() string {
	if x != nil {
		return x.WarehouseName
	}
	return ""
}

func (x *CtmOrderConfResponse) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CtmOrderConfResponse) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *CtmOrderConfResponse) GetConfirmOvertime() int32 {
	if x != nil {
		return x.ConfirmOvertime
	}
	return 0
}

func (x *CtmOrderConfResponse) GetFinishOvertime() int32 {
	if x != nil {
		return x.FinishOvertime
	}
	return 0
}

func (x *CtmOrderConfResponse) GetExpireTime() int32 {
	if x != nil {
		return x.ExpireTime
	}
	return 0
}

type CtmOrderConfRetrieveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CtmOrderConfRetrieveRequest) Reset() {
	*x = CtmOrderConfRetrieveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmOrderConfRetrieveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmOrderConfRetrieveRequest) ProtoMessage() {}

func (x *CtmOrderConfRetrieveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmOrderConfRetrieveRequest.ProtoReflect.Descriptor instead.
func (*CtmOrderConfRetrieveRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{40}
}

func (x *CtmOrderConfRetrieveRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CtmOrderConfUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XPartialUpdateFields []string `protobuf:"bytes,2,rep,name=_partial_update_fields,json=PartialUpdateFields,proto3" json:"_partial_update_fields,omitempty"`
	PlatName             string   `protobuf:"bytes,3,opt,name=plat_name,json=platName,proto3" json:"plat_name,omitempty"`
	TradeType            int32    `protobuf:"varint,4,opt,name=trade_type,json=tradeType,proto3" json:"trade_type,omitempty"`
	ShopNo               string   `protobuf:"bytes,5,opt,name=shop_no,json=shopNo,proto3" json:"shop_no,omitempty"`
	ShopName             string   `protobuf:"bytes,6,opt,name=shop_name,json=shopName,proto3" json:"shop_name,omitempty"`
	WarehouseNo          string   `protobuf:"bytes,7,opt,name=warehouse_no,json=warehouseNo,proto3" json:"warehouse_no,omitempty"`
	WarehouseName        string   `protobuf:"bytes,8,opt,name=warehouse_name,json=warehouseName,proto3" json:"warehouse_name,omitempty"`
	UserId               int32    `protobuf:"varint,9,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserName             string   `protobuf:"bytes,10,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	ConfirmOvertime      int32    `protobuf:"varint,11,opt,name=confirm_overtime,json=confirmOvertime,proto3" json:"confirm_overtime,omitempty"`
	FinishOvertime       int32    `protobuf:"varint,12,opt,name=finish_overtime,json=finishOvertime,proto3" json:"finish_overtime,omitempty"`
	ExpireTime           int32    `protobuf:"varint,13,opt,name=expire_time,json=expireTime,proto3" json:"expire_time,omitempty"`
}

func (x *CtmOrderConfUpdateRequest) Reset() {
	*x = CtmOrderConfUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmOrderConfUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmOrderConfUpdateRequest) ProtoMessage() {}

func (x *CtmOrderConfUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmOrderConfUpdateRequest.ProtoReflect.Descriptor instead.
func (*CtmOrderConfUpdateRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{41}
}

func (x *CtmOrderConfUpdateRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CtmOrderConfUpdateRequest) GetXPartialUpdateFields() []string {
	if x != nil {
		return x.XPartialUpdateFields
	}
	return nil
}

func (x *CtmOrderConfUpdateRequest) GetPlatName() string {
	if x != nil {
		return x.PlatName
	}
	return ""
}

func (x *CtmOrderConfUpdateRequest) GetTradeType() int32 {
	if x != nil {
		return x.TradeType
	}
	return 0
}

func (x *CtmOrderConfUpdateRequest) GetShopNo() string {
	if x != nil {
		return x.ShopNo
	}
	return ""
}

func (x *CtmOrderConfUpdateRequest) GetShopName() string {
	if x != nil {
		return x.ShopName
	}
	return ""
}

func (x *CtmOrderConfUpdateRequest) GetWarehouseNo() string {
	if x != nil {
		return x.WarehouseNo
	}
	return ""
}

func (x *CtmOrderConfUpdateRequest) GetWarehouseName() string {
	if x != nil {
		return x.WarehouseName
	}
	return ""
}

func (x *CtmOrderConfUpdateRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CtmOrderConfUpdateRequest) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *CtmOrderConfUpdateRequest) GetConfirmOvertime() int32 {
	if x != nil {
		return x.ConfirmOvertime
	}
	return 0
}

func (x *CtmOrderConfUpdateRequest) GetFinishOvertime() int32 {
	if x != nil {
		return x.FinishOvertime
	}
	return 0
}

func (x *CtmOrderConfUpdateRequest) GetExpireTime() int32 {
	if x != nil {
		return x.ExpireTime
	}
	return 0
}

type CtmOrderDestroyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CtmOrderDestroyRequest) Reset() {
	*x = CtmOrderDestroyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmOrderDestroyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmOrderDestroyRequest) ProtoMessage() {}

func (x *CtmOrderDestroyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmOrderDestroyRequest.ProtoReflect.Descriptor instead.
func (*CtmOrderDestroyRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{42}
}

func (x *CtmOrderDestroyRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CtmOrderListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CtmOrderListRequest) Reset() {
	*x = CtmOrderListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmOrderListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmOrderListRequest) ProtoMessage() {}

func (x *CtmOrderListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmOrderListRequest.ProtoReflect.Descriptor instead.
func (*CtmOrderListRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{43}
}

type CtmOrderListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*CtmOrderResponse `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Count   int32               `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *CtmOrderListResponse) Reset() {
	*x = CtmOrderListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmOrderListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmOrderListResponse) ProtoMessage() {}

func (x *CtmOrderListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmOrderListResponse.ProtoReflect.Descriptor instead.
func (*CtmOrderListResponse) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{44}
}

func (x *CtmOrderListResponse) GetResults() []*CtmOrderResponse {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *CtmOrderListResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type CtmOrderPartialUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XPartialUpdateFields []string `protobuf:"bytes,2,rep,name=_partial_update_fields,json=PartialUpdateFields,proto3" json:"_partial_update_fields,omitempty"`
	TradeType            int32    `protobuf:"varint,3,opt,name=trade_type,json=tradeType,proto3" json:"trade_type,omitempty"`
	ShopNo               string   `protobuf:"bytes,4,opt,name=shop_no,json=shopNo,proto3" json:"shop_no,omitempty"`
	ShopName             string   `protobuf:"bytes,5,opt,name=shop_name,json=shopName,proto3" json:"shop_name,omitempty"`
	WarehouseNo          string   `protobuf:"bytes,6,opt,name=warehouse_no,json=warehouseNo,proto3" json:"warehouse_no,omitempty"`
	WarehouseName        string   `protobuf:"bytes,7,opt,name=warehouse_name,json=warehouseName,proto3" json:"warehouse_name,omitempty"`
	Tid                  string   `protobuf:"bytes,8,opt,name=tid,proto3" json:"tid,omitempty"`
	TradeStatus          int32    `protobuf:"varint,9,opt,name=trade_status,json=tradeStatus,proto3" json:"trade_status,omitempty"`
	PayStatus            int32    `protobuf:"varint,10,opt,name=pay_status,json=payStatus,proto3" json:"pay_status,omitempty"`
	PayTime              *string  `protobuf:"bytes,11,opt,name=pay_time,json=payTime,proto3,oneof" json:"pay_time,omitempty"`
	DeliveryTerm         int32    `protobuf:"varint,12,opt,name=delivery_term,json=deliveryTerm,proto3" json:"delivery_term,omitempty"`
	BuyerNick            string   `protobuf:"bytes,13,opt,name=buyer_nick,json=buyerNick,proto3" json:"buyer_nick,omitempty"`
	BuyerMobile          *string  `protobuf:"bytes,14,opt,name=buyer_mobile,json=buyerMobile,proto3,oneof" json:"buyer_mobile,omitempty"`
	BuyerMessage         *string  `protobuf:"bytes,15,opt,name=buyer_message,json=buyerMessage,proto3,oneof" json:"buyer_message,omitempty"`
	SellerMemo           *string  `protobuf:"bytes,16,opt,name=seller_memo,json=sellerMemo,proto3,oneof" json:"seller_memo,omitempty"`
	ReceiverName         *string  `protobuf:"bytes,17,opt,name=receiver_name,json=receiverName,proto3,oneof" json:"receiver_name,omitempty"`
	ReceiverProvince     *string  `protobuf:"bytes,18,opt,name=receiver_province,json=receiverProvince,proto3,oneof" json:"receiver_province,omitempty"`
	ReceiverCity         *string  `protobuf:"bytes,19,opt,name=receiver_city,json=receiverCity,proto3,oneof" json:"receiver_city,omitempty"`
	ReceiverDistrict     *string  `protobuf:"bytes,20,opt,name=receiver_district,json=receiverDistrict,proto3,oneof" json:"receiver_district,omitempty"`
	ReceiverAddress      *string  `protobuf:"bytes,21,opt,name=receiver_address,json=receiverAddress,proto3,oneof" json:"receiver_address,omitempty"`
	ReceiverMobile       *string  `protobuf:"bytes,22,opt,name=receiver_mobile,json=receiverMobile,proto3,oneof" json:"receiver_mobile,omitempty"`
	PostAmount           float64  `protobuf:"fixed64,23,opt,name=post_amount,json=postAmount,proto3" json:"post_amount,omitempty"`
	OtherAmount          float32  `protobuf:"fixed32,24,opt,name=other_amount,json=otherAmount,proto3" json:"other_amount,omitempty"`
	CodAmount            float64  `protobuf:"fixed64,25,opt,name=cod_amount,json=codAmount,proto3" json:"cod_amount,omitempty"`
	ExtCodFee            float64  `protobuf:"fixed64,26,opt,name=ext_cod_fee,json=extCodFee,proto3" json:"ext_cod_fee,omitempty"`
	Paid                 float32  `protobuf:"fixed32,27,opt,name=paid,proto3" json:"paid,omitempty"`
	InvoiceStatus        int32    `protobuf:"varint,28,opt,name=invoice_status,json=invoiceStatus,proto3" json:"invoice_status,omitempty"`
	Receivable           float64  `protobuf:"fixed64,29,opt,name=receivable,proto3" json:"receivable,omitempty"`
	Discount             float64  `protobuf:"fixed64,30,opt,name=discount,proto3" json:"discount,omitempty"`
	CardNo               *string  `protobuf:"bytes,31,opt,name=card_no,json=cardNo,proto3,oneof" json:"card_no,omitempty"`
	CardPayed            int32    `protobuf:"varint,32,opt,name=card_payed,json=cardPayed,proto3" json:"card_payed,omitempty"`
	ScorePayed           int32    `protobuf:"varint,33,opt,name=score_payed,json=scorePayed,proto3" json:"score_payed,omitempty"`
	BadgePayed           int32    `protobuf:"varint,34,opt,name=badge_payed,json=badgePayed,proto3" json:"badge_payed,omitempty"`
	NutPayed             int32    `protobuf:"varint,35,opt,name=nut_payed,json=nutPayed,proto3" json:"nut_payed,omitempty"`
	Ctm                  *int64   `protobuf:"varint,36,opt,name=ctm,proto3,oneof" json:"ctm,omitempty"`
	RefundOrder          *int64   `protobuf:"varint,37,opt,name=refund_order,json=refundOrder,proto3,oneof" json:"refund_order,omitempty"`
}

func (x *CtmOrderPartialUpdateRequest) Reset() {
	*x = CtmOrderPartialUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmOrderPartialUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmOrderPartialUpdateRequest) ProtoMessage() {}

func (x *CtmOrderPartialUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmOrderPartialUpdateRequest.ProtoReflect.Descriptor instead.
func (*CtmOrderPartialUpdateRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{45}
}

func (x *CtmOrderPartialUpdateRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CtmOrderPartialUpdateRequest) GetXPartialUpdateFields() []string {
	if x != nil {
		return x.XPartialUpdateFields
	}
	return nil
}

func (x *CtmOrderPartialUpdateRequest) GetTradeType() int32 {
	if x != nil {
		return x.TradeType
	}
	return 0
}

func (x *CtmOrderPartialUpdateRequest) GetShopNo() string {
	if x != nil {
		return x.ShopNo
	}
	return ""
}

func (x *CtmOrderPartialUpdateRequest) GetShopName() string {
	if x != nil {
		return x.ShopName
	}
	return ""
}

func (x *CtmOrderPartialUpdateRequest) GetWarehouseNo() string {
	if x != nil {
		return x.WarehouseNo
	}
	return ""
}

func (x *CtmOrderPartialUpdateRequest) GetWarehouseName() string {
	if x != nil {
		return x.WarehouseName
	}
	return ""
}

func (x *CtmOrderPartialUpdateRequest) GetTid() string {
	if x != nil {
		return x.Tid
	}
	return ""
}

func (x *CtmOrderPartialUpdateRequest) GetTradeStatus() int32 {
	if x != nil {
		return x.TradeStatus
	}
	return 0
}

func (x *CtmOrderPartialUpdateRequest) GetPayStatus() int32 {
	if x != nil {
		return x.PayStatus
	}
	return 0
}

func (x *CtmOrderPartialUpdateRequest) GetPayTime() string {
	if x != nil && x.PayTime != nil {
		return *x.PayTime
	}
	return ""
}

func (x *CtmOrderPartialUpdateRequest) GetDeliveryTerm() int32 {
	if x != nil {
		return x.DeliveryTerm
	}
	return 0
}

func (x *CtmOrderPartialUpdateRequest) GetBuyerNick() string {
	if x != nil {
		return x.BuyerNick
	}
	return ""
}

func (x *CtmOrderPartialUpdateRequest) GetBuyerMobile() string {
	if x != nil && x.BuyerMobile != nil {
		return *x.BuyerMobile
	}
	return ""
}

func (x *CtmOrderPartialUpdateRequest) GetBuyerMessage() string {
	if x != nil && x.BuyerMessage != nil {
		return *x.BuyerMessage
	}
	return ""
}

func (x *CtmOrderPartialUpdateRequest) GetSellerMemo() string {
	if x != nil && x.SellerMemo != nil {
		return *x.SellerMemo
	}
	return ""
}

func (x *CtmOrderPartialUpdateRequest) GetReceiverName() string {
	if x != nil && x.ReceiverName != nil {
		return *x.ReceiverName
	}
	return ""
}

func (x *CtmOrderPartialUpdateRequest) GetReceiverProvince() string {
	if x != nil && x.ReceiverProvince != nil {
		return *x.ReceiverProvince
	}
	return ""
}

func (x *CtmOrderPartialUpdateRequest) GetReceiverCity() string {
	if x != nil && x.ReceiverCity != nil {
		return *x.ReceiverCity
	}
	return ""
}

func (x *CtmOrderPartialUpdateRequest) GetReceiverDistrict() string {
	if x != nil && x.ReceiverDistrict != nil {
		return *x.ReceiverDistrict
	}
	return ""
}

func (x *CtmOrderPartialUpdateRequest) GetReceiverAddress() string {
	if x != nil && x.ReceiverAddress != nil {
		return *x.ReceiverAddress
	}
	return ""
}

func (x *CtmOrderPartialUpdateRequest) GetReceiverMobile() string {
	if x != nil && x.ReceiverMobile != nil {
		return *x.ReceiverMobile
	}
	return ""
}

func (x *CtmOrderPartialUpdateRequest) GetPostAmount() float64 {
	if x != nil {
		return x.PostAmount
	}
	return 0
}

func (x *CtmOrderPartialUpdateRequest) GetOtherAmount() float32 {
	if x != nil {
		return x.OtherAmount
	}
	return 0
}

func (x *CtmOrderPartialUpdateRequest) GetCodAmount() float64 {
	if x != nil {
		return x.CodAmount
	}
	return 0
}

func (x *CtmOrderPartialUpdateRequest) GetExtCodFee() float64 {
	if x != nil {
		return x.ExtCodFee
	}
	return 0
}

func (x *CtmOrderPartialUpdateRequest) GetPaid() float32 {
	if x != nil {
		return x.Paid
	}
	return 0
}

func (x *CtmOrderPartialUpdateRequest) GetInvoiceStatus() int32 {
	if x != nil {
		return x.InvoiceStatus
	}
	return 0
}

func (x *CtmOrderPartialUpdateRequest) GetReceivable() float64 {
	if x != nil {
		return x.Receivable
	}
	return 0
}

func (x *CtmOrderPartialUpdateRequest) GetDiscount() float64 {
	if x != nil {
		return x.Discount
	}
	return 0
}

func (x *CtmOrderPartialUpdateRequest) GetCardNo() string {
	if x != nil && x.CardNo != nil {
		return *x.CardNo
	}
	return ""
}

func (x *CtmOrderPartialUpdateRequest) GetCardPayed() int32 {
	if x != nil {
		return x.CardPayed
	}
	return 0
}

func (x *CtmOrderPartialUpdateRequest) GetScorePayed() int32 {
	if x != nil {
		return x.ScorePayed
	}
	return 0
}

func (x *CtmOrderPartialUpdateRequest) GetBadgePayed() int32 {
	if x != nil {
		return x.BadgePayed
	}
	return 0
}

func (x *CtmOrderPartialUpdateRequest) GetNutPayed() int32 {
	if x != nil {
		return x.NutPayed
	}
	return 0
}

func (x *CtmOrderPartialUpdateRequest) GetCtm() int64 {
	if x != nil && x.Ctm != nil {
		return *x.Ctm
	}
	return 0
}

func (x *CtmOrderPartialUpdateRequest) GetRefundOrder() int64 {
	if x != nil && x.RefundOrder != nil {
		return *x.RefundOrder
	}
	return 0
}

type CtmOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TradeType        int32   `protobuf:"varint,2,opt,name=trade_type,json=tradeType,proto3" json:"trade_type,omitempty"`
	ShopNo           string  `protobuf:"bytes,3,opt,name=shop_no,json=shopNo,proto3" json:"shop_no,omitempty"`
	ShopName         string  `protobuf:"bytes,4,opt,name=shop_name,json=shopName,proto3" json:"shop_name,omitempty"`
	WarehouseNo      string  `protobuf:"bytes,5,opt,name=warehouse_no,json=warehouseNo,proto3" json:"warehouse_no,omitempty"`
	WarehouseName    string  `protobuf:"bytes,6,opt,name=warehouse_name,json=warehouseName,proto3" json:"warehouse_name,omitempty"`
	Tid              string  `protobuf:"bytes,7,opt,name=tid,proto3" json:"tid,omitempty"`
	TradeStatus      int32   `protobuf:"varint,8,opt,name=trade_status,json=tradeStatus,proto3" json:"trade_status,omitempty"`
	PayStatus        int32   `protobuf:"varint,9,opt,name=pay_status,json=payStatus,proto3" json:"pay_status,omitempty"`
	PayTime          *string `protobuf:"bytes,10,opt,name=pay_time,json=payTime,proto3,oneof" json:"pay_time,omitempty"`
	DeliveryTerm     int32   `protobuf:"varint,11,opt,name=delivery_term,json=deliveryTerm,proto3" json:"delivery_term,omitempty"`
	BuyerNick        string  `protobuf:"bytes,12,opt,name=buyer_nick,json=buyerNick,proto3" json:"buyer_nick,omitempty"`
	BuyerMobile      *string `protobuf:"bytes,13,opt,name=buyer_mobile,json=buyerMobile,proto3,oneof" json:"buyer_mobile,omitempty"`
	BuyerMessage     *string `protobuf:"bytes,14,opt,name=buyer_message,json=buyerMessage,proto3,oneof" json:"buyer_message,omitempty"`
	SellerMemo       *string `protobuf:"bytes,15,opt,name=seller_memo,json=sellerMemo,proto3,oneof" json:"seller_memo,omitempty"`
	ReceiverName     *string `protobuf:"bytes,16,opt,name=receiver_name,json=receiverName,proto3,oneof" json:"receiver_name,omitempty"`
	ReceiverProvince *string `protobuf:"bytes,17,opt,name=receiver_province,json=receiverProvince,proto3,oneof" json:"receiver_province,omitempty"`
	ReceiverCity     *string `protobuf:"bytes,18,opt,name=receiver_city,json=receiverCity,proto3,oneof" json:"receiver_city,omitempty"`
	ReceiverDistrict *string `protobuf:"bytes,19,opt,name=receiver_district,json=receiverDistrict,proto3,oneof" json:"receiver_district,omitempty"`
	ReceiverAddress  *string `protobuf:"bytes,20,opt,name=receiver_address,json=receiverAddress,proto3,oneof" json:"receiver_address,omitempty"`
	ReceiverMobile   *string `protobuf:"bytes,21,opt,name=receiver_mobile,json=receiverMobile,proto3,oneof" json:"receiver_mobile,omitempty"`
	PostAmount       float64 `protobuf:"fixed64,22,opt,name=post_amount,json=postAmount,proto3" json:"post_amount,omitempty"`
	OtherAmount      float32 `protobuf:"fixed32,23,opt,name=other_amount,json=otherAmount,proto3" json:"other_amount,omitempty"`
	CodAmount        float64 `protobuf:"fixed64,24,opt,name=cod_amount,json=codAmount,proto3" json:"cod_amount,omitempty"`
	ExtCodFee        float64 `protobuf:"fixed64,25,opt,name=ext_cod_fee,json=extCodFee,proto3" json:"ext_cod_fee,omitempty"`
	Paid             float32 `protobuf:"fixed32,26,opt,name=paid,proto3" json:"paid,omitempty"`
	InvoiceStatus    int32   `protobuf:"varint,27,opt,name=invoice_status,json=invoiceStatus,proto3" json:"invoice_status,omitempty"`
	Receivable       float64 `protobuf:"fixed64,28,opt,name=receivable,proto3" json:"receivable,omitempty"`
	Discount         float64 `protobuf:"fixed64,29,opt,name=discount,proto3" json:"discount,omitempty"`
	CardNo           *string `protobuf:"bytes,30,opt,name=card_no,json=cardNo,proto3,oneof" json:"card_no,omitempty"`
	CardPayed        int32   `protobuf:"varint,31,opt,name=card_payed,json=cardPayed,proto3" json:"card_payed,omitempty"`
	ScorePayed       int32   `protobuf:"varint,32,opt,name=score_payed,json=scorePayed,proto3" json:"score_payed,omitempty"`
	BadgePayed       int32   `protobuf:"varint,33,opt,name=badge_payed,json=badgePayed,proto3" json:"badge_payed,omitempty"`
	NutPayed         int32   `protobuf:"varint,34,opt,name=nut_payed,json=nutPayed,proto3" json:"nut_payed,omitempty"`
	Ctm              *int64  `protobuf:"varint,35,opt,name=ctm,proto3,oneof" json:"ctm,omitempty"`
	RefundOrder      *int64  `protobuf:"varint,36,opt,name=refund_order,json=refundOrder,proto3,oneof" json:"refund_order,omitempty"`
}

func (x *CtmOrderRequest) Reset() {
	*x = CtmOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmOrderRequest) ProtoMessage() {}

func (x *CtmOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmOrderRequest.ProtoReflect.Descriptor instead.
func (*CtmOrderRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{46}
}

func (x *CtmOrderRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CtmOrderRequest) GetTradeType() int32 {
	if x != nil {
		return x.TradeType
	}
	return 0
}

func (x *CtmOrderRequest) GetShopNo() string {
	if x != nil {
		return x.ShopNo
	}
	return ""
}

func (x *CtmOrderRequest) GetShopName() string {
	if x != nil {
		return x.ShopName
	}
	return ""
}

func (x *CtmOrderRequest) GetWarehouseNo() string {
	if x != nil {
		return x.WarehouseNo
	}
	return ""
}

func (x *CtmOrderRequest) GetWarehouseName() string {
	if x != nil {
		return x.WarehouseName
	}
	return ""
}

func (x *CtmOrderRequest) GetTid() string {
	if x != nil {
		return x.Tid
	}
	return ""
}

func (x *CtmOrderRequest) GetTradeStatus() int32 {
	if x != nil {
		return x.TradeStatus
	}
	return 0
}

func (x *CtmOrderRequest) GetPayStatus() int32 {
	if x != nil {
		return x.PayStatus
	}
	return 0
}

func (x *CtmOrderRequest) GetPayTime() string {
	if x != nil && x.PayTime != nil {
		return *x.PayTime
	}
	return ""
}

func (x *CtmOrderRequest) GetDeliveryTerm() int32 {
	if x != nil {
		return x.DeliveryTerm
	}
	return 0
}

func (x *CtmOrderRequest) GetBuyerNick() string {
	if x != nil {
		return x.BuyerNick
	}
	return ""
}

func (x *CtmOrderRequest) GetBuyerMobile() string {
	if x != nil && x.BuyerMobile != nil {
		return *x.BuyerMobile
	}
	return ""
}

func (x *CtmOrderRequest) GetBuyerMessage() string {
	if x != nil && x.BuyerMessage != nil {
		return *x.BuyerMessage
	}
	return ""
}

func (x *CtmOrderRequest) GetSellerMemo() string {
	if x != nil && x.SellerMemo != nil {
		return *x.SellerMemo
	}
	return ""
}

func (x *CtmOrderRequest) GetReceiverName() string {
	if x != nil && x.ReceiverName != nil {
		return *x.ReceiverName
	}
	return ""
}

func (x *CtmOrderRequest) GetReceiverProvince() string {
	if x != nil && x.ReceiverProvince != nil {
		return *x.ReceiverProvince
	}
	return ""
}

func (x *CtmOrderRequest) GetReceiverCity() string {
	if x != nil && x.ReceiverCity != nil {
		return *x.ReceiverCity
	}
	return ""
}

func (x *CtmOrderRequest) GetReceiverDistrict() string {
	if x != nil && x.ReceiverDistrict != nil {
		return *x.ReceiverDistrict
	}
	return ""
}

func (x *CtmOrderRequest) GetReceiverAddress() string {
	if x != nil && x.ReceiverAddress != nil {
		return *x.ReceiverAddress
	}
	return ""
}

func (x *CtmOrderRequest) GetReceiverMobile() string {
	if x != nil && x.ReceiverMobile != nil {
		return *x.ReceiverMobile
	}
	return ""
}

func (x *CtmOrderRequest) GetPostAmount() float64 {
	if x != nil {
		return x.PostAmount
	}
	return 0
}

func (x *CtmOrderRequest) GetOtherAmount() float32 {
	if x != nil {
		return x.OtherAmount
	}
	return 0
}

func (x *CtmOrderRequest) GetCodAmount() float64 {
	if x != nil {
		return x.CodAmount
	}
	return 0
}

func (x *CtmOrderRequest) GetExtCodFee() float64 {
	if x != nil {
		return x.ExtCodFee
	}
	return 0
}

func (x *CtmOrderRequest) GetPaid() float32 {
	if x != nil {
		return x.Paid
	}
	return 0
}

func (x *CtmOrderRequest) GetInvoiceStatus() int32 {
	if x != nil {
		return x.InvoiceStatus
	}
	return 0
}

func (x *CtmOrderRequest) GetReceivable() float64 {
	if x != nil {
		return x.Receivable
	}
	return 0
}

func (x *CtmOrderRequest) GetDiscount() float64 {
	if x != nil {
		return x.Discount
	}
	return 0
}

func (x *CtmOrderRequest) GetCardNo() string {
	if x != nil && x.CardNo != nil {
		return *x.CardNo
	}
	return ""
}

func (x *CtmOrderRequest) GetCardPayed() int32 {
	if x != nil {
		return x.CardPayed
	}
	return 0
}

func (x *CtmOrderRequest) GetScorePayed() int32 {
	if x != nil {
		return x.ScorePayed
	}
	return 0
}

func (x *CtmOrderRequest) GetBadgePayed() int32 {
	if x != nil {
		return x.BadgePayed
	}
	return 0
}

func (x *CtmOrderRequest) GetNutPayed() int32 {
	if x != nil {
		return x.NutPayed
	}
	return 0
}

func (x *CtmOrderRequest) GetCtm() int64 {
	if x != nil && x.Ctm != nil {
		return *x.Ctm
	}
	return 0
}

func (x *CtmOrderRequest) GetRefundOrder() int64 {
	if x != nil && x.RefundOrder != nil {
		return *x.RefundOrder
	}
	return 0
}

type CtmOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreateTime       string  `protobuf:"bytes,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime       string  `protobuf:"bytes,3,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	TradeType        int32   `protobuf:"varint,4,opt,name=trade_type,json=tradeType,proto3" json:"trade_type,omitempty"`
	ShopNo           string  `protobuf:"bytes,5,opt,name=shop_no,json=shopNo,proto3" json:"shop_no,omitempty"`
	ShopName         string  `protobuf:"bytes,6,opt,name=shop_name,json=shopName,proto3" json:"shop_name,omitempty"`
	WarehouseNo      string  `protobuf:"bytes,7,opt,name=warehouse_no,json=warehouseNo,proto3" json:"warehouse_no,omitempty"`
	WarehouseName    string  `protobuf:"bytes,8,opt,name=warehouse_name,json=warehouseName,proto3" json:"warehouse_name,omitempty"`
	Tid              string  `protobuf:"bytes,9,opt,name=tid,proto3" json:"tid,omitempty"`
	TradeStatus      int32   `protobuf:"varint,10,opt,name=trade_status,json=tradeStatus,proto3" json:"trade_status,omitempty"`
	PayStatus        int32   `protobuf:"varint,11,opt,name=pay_status,json=payStatus,proto3" json:"pay_status,omitempty"`
	PayTime          *string `protobuf:"bytes,12,opt,name=pay_time,json=payTime,proto3,oneof" json:"pay_time,omitempty"`
	DeliveryTerm     int32   `protobuf:"varint,13,opt,name=delivery_term,json=deliveryTerm,proto3" json:"delivery_term,omitempty"`
	BuyerNick        string  `protobuf:"bytes,14,opt,name=buyer_nick,json=buyerNick,proto3" json:"buyer_nick,omitempty"`
	BuyerMobile      *string `protobuf:"bytes,15,opt,name=buyer_mobile,json=buyerMobile,proto3,oneof" json:"buyer_mobile,omitempty"`
	BuyerMessage     *string `protobuf:"bytes,16,opt,name=buyer_message,json=buyerMessage,proto3,oneof" json:"buyer_message,omitempty"`
	SellerMemo       *string `protobuf:"bytes,17,opt,name=seller_memo,json=sellerMemo,proto3,oneof" json:"seller_memo,omitempty"`
	ReceiverName     *string `protobuf:"bytes,18,opt,name=receiver_name,json=receiverName,proto3,oneof" json:"receiver_name,omitempty"`
	ReceiverProvince *string `protobuf:"bytes,19,opt,name=receiver_province,json=receiverProvince,proto3,oneof" json:"receiver_province,omitempty"`
	ReceiverCity     *string `protobuf:"bytes,20,opt,name=receiver_city,json=receiverCity,proto3,oneof" json:"receiver_city,omitempty"`
	ReceiverDistrict *string `protobuf:"bytes,21,opt,name=receiver_district,json=receiverDistrict,proto3,oneof" json:"receiver_district,omitempty"`
	ReceiverAddress  *string `protobuf:"bytes,22,opt,name=receiver_address,json=receiverAddress,proto3,oneof" json:"receiver_address,omitempty"`
	ReceiverMobile   *string `protobuf:"bytes,23,opt,name=receiver_mobile,json=receiverMobile,proto3,oneof" json:"receiver_mobile,omitempty"`
	PostAmount       float64 `protobuf:"fixed64,24,opt,name=post_amount,json=postAmount,proto3" json:"post_amount,omitempty"`
	OtherAmount      float32 `protobuf:"fixed32,25,opt,name=other_amount,json=otherAmount,proto3" json:"other_amount,omitempty"`
	CodAmount        float64 `protobuf:"fixed64,26,opt,name=cod_amount,json=codAmount,proto3" json:"cod_amount,omitempty"`
	ExtCodFee        float64 `protobuf:"fixed64,27,opt,name=ext_cod_fee,json=extCodFee,proto3" json:"ext_cod_fee,omitempty"`
	Paid             float32 `protobuf:"fixed32,28,opt,name=paid,proto3" json:"paid,omitempty"`
	InvoiceStatus    int32   `protobuf:"varint,29,opt,name=invoice_status,json=invoiceStatus,proto3" json:"invoice_status,omitempty"`
	Receivable       float64 `protobuf:"fixed64,30,opt,name=receivable,proto3" json:"receivable,omitempty"`
	Discount         float64 `protobuf:"fixed64,31,opt,name=discount,proto3" json:"discount,omitempty"`
	CardNo           *string `protobuf:"bytes,32,opt,name=card_no,json=cardNo,proto3,oneof" json:"card_no,omitempty"`
	CardPayed        int32   `protobuf:"varint,33,opt,name=card_payed,json=cardPayed,proto3" json:"card_payed,omitempty"`
	ScorePayed       int32   `protobuf:"varint,34,opt,name=score_payed,json=scorePayed,proto3" json:"score_payed,omitempty"`
	BadgePayed       int32   `protobuf:"varint,35,opt,name=badge_payed,json=badgePayed,proto3" json:"badge_payed,omitempty"`
	NutPayed         int32   `protobuf:"varint,36,opt,name=nut_payed,json=nutPayed,proto3" json:"nut_payed,omitempty"`
	Ctm              *int64  `protobuf:"varint,37,opt,name=ctm,proto3,oneof" json:"ctm,omitempty"`
	RefundOrder      *int64  `protobuf:"varint,38,opt,name=refund_order,json=refundOrder,proto3,oneof" json:"refund_order,omitempty"`
}

func (x *CtmOrderResponse) Reset() {
	*x = CtmOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmOrderResponse) ProtoMessage() {}

func (x *CtmOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmOrderResponse.ProtoReflect.Descriptor instead.
func (*CtmOrderResponse) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{47}
}

func (x *CtmOrderResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CtmOrderResponse) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *CtmOrderResponse) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *CtmOrderResponse) GetTradeType() int32 {
	if x != nil {
		return x.TradeType
	}
	return 0
}

func (x *CtmOrderResponse) GetShopNo() string {
	if x != nil {
		return x.ShopNo
	}
	return ""
}

func (x *CtmOrderResponse) GetShopName() string {
	if x != nil {
		return x.ShopName
	}
	return ""
}

func (x *CtmOrderResponse) GetWarehouseNo() string {
	if x != nil {
		return x.WarehouseNo
	}
	return ""
}

func (x *CtmOrderResponse) GetWarehouseName() string {
	if x != nil {
		return x.WarehouseName
	}
	return ""
}

func (x *CtmOrderResponse) GetTid() string {
	if x != nil {
		return x.Tid
	}
	return ""
}

func (x *CtmOrderResponse) GetTradeStatus() int32 {
	if x != nil {
		return x.TradeStatus
	}
	return 0
}

func (x *CtmOrderResponse) GetPayStatus() int32 {
	if x != nil {
		return x.PayStatus
	}
	return 0
}

func (x *CtmOrderResponse) GetPayTime() string {
	if x != nil && x.PayTime != nil {
		return *x.PayTime
	}
	return ""
}

func (x *CtmOrderResponse) GetDeliveryTerm() int32 {
	if x != nil {
		return x.DeliveryTerm
	}
	return 0
}

func (x *CtmOrderResponse) GetBuyerNick() string {
	if x != nil {
		return x.BuyerNick
	}
	return ""
}

func (x *CtmOrderResponse) GetBuyerMobile() string {
	if x != nil && x.BuyerMobile != nil {
		return *x.BuyerMobile
	}
	return ""
}

func (x *CtmOrderResponse) GetBuyerMessage() string {
	if x != nil && x.BuyerMessage != nil {
		return *x.BuyerMessage
	}
	return ""
}

func (x *CtmOrderResponse) GetSellerMemo() string {
	if x != nil && x.SellerMemo != nil {
		return *x.SellerMemo
	}
	return ""
}

func (x *CtmOrderResponse) GetReceiverName() string {
	if x != nil && x.ReceiverName != nil {
		return *x.ReceiverName
	}
	return ""
}

func (x *CtmOrderResponse) GetReceiverProvince() string {
	if x != nil && x.ReceiverProvince != nil {
		return *x.ReceiverProvince
	}
	return ""
}

func (x *CtmOrderResponse) GetReceiverCity() string {
	if x != nil && x.ReceiverCity != nil {
		return *x.ReceiverCity
	}
	return ""
}

func (x *CtmOrderResponse) GetReceiverDistrict() string {
	if x != nil && x.ReceiverDistrict != nil {
		return *x.ReceiverDistrict
	}
	return ""
}

func (x *CtmOrderResponse) GetReceiverAddress() string {
	if x != nil && x.ReceiverAddress != nil {
		return *x.ReceiverAddress
	}
	return ""
}

func (x *CtmOrderResponse) GetReceiverMobile() string {
	if x != nil && x.ReceiverMobile != nil {
		return *x.ReceiverMobile
	}
	return ""
}

func (x *CtmOrderResponse) GetPostAmount() float64 {
	if x != nil {
		return x.PostAmount
	}
	return 0
}

func (x *CtmOrderResponse) GetOtherAmount() float32 {
	if x != nil {
		return x.OtherAmount
	}
	return 0
}

func (x *CtmOrderResponse) GetCodAmount() float64 {
	if x != nil {
		return x.CodAmount
	}
	return 0
}

func (x *CtmOrderResponse) GetExtCodFee() float64 {
	if x != nil {
		return x.ExtCodFee
	}
	return 0
}

func (x *CtmOrderResponse) GetPaid() float32 {
	if x != nil {
		return x.Paid
	}
	return 0
}

func (x *CtmOrderResponse) GetInvoiceStatus() int32 {
	if x != nil {
		return x.InvoiceStatus
	}
	return 0
}

func (x *CtmOrderResponse) GetReceivable() float64 {
	if x != nil {
		return x.Receivable
	}
	return 0
}

func (x *CtmOrderResponse) GetDiscount() float64 {
	if x != nil {
		return x.Discount
	}
	return 0
}

func (x *CtmOrderResponse) GetCardNo() string {
	if x != nil && x.CardNo != nil {
		return *x.CardNo
	}
	return ""
}

func (x *CtmOrderResponse) GetCardPayed() int32 {
	if x != nil {
		return x.CardPayed
	}
	return 0
}

func (x *CtmOrderResponse) GetScorePayed() int32 {
	if x != nil {
		return x.ScorePayed
	}
	return 0
}

func (x *CtmOrderResponse) GetBadgePayed() int32 {
	if x != nil {
		return x.BadgePayed
	}
	return 0
}

func (x *CtmOrderResponse) GetNutPayed() int32 {
	if x != nil {
		return x.NutPayed
	}
	return 0
}

func (x *CtmOrderResponse) GetCtm() int64 {
	if x != nil && x.Ctm != nil {
		return *x.Ctm
	}
	return 0
}

func (x *CtmOrderResponse) GetRefundOrder() int64 {
	if x != nil && x.RefundOrder != nil {
		return *x.RefundOrder
	}
	return 0
}

type CtmOrderRetrieveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CtmOrderRetrieveRequest) Reset() {
	*x = CtmOrderRetrieveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmOrderRetrieveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmOrderRetrieveRequest) ProtoMessage() {}

func (x *CtmOrderRetrieveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmOrderRetrieveRequest.ProtoReflect.Descriptor instead.
func (*CtmOrderRetrieveRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{48}
}

func (x *CtmOrderRetrieveRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type TradeTypeOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code  int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Id    int64  `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *TradeTypeOption) Reset() {
	*x = TradeTypeOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TradeTypeOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeTypeOption) ProtoMessage() {}

func (x *TradeTypeOption) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeTypeOption.ProtoReflect.Descriptor instead.
func (*TradeTypeOption) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{49}
}

func (x *TradeTypeOption) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *TradeTypeOption) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *TradeTypeOption) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type TradeTypeOptionListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*TradeTypeOption `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Count   int32              `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *TradeTypeOptionListResponse) Reset() {
	*x = TradeTypeOptionListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TradeTypeOptionListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeTypeOptionListResponse) ProtoMessage() {}

func (x *TradeTypeOptionListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeTypeOptionListResponse.ProtoReflect.Descriptor instead.
func (*TradeTypeOptionListResponse) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{50}
}

func (x *TradeTypeOptionListResponse) GetResults() []*TradeTypeOption {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *TradeTypeOptionListResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type TradeTypeOptionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TradeTypeOptionsRequest) Reset() {
	*x = TradeTypeOptionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TradeTypeOptionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeTypeOptionsRequest) ProtoMessage() {}

func (x *TradeTypeOptionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeTypeOptionsRequest.ProtoReflect.Descriptor instead.
func (*TradeTypeOptionsRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{51}
}

type WdtShop struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShopCode string `protobuf:"bytes,1,opt,name=shop_code,json=shopCode,proto3" json:"shop_code,omitempty"`
	ShopName string `protobuf:"bytes,2,opt,name=shop_name,json=shopName,proto3" json:"shop_name,omitempty"`
}

func (x *WdtShop) Reset() {
	*x = WdtShop{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WdtShop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WdtShop) ProtoMessage() {}

func (x *WdtShop) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WdtShop.ProtoReflect.Descriptor instead.
func (*WdtShop) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{52}
}

func (x *WdtShop) GetShopCode() string {
	if x != nil {
		return x.ShopCode
	}
	return ""
}

func (x *WdtShop) GetShopName() string {
	if x != nil {
		return x.ShopName
	}
	return ""
}

type WdtShopListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WdtShopListRequest) Reset() {
	*x = WdtShopListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WdtShopListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WdtShopListRequest) ProtoMessage() {}

func (x *WdtShopListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WdtShopListRequest.ProtoReflect.Descriptor instead.
func (*WdtShopListRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{53}
}

type WdtShopListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*WdtShop `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Count   int32      `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *WdtShopListResponse) Reset() {
	*x = WdtShopListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WdtShopListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WdtShopListResponse) ProtoMessage() {}

func (x *WdtShopListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WdtShopListResponse.ProtoReflect.Descriptor instead.
func (*WdtShopListResponse) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{54}
}

func (x *WdtShopListResponse) GetResults() []*WdtShop {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *WdtShopListResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type WdtStock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StockCode string `protobuf:"bytes,1,opt,name=stock_code,json=stockCode,proto3" json:"stock_code,omitempty"`
	StockName string `protobuf:"bytes,2,opt,name=stock_name,json=stockName,proto3" json:"stock_name,omitempty"`
}

func (x *WdtStock) Reset() {
	*x = WdtStock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WdtStock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WdtStock) ProtoMessage() {}

func (x *WdtStock) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WdtStock.ProtoReflect.Descriptor instead.
func (*WdtStock) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{55}
}

func (x *WdtStock) GetStockCode() string {
	if x != nil {
		return x.StockCode
	}
	return ""
}

func (x *WdtStock) GetStockName() string {
	if x != nil {
		return x.StockName
	}
	return ""
}

type WdtStockListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WdtStockListRequest) Reset() {
	*x = WdtStockListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WdtStockListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WdtStockListRequest) ProtoMessage() {}

func (x *WdtStockListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WdtStockListRequest.ProtoReflect.Descriptor instead.
func (*WdtStockListRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{56}
}

type WdtStockListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*WdtStock `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Count   int32       `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *WdtStockListResponse) Reset() {
	*x = WdtStockListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WdtStockListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WdtStockListResponse) ProtoMessage() {}

func (x *WdtStockListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WdtStockListResponse.ProtoReflect.Descriptor instead.
func (*WdtStockListResponse) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{57}
}

func (x *WdtStockListResponse) GetResults() []*WdtStock {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *WdtStockListResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

var File_order_ito_proto protoreflect.FileDescriptor

var file_order_ito_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x1d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f,
	0x22, 0x1a, 0x0a, 0x18, 0x43, 0x74, 0x6d, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x44, 0x65, 0x73,
	0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x0a, 0x1b,
	0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x44, 0x65, 0x73, 0x74,
	0x72, 0x6f, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19, 0x0a, 0x17, 0x43,
	0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x0a, 0x1e, 0x43, 0x74, 0x6d, 0x52, 0x65, 0x66,
	0x75, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3e, 0x0a, 0x12, 0x54, 0x72, 0x61, 0x64,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x83, 0x01, 0x0a, 0x1e, 0x54, 0x72, 0x61,
	0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x07, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x61,
	0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x1b,
	0x0a, 0x19, 0x54, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x47, 0x0a, 0x1a, 0x43,
	0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x22, 0x39, 0x0a, 0x1b, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x22,
	0x55, 0x0a, 0x1c, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x21, 0x0a, 0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x61, 0x0a, 0x1d, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64,
	0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x3e, 0x0a, 0x12, 0x52, 0x65, 0x66,
	0x75, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x83, 0x01, 0x0a, 0x1e, 0x52, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x07,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x52, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x1c, 0x0a, 0x1a, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x3c, 0x0a,
	0x10, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x7f, 0x0a, 0x1c, 0x52,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x07, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x39, 0x0a, 0x18,
	0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x64,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x72,
	0x61, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0xfb, 0x02, 0x0a, 0x1f, 0x43, 0x74, 0x6d, 0x52,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x43, 0x68, 0x69, 0x6c, 0x64,
	0x72, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0b, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x64, 0x65,
	0x73, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x72, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x0b, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x48, 0x02, 0x52, 0x06,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x22, 0xe6, 0x03, 0x0a, 0x11, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0b, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x64, 0x65,
	0x73, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x72, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x0b, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x48, 0x02, 0x52, 0x06,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x79,
	0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x5a, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72,
	0x65, 0x6e, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x52, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72,
	0x65, 0x6e, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x64, 0x65,
	0x73, 0x63, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x22, 0x81,
	0x01, 0x0a, 0x1d, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4a, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x30, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74,
	0x6f, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x54, 0x0a, 0x19, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x72, 0x61, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x22, 0xf8, 0x06, 0x0a, 0x16, 0x43, 0x74, 0x6d,
	0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x73, 0x6b,
	0x75, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x53,
	0x6b, 0x75, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x26, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x69,
	0x6e, 0x74, 0x72, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x63, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x09,
	0x6d, 0x65, 0x65, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x6d, 0x65, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2a,
	0x0a, 0x0e, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0d, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a, 0x0f, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x74, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x5f, 0x71, 0x74, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52,
	0x0a, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x51, 0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x1f,
	0x0a, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x04, 0x52, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12,
	0x1b, 0x0a, 0x09, 0x63, 0x61, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x63, 0x61, 0x6e, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x12, 0x23, 0x0a, 0x0d,
	0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x26, 0x0a, 0x0c, 0x61, 0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x0b, 0x61, 0x63, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x63, 0x6c, 0x61,
	0x69, 0x6d, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52,
	0x09, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x64, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x07, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x22, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52, 0x0a, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x10, 0x0a, 0x03, 0x63,
	0x74, 0x6d, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x63, 0x74, 0x6d, 0x12, 0x22, 0x0a,
	0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x03, 0x48, 0x0a, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x55, 0x73, 0x65, 0x64, 0x88, 0x01,
	0x01, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x74,
	0x72, 0x6f, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x74, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x71, 0x74, 0x79, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x61, 0x63, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x6c, 0x61, 0x69,
	0x6d, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x5f,
	0x72, 0x61, 0x6e, 0x67, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x75,
	0x73, 0x65, 0x64, 0x22, 0x29, 0x0a, 0x17, 0x43, 0x74, 0x6d, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x16,
	0x0a, 0x14, 0x43, 0x74, 0x6d, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x79, 0x0a, 0x15, 0x43, 0x74, 0x6d, 0x43, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4a, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x30, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f,
	0x2e, 0x43, 0x74, 0x6d, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0xb5, 0x07, 0x0a, 0x11, 0x43, 0x74, 0x6d, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x5f, 0x73, 0x6b, 0x75, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x53, 0x6b, 0x75, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x26, 0x0a, 0x0c, 0x63, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x88,
	0x01, 0x01, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x65, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x65, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x0e, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0d,
	0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01,
	0x12, 0x2c, 0x0a, 0x0f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0e, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x24,
	0x0a, 0x0b, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x71, 0x74, 0x79, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x0a, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x51, 0x74,
	0x79, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x6e, 0x5f, 0x73, 0x74, 0x61,
	0x63, 0x6b, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x63, 0x61, 0x6e, 0x53, 0x74, 0x61,
	0x63, 0x6b, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x0c, 0x61, 0x63, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52,
	0x0b, 0x61, 0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x22, 0x0a, 0x0a, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x09, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x54, 0x69, 0x6d, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x5f, 0x72, 0x61, 0x6e, 0x67,
	0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x52,
	0x61, 0x6e, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x74, 0x6d, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x63, 0x74, 0x6d, 0x12, 0x22, 0x0a, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x75, 0x73, 0x65,
	0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0a, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x55, 0x73, 0x65, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x63, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x74, 0x72, 0x69,
	0x67, 0x67, 0x65, 0x72, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x12, 0x0a, 0x10, 0x5f,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42,
	0x0e, 0x0a, 0x0c, 0x5f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x71, 0x74, 0x79, 0x42,
	0x0b, 0x0a, 0x09, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x0f, 0x0a, 0x0d,
	0x5f, 0x61, 0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x0d, 0x0a,
	0x0b, 0x5f, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x0d, 0x0a, 0x0b,
	0x5f, 0x70, 0x72, 0x6f, 0x64, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x22, 0x2a, 0x0a, 0x18, 0x43, 0x74, 0x6d,
	0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0xad, 0x07, 0x0a, 0x16, 0x43, 0x74, 0x6d, 0x43, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x33, 0x0a, 0x16, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x13, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f,
	0x73, 0x6b, 0x75, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x53, 0x6b, 0x75, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x26, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x5f, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b,
	0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x1b,
	0x0a, 0x09, 0x6d, 0x65, 0x65, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x6d, 0x65, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x2a, 0x0a, 0x0e, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0d, 0x74, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a, 0x0f,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x74, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x71, 0x74, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x03, 0x52, 0x0a, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x51, 0x74, 0x79, 0x88, 0x01, 0x01,
	0x12, 0x1f, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x04, 0x52, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x63, 0x61, 0x6e, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x12, 0x23,
	0x0a, 0x0d, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x0c, 0x61, 0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x0b, 0x61, 0x63, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x63,
	0x6c, 0x61, 0x69, 0x6d, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x06, 0x52, 0x09, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x22, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x52, 0x61, 0x6e, 0x67, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52, 0x0a,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x10, 0x0a,
	0x03, 0x63, 0x74, 0x6d, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x63, 0x74, 0x6d, 0x12,
	0x22, 0x0a, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x03, 0x48, 0x0a, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x55, 0x73, 0x65, 0x64,
	0x88, 0x01, 0x01, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x69,
	0x6e, 0x74, 0x72, 0x6f, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x0e, 0x0a, 0x0c, 0x5f,
	0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x71, 0x74, 0x79, 0x42, 0x0b, 0x0a, 0x09, 0x5f,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x61, 0x63, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x6c,
	0x61, 0x69, 0x6d, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x72, 0x6f,
	0x64, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x5f, 0x75, 0x73, 0x65, 0x64, 0x22, 0xb6, 0x02, 0x0a, 0x1c, 0x43, 0x74, 0x6d, 0x52, 0x65, 0x66,
	0x75, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0b,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x0a, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x88,
	0x01, 0x01, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x26, 0x0a,
	0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x48, 0x02, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x88,
	0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x64, 0x65,
	0x73, 0x63, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x22, 0x2f,
	0x0a, 0x1d, 0x43, 0x74, 0x6d, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x1c, 0x0a, 0x1a, 0x43, 0x74, 0x6d, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x85, 0x01,
	0x0a, 0x1b, 0x43, 0x74, 0x6d, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a,
	0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43,
	0x74, 0x6d, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xec, 0x03, 0x0a, 0x17, 0x43, 0x74, 0x6d, 0x52, 0x65, 0x66,
	0x75, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0b, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x0a, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x88, 0x01, 0x01, 0x12,
	0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x69, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0c, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03,
	0x48, 0x01, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x88,
	0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x03, 0x48, 0x02, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12,
	0x1b, 0x0a, 0x09, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x5a, 0x0a, 0x08,
	0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3e,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43,
	0x74, 0x6d, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x43, 0x68,
	0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08,
	0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x22, 0x30, 0x0a, 0x1e, 0x43, 0x74, 0x6d, 0x52, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0xeb, 0x02, 0x0a, 0x1c, 0x43, 0x74, 0x6d, 0x52, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x33, 0x0a, 0x16, 0x5f, 0x70, 0x61, 0x72, 0x74,
	0x69, 0x61, 0x6c, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0b, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x73,
	0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x44, 0x65, 0x73, 0x63, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x0b, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x48, 0x02, 0x52, 0x06, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x22, 0x2c, 0x0a, 0x1a, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x43, 0x6f, 0x6e, 0x66, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x92, 0x03, 0x0a, 0x19, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x66, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x74, 0x72, 0x61, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x73, 0x68, 0x6f, 0x70, 0x5f, 0x6e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x68, 0x6f, 0x70, 0x4e, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x70, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f,
	0x6e, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f,
	0x75, 0x73, 0x65, 0x4e, 0x6f, 0x12, 0x25, 0x0a, 0x0e, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75,
	0x73, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x77,
	0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x5f, 0x6f, 0x76,
	0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x72, 0x6d, 0x4f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x27, 0x0a,
	0x0f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x4f, 0x76,
	0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x19, 0x0a, 0x17, 0x43, 0x74, 0x6d, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x7f, 0x0a, 0x18, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f,
	0x6e, 0x66, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d,
	0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x33, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e,
	0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0xcf, 0x03, 0x0a, 0x14, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x43, 0x6f, 0x6e, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x6c, 0x61, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74,
	0x72, 0x61, 0x64, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x74, 0x72, 0x61, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x68,
	0x6f, 0x70, 0x5f, 0x6e, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x68, 0x6f,
	0x70, 0x4e, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x70, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x6e, 0x6f,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73,
	0x65, 0x4e, 0x6f, 0x12, 0x25, 0x0a, 0x0e, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x77, 0x61, 0x72,
	0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x5f, 0x6f, 0x76, 0x65, 0x72,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x72, 0x6d, 0x4f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x66,
	0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x4f, 0x76, 0x65, 0x72,
	0x74, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x2d, 0x0a, 0x1b, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x43, 0x6f, 0x6e, 0x66, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x69, 0x64, 0x22, 0xc7, 0x03, 0x0a, 0x19, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x43, 0x6f, 0x6e, 0x66, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x33, 0x0a, 0x16, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x13, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x74, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x72, 0x61, 0x64, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x6e, 0x6f, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x4e, 0x6f, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x68, 0x6f, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x73, 0x68, 0x6f, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x61, 0x72,
	0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x4e, 0x6f, 0x12, 0x25, 0x0a, 0x0e,
	0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x72, 0x6d, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x4f, 0x76, 0x65, 0x72,
	0x74, 0x69, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x6f,
	0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x66,
	0x69, 0x6e, 0x69, 0x73, 0x68, 0x4f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x28,
	0x0a, 0x16, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x15, 0x0a, 0x13, 0x43, 0x74, 0x6d, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x77, 0x0a, 0x14, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xfb, 0x0b, 0x0a, 0x1c, 0x43, 0x74, 0x6d,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x33, 0x0a, 0x16, 0x5f, 0x70, 0x61,
	0x72, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x50, 0x61, 0x72, 0x74, 0x69,
	0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x1d,
	0x0a, 0x0a, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x74, 0x72, 0x61, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a,
	0x07, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x6e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x68, 0x6f, 0x70, 0x4e, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x70, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65,
	0x5f, 0x6e, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x61, 0x72, 0x65, 0x68,
	0x6f, 0x75, 0x73, 0x65, 0x4e, 0x6f, 0x12, 0x25, 0x0a, 0x0e, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f,
	0x75, 0x73, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x74, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x69, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1e, 0x0a, 0x08, 0x70, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x70, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x65,
	0x72, 0x6d, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x54, 0x65, 0x72, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f,
	0x6e, 0x69, 0x63, 0x6b, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x75, 0x79, 0x65,
	0x72, 0x4e, 0x69, 0x63, 0x6b, 0x12, 0x26, 0x0a, 0x0c, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x6d,
	0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0b, 0x62,
	0x75, 0x79, 0x65, 0x72, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a,
	0x0d, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0c, 0x62, 0x75, 0x79, 0x65, 0x72, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x73, 0x65, 0x6c, 0x6c, 0x65,
	0x72, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x0a,
	0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a,
	0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x11, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x05, 0x52, 0x10, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x63, 0x69, 0x74, 0x79, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x06, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x43, 0x69, 0x74, 0x79,
	0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x11, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f,
	0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07,
	0x52, 0x10, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69,
	0x63, 0x74, 0x88, 0x01, 0x01, 0x12, 0x2e, 0x0a, 0x10, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x08, 0x52, 0x0f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a, 0x0f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x5f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09,
	0x52, 0x0e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x17, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x70, 0x6f, 0x73, 0x74, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x18, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x6f, 0x74, 0x68, 0x65,
	0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x64, 0x5f, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x19, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x63, 0x6f, 0x64,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0b, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6f,
	0x64, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x65, 0x78, 0x74,
	0x43, 0x6f, 0x64, 0x46, 0x65, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x69, 0x64, 0x18, 0x1b,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x70, 0x61, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x1c, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0d, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x18,
	0x1d, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x61, 0x62, 0x6c,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x1e, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a,
	0x07, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x6e, 0x6f, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0a,
	0x52, 0x06, 0x63, 0x61, 0x72, 0x64, 0x4e, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x61, 0x72, 0x64, 0x5f, 0x70, 0x61, 0x79, 0x65, 0x64, 0x18, 0x20, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x63, 0x61, 0x72, 0x64, 0x50, 0x61, 0x79, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x5f, 0x70, 0x61, 0x79, 0x65, 0x64, 0x18, 0x21, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x50, 0x61, 0x79, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x62,
	0x61, 0x64, 0x67, 0x65, 0x5f, 0x70, 0x61, 0x79, 0x65, 0x64, 0x18, 0x22, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x62, 0x61, 0x64, 0x67, 0x65, 0x50, 0x61, 0x79, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x6e, 0x75, 0x74, 0x5f, 0x70, 0x61, 0x79, 0x65, 0x64, 0x18, 0x23, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x6e, 0x75, 0x74, 0x50, 0x61, 0x79, 0x65, 0x64, 0x12, 0x15, 0x0a, 0x03, 0x63, 0x74, 0x6d,
	0x18, 0x24, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0b, 0x52, 0x03, 0x63, 0x74, 0x6d, 0x88, 0x01, 0x01,
	0x12, 0x26, 0x0a, 0x0c, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x18, 0x25, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0c, 0x52, 0x0b, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x61, 0x79,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f,
	0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x62, 0x75, 0x79, 0x65, 0x72,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x73, 0x65, 0x6c,
	0x6c, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65,
	0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x63, 0x69,
	0x74, 0x79, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f,
	0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x12, 0x0a,
	0x10, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x62, 0x69, 0x6c,
	0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x6e, 0x6f, 0x42, 0x06, 0x0a,
	0x04, 0x5f, 0x63, 0x74, 0x6d, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64,
	0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x22, 0xb9, 0x0b, 0x0a, 0x0f, 0x43, 0x74, 0x6d, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x72,
	0x61, 0x64, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x74, 0x72, 0x61, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x68, 0x6f,
	0x70, 0x5f, 0x6e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70,
	0x4e, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x6e, 0x6f, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65,
	0x4e, 0x6f, 0x12, 0x25, 0x0a, 0x0e, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x77, 0x61, 0x72, 0x65,
	0x68, 0x6f, 0x75, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x69, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x74,
	0x72, 0x61, 0x64, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x61, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x70, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a,
	0x08, 0x70, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x07, 0x70, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a,
	0x0d, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x65,
	0x72, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x6e, 0x69, 0x63, 0x6b,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x75, 0x79, 0x65, 0x72, 0x4e, 0x69, 0x63,
	0x6b, 0x12, 0x26, 0x0a, 0x0c, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x62, 0x69, 0x6c,
	0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0b, 0x62, 0x75, 0x79, 0x65, 0x72,
	0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x62, 0x75, 0x79,
	0x65, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x02, 0x52, 0x0c, 0x62, 0x75, 0x79, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x6d, 0x65,
	0x6d, 0x6f, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x0a, 0x73, 0x65, 0x6c, 0x6c,
	0x65, 0x72, 0x4d, 0x65, 0x6d, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x04, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x11, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05,
	0x52, 0x10, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e,
	0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x5f, 0x63, 0x69, 0x74, 0x79, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x0c,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x43, 0x69, 0x74, 0x79, 0x88, 0x01, 0x01, 0x12,
	0x30, 0x0a, 0x11, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x64, 0x69, 0x73, 0x74,
	0x72, 0x69, 0x63, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x10, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x2e, 0x0a, 0x10, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x0f, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x88, 0x01,
	0x01, 0x12, 0x2c, 0x0a, 0x0f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x6d, 0x6f,
	0x62, 0x69, 0x6c, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52, 0x0e, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x1f, 0x0a, 0x0b, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x70, 0x6f, 0x73, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x17, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x18, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x63, 0x6f, 0x64, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0b, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x5f, 0x66, 0x65,
	0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x64, 0x46,
	0x65, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x69, 0x64, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x04, 0x70, 0x61, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d,
	0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a,
	0x0a, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x1c, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x07, 0x63, 0x61, 0x72,
	0x64, 0x5f, 0x6e, 0x6f, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0a, 0x52, 0x06, 0x63, 0x61,
	0x72, 0x64, 0x4e, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61, 0x72, 0x64, 0x5f,
	0x70, 0x61, 0x79, 0x65, 0x64, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x61, 0x72,
	0x64, 0x50, 0x61, 0x79, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f,
	0x70, 0x61, 0x79, 0x65, 0x64, 0x18, 0x20, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x50, 0x61, 0x79, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x61, 0x64, 0x67, 0x65,
	0x5f, 0x70, 0x61, 0x79, 0x65, 0x64, 0x18, 0x21, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x61,
	0x64, 0x67, 0x65, 0x50, 0x61, 0x79, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x75, 0x74, 0x5f,
	0x70, 0x61, 0x79, 0x65, 0x64, 0x18, 0x22, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6e, 0x75, 0x74,
	0x50, 0x61, 0x79, 0x65, 0x64, 0x12, 0x15, 0x0a, 0x03, 0x63, 0x74, 0x6d, 0x18, 0x23, 0x20, 0x01,
	0x28, 0x03, 0x48, 0x0b, 0x52, 0x03, 0x63, 0x74, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c,
	0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x24, 0x20, 0x01,
	0x28, 0x03, 0x48, 0x0c, 0x52, 0x0b, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x62, 0x69,
	0x6c, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x5f,
	0x6d, 0x65, 0x6d, 0x6f, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x42, 0x10, 0x0a, 0x0e,
	0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x63, 0x69, 0x74, 0x79, 0x42, 0x14,
	0x0a, 0x12, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x64, 0x69, 0x73, 0x74,
	0x72, 0x69, 0x63, 0x74, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x42, 0x0a, 0x0a,
	0x08, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x6e, 0x6f, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x63, 0x74,
	0x6d, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x22, 0xfc, 0x0b, 0x0a, 0x10, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x72, 0x61,
	0x64, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74,
	0x72, 0x61, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x68, 0x6f, 0x70,
	0x5f, 0x6e, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x4e,
	0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x4e,
	0x6f, 0x12, 0x25, 0x0a, 0x0e, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x77, 0x61, 0x72, 0x65, 0x68,
	0x6f, 0x75, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x69, 0x64, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x72,
	0x61, 0x64, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x74, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x61, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x70, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x08,
	0x70, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x07, 0x70, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0d,
	0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x65, 0x72,
	0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x75, 0x79, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b,
	0x12, 0x26, 0x0a, 0x0c, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0b, 0x62, 0x75, 0x79, 0x65, 0x72, 0x4d,
	0x6f, 0x62, 0x69, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x62, 0x75, 0x79, 0x65,
	0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x02, 0x52, 0x0c, 0x62, 0x75, 0x79, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x6d,
	0x6f, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x0a, 0x73, 0x65, 0x6c, 0x6c, 0x65,
	0x72, 0x4d, 0x65, 0x6d, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x04, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x30, 0x0a, 0x11, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52,
	0x10, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72,
	0x5f, 0x63, 0x69, 0x74, 0x79, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x0c, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x43, 0x69, 0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x30,
	0x0a, 0x11, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x72,
	0x69, 0x63, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x10, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x72, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x88, 0x01, 0x01,
	0x12, 0x2e, 0x0a, 0x10, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x0f, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x88, 0x01, 0x01,
	0x12, 0x2c, 0x0a, 0x0f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x62,
	0x69, 0x6c, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x72, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1f,
	0x0a, 0x0b, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x18, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0a, 0x70, 0x6f, 0x73, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x21, 0x0a, 0x0c, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x19, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x1a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x63, 0x6f, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x1e, 0x0a, 0x0b, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x5f, 0x66, 0x65, 0x65,
	0x18, 0x1b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x64, 0x46, 0x65,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x69, 0x64, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x04, 0x70, 0x61, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x69,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x07, 0x63, 0x61, 0x72, 0x64,
	0x5f, 0x6e, 0x6f, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0a, 0x52, 0x06, 0x63, 0x61, 0x72,
	0x64, 0x4e, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x70,
	0x61, 0x79, 0x65, 0x64, 0x18, 0x21, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x61, 0x72, 0x64,
	0x50, 0x61, 0x79, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x70,
	0x61, 0x79, 0x65, 0x64, 0x18, 0x22, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x63, 0x6f, 0x72,
	0x65, 0x50, 0x61, 0x79, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x61, 0x64, 0x67, 0x65, 0x5f,
	0x70, 0x61, 0x79, 0x65, 0x64, 0x18, 0x23, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x61, 0x64,
	0x67, 0x65, 0x50, 0x61, 0x79, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x75, 0x74, 0x5f, 0x70,
	0x61, 0x79, 0x65, 0x64, 0x18, 0x24, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6e, 0x75, 0x74, 0x50,
	0x61, 0x79, 0x65, 0x64, 0x12, 0x15, 0x0a, 0x03, 0x63, 0x74, 0x6d, 0x18, 0x25, 0x20, 0x01, 0x28,
	0x03, 0x48, 0x0b, 0x52, 0x03, 0x63, 0x74, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x72,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x26, 0x20, 0x01, 0x28,
	0x03, 0x48, 0x0c, 0x52, 0x0b, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x62, 0x69, 0x6c,
	0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x6d,
	0x65, 0x6d, 0x6f, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x63, 0x69, 0x74, 0x79, 0x42, 0x14, 0x0a,
	0x12, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x72,
	0x69, 0x63, 0x74, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x42, 0x0a, 0x0a, 0x08,
	0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x6e, 0x6f, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x63, 0x74, 0x6d,
	0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x22, 0x29, 0x0a, 0x17, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74,
	0x72, 0x69, 0x65, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4b, 0x0a, 0x0f,
	0x54, 0x72, 0x61, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x7d, 0x0a, 0x1b, 0x54, 0x72, 0x61,
	0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x19, 0x0a, 0x17, 0x54, 0x72, 0x61, 0x64,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x43, 0x0a, 0x07, 0x57, 0x64, 0x74, 0x53, 0x68, 0x6f, 0x70, 0x12, 0x1b,
	0x0a, 0x09, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73,
	0x68, 0x6f, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x68, 0x6f, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x14, 0x0a, 0x12, 0x57, 0x64, 0x74, 0x53,
	0x68, 0x6f, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x6d,
	0x0a, 0x13, 0x57, 0x64, 0x74, 0x53, 0x68, 0x6f, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x57, 0x64, 0x74, 0x53, 0x68, 0x6f, 0x70, 0x52, 0x07,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x48, 0x0a,
	0x08, 0x57, 0x64, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x6f,
	0x63, 0x6b, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x74, 0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x63,
	0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74,
	0x6f, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x15, 0x0a, 0x13, 0x57, 0x64, 0x74, 0x53, 0x74,
	0x6f, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x6f,
	0x0a, 0x14, 0x57, 0x64, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x57, 0x64, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b,
	0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x32,
	0xe8, 0x1f, 0x0a, 0x15, 0x43, 0x74, 0x6d, 0x49, 0x74, 0x6f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x9a, 0x01, 0x0a, 0x1f, 0x43, 0x68,
	0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x39, 0x2e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x68,
	0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65,
	0x6e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6b, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x12, 0x2e, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f,
	0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2f, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f,
	0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x79, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x12, 0x35, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x43, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x82,
	0x01, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f,
	0x6e, 0x66, 0x12, 0x38, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69,
	0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x8b, 0x01, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x3b, 0x2e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x52, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x52, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x7a, 0x0a, 0x07, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x12, 0x35, 0x2e, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x73, 0x74,
	0x72, 0x6f, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x82, 0x01,
	0x0a, 0x0d, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x12,
	0x36, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e,
	0x43, 0x74, 0x6d, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x43, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x8b, 0x01, 0x0a, 0x10, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x12, 0x39, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x43, 0x6f, 0x6e, 0x66, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69,
	0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x44,
	0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x94, 0x01, 0x0a, 0x13, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x3c, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x52, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64,
	0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x97, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x12, 0x3b, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x3c, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74,
	0x6f, 0x2e, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x71, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x32, 0x2e, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74,
	0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x79, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x12, 0x33, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69,
	0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x43, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x82, 0x01, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e,
	0x66, 0x12, 0x36, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74,
	0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x8b, 0x01, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x66,
	0x75, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x39, 0x2e, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x52, 0x65, 0x66,
	0x75, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x7f, 0x0a, 0x0d, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x3b, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x72, 0x74,
	0x69, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2f, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f,
	0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x92, 0x01, 0x0a, 0x1a, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f,
	0x6e, 0x66, 0x12, 0x36, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69,
	0x74, 0x6f, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x9b, 0x01, 0x0a, 0x1d, 0x52, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x39, 0x2e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x75, 0x0a, 0x08, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65,
	0x76, 0x65, 0x12, 0x36, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69,
	0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x72, 0x69,
	0x65, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7d, 0x0a,
	0x0e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x12,
	0x37, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e,
	0x43, 0x74, 0x6d, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x43, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x86, 0x01, 0x0a,
	0x11, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f,
	0x6e, 0x66, 0x12, 0x3a, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69,
	0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x52,
	0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43,
	0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x8f, 0x01, 0x0a, 0x14, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65,
	0x76, 0x65, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x3d,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43,
	0x74, 0x6d, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x65,
	0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74,
	0x6d, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x79, 0x0a, 0x0e, 0x53, 0x68, 0x6f, 0x70, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x57, 0x64, 0x74, 0x12, 0x31, 0x2e, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x57, 0x64, 0x74, 0x53, 0x68, 0x6f,
	0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x57, 0x64, 0x74,
	0x53, 0x68, 0x6f, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x7c, 0x0a, 0x0f, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x57, 0x64, 0x74, 0x12, 0x32, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x57, 0x64, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x57, 0x64, 0x74, 0x53, 0x74, 0x6f,
	0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x94, 0x01, 0x0a, 0x17, 0x54, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x38, 0x2e, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x61,
	0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x91, 0x01, 0x0a, 0x15, 0x54, 0x72, 0x61, 0x64,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x12, 0x38, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74,
	0x6f, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3c, 0x2e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x61, 0x64,
	0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x91, 0x01, 0x0a, 0x17,
	0x54, 0x79, 0x70, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x37, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x3b, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f,
	0x2e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x6b, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x2e, 0x2e, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x79, 0x0a, 0x0c,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x12, 0x35, 0x2e, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d,
	0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x82, 0x01, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x12, 0x38, 0x2e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f,
	0x6e, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x8b, 0x01, 0x0a,
	0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x12, 0x3b, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x36, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f,
	0x2e, 0x43, 0x74, 0x6d, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0f, 0x5a, 0x0d, 0x2e, 0x2f,
	0x70, 0x62, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x69, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_order_ito_proto_rawDescOnce sync.Once
	file_order_ito_proto_rawDescData = file_order_ito_proto_rawDesc
)

func file_order_ito_proto_rawDescGZIP() []byte {
	file_order_ito_proto_rawDescOnce.Do(func() {
		file_order_ito_proto_rawDescData = protoimpl.X.CompressGZIP(file_order_ito_proto_rawDescData)
	})
	return file_order_ito_proto_rawDescData
}

var file_order_ito_proto_msgTypes = make([]protoimpl.MessageInfo, 58)
var file_order_ito_proto_goTypes = []interface{}{
	(*CtmCouponDestroyResponse)(nil),        // 0: customer_service.customer_ito.CtmCouponDestroyResponse
	(*CtmOrderConfDestroyResponse)(nil),     // 1: customer_service.customer_ito.CtmOrderConfDestroyResponse
	(*CtmOrderDestroyResponse)(nil),         // 2: customer_service.customer_ito.CtmOrderDestroyResponse
	(*CtmRefundReasonDestroyResponse)(nil),  // 3: customer_service.customer_ito.CtmRefundReasonDestroyResponse
	(*TradeStatusOptions)(nil),              // 4: customer_service.customer_ito.TradeStatusOptions
	(*TradeStatusOptionsListResponse)(nil),  // 5: customer_service.customer_ito.TradeStatusOptionsListResponse
	(*TradeStatusOptionsRequest)(nil),       // 6: customer_service.customer_ito.TradeStatusOptionsRequest
	(*ChildrenBatchUpdateRequest)(nil),      // 7: customer_service.customer_ito.ChildrenBatchUpdateRequest
	(*ChildrenBatchUpdateResponse)(nil),     // 8: customer_service.customer_ito.ChildrenBatchUpdateResponse
	(*RefundReasonCheckListRequest)(nil),    // 9: customer_service.customer_ito.RefundReasonCheckListRequest
	(*RefundReasonCheckListResponse)(nil),   // 10: customer_service.customer_ito.RefundReasonCheckListResponse
	(*RefundReasonOption)(nil),              // 11: customer_service.customer_ito.RefundReasonOption
	(*RefundReasonOptionListResponse)(nil),  // 12: customer_service.customer_ito.RefundReasonOptionListResponse
	(*RefundReasonOptionsRequest)(nil),      // 13: customer_service.customer_ito.RefundReasonOptionsRequest
	(*ReasonTypeOption)(nil),                // 14: customer_service.customer_ito.ReasonTypeOption
	(*ReasonTypeOptionListResponse)(nil),    // 15: customer_service.customer_ito.ReasonTypeOptionListResponse
	(*ReasonTypeOptionsRequest)(nil),        // 16: customer_service.customer_ito.ReasonTypeOptionsRequest
	(*CtmRefundReasonChildrenResponse)(nil), // 17: customer_service.customer_ito.CtmRefundReasonChildrenResponse
	(*TradeReasonOption)(nil),               // 18: customer_service.customer_ito.TradeReasonOption
	(*TradeReasonOptionListResponse)(nil),   // 19: customer_service.customer_ito.TradeReasonOptionListResponse
	(*TradeReasonOptionsRequest)(nil),       // 20: customer_service.customer_ito.TradeReasonOptionsRequest
	(*CtmCouponCreateRequest)(nil),          // 21: customer_service.customer_ito.CtmCouponCreateRequest
	(*CtmCouponDestroyRequest)(nil),         // 22: customer_service.customer_ito.CtmCouponDestroyRequest
	(*CtmCouponListRequest)(nil),            // 23: customer_service.customer_ito.CtmCouponListRequest
	(*CtmCouponListResponse)(nil),           // 24: customer_service.customer_ito.CtmCouponListResponse
	(*CtmCouponResponse)(nil),               // 25: customer_service.customer_ito.CtmCouponResponse
	(*CtmCouponRetrieveRequest)(nil),        // 26: customer_service.customer_ito.CtmCouponRetrieveRequest
	(*CtmCouponUpdateRequest)(nil),          // 27: customer_service.customer_ito.CtmCouponUpdateRequest
	(*CtmRefundReasonCreateRequest)(nil),    // 28: customer_service.customer_ito.CtmRefundReasonCreateRequest
	(*CtmRefundReasonDestroyRequest)(nil),   // 29: customer_service.customer_ito.CtmRefundReasonDestroyRequest
	(*CtmRefundReasonListRequest)(nil),      // 30: customer_service.customer_ito.CtmRefundReasonListRequest
	(*CtmRefundReasonListResponse)(nil),     // 31: customer_service.customer_ito.CtmRefundReasonListResponse
	(*CtmRefundReasonResponse)(nil),         // 32: customer_service.customer_ito.CtmRefundReasonResponse
	(*CtmRefundReasonRetrieveRequest)(nil),  // 33: customer_service.customer_ito.CtmRefundReasonRetrieveRequest
	(*CtmRefundReasonUpdateRequest)(nil),    // 34: customer_service.customer_ito.CtmRefundReasonUpdateRequest
	(*CtmOrderConfDestroyRequest)(nil),      // 35: customer_service.customer_ito.CtmOrderConfDestroyRequest
	(*CtmOrderConfCreateRequest)(nil),       // 36: customer_service.customer_ito.CtmOrderConfCreateRequest
	(*CtmOrderConfListRequest)(nil),         // 37: customer_service.customer_ito.CtmOrderConfListRequest
	(*CtmOrderConfListResponse)(nil),        // 38: customer_service.customer_ito.CtmOrderConfListResponse
	(*CtmOrderConfResponse)(nil),            // 39: customer_service.customer_ito.CtmOrderConfResponse
	(*CtmOrderConfRetrieveRequest)(nil),     // 40: customer_service.customer_ito.CtmOrderConfRetrieveRequest
	(*CtmOrderConfUpdateRequest)(nil),       // 41: customer_service.customer_ito.CtmOrderConfUpdateRequest
	(*CtmOrderDestroyRequest)(nil),          // 42: customer_service.customer_ito.CtmOrderDestroyRequest
	(*CtmOrderListRequest)(nil),             // 43: customer_service.customer_ito.CtmOrderListRequest
	(*CtmOrderListResponse)(nil),            // 44: customer_service.customer_ito.CtmOrderListResponse
	(*CtmOrderPartialUpdateRequest)(nil),    // 45: customer_service.customer_ito.CtmOrderPartialUpdateRequest
	(*CtmOrderRequest)(nil),                 // 46: customer_service.customer_ito.CtmOrderRequest
	(*CtmOrderResponse)(nil),                // 47: customer_service.customer_ito.CtmOrderResponse
	(*CtmOrderRetrieveRequest)(nil),         // 48: customer_service.customer_ito.CtmOrderRetrieveRequest
	(*TradeTypeOption)(nil),                 // 49: customer_service.customer_ito.TradeTypeOption
	(*TradeTypeOptionListResponse)(nil),     // 50: customer_service.customer_ito.TradeTypeOptionListResponse
	(*TradeTypeOptionsRequest)(nil),         // 51: customer_service.customer_ito.TradeTypeOptionsRequest
	(*WdtShop)(nil),                         // 52: customer_service.customer_ito.WdtShop
	(*WdtShopListRequest)(nil),              // 53: customer_service.customer_ito.WdtShopListRequest
	(*WdtShopListResponse)(nil),             // 54: customer_service.customer_ito.WdtShopListResponse
	(*WdtStock)(nil),                        // 55: customer_service.customer_ito.WdtStock
	(*WdtStockListRequest)(nil),             // 56: customer_service.customer_ito.WdtStockListRequest
	(*WdtStockListResponse)(nil),            // 57: customer_service.customer_ito.WdtStockListResponse
}
var file_order_ito_proto_depIdxs = []int32{
	4,  // 0: customer_service.customer_ito.TradeStatusOptionsListResponse.results:type_name -> customer_service.customer_ito.TradeStatusOptions
	11, // 1: customer_service.customer_ito.RefundReasonOptionListResponse.results:type_name -> customer_service.customer_ito.RefundReasonOption
	14, // 2: customer_service.customer_ito.ReasonTypeOptionListResponse.results:type_name -> customer_service.customer_ito.ReasonTypeOption
	17, // 3: customer_service.customer_ito.TradeReasonOption.children:type_name -> customer_service.customer_ito.CtmRefundReasonChildrenResponse
	18, // 4: customer_service.customer_ito.TradeReasonOptionListResponse.results:type_name -> customer_service.customer_ito.TradeReasonOption
	25, // 5: customer_service.customer_ito.CtmCouponListResponse.results:type_name -> customer_service.customer_ito.CtmCouponResponse
	32, // 6: customer_service.customer_ito.CtmRefundReasonListResponse.results:type_name -> customer_service.customer_ito.CtmRefundReasonResponse
	17, // 7: customer_service.customer_ito.CtmRefundReasonResponse.children:type_name -> customer_service.customer_ito.CtmRefundReasonChildrenResponse
	39, // 8: customer_service.customer_ito.CtmOrderConfListResponse.results:type_name -> customer_service.customer_ito.CtmOrderConfResponse
	47, // 9: customer_service.customer_ito.CtmOrderListResponse.results:type_name -> customer_service.customer_ito.CtmOrderResponse
	49, // 10: customer_service.customer_ito.TradeTypeOptionListResponse.results:type_name -> customer_service.customer_ito.TradeTypeOption
	52, // 11: customer_service.customer_ito.WdtShopListResponse.results:type_name -> customer_service.customer_ito.WdtShop
	55, // 12: customer_service.customer_ito.WdtStockListResponse.results:type_name -> customer_service.customer_ito.WdtStock
	7,  // 13: customer_service.customer_ito.CtmItoOrderController.ChildrenBatchUpdateRefundReason:input_type -> customer_service.customer_ito.ChildrenBatchUpdateRequest
	46, // 14: customer_service.customer_ito.CtmItoOrderController.Create:input_type -> customer_service.customer_ito.CtmOrderRequest
	21, // 15: customer_service.customer_ito.CtmItoOrderController.CreateCoupon:input_type -> customer_service.customer_ito.CtmCouponCreateRequest
	36, // 16: customer_service.customer_ito.CtmItoOrderController.CreateOrderConf:input_type -> customer_service.customer_ito.CtmOrderConfCreateRequest
	28, // 17: customer_service.customer_ito.CtmItoOrderController.CreateRefundReason:input_type -> customer_service.customer_ito.CtmRefundReasonCreateRequest
	42, // 18: customer_service.customer_ito.CtmItoOrderController.Destroy:input_type -> customer_service.customer_ito.CtmOrderDestroyRequest
	22, // 19: customer_service.customer_ito.CtmItoOrderController.DestroyCoupon:input_type -> customer_service.customer_ito.CtmCouponDestroyRequest
	35, // 20: customer_service.customer_ito.CtmItoOrderController.DestroyOrderConf:input_type -> customer_service.customer_ito.CtmOrderConfDestroyRequest
	29, // 21: customer_service.customer_ito.CtmItoOrderController.DestroyRefundReason:input_type -> customer_service.customer_ito.CtmRefundReasonDestroyRequest
	9,  // 22: customer_service.customer_ito.CtmItoOrderController.GetCheckListRefundReason:input_type -> customer_service.customer_ito.RefundReasonCheckListRequest
	43, // 23: customer_service.customer_ito.CtmItoOrderController.List:input_type -> customer_service.customer_ito.CtmOrderListRequest
	23, // 24: customer_service.customer_ito.CtmItoOrderController.ListCoupon:input_type -> customer_service.customer_ito.CtmCouponListRequest
	37, // 25: customer_service.customer_ito.CtmItoOrderController.ListOrderConf:input_type -> customer_service.customer_ito.CtmOrderConfListRequest
	30, // 26: customer_service.customer_ito.CtmItoOrderController.ListRefundReason:input_type -> customer_service.customer_ito.CtmRefundReasonListRequest
	45, // 27: customer_service.customer_ito.CtmItoOrderController.PartialUpdate:input_type -> customer_service.customer_ito.CtmOrderPartialUpdateRequest
	51, // 28: customer_service.customer_ito.CtmItoOrderController.ReasonTypeOptionsOrderConf:input_type -> customer_service.customer_ito.TradeTypeOptionsRequest
	13, // 29: customer_service.customer_ito.CtmItoOrderController.ReasonTypeOptionsRefundReason:input_type -> customer_service.customer_ito.RefundReasonOptionsRequest
	48, // 30: customer_service.customer_ito.CtmItoOrderController.Retrieve:input_type -> customer_service.customer_ito.CtmOrderRetrieveRequest
	26, // 31: customer_service.customer_ito.CtmItoOrderController.RetrieveCoupon:input_type -> customer_service.customer_ito.CtmCouponRetrieveRequest
	40, // 32: customer_service.customer_ito.CtmItoOrderController.RetrieveOrderConf:input_type -> customer_service.customer_ito.CtmOrderConfRetrieveRequest
	33, // 33: customer_service.customer_ito.CtmItoOrderController.RetrieveRefundReason:input_type -> customer_service.customer_ito.CtmRefundReasonRetrieveRequest
	53, // 34: customer_service.customer_ito.CtmItoOrderController.ShopOptionsWdt:input_type -> customer_service.customer_ito.WdtShopListRequest
	56, // 35: customer_service.customer_ito.CtmItoOrderController.StockOptionsWdt:input_type -> customer_service.customer_ito.WdtStockListRequest
	6,  // 36: customer_service.customer_ito.CtmItoOrderController.TradeStatusOptionsOrder:input_type -> customer_service.customer_ito.TradeStatusOptionsRequest
	20, // 37: customer_service.customer_ito.CtmItoOrderController.TradeTypeRefundReason:input_type -> customer_service.customer_ito.TradeReasonOptionsRequest
	16, // 38: customer_service.customer_ito.CtmItoOrderController.TypeOptionsRefundReason:input_type -> customer_service.customer_ito.ReasonTypeOptionsRequest
	46, // 39: customer_service.customer_ito.CtmItoOrderController.Update:input_type -> customer_service.customer_ito.CtmOrderRequest
	27, // 40: customer_service.customer_ito.CtmItoOrderController.UpdateCoupon:input_type -> customer_service.customer_ito.CtmCouponUpdateRequest
	41, // 41: customer_service.customer_ito.CtmItoOrderController.UpdateOrderConf:input_type -> customer_service.customer_ito.CtmOrderConfUpdateRequest
	34, // 42: customer_service.customer_ito.CtmItoOrderController.UpdateRefundReason:input_type -> customer_service.customer_ito.CtmRefundReasonUpdateRequest
	8,  // 43: customer_service.customer_ito.CtmItoOrderController.ChildrenBatchUpdateRefundReason:output_type -> customer_service.customer_ito.ChildrenBatchUpdateResponse
	47, // 44: customer_service.customer_ito.CtmItoOrderController.Create:output_type -> customer_service.customer_ito.CtmOrderResponse
	25, // 45: customer_service.customer_ito.CtmItoOrderController.CreateCoupon:output_type -> customer_service.customer_ito.CtmCouponResponse
	39, // 46: customer_service.customer_ito.CtmItoOrderController.CreateOrderConf:output_type -> customer_service.customer_ito.CtmOrderConfResponse
	32, // 47: customer_service.customer_ito.CtmItoOrderController.CreateRefundReason:output_type -> customer_service.customer_ito.CtmRefundReasonResponse
	2,  // 48: customer_service.customer_ito.CtmItoOrderController.Destroy:output_type -> customer_service.customer_ito.CtmOrderDestroyResponse
	0,  // 49: customer_service.customer_ito.CtmItoOrderController.DestroyCoupon:output_type -> customer_service.customer_ito.CtmCouponDestroyResponse
	1,  // 50: customer_service.customer_ito.CtmItoOrderController.DestroyOrderConf:output_type -> customer_service.customer_ito.CtmOrderConfDestroyResponse
	3,  // 51: customer_service.customer_ito.CtmItoOrderController.DestroyRefundReason:output_type -> customer_service.customer_ito.CtmRefundReasonDestroyResponse
	10, // 52: customer_service.customer_ito.CtmItoOrderController.GetCheckListRefundReason:output_type -> customer_service.customer_ito.RefundReasonCheckListResponse
	44, // 53: customer_service.customer_ito.CtmItoOrderController.List:output_type -> customer_service.customer_ito.CtmOrderListResponse
	24, // 54: customer_service.customer_ito.CtmItoOrderController.ListCoupon:output_type -> customer_service.customer_ito.CtmCouponListResponse
	38, // 55: customer_service.customer_ito.CtmItoOrderController.ListOrderConf:output_type -> customer_service.customer_ito.CtmOrderConfListResponse
	31, // 56: customer_service.customer_ito.CtmItoOrderController.ListRefundReason:output_type -> customer_service.customer_ito.CtmRefundReasonListResponse
	47, // 57: customer_service.customer_ito.CtmItoOrderController.PartialUpdate:output_type -> customer_service.customer_ito.CtmOrderResponse
	50, // 58: customer_service.customer_ito.CtmItoOrderController.ReasonTypeOptionsOrderConf:output_type -> customer_service.customer_ito.TradeTypeOptionListResponse
	12, // 59: customer_service.customer_ito.CtmItoOrderController.ReasonTypeOptionsRefundReason:output_type -> customer_service.customer_ito.RefundReasonOptionListResponse
	47, // 60: customer_service.customer_ito.CtmItoOrderController.Retrieve:output_type -> customer_service.customer_ito.CtmOrderResponse
	25, // 61: customer_service.customer_ito.CtmItoOrderController.RetrieveCoupon:output_type -> customer_service.customer_ito.CtmCouponResponse
	39, // 62: customer_service.customer_ito.CtmItoOrderController.RetrieveOrderConf:output_type -> customer_service.customer_ito.CtmOrderConfResponse
	32, // 63: customer_service.customer_ito.CtmItoOrderController.RetrieveRefundReason:output_type -> customer_service.customer_ito.CtmRefundReasonResponse
	54, // 64: customer_service.customer_ito.CtmItoOrderController.ShopOptionsWdt:output_type -> customer_service.customer_ito.WdtShopListResponse
	57, // 65: customer_service.customer_ito.CtmItoOrderController.StockOptionsWdt:output_type -> customer_service.customer_ito.WdtStockListResponse
	5,  // 66: customer_service.customer_ito.CtmItoOrderController.TradeStatusOptionsOrder:output_type -> customer_service.customer_ito.TradeStatusOptionsListResponse
	19, // 67: customer_service.customer_ito.CtmItoOrderController.TradeTypeRefundReason:output_type -> customer_service.customer_ito.TradeReasonOptionListResponse
	15, // 68: customer_service.customer_ito.CtmItoOrderController.TypeOptionsRefundReason:output_type -> customer_service.customer_ito.ReasonTypeOptionListResponse
	47, // 69: customer_service.customer_ito.CtmItoOrderController.Update:output_type -> customer_service.customer_ito.CtmOrderResponse
	25, // 70: customer_service.customer_ito.CtmItoOrderController.UpdateCoupon:output_type -> customer_service.customer_ito.CtmCouponResponse
	39, // 71: customer_service.customer_ito.CtmItoOrderController.UpdateOrderConf:output_type -> customer_service.customer_ito.CtmOrderConfResponse
	32, // 72: customer_service.customer_ito.CtmItoOrderController.UpdateRefundReason:output_type -> customer_service.customer_ito.CtmRefundReasonResponse
	43, // [43:73] is the sub-list for method output_type
	13, // [13:43] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_order_ito_proto_init() }
func file_order_ito_proto_init() {
	if File_order_ito_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_order_ito_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmCouponDestroyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmOrderConfDestroyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmOrderDestroyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmRefundReasonDestroyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TradeStatusOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TradeStatusOptionsListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TradeStatusOptionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChildrenBatchUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChildrenBatchUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefundReasonCheckListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefundReasonCheckListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefundReasonOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefundReasonOptionListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefundReasonOptionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReasonTypeOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReasonTypeOptionListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReasonTypeOptionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmRefundReasonChildrenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TradeReasonOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TradeReasonOptionListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TradeReasonOptionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmCouponCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmCouponDestroyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmCouponListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmCouponListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmCouponResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmCouponRetrieveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmCouponUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmRefundReasonCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmRefundReasonDestroyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmRefundReasonListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmRefundReasonListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmRefundReasonResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmRefundReasonRetrieveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmRefundReasonUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmOrderConfDestroyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmOrderConfCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmOrderConfListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmOrderConfListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmOrderConfResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmOrderConfRetrieveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmOrderConfUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmOrderDestroyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmOrderListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmOrderListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmOrderPartialUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmOrderRetrieveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TradeTypeOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TradeTypeOptionListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TradeTypeOptionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WdtShop); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WdtShopListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WdtShopListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WdtStock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WdtStockListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WdtStockListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_order_ito_proto_msgTypes[17].OneofWrappers = []interface{}{}
	file_order_ito_proto_msgTypes[18].OneofWrappers = []interface{}{}
	file_order_ito_proto_msgTypes[21].OneofWrappers = []interface{}{}
	file_order_ito_proto_msgTypes[25].OneofWrappers = []interface{}{}
	file_order_ito_proto_msgTypes[27].OneofWrappers = []interface{}{}
	file_order_ito_proto_msgTypes[28].OneofWrappers = []interface{}{}
	file_order_ito_proto_msgTypes[32].OneofWrappers = []interface{}{}
	file_order_ito_proto_msgTypes[34].OneofWrappers = []interface{}{}
	file_order_ito_proto_msgTypes[45].OneofWrappers = []interface{}{}
	file_order_ito_proto_msgTypes[46].OneofWrappers = []interface{}{}
	file_order_ito_proto_msgTypes[47].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_order_ito_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   58,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_order_ito_proto_goTypes,
		DependencyIndexes: file_order_ito_proto_depIdxs,
		MessageInfos:      file_order_ito_proto_msgTypes,
	}.Build()
	File_order_ito_proto = out.File
	file_order_ito_proto_rawDesc = nil
	file_order_ito_proto_goTypes = nil
	file_order_ito_proto_depIdxs = nil
}
