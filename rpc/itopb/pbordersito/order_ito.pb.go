// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.19.4
// source: order_ito.proto

package pbordersito

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CtmOrderDestroyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CtmOrderDestroyResp) Reset() {
	*x = CtmOrderDestroyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmOrderDestroyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmOrderDestroyResp) ProtoMessage() {}

func (x *CtmOrderDestroyResp) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmOrderDestroyResp.ProtoReflect.Descriptor instead.
func (*CtmOrderDestroyResp) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{0}
}

type CtmCouponDestroyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CtmCouponDestroyResp) Reset() {
	*x = CtmCouponDestroyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmCouponDestroyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmCouponDestroyResp) ProtoMessage() {}

func (x *CtmCouponDestroyResp) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmCouponDestroyResp.ProtoReflect.Descriptor instead.
func (*CtmCouponDestroyResp) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{1}
}

type CtmOrderGoodsDetailDestroyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CtmOrderGoodsDetailDestroyResp) Reset() {
	*x = CtmOrderGoodsDetailDestroyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmOrderGoodsDetailDestroyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmOrderGoodsDetailDestroyResp) ProtoMessage() {}

func (x *CtmOrderGoodsDetailDestroyResp) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmOrderGoodsDetailDestroyResp.ProtoReflect.Descriptor instead.
func (*CtmOrderGoodsDetailDestroyResp) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{2}
}

type CtmOrderInvoiceDetailDestroyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CtmOrderInvoiceDetailDestroyResp) Reset() {
	*x = CtmOrderInvoiceDetailDestroyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmOrderInvoiceDetailDestroyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmOrderInvoiceDetailDestroyResp) ProtoMessage() {}

func (x *CtmOrderInvoiceDetailDestroyResp) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmOrderInvoiceDetailDestroyResp.ProtoReflect.Descriptor instead.
func (*CtmOrderInvoiceDetailDestroyResp) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{3}
}

type CtmOrderConfDestroyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CtmOrderConfDestroyResp) Reset() {
	*x = CtmOrderConfDestroyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmOrderConfDestroyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmOrderConfDestroyResp) ProtoMessage() {}

func (x *CtmOrderConfDestroyResp) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmOrderConfDestroyResp.ProtoReflect.Descriptor instead.
func (*CtmOrderConfDestroyResp) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{4}
}

type CtmOrderPayDetailDestroyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CtmOrderPayDetailDestroyResp) Reset() {
	*x = CtmOrderPayDetailDestroyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmOrderPayDetailDestroyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmOrderPayDetailDestroyResp) ProtoMessage() {}

func (x *CtmOrderPayDetailDestroyResp) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmOrderPayDetailDestroyResp.ProtoReflect.Descriptor instead.
func (*CtmOrderPayDetailDestroyResp) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{5}
}

type CtmOrderPromotionDetailDestroyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CtmOrderPromotionDetailDestroyResp) Reset() {
	*x = CtmOrderPromotionDetailDestroyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmOrderPromotionDetailDestroyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmOrderPromotionDetailDestroyResp) ProtoMessage() {}

func (x *CtmOrderPromotionDetailDestroyResp) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmOrderPromotionDetailDestroyResp.ProtoReflect.Descriptor instead.
func (*CtmOrderPromotionDetailDestroyResp) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{6}
}

type CtmRefundReasonDestroyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CtmRefundReasonDestroyResp) Reset() {
	*x = CtmRefundReasonDestroyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmRefundReasonDestroyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmRefundReasonDestroyResp) ProtoMessage() {}

func (x *CtmRefundReasonDestroyResp) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmRefundReasonDestroyResp.ProtoReflect.Descriptor instead.
func (*CtmRefundReasonDestroyResp) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{7}
}

type ChildrenBatchUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	IsValid bool  `protobuf:"varint,2,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
}

func (x *ChildrenBatchUpdateRequest) Reset() {
	*x = ChildrenBatchUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChildrenBatchUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChildrenBatchUpdateRequest) ProtoMessage() {}

func (x *ChildrenBatchUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChildrenBatchUpdateRequest.ProtoReflect.Descriptor instead.
func (*ChildrenBatchUpdateRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{8}
}

func (x *ChildrenBatchUpdateRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ChildrenBatchUpdateRequest) GetIsValid() bool {
	if x != nil {
		return x.IsValid
	}
	return false
}

type ChildrenBatchUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Affected int32 `protobuf:"varint,1,opt,name=affected,proto3" json:"affected,omitempty"`
}

func (x *ChildrenBatchUpdateResponse) Reset() {
	*x = ChildrenBatchUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChildrenBatchUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChildrenBatchUpdateResponse) ProtoMessage() {}

func (x *ChildrenBatchUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChildrenBatchUpdateResponse.ProtoReflect.Descriptor instead.
func (*ChildrenBatchUpdateResponse) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{9}
}

func (x *ChildrenBatchUpdateResponse) GetAffected() int32 {
	if x != nil {
		return x.Affected
	}
	return 0
}

type CtmCouponCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CouponSku      *string `protobuf:"bytes,2,opt,name=coupon_sku,json=couponSku,proto3,oneof" json:"coupon_sku,omitempty"`
	CouponName     string  `protobuf:"bytes,3,opt,name=coupon_name,json=couponName,proto3" json:"coupon_name,omitempty"`
	CouponCode     string  `protobuf:"bytes,4,opt,name=coupon_code,json=couponCode,proto3" json:"coupon_code,omitempty"`
	CouponIntro    *string `protobuf:"bytes,5,opt,name=coupon_intro,json=couponIntro,proto3,oneof" json:"coupon_intro,omitempty"`
	TriggerAmount  *int32  `protobuf:"varint,8,opt,name=trigger_amount,json=triggerAmount,proto3,oneof" json:"trigger_amount,omitempty"`
	DiscountAmount *int32  `protobuf:"varint,9,opt,name=discount_amount,json=discountAmount,proto3,oneof" json:"discount_amount,omitempty"`
	TriggerQty     *int32  `protobuf:"varint,10,opt,name=trigger_qty,json=triggerQty,proto3,oneof" json:"trigger_qty,omitempty"`
	Discount       *int32  `protobuf:"varint,11,opt,name=discount,proto3,oneof" json:"discount,omitempty"`
	CanStack       bool    `protobuf:"varint,12,opt,name=can_stack,json=canStack,proto3" json:"can_stack,omitempty"`
	CouponStatus   int32   `protobuf:"varint,13,opt,name=coupon_status,json=couponStatus,proto3" json:"coupon_status,omitempty"`
	AcquireTime    *string `protobuf:"bytes,14,opt,name=acquire_time,json=acquireTime,proto3,oneof" json:"acquire_time,omitempty"`
	ClaimTime      *string `protobuf:"bytes,15,opt,name=claim_time,json=claimTime,proto3,oneof" json:"claim_time,omitempty"`
	ProdRange      *string `protobuf:"bytes,16,opt,name=prod_range,json=prodRange,proto3,oneof" json:"prod_range,omitempty"`
	StartTime      *string `protobuf:"bytes,17,opt,name=start_time,json=startTime,proto3,oneof" json:"start_time,omitempty"`
	ExpireTime     *string `protobuf:"bytes,18,opt,name=expire_time,json=expireTime,proto3,oneof" json:"expire_time,omitempty"`
	Ctm            int64   `protobuf:"varint,19,opt,name=ctm,proto3" json:"ctm,omitempty"`
	OrderUsed      *int64  `protobuf:"varint,20,opt,name=order_used,json=orderUsed,proto3,oneof" json:"order_used,omitempty"`
	CouponClass    int32   `protobuf:"varint,21,opt,name=coupon_class,json=couponClass,proto3" json:"coupon_class,omitempty"`
	CouponType     int32   `protobuf:"varint,22,opt,name=coupon_type,json=couponType,proto3" json:"coupon_type,omitempty"`
	IsValid        *bool   `protobuf:"varint,23,opt,name=is_valid,json=isValid,proto3,oneof" json:"is_valid,omitempty"`
}

func (x *CtmCouponCreateRequest) Reset() {
	*x = CtmCouponCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmCouponCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmCouponCreateRequest) ProtoMessage() {}

func (x *CtmCouponCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmCouponCreateRequest.ProtoReflect.Descriptor instead.
func (*CtmCouponCreateRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{10}
}

func (x *CtmCouponCreateRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CtmCouponCreateRequest) GetCouponSku() string {
	if x != nil && x.CouponSku != nil {
		return *x.CouponSku
	}
	return ""
}

func (x *CtmCouponCreateRequest) GetCouponName() string {
	if x != nil {
		return x.CouponName
	}
	return ""
}

func (x *CtmCouponCreateRequest) GetCouponCode() string {
	if x != nil {
		return x.CouponCode
	}
	return ""
}

func (x *CtmCouponCreateRequest) GetCouponIntro() string {
	if x != nil && x.CouponIntro != nil {
		return *x.CouponIntro
	}
	return ""
}

func (x *CtmCouponCreateRequest) GetTriggerAmount() int32 {
	if x != nil && x.TriggerAmount != nil {
		return *x.TriggerAmount
	}
	return 0
}

func (x *CtmCouponCreateRequest) GetDiscountAmount() int32 {
	if x != nil && x.DiscountAmount != nil {
		return *x.DiscountAmount
	}
	return 0
}

func (x *CtmCouponCreateRequest) GetTriggerQty() int32 {
	if x != nil && x.TriggerQty != nil {
		return *x.TriggerQty
	}
	return 0
}

func (x *CtmCouponCreateRequest) GetDiscount() int32 {
	if x != nil && x.Discount != nil {
		return *x.Discount
	}
	return 0
}

func (x *CtmCouponCreateRequest) GetCanStack() bool {
	if x != nil {
		return x.CanStack
	}
	return false
}

func (x *CtmCouponCreateRequest) GetCouponStatus() int32 {
	if x != nil {
		return x.CouponStatus
	}
	return 0
}

func (x *CtmCouponCreateRequest) GetAcquireTime() string {
	if x != nil && x.AcquireTime != nil {
		return *x.AcquireTime
	}
	return ""
}

func (x *CtmCouponCreateRequest) GetClaimTime() string {
	if x != nil && x.ClaimTime != nil {
		return *x.ClaimTime
	}
	return ""
}

func (x *CtmCouponCreateRequest) GetProdRange() string {
	if x != nil && x.ProdRange != nil {
		return *x.ProdRange
	}
	return ""
}

func (x *CtmCouponCreateRequest) GetStartTime() string {
	if x != nil && x.StartTime != nil {
		return *x.StartTime
	}
	return ""
}

func (x *CtmCouponCreateRequest) GetExpireTime() string {
	if x != nil && x.ExpireTime != nil {
		return *x.ExpireTime
	}
	return ""
}

func (x *CtmCouponCreateRequest) GetCtm() int64 {
	if x != nil {
		return x.Ctm
	}
	return 0
}

func (x *CtmCouponCreateRequest) GetOrderUsed() int64 {
	if x != nil && x.OrderUsed != nil {
		return *x.OrderUsed
	}
	return 0
}

func (x *CtmCouponCreateRequest) GetCouponClass() int32 {
	if x != nil {
		return x.CouponClass
	}
	return 0
}

func (x *CtmCouponCreateRequest) GetCouponType() int32 {
	if x != nil {
		return x.CouponType
	}
	return 0
}

func (x *CtmCouponCreateRequest) GetIsValid() bool {
	if x != nil && x.IsValid != nil {
		return *x.IsValid
	}
	return false
}

type CtmCouponDestroyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CtmCouponDestroyRequest) Reset() {
	*x = CtmCouponDestroyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmCouponDestroyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmCouponDestroyRequest) ProtoMessage() {}

func (x *CtmCouponDestroyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmCouponDestroyRequest.ProtoReflect.Descriptor instead.
func (*CtmCouponDestroyRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{11}
}

func (x *CtmCouponDestroyRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CtmCouponListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters string `protobuf:"bytes,1,opt,name=filters,proto3" json:"filters,omitempty"`
}

func (x *CtmCouponListRequest) Reset() {
	*x = CtmCouponListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmCouponListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmCouponListRequest) ProtoMessage() {}

func (x *CtmCouponListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmCouponListRequest.ProtoReflect.Descriptor instead.
func (*CtmCouponListRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{12}
}

func (x *CtmCouponListRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

type CtmCouponListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*CtmCouponResponse `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Count   int32                `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *CtmCouponListResponse) Reset() {
	*x = CtmCouponListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmCouponListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmCouponListResponse) ProtoMessage() {}

func (x *CtmCouponListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmCouponListResponse.ProtoReflect.Descriptor instead.
func (*CtmCouponListResponse) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{13}
}

func (x *CtmCouponListResponse) GetResults() []*CtmCouponResponse {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *CtmCouponListResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type CtmCouponOptionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CouponClasses []*LabelValueResponse `protobuf:"bytes,1,rep,name=coupon_classes,json=couponClasses,proto3" json:"coupon_classes,omitempty"`
	CouponTypes   []*LabelValueResponse `protobuf:"bytes,2,rep,name=coupon_types,json=couponTypes,proto3" json:"coupon_types,omitempty"`
	CouponStatus  []*LabelValueResponse `protobuf:"bytes,3,rep,name=coupon_status,json=couponStatus,proto3" json:"coupon_status,omitempty"`
}

func (x *CtmCouponOptionResponse) Reset() {
	*x = CtmCouponOptionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmCouponOptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmCouponOptionResponse) ProtoMessage() {}

func (x *CtmCouponOptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmCouponOptionResponse.ProtoReflect.Descriptor instead.
func (*CtmCouponOptionResponse) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{14}
}

func (x *CtmCouponOptionResponse) GetCouponClasses() []*LabelValueResponse {
	if x != nil {
		return x.CouponClasses
	}
	return nil
}

func (x *CtmCouponOptionResponse) GetCouponTypes() []*LabelValueResponse {
	if x != nil {
		return x.CouponTypes
	}
	return nil
}

func (x *CtmCouponOptionResponse) GetCouponStatus() []*LabelValueResponse {
	if x != nil {
		return x.CouponStatus
	}
	return nil
}

type CtmCouponResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreateTime       string  `protobuf:"bytes,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime       string  `protobuf:"bytes,3,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	CouponSku        *string `protobuf:"bytes,4,opt,name=coupon_sku,json=couponSku,proto3,oneof" json:"coupon_sku,omitempty"`
	CouponName       string  `protobuf:"bytes,5,opt,name=coupon_name,json=couponName,proto3" json:"coupon_name,omitempty"`
	CouponCode       string  `protobuf:"bytes,6,opt,name=coupon_code,json=couponCode,proto3" json:"coupon_code,omitempty"`
	CouponIntro      *string `protobuf:"bytes,7,opt,name=coupon_intro,json=couponIntro,proto3,oneof" json:"coupon_intro,omitempty"`
	TriggerAmount    *int32  `protobuf:"varint,10,opt,name=trigger_amount,json=triggerAmount,proto3,oneof" json:"trigger_amount,omitempty"`
	DiscountAmount   *int32  `protobuf:"varint,11,opt,name=discount_amount,json=discountAmount,proto3,oneof" json:"discount_amount,omitempty"`
	TriggerQty       *int32  `protobuf:"varint,12,opt,name=trigger_qty,json=triggerQty,proto3,oneof" json:"trigger_qty,omitempty"`
	Discount         *int32  `protobuf:"varint,13,opt,name=discount,proto3,oneof" json:"discount,omitempty"`
	CanStack         bool    `protobuf:"varint,14,opt,name=can_stack,json=canStack,proto3" json:"can_stack,omitempty"`
	CouponStatus     int32   `protobuf:"varint,15,opt,name=coupon_status,json=couponStatus,proto3" json:"coupon_status,omitempty"`
	AcquireTime      *string `protobuf:"bytes,16,opt,name=acquire_time,json=acquireTime,proto3,oneof" json:"acquire_time,omitempty"`
	ClaimTime        *string `protobuf:"bytes,17,opt,name=claim_time,json=claimTime,proto3,oneof" json:"claim_time,omitempty"`
	ProdRange        *string `protobuf:"bytes,18,opt,name=prod_range,json=prodRange,proto3,oneof" json:"prod_range,omitempty"`
	StartTime        *string `protobuf:"bytes,19,opt,name=start_time,json=startTime,proto3,oneof" json:"start_time,omitempty"`
	ExpireTime       *string `protobuf:"bytes,20,opt,name=expire_time,json=expireTime,proto3,oneof" json:"expire_time,omitempty"`
	Ctm              int64   `protobuf:"varint,21,opt,name=ctm,proto3" json:"ctm,omitempty"`
	OrderUsed        *int64  `protobuf:"varint,22,opt,name=order_used,json=orderUsed,proto3,oneof" json:"order_used,omitempty"`
	CouponClass      int32   `protobuf:"varint,23,opt,name=coupon_class,json=couponClass,proto3" json:"coupon_class,omitempty"`
	CouponType       int32   `protobuf:"varint,24,opt,name=coupon_type,json=couponType,proto3" json:"coupon_type,omitempty"`
	IsValid          *bool   `protobuf:"varint,25,opt,name=is_valid,json=isValid,proto3,oneof" json:"is_valid,omitempty"`
	CouponTypeName   string  `protobuf:"bytes,26,opt,name=coupon_type_name,json=couponTypeName,proto3" json:"coupon_type_name,omitempty"`
	CouponClassName  string  `protobuf:"bytes,27,opt,name=coupon_class_name,json=couponClassName,proto3" json:"coupon_class_name,omitempty"`
	CouponStatusName string  `protobuf:"bytes,28,opt,name=coupon_status_name,json=couponStatusName,proto3" json:"coupon_status_name,omitempty"`
}

func (x *CtmCouponResponse) Reset() {
	*x = CtmCouponResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmCouponResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmCouponResponse) ProtoMessage() {}

func (x *CtmCouponResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmCouponResponse.ProtoReflect.Descriptor instead.
func (*CtmCouponResponse) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{15}
}

func (x *CtmCouponResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CtmCouponResponse) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *CtmCouponResponse) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *CtmCouponResponse) GetCouponSku() string {
	if x != nil && x.CouponSku != nil {
		return *x.CouponSku
	}
	return ""
}

func (x *CtmCouponResponse) GetCouponName() string {
	if x != nil {
		return x.CouponName
	}
	return ""
}

func (x *CtmCouponResponse) GetCouponCode() string {
	if x != nil {
		return x.CouponCode
	}
	return ""
}

func (x *CtmCouponResponse) GetCouponIntro() string {
	if x != nil && x.CouponIntro != nil {
		return *x.CouponIntro
	}
	return ""
}

func (x *CtmCouponResponse) GetTriggerAmount() int32 {
	if x != nil && x.TriggerAmount != nil {
		return *x.TriggerAmount
	}
	return 0
}

func (x *CtmCouponResponse) GetDiscountAmount() int32 {
	if x != nil && x.DiscountAmount != nil {
		return *x.DiscountAmount
	}
	return 0
}

func (x *CtmCouponResponse) GetTriggerQty() int32 {
	if x != nil && x.TriggerQty != nil {
		return *x.TriggerQty
	}
	return 0
}

func (x *CtmCouponResponse) GetDiscount() int32 {
	if x != nil && x.Discount != nil {
		return *x.Discount
	}
	return 0
}

func (x *CtmCouponResponse) GetCanStack() bool {
	if x != nil {
		return x.CanStack
	}
	return false
}

func (x *CtmCouponResponse) GetCouponStatus() int32 {
	if x != nil {
		return x.CouponStatus
	}
	return 0
}

func (x *CtmCouponResponse) GetAcquireTime() string {
	if x != nil && x.AcquireTime != nil {
		return *x.AcquireTime
	}
	return ""
}

func (x *CtmCouponResponse) GetClaimTime() string {
	if x != nil && x.ClaimTime != nil {
		return *x.ClaimTime
	}
	return ""
}

func (x *CtmCouponResponse) GetProdRange() string {
	if x != nil && x.ProdRange != nil {
		return *x.ProdRange
	}
	return ""
}

func (x *CtmCouponResponse) GetStartTime() string {
	if x != nil && x.StartTime != nil {
		return *x.StartTime
	}
	return ""
}

func (x *CtmCouponResponse) GetExpireTime() string {
	if x != nil && x.ExpireTime != nil {
		return *x.ExpireTime
	}
	return ""
}

func (x *CtmCouponResponse) GetCtm() int64 {
	if x != nil {
		return x.Ctm
	}
	return 0
}

func (x *CtmCouponResponse) GetOrderUsed() int64 {
	if x != nil && x.OrderUsed != nil {
		return *x.OrderUsed
	}
	return 0
}

func (x *CtmCouponResponse) GetCouponClass() int32 {
	if x != nil {
		return x.CouponClass
	}
	return 0
}

func (x *CtmCouponResponse) GetCouponType() int32 {
	if x != nil {
		return x.CouponType
	}
	return 0
}

func (x *CtmCouponResponse) GetIsValid() bool {
	if x != nil && x.IsValid != nil {
		return *x.IsValid
	}
	return false
}

func (x *CtmCouponResponse) GetCouponTypeName() string {
	if x != nil {
		return x.CouponTypeName
	}
	return ""
}

func (x *CtmCouponResponse) GetCouponClassName() string {
	if x != nil {
		return x.CouponClassName
	}
	return ""
}

func (x *CtmCouponResponse) GetCouponStatusName() string {
	if x != nil {
		return x.CouponStatusName
	}
	return ""
}

type CtmCouponRetrieveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CtmCouponRetrieveRequest) Reset() {
	*x = CtmCouponRetrieveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmCouponRetrieveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmCouponRetrieveRequest) ProtoMessage() {}

func (x *CtmCouponRetrieveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmCouponRetrieveRequest.ProtoReflect.Descriptor instead.
func (*CtmCouponRetrieveRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{16}
}

func (x *CtmCouponRetrieveRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CtmCouponUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XPartialUpdateFields []string `protobuf:"bytes,2,rep,name=_partial_update_fields,json=PartialUpdateFields,proto3" json:"_partial_update_fields,omitempty"`
	CouponSku            *string  `protobuf:"bytes,3,opt,name=coupon_sku,json=couponSku,proto3,oneof" json:"coupon_sku,omitempty"`
	CouponName           string   `protobuf:"bytes,4,opt,name=coupon_name,json=couponName,proto3" json:"coupon_name,omitempty"`
	CouponCode           string   `protobuf:"bytes,5,opt,name=coupon_code,json=couponCode,proto3" json:"coupon_code,omitempty"`
	CouponIntro          *string  `protobuf:"bytes,6,opt,name=coupon_intro,json=couponIntro,proto3,oneof" json:"coupon_intro,omitempty"`
	TriggerAmount        *int32   `protobuf:"varint,9,opt,name=trigger_amount,json=triggerAmount,proto3,oneof" json:"trigger_amount,omitempty"`
	DiscountAmount       *int32   `protobuf:"varint,10,opt,name=discount_amount,json=discountAmount,proto3,oneof" json:"discount_amount,omitempty"`
	TriggerQty           *int32   `protobuf:"varint,11,opt,name=trigger_qty,json=triggerQty,proto3,oneof" json:"trigger_qty,omitempty"`
	Discount             *int32   `protobuf:"varint,12,opt,name=discount,proto3,oneof" json:"discount,omitempty"`
	CanStack             bool     `protobuf:"varint,13,opt,name=can_stack,json=canStack,proto3" json:"can_stack,omitempty"`
	CouponStatus         int32    `protobuf:"varint,14,opt,name=coupon_status,json=couponStatus,proto3" json:"coupon_status,omitempty"`
	AcquireTime          *string  `protobuf:"bytes,15,opt,name=acquire_time,json=acquireTime,proto3,oneof" json:"acquire_time,omitempty"`
	ClaimTime            *string  `protobuf:"bytes,16,opt,name=claim_time,json=claimTime,proto3,oneof" json:"claim_time,omitempty"`
	ProdRange            *string  `protobuf:"bytes,17,opt,name=prod_range,json=prodRange,proto3,oneof" json:"prod_range,omitempty"`
	StartTime            *string  `protobuf:"bytes,18,opt,name=start_time,json=startTime,proto3,oneof" json:"start_time,omitempty"`
	ExpireTime           *string  `protobuf:"bytes,19,opt,name=expire_time,json=expireTime,proto3,oneof" json:"expire_time,omitempty"`
	Ctm                  int64    `protobuf:"varint,20,opt,name=ctm,proto3" json:"ctm,omitempty"`
	OrderUsed            *int64   `protobuf:"varint,21,opt,name=order_used,json=orderUsed,proto3,oneof" json:"order_used,omitempty"`
	CouponClass          int32    `protobuf:"varint,22,opt,name=coupon_class,json=couponClass,proto3" json:"coupon_class,omitempty"`
	CouponType           int32    `protobuf:"varint,23,opt,name=coupon_type,json=couponType,proto3" json:"coupon_type,omitempty"`
	IsValid              *bool    `protobuf:"varint,24,opt,name=is_valid,json=isValid,proto3,oneof" json:"is_valid,omitempty"`
}

func (x *CtmCouponUpdateRequest) Reset() {
	*x = CtmCouponUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmCouponUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmCouponUpdateRequest) ProtoMessage() {}

func (x *CtmCouponUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmCouponUpdateRequest.ProtoReflect.Descriptor instead.
func (*CtmCouponUpdateRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{17}
}

func (x *CtmCouponUpdateRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CtmCouponUpdateRequest) GetXPartialUpdateFields() []string {
	if x != nil {
		return x.XPartialUpdateFields
	}
	return nil
}

func (x *CtmCouponUpdateRequest) GetCouponSku() string {
	if x != nil && x.CouponSku != nil {
		return *x.CouponSku
	}
	return ""
}

func (x *CtmCouponUpdateRequest) GetCouponName() string {
	if x != nil {
		return x.CouponName
	}
	return ""
}

func (x *CtmCouponUpdateRequest) GetCouponCode() string {
	if x != nil {
		return x.CouponCode
	}
	return ""
}

func (x *CtmCouponUpdateRequest) GetCouponIntro() string {
	if x != nil && x.CouponIntro != nil {
		return *x.CouponIntro
	}
	return ""
}

func (x *CtmCouponUpdateRequest) GetTriggerAmount() int32 {
	if x != nil && x.TriggerAmount != nil {
		return *x.TriggerAmount
	}
	return 0
}

func (x *CtmCouponUpdateRequest) GetDiscountAmount() int32 {
	if x != nil && x.DiscountAmount != nil {
		return *x.DiscountAmount
	}
	return 0
}

func (x *CtmCouponUpdateRequest) GetTriggerQty() int32 {
	if x != nil && x.TriggerQty != nil {
		return *x.TriggerQty
	}
	return 0
}

func (x *CtmCouponUpdateRequest) GetDiscount() int32 {
	if x != nil && x.Discount != nil {
		return *x.Discount
	}
	return 0
}

func (x *CtmCouponUpdateRequest) GetCanStack() bool {
	if x != nil {
		return x.CanStack
	}
	return false
}

func (x *CtmCouponUpdateRequest) GetCouponStatus() int32 {
	if x != nil {
		return x.CouponStatus
	}
	return 0
}

func (x *CtmCouponUpdateRequest) GetAcquireTime() string {
	if x != nil && x.AcquireTime != nil {
		return *x.AcquireTime
	}
	return ""
}

func (x *CtmCouponUpdateRequest) GetClaimTime() string {
	if x != nil && x.ClaimTime != nil {
		return *x.ClaimTime
	}
	return ""
}

func (x *CtmCouponUpdateRequest) GetProdRange() string {
	if x != nil && x.ProdRange != nil {
		return *x.ProdRange
	}
	return ""
}

func (x *CtmCouponUpdateRequest) GetStartTime() string {
	if x != nil && x.StartTime != nil {
		return *x.StartTime
	}
	return ""
}

func (x *CtmCouponUpdateRequest) GetExpireTime() string {
	if x != nil && x.ExpireTime != nil {
		return *x.ExpireTime
	}
	return ""
}

func (x *CtmCouponUpdateRequest) GetCtm() int64 {
	if x != nil {
		return x.Ctm
	}
	return 0
}

func (x *CtmCouponUpdateRequest) GetOrderUsed() int64 {
	if x != nil && x.OrderUsed != nil {
		return *x.OrderUsed
	}
	return 0
}

func (x *CtmCouponUpdateRequest) GetCouponClass() int32 {
	if x != nil {
		return x.CouponClass
	}
	return 0
}

func (x *CtmCouponUpdateRequest) GetCouponType() int32 {
	if x != nil {
		return x.CouponType
	}
	return 0
}

func (x *CtmCouponUpdateRequest) GetIsValid() bool {
	if x != nil && x.IsValid != nil {
		return *x.IsValid
	}
	return false
}

type CtmOrderConfCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	PlatName        string `protobuf:"bytes,2,opt,name=plat_name,json=platName,proto3" json:"plat_name,omitempty"`
	TradeType       int32  `protobuf:"varint,3,opt,name=trade_type,json=tradeType,proto3" json:"trade_type,omitempty"`
	ShopNo          string `protobuf:"bytes,4,opt,name=shop_no,json=shopNo,proto3" json:"shop_no,omitempty"`
	ShopName        string `protobuf:"bytes,5,opt,name=shop_name,json=shopName,proto3" json:"shop_name,omitempty"`
	WarehouseNo     string `protobuf:"bytes,6,opt,name=warehouse_no,json=warehouseNo,proto3" json:"warehouse_no,omitempty"`
	WarehouseName   string `protobuf:"bytes,7,opt,name=warehouse_name,json=warehouseName,proto3" json:"warehouse_name,omitempty"`
	UserId          int32  `protobuf:"varint,8,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserName        string `protobuf:"bytes,9,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	ConfirmOvertime int32  `protobuf:"varint,10,opt,name=confirm_overtime,json=confirmOvertime,proto3" json:"confirm_overtime,omitempty"`
	FinishOvertime  int32  `protobuf:"varint,11,opt,name=finish_overtime,json=finishOvertime,proto3" json:"finish_overtime,omitempty"`
	ExpireTime      int32  `protobuf:"varint,12,opt,name=expire_time,json=expireTime,proto3" json:"expire_time,omitempty"`
	AutoApprove     bool   `protobuf:"varint,13,opt,name=auto_approve,json=autoApprove,proto3" json:"auto_approve,omitempty"`
}

func (x *CtmOrderConfCreateRequest) Reset() {
	*x = CtmOrderConfCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmOrderConfCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmOrderConfCreateRequest) ProtoMessage() {}

func (x *CtmOrderConfCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmOrderConfCreateRequest.ProtoReflect.Descriptor instead.
func (*CtmOrderConfCreateRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{18}
}

func (x *CtmOrderConfCreateRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CtmOrderConfCreateRequest) GetPlatName() string {
	if x != nil {
		return x.PlatName
	}
	return ""
}

func (x *CtmOrderConfCreateRequest) GetTradeType() int32 {
	if x != nil {
		return x.TradeType
	}
	return 0
}

func (x *CtmOrderConfCreateRequest) GetShopNo() string {
	if x != nil {
		return x.ShopNo
	}
	return ""
}

func (x *CtmOrderConfCreateRequest) GetShopName() string {
	if x != nil {
		return x.ShopName
	}
	return ""
}

func (x *CtmOrderConfCreateRequest) GetWarehouseNo() string {
	if x != nil {
		return x.WarehouseNo
	}
	return ""
}

func (x *CtmOrderConfCreateRequest) GetWarehouseName() string {
	if x != nil {
		return x.WarehouseName
	}
	return ""
}

func (x *CtmOrderConfCreateRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CtmOrderConfCreateRequest) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *CtmOrderConfCreateRequest) GetConfirmOvertime() int32 {
	if x != nil {
		return x.ConfirmOvertime
	}
	return 0
}

func (x *CtmOrderConfCreateRequest) GetFinishOvertime() int32 {
	if x != nil {
		return x.FinishOvertime
	}
	return 0
}

func (x *CtmOrderConfCreateRequest) GetExpireTime() int32 {
	if x != nil {
		return x.ExpireTime
	}
	return 0
}

func (x *CtmOrderConfCreateRequest) GetAutoApprove() bool {
	if x != nil {
		return x.AutoApprove
	}
	return false
}

type CtmOrderConfDestroyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CtmOrderConfDestroyRequest) Reset() {
	*x = CtmOrderConfDestroyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmOrderConfDestroyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmOrderConfDestroyRequest) ProtoMessage() {}

func (x *CtmOrderConfDestroyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmOrderConfDestroyRequest.ProtoReflect.Descriptor instead.
func (*CtmOrderConfDestroyRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{19}
}

func (x *CtmOrderConfDestroyRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CtmOrderConfListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CtmOrderConfListRequest) Reset() {
	*x = CtmOrderConfListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmOrderConfListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmOrderConfListRequest) ProtoMessage() {}

func (x *CtmOrderConfListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmOrderConfListRequest.ProtoReflect.Descriptor instead.
func (*CtmOrderConfListRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{20}
}

type CtmOrderConfListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*CtmOrderConfResponse `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Count   int32                   `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *CtmOrderConfListResponse) Reset() {
	*x = CtmOrderConfListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmOrderConfListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmOrderConfListResponse) ProtoMessage() {}

func (x *CtmOrderConfListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmOrderConfListResponse.ProtoReflect.Descriptor instead.
func (*CtmOrderConfListResponse) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{21}
}

func (x *CtmOrderConfListResponse) GetResults() []*CtmOrderConfResponse {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *CtmOrderConfListResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type CtmOrderConfResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreateTime      string `protobuf:"bytes,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime      string `protobuf:"bytes,3,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	PlatName        string `protobuf:"bytes,4,opt,name=plat_name,json=platName,proto3" json:"plat_name,omitempty"`
	TradeType       int32  `protobuf:"varint,5,opt,name=trade_type,json=tradeType,proto3" json:"trade_type,omitempty"`
	ShopNo          string `protobuf:"bytes,6,opt,name=shop_no,json=shopNo,proto3" json:"shop_no,omitempty"`
	ShopName        string `protobuf:"bytes,7,opt,name=shop_name,json=shopName,proto3" json:"shop_name,omitempty"`
	WarehouseNo     string `protobuf:"bytes,8,opt,name=warehouse_no,json=warehouseNo,proto3" json:"warehouse_no,omitempty"`
	WarehouseName   string `protobuf:"bytes,9,opt,name=warehouse_name,json=warehouseName,proto3" json:"warehouse_name,omitempty"`
	UserId          int32  `protobuf:"varint,10,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserName        string `protobuf:"bytes,11,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	ConfirmOvertime int32  `protobuf:"varint,12,opt,name=confirm_overtime,json=confirmOvertime,proto3" json:"confirm_overtime,omitempty"`
	FinishOvertime  int32  `protobuf:"varint,13,opt,name=finish_overtime,json=finishOvertime,proto3" json:"finish_overtime,omitempty"`
	ExpireTime      int32  `protobuf:"varint,14,opt,name=expire_time,json=expireTime,proto3" json:"expire_time,omitempty"`
	AutoApprove     bool   `protobuf:"varint,15,opt,name=auto_approve,json=autoApprove,proto3" json:"auto_approve,omitempty"`
}

func (x *CtmOrderConfResponse) Reset() {
	*x = CtmOrderConfResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmOrderConfResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmOrderConfResponse) ProtoMessage() {}

func (x *CtmOrderConfResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmOrderConfResponse.ProtoReflect.Descriptor instead.
func (*CtmOrderConfResponse) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{22}
}

func (x *CtmOrderConfResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CtmOrderConfResponse) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *CtmOrderConfResponse) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *CtmOrderConfResponse) GetPlatName() string {
	if x != nil {
		return x.PlatName
	}
	return ""
}

func (x *CtmOrderConfResponse) GetTradeType() int32 {
	if x != nil {
		return x.TradeType
	}
	return 0
}

func (x *CtmOrderConfResponse) GetShopNo() string {
	if x != nil {
		return x.ShopNo
	}
	return ""
}

func (x *CtmOrderConfResponse) GetShopName() string {
	if x != nil {
		return x.ShopName
	}
	return ""
}

func (x *CtmOrderConfResponse) GetWarehouseNo() string {
	if x != nil {
		return x.WarehouseNo
	}
	return ""
}

func (x *CtmOrderConfResponse) GetWarehouseName() string {
	if x != nil {
		return x.WarehouseName
	}
	return ""
}

func (x *CtmOrderConfResponse) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CtmOrderConfResponse) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *CtmOrderConfResponse) GetConfirmOvertime() int32 {
	if x != nil {
		return x.ConfirmOvertime
	}
	return 0
}

func (x *CtmOrderConfResponse) GetFinishOvertime() int32 {
	if x != nil {
		return x.FinishOvertime
	}
	return 0
}

func (x *CtmOrderConfResponse) GetExpireTime() int32 {
	if x != nil {
		return x.ExpireTime
	}
	return 0
}

func (x *CtmOrderConfResponse) GetAutoApprove() bool {
	if x != nil {
		return x.AutoApprove
	}
	return false
}

type CtmOrderConfRetrieveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CtmOrderConfRetrieveRequest) Reset() {
	*x = CtmOrderConfRetrieveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmOrderConfRetrieveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmOrderConfRetrieveRequest) ProtoMessage() {}

func (x *CtmOrderConfRetrieveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmOrderConfRetrieveRequest.ProtoReflect.Descriptor instead.
func (*CtmOrderConfRetrieveRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{23}
}

func (x *CtmOrderConfRetrieveRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CtmOrderConfUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XPartialUpdateFields []string `protobuf:"bytes,2,rep,name=_partial_update_fields,json=PartialUpdateFields,proto3" json:"_partial_update_fields,omitempty"`
	PlatName             string   `protobuf:"bytes,3,opt,name=plat_name,json=platName,proto3" json:"plat_name,omitempty"`
	TradeType            int32    `protobuf:"varint,4,opt,name=trade_type,json=tradeType,proto3" json:"trade_type,omitempty"`
	ShopNo               string   `protobuf:"bytes,5,opt,name=shop_no,json=shopNo,proto3" json:"shop_no,omitempty"`
	ShopName             string   `protobuf:"bytes,6,opt,name=shop_name,json=shopName,proto3" json:"shop_name,omitempty"`
	WarehouseNo          string   `protobuf:"bytes,7,opt,name=warehouse_no,json=warehouseNo,proto3" json:"warehouse_no,omitempty"`
	WarehouseName        string   `protobuf:"bytes,8,opt,name=warehouse_name,json=warehouseName,proto3" json:"warehouse_name,omitempty"`
	UserId               int32    `protobuf:"varint,9,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserName             string   `protobuf:"bytes,10,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	ConfirmOvertime      int32    `protobuf:"varint,11,opt,name=confirm_overtime,json=confirmOvertime,proto3" json:"confirm_overtime,omitempty"`
	FinishOvertime       int32    `protobuf:"varint,12,opt,name=finish_overtime,json=finishOvertime,proto3" json:"finish_overtime,omitempty"`
	ExpireTime           int32    `protobuf:"varint,13,opt,name=expire_time,json=expireTime,proto3" json:"expire_time,omitempty"`
	AutoApprove          bool     `protobuf:"varint,14,opt,name=auto_approve,json=autoApprove,proto3" json:"auto_approve,omitempty"`
}

func (x *CtmOrderConfUpdateRequest) Reset() {
	*x = CtmOrderConfUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmOrderConfUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmOrderConfUpdateRequest) ProtoMessage() {}

func (x *CtmOrderConfUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmOrderConfUpdateRequest.ProtoReflect.Descriptor instead.
func (*CtmOrderConfUpdateRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{24}
}

func (x *CtmOrderConfUpdateRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CtmOrderConfUpdateRequest) GetXPartialUpdateFields() []string {
	if x != nil {
		return x.XPartialUpdateFields
	}
	return nil
}

func (x *CtmOrderConfUpdateRequest) GetPlatName() string {
	if x != nil {
		return x.PlatName
	}
	return ""
}

func (x *CtmOrderConfUpdateRequest) GetTradeType() int32 {
	if x != nil {
		return x.TradeType
	}
	return 0
}

func (x *CtmOrderConfUpdateRequest) GetShopNo() string {
	if x != nil {
		return x.ShopNo
	}
	return ""
}

func (x *CtmOrderConfUpdateRequest) GetShopName() string {
	if x != nil {
		return x.ShopName
	}
	return ""
}

func (x *CtmOrderConfUpdateRequest) GetWarehouseNo() string {
	if x != nil {
		return x.WarehouseNo
	}
	return ""
}

func (x *CtmOrderConfUpdateRequest) GetWarehouseName() string {
	if x != nil {
		return x.WarehouseName
	}
	return ""
}

func (x *CtmOrderConfUpdateRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CtmOrderConfUpdateRequest) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *CtmOrderConfUpdateRequest) GetConfirmOvertime() int32 {
	if x != nil {
		return x.ConfirmOvertime
	}
	return 0
}

func (x *CtmOrderConfUpdateRequest) GetFinishOvertime() int32 {
	if x != nil {
		return x.FinishOvertime
	}
	return 0
}

func (x *CtmOrderConfUpdateRequest) GetExpireTime() int32 {
	if x != nil {
		return x.ExpireTime
	}
	return 0
}

func (x *CtmOrderConfUpdateRequest) GetAutoApprove() bool {
	if x != nil {
		return x.AutoApprove
	}
	return false
}

type CtmOrderDestroyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CtmOrderDestroyRequest) Reset() {
	*x = CtmOrderDestroyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmOrderDestroyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmOrderDestroyRequest) ProtoMessage() {}

func (x *CtmOrderDestroyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmOrderDestroyRequest.ProtoReflect.Descriptor instead.
func (*CtmOrderDestroyRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{25}
}

func (x *CtmOrderDestroyRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CtmOrderGoodsDetailCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Filters       string  `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
	Num           int32   `protobuf:"varint,3,opt,name=num,proto3" json:"num,omitempty"`
	Price         float64 `protobuf:"fixed64,4,opt,name=price,proto3" json:"price,omitempty"`
	AdjustAmount  float64 `protobuf:"fixed64,5,opt,name=adjust_amount,json=adjustAmount,proto3" json:"adjust_amount,omitempty"`
	Discount      float64 `protobuf:"fixed64,6,opt,name=discount,proto3" json:"discount,omitempty"`
	ShareDiscount float64 `protobuf:"fixed64,7,opt,name=share_discount,json=shareDiscount,proto3" json:"share_discount,omitempty"`
	ShareAmount   float64 `protobuf:"fixed64,8,opt,name=share_amount,json=shareAmount,proto3" json:"share_amount,omitempty"`
	DebitAmount   float64 `protobuf:"fixed64,9,opt,name=debit_amount,json=debitAmount,proto3" json:"debit_amount,omitempty"`
	PriceScore    int32   `protobuf:"varint,10,opt,name=price_score,json=priceScore,proto3" json:"price_score,omitempty"`
	PriceBadge    int32   `protobuf:"varint,11,opt,name=price_badge,json=priceBadge,proto3" json:"price_badge,omitempty"`
	PriceNut      int32   `protobuf:"varint,12,opt,name=price_nut,json=priceNut,proto3" json:"price_nut,omitempty"`
	Status        int32   `protobuf:"varint,13,opt,name=status,proto3" json:"status,omitempty"`
	RefundStatus  int32   `protobuf:"varint,14,opt,name=refund_status,json=refundStatus,proto3" json:"refund_status,omitempty"`
	GoodsId       *string `protobuf:"bytes,15,opt,name=goods_id,json=goodsId,proto3,oneof" json:"goods_id,omitempty"`
	GoodsName     *string `protobuf:"bytes,16,opt,name=goods_name,json=goodsName,proto3,oneof" json:"goods_name,omitempty"`
	GoodsSpu      string  `protobuf:"bytes,17,opt,name=goods_spu,json=goodsSpu,proto3" json:"goods_spu,omitempty"`
	SpecNo        string  `protobuf:"bytes,18,opt,name=spec_no,json=specNo,proto3" json:"spec_no,omitempty"`
	CtmOrder      int64   `protobuf:"varint,19,opt,name=ctm_order,json=ctmOrder,proto3" json:"ctm_order,omitempty"`
	CanEdit       bool    `protobuf:"varint,20,opt,name=can_edit,json=canEdit,proto3" json:"can_edit,omitempty"`
}

func (x *CtmOrderGoodsDetailCreateRequest) Reset() {
	*x = CtmOrderGoodsDetailCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmOrderGoodsDetailCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmOrderGoodsDetailCreateRequest) ProtoMessage() {}

func (x *CtmOrderGoodsDetailCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmOrderGoodsDetailCreateRequest.ProtoReflect.Descriptor instead.
func (*CtmOrderGoodsDetailCreateRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{26}
}

func (x *CtmOrderGoodsDetailCreateRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CtmOrderGoodsDetailCreateRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *CtmOrderGoodsDetailCreateRequest) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *CtmOrderGoodsDetailCreateRequest) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *CtmOrderGoodsDetailCreateRequest) GetAdjustAmount() float64 {
	if x != nil {
		return x.AdjustAmount
	}
	return 0
}

func (x *CtmOrderGoodsDetailCreateRequest) GetDiscount() float64 {
	if x != nil {
		return x.Discount
	}
	return 0
}

func (x *CtmOrderGoodsDetailCreateRequest) GetShareDiscount() float64 {
	if x != nil {
		return x.ShareDiscount
	}
	return 0
}

func (x *CtmOrderGoodsDetailCreateRequest) GetShareAmount() float64 {
	if x != nil {
		return x.ShareAmount
	}
	return 0
}

func (x *CtmOrderGoodsDetailCreateRequest) GetDebitAmount() float64 {
	if x != nil {
		return x.DebitAmount
	}
	return 0
}

func (x *CtmOrderGoodsDetailCreateRequest) GetPriceScore() int32 {
	if x != nil {
		return x.PriceScore
	}
	return 0
}

func (x *CtmOrderGoodsDetailCreateRequest) GetPriceBadge() int32 {
	if x != nil {
		return x.PriceBadge
	}
	return 0
}

func (x *CtmOrderGoodsDetailCreateRequest) GetPriceNut() int32 {
	if x != nil {
		return x.PriceNut
	}
	return 0
}

func (x *CtmOrderGoodsDetailCreateRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CtmOrderGoodsDetailCreateRequest) GetRefundStatus() int32 {
	if x != nil {
		return x.RefundStatus
	}
	return 0
}

func (x *CtmOrderGoodsDetailCreateRequest) GetGoodsId() string {
	if x != nil && x.GoodsId != nil {
		return *x.GoodsId
	}
	return ""
}

func (x *CtmOrderGoodsDetailCreateRequest) GetGoodsName() string {
	if x != nil && x.GoodsName != nil {
		return *x.GoodsName
	}
	return ""
}

func (x *CtmOrderGoodsDetailCreateRequest) GetGoodsSpu() string {
	if x != nil {
		return x.GoodsSpu
	}
	return ""
}

func (x *CtmOrderGoodsDetailCreateRequest) GetSpecNo() string {
	if x != nil {
		return x.SpecNo
	}
	return ""
}

func (x *CtmOrderGoodsDetailCreateRequest) GetCtmOrder() int64 {
	if x != nil {
		return x.CtmOrder
	}
	return 0
}

func (x *CtmOrderGoodsDetailCreateRequest) GetCanEdit() bool {
	if x != nil {
		return x.CanEdit
	}
	return false
}

type CtmOrderGoodsDetailDestroyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CtmOrderGoodsDetailDestroyRequest) Reset() {
	*x = CtmOrderGoodsDetailDestroyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmOrderGoodsDetailDestroyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmOrderGoodsDetailDestroyRequest) ProtoMessage() {}

func (x *CtmOrderGoodsDetailDestroyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmOrderGoodsDetailDestroyRequest.ProtoReflect.Descriptor instead.
func (*CtmOrderGoodsDetailDestroyRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{27}
}

func (x *CtmOrderGoodsDetailDestroyRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CtmOrderGoodsDetailListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters string `protobuf:"bytes,1,opt,name=filters,proto3" json:"filters,omitempty"`
}

func (x *CtmOrderGoodsDetailListRequest) Reset() {
	*x = CtmOrderGoodsDetailListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmOrderGoodsDetailListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmOrderGoodsDetailListRequest) ProtoMessage() {}

func (x *CtmOrderGoodsDetailListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmOrderGoodsDetailListRequest.ProtoReflect.Descriptor instead.
func (*CtmOrderGoodsDetailListRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{28}
}

func (x *CtmOrderGoodsDetailListRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

type CtmOrderGoodsDetailListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*CtmOrderGoodsDetailResponse `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Count   int32                          `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *CtmOrderGoodsDetailListResponse) Reset() {
	*x = CtmOrderGoodsDetailListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmOrderGoodsDetailListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmOrderGoodsDetailListResponse) ProtoMessage() {}

func (x *CtmOrderGoodsDetailListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmOrderGoodsDetailListResponse.ProtoReflect.Descriptor instead.
func (*CtmOrderGoodsDetailListResponse) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{29}
}

func (x *CtmOrderGoodsDetailListResponse) GetResults() []*CtmOrderGoodsDetailResponse {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *CtmOrderGoodsDetailListResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type CtmOrderGoodsDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Filters       string  `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
	Num           int32   `protobuf:"varint,3,opt,name=num,proto3" json:"num,omitempty"`
	Price         float64 `protobuf:"fixed64,4,opt,name=price,proto3" json:"price,omitempty"`
	AdjustAmount  float64 `protobuf:"fixed64,5,opt,name=adjust_amount,json=adjustAmount,proto3" json:"adjust_amount,omitempty"`
	Discount      float64 `protobuf:"fixed64,6,opt,name=discount,proto3" json:"discount,omitempty"`
	ShareDiscount float64 `protobuf:"fixed64,7,opt,name=share_discount,json=shareDiscount,proto3" json:"share_discount,omitempty"`
	ShareAmount   float64 `protobuf:"fixed64,8,opt,name=share_amount,json=shareAmount,proto3" json:"share_amount,omitempty"`
	DebitAmount   float64 `protobuf:"fixed64,9,opt,name=debit_amount,json=debitAmount,proto3" json:"debit_amount,omitempty"`
	PriceScore    int32   `protobuf:"varint,10,opt,name=price_score,json=priceScore,proto3" json:"price_score,omitempty"`
	PriceBadge    int32   `protobuf:"varint,11,opt,name=price_badge,json=priceBadge,proto3" json:"price_badge,omitempty"`
	PriceNut      int32   `protobuf:"varint,12,opt,name=price_nut,json=priceNut,proto3" json:"price_nut,omitempty"`
	Status        int32   `protobuf:"varint,13,opt,name=status,proto3" json:"status,omitempty"`
	RefundStatus  int32   `protobuf:"varint,14,opt,name=refund_status,json=refundStatus,proto3" json:"refund_status,omitempty"`
	GoodsId       *string `protobuf:"bytes,15,opt,name=goods_id,json=goodsId,proto3,oneof" json:"goods_id,omitempty"`
	GoodsName     *string `protobuf:"bytes,16,opt,name=goods_name,json=goodsName,proto3,oneof" json:"goods_name,omitempty"`
	GoodsSpu      string  `protobuf:"bytes,17,opt,name=goods_spu,json=goodsSpu,proto3" json:"goods_spu,omitempty"`
	SpecNo        string  `protobuf:"bytes,18,opt,name=spec_no,json=specNo,proto3" json:"spec_no,omitempty"`
	CtmOrder      int64   `protobuf:"varint,19,opt,name=ctm_order,json=ctmOrder,proto3" json:"ctm_order,omitempty"`
	CanEdit       bool    `protobuf:"varint,20,opt,name=can_edit,json=canEdit,proto3" json:"can_edit,omitempty"`
}

func (x *CtmOrderGoodsDetailRequest) Reset() {
	*x = CtmOrderGoodsDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmOrderGoodsDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmOrderGoodsDetailRequest) ProtoMessage() {}

func (x *CtmOrderGoodsDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmOrderGoodsDetailRequest.ProtoReflect.Descriptor instead.
func (*CtmOrderGoodsDetailRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{30}
}

func (x *CtmOrderGoodsDetailRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CtmOrderGoodsDetailRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *CtmOrderGoodsDetailRequest) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *CtmOrderGoodsDetailRequest) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *CtmOrderGoodsDetailRequest) GetAdjustAmount() float64 {
	if x != nil {
		return x.AdjustAmount
	}
	return 0
}

func (x *CtmOrderGoodsDetailRequest) GetDiscount() float64 {
	if x != nil {
		return x.Discount
	}
	return 0
}

func (x *CtmOrderGoodsDetailRequest) GetShareDiscount() float64 {
	if x != nil {
		return x.ShareDiscount
	}
	return 0
}

func (x *CtmOrderGoodsDetailRequest) GetShareAmount() float64 {
	if x != nil {
		return x.ShareAmount
	}
	return 0
}

func (x *CtmOrderGoodsDetailRequest) GetDebitAmount() float64 {
	if x != nil {
		return x.DebitAmount
	}
	return 0
}

func (x *CtmOrderGoodsDetailRequest) GetPriceScore() int32 {
	if x != nil {
		return x.PriceScore
	}
	return 0
}

func (x *CtmOrderGoodsDetailRequest) GetPriceBadge() int32 {
	if x != nil {
		return x.PriceBadge
	}
	return 0
}

func (x *CtmOrderGoodsDetailRequest) GetPriceNut() int32 {
	if x != nil {
		return x.PriceNut
	}
	return 0
}

func (x *CtmOrderGoodsDetailRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CtmOrderGoodsDetailRequest) GetRefundStatus() int32 {
	if x != nil {
		return x.RefundStatus
	}
	return 0
}

func (x *CtmOrderGoodsDetailRequest) GetGoodsId() string {
	if x != nil && x.GoodsId != nil {
		return *x.GoodsId
	}
	return ""
}

func (x *CtmOrderGoodsDetailRequest) GetGoodsName() string {
	if x != nil && x.GoodsName != nil {
		return *x.GoodsName
	}
	return ""
}

func (x *CtmOrderGoodsDetailRequest) GetGoodsSpu() string {
	if x != nil {
		return x.GoodsSpu
	}
	return ""
}

func (x *CtmOrderGoodsDetailRequest) GetSpecNo() string {
	if x != nil {
		return x.SpecNo
	}
	return ""
}

func (x *CtmOrderGoodsDetailRequest) GetCtmOrder() int64 {
	if x != nil {
		return x.CtmOrder
	}
	return 0
}

func (x *CtmOrderGoodsDetailRequest) GetCanEdit() bool {
	if x != nil {
		return x.CanEdit
	}
	return false
}

type CtmOrderGoodsDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreateTime       string  `protobuf:"bytes,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime       string  `protobuf:"bytes,3,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	Num              int32   `protobuf:"varint,4,opt,name=num,proto3" json:"num,omitempty"`
	Price            float64 `protobuf:"fixed64,5,opt,name=price,proto3" json:"price,omitempty"`
	AdjustAmount     float64 `protobuf:"fixed64,6,opt,name=adjust_amount,json=adjustAmount,proto3" json:"adjust_amount,omitempty"`
	Discount         float64 `protobuf:"fixed64,7,opt,name=discount,proto3" json:"discount,omitempty"`
	ShareDiscount    float64 `protobuf:"fixed64,8,opt,name=share_discount,json=shareDiscount,proto3" json:"share_discount,omitempty"`
	ShareAmount      float64 `protobuf:"fixed64,9,opt,name=share_amount,json=shareAmount,proto3" json:"share_amount,omitempty"`
	PriceScore       int32   `protobuf:"varint,11,opt,name=price_score,json=priceScore,proto3" json:"price_score,omitempty"`
	PriceBadge       int32   `protobuf:"varint,12,opt,name=price_badge,json=priceBadge,proto3" json:"price_badge,omitempty"`
	PriceNut         int32   `protobuf:"varint,13,opt,name=price_nut,json=priceNut,proto3" json:"price_nut,omitempty"`
	Status           int32   `protobuf:"varint,14,opt,name=status,proto3" json:"status,omitempty"`
	RefundStatus     int32   `protobuf:"varint,15,opt,name=refund_status,json=refundStatus,proto3" json:"refund_status,omitempty"`
	GoodsSpu         string  `protobuf:"bytes,16,opt,name=goods_spu,json=goodsSpu,proto3" json:"goods_spu,omitempty"`
	GoodsId          *string `protobuf:"bytes,17,opt,name=goods_id,json=goodsId,proto3,oneof" json:"goods_id,omitempty"`
	GoodsName        *string `protobuf:"bytes,18,opt,name=goods_name,json=goodsName,proto3,oneof" json:"goods_name,omitempty"`
	SpecNo           string  `protobuf:"bytes,19,opt,name=spec_no,json=specNo,proto3" json:"spec_no,omitempty"`
	CtmOrder         int64   `protobuf:"varint,20,opt,name=ctm_order,json=ctmOrder,proto3" json:"ctm_order,omitempty"`
	StatusName       string  `protobuf:"bytes,21,opt,name=status_name,json=statusName,proto3" json:"status_name,omitempty"`
	RefundStatusName string  `protobuf:"bytes,22,opt,name=refund_status_name,json=refundStatusName,proto3" json:"refund_status_name,omitempty"`
	DebitAmount      float64 `protobuf:"fixed64,23,opt,name=debit_amount,json=debitAmount,proto3" json:"debit_amount,omitempty"`
	CanEdit          bool    `protobuf:"varint,24,opt,name=can_edit,json=canEdit,proto3" json:"can_edit,omitempty"`
}

func (x *CtmOrderGoodsDetailResponse) Reset() {
	*x = CtmOrderGoodsDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmOrderGoodsDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmOrderGoodsDetailResponse) ProtoMessage() {}

func (x *CtmOrderGoodsDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmOrderGoodsDetailResponse.ProtoReflect.Descriptor instead.
func (*CtmOrderGoodsDetailResponse) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{31}
}

func (x *CtmOrderGoodsDetailResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CtmOrderGoodsDetailResponse) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *CtmOrderGoodsDetailResponse) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *CtmOrderGoodsDetailResponse) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *CtmOrderGoodsDetailResponse) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *CtmOrderGoodsDetailResponse) GetAdjustAmount() float64 {
	if x != nil {
		return x.AdjustAmount
	}
	return 0
}

func (x *CtmOrderGoodsDetailResponse) GetDiscount() float64 {
	if x != nil {
		return x.Discount
	}
	return 0
}

func (x *CtmOrderGoodsDetailResponse) GetShareDiscount() float64 {
	if x != nil {
		return x.ShareDiscount
	}
	return 0
}

func (x *CtmOrderGoodsDetailResponse) GetShareAmount() float64 {
	if x != nil {
		return x.ShareAmount
	}
	return 0
}

func (x *CtmOrderGoodsDetailResponse) GetPriceScore() int32 {
	if x != nil {
		return x.PriceScore
	}
	return 0
}

func (x *CtmOrderGoodsDetailResponse) GetPriceBadge() int32 {
	if x != nil {
		return x.PriceBadge
	}
	return 0
}

func (x *CtmOrderGoodsDetailResponse) GetPriceNut() int32 {
	if x != nil {
		return x.PriceNut
	}
	return 0
}

func (x *CtmOrderGoodsDetailResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CtmOrderGoodsDetailResponse) GetRefundStatus() int32 {
	if x != nil {
		return x.RefundStatus
	}
	return 0
}

func (x *CtmOrderGoodsDetailResponse) GetGoodsSpu() string {
	if x != nil {
		return x.GoodsSpu
	}
	return ""
}

func (x *CtmOrderGoodsDetailResponse) GetGoodsId() string {
	if x != nil && x.GoodsId != nil {
		return *x.GoodsId
	}
	return ""
}

func (x *CtmOrderGoodsDetailResponse) GetGoodsName() string {
	if x != nil && x.GoodsName != nil {
		return *x.GoodsName
	}
	return ""
}

func (x *CtmOrderGoodsDetailResponse) GetSpecNo() string {
	if x != nil {
		return x.SpecNo
	}
	return ""
}

func (x *CtmOrderGoodsDetailResponse) GetCtmOrder() int64 {
	if x != nil {
		return x.CtmOrder
	}
	return 0
}

func (x *CtmOrderGoodsDetailResponse) GetStatusName() string {
	if x != nil {
		return x.StatusName
	}
	return ""
}

func (x *CtmOrderGoodsDetailResponse) GetRefundStatusName() string {
	if x != nil {
		return x.RefundStatusName
	}
	return ""
}

func (x *CtmOrderGoodsDetailResponse) GetDebitAmount() float64 {
	if x != nil {
		return x.DebitAmount
	}
	return 0
}

func (x *CtmOrderGoodsDetailResponse) GetCanEdit() bool {
	if x != nil {
		return x.CanEdit
	}
	return false
}

type CtmOrderGoodsDetailRetrieveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CtmOrderGoodsDetailRetrieveRequest) Reset() {
	*x = CtmOrderGoodsDetailRetrieveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmOrderGoodsDetailRetrieveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmOrderGoodsDetailRetrieveRequest) ProtoMessage() {}

func (x *CtmOrderGoodsDetailRetrieveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmOrderGoodsDetailRetrieveRequest.ProtoReflect.Descriptor instead.
func (*CtmOrderGoodsDetailRetrieveRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{32}
}

func (x *CtmOrderGoodsDetailRetrieveRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CtmOrderGoodsDetailUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Filters              string   `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
	XPartialUpdateFields []string `protobuf:"bytes,3,rep,name=_partial_update_fields,json=PartialUpdateFields,proto3" json:"_partial_update_fields,omitempty"`
	Num                  int32    `protobuf:"varint,4,opt,name=num,proto3" json:"num,omitempty"`
	Price                float64  `protobuf:"fixed64,5,opt,name=price,proto3" json:"price,omitempty"`
	AdjustAmount         float64  `protobuf:"fixed64,6,opt,name=adjust_amount,json=adjustAmount,proto3" json:"adjust_amount,omitempty"`
	Discount             float64  `protobuf:"fixed64,7,opt,name=discount,proto3" json:"discount,omitempty"`
	ShareDiscount        float64  `protobuf:"fixed64,8,opt,name=share_discount,json=shareDiscount,proto3" json:"share_discount,omitempty"`
	ShareAmount          float64  `protobuf:"fixed64,9,opt,name=share_amount,json=shareAmount,proto3" json:"share_amount,omitempty"`
	DebitAmount          float64  `protobuf:"fixed64,10,opt,name=debit_amount,json=debitAmount,proto3" json:"debit_amount,omitempty"`
	PriceScore           int32    `protobuf:"varint,11,opt,name=price_score,json=priceScore,proto3" json:"price_score,omitempty"`
	PriceBadge           int32    `protobuf:"varint,12,opt,name=price_badge,json=priceBadge,proto3" json:"price_badge,omitempty"`
	PriceNut             int32    `protobuf:"varint,13,opt,name=price_nut,json=priceNut,proto3" json:"price_nut,omitempty"`
	Status               int32    `protobuf:"varint,14,opt,name=status,proto3" json:"status,omitempty"`
	RefundStatus         int32    `protobuf:"varint,15,opt,name=refund_status,json=refundStatus,proto3" json:"refund_status,omitempty"`
	GoodsId              *string  `protobuf:"bytes,16,opt,name=goods_id,json=goodsId,proto3,oneof" json:"goods_id,omitempty"`
	GoodsName            *string  `protobuf:"bytes,17,opt,name=goods_name,json=goodsName,proto3,oneof" json:"goods_name,omitempty"`
	GoodsSpu             string   `protobuf:"bytes,18,opt,name=goods_spu,json=goodsSpu,proto3" json:"goods_spu,omitempty"`
	SpecNo               string   `protobuf:"bytes,19,opt,name=spec_no,json=specNo,proto3" json:"spec_no,omitempty"`
	CtmOrder             int64    `protobuf:"varint,20,opt,name=ctm_order,json=ctmOrder,proto3" json:"ctm_order,omitempty"`
	CanEdit              bool     `protobuf:"varint,21,opt,name=can_edit,json=canEdit,proto3" json:"can_edit,omitempty"`
}

func (x *CtmOrderGoodsDetailUpdateRequest) Reset() {
	*x = CtmOrderGoodsDetailUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmOrderGoodsDetailUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmOrderGoodsDetailUpdateRequest) ProtoMessage() {}

func (x *CtmOrderGoodsDetailUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmOrderGoodsDetailUpdateRequest.ProtoReflect.Descriptor instead.
func (*CtmOrderGoodsDetailUpdateRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{33}
}

func (x *CtmOrderGoodsDetailUpdateRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CtmOrderGoodsDetailUpdateRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *CtmOrderGoodsDetailUpdateRequest) GetXPartialUpdateFields() []string {
	if x != nil {
		return x.XPartialUpdateFields
	}
	return nil
}

func (x *CtmOrderGoodsDetailUpdateRequest) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *CtmOrderGoodsDetailUpdateRequest) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *CtmOrderGoodsDetailUpdateRequest) GetAdjustAmount() float64 {
	if x != nil {
		return x.AdjustAmount
	}
	return 0
}

func (x *CtmOrderGoodsDetailUpdateRequest) GetDiscount() float64 {
	if x != nil {
		return x.Discount
	}
	return 0
}

func (x *CtmOrderGoodsDetailUpdateRequest) GetShareDiscount() float64 {
	if x != nil {
		return x.ShareDiscount
	}
	return 0
}

func (x *CtmOrderGoodsDetailUpdateRequest) GetShareAmount() float64 {
	if x != nil {
		return x.ShareAmount
	}
	return 0
}

func (x *CtmOrderGoodsDetailUpdateRequest) GetDebitAmount() float64 {
	if x != nil {
		return x.DebitAmount
	}
	return 0
}

func (x *CtmOrderGoodsDetailUpdateRequest) GetPriceScore() int32 {
	if x != nil {
		return x.PriceScore
	}
	return 0
}

func (x *CtmOrderGoodsDetailUpdateRequest) GetPriceBadge() int32 {
	if x != nil {
		return x.PriceBadge
	}
	return 0
}

func (x *CtmOrderGoodsDetailUpdateRequest) GetPriceNut() int32 {
	if x != nil {
		return x.PriceNut
	}
	return 0
}

func (x *CtmOrderGoodsDetailUpdateRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CtmOrderGoodsDetailUpdateRequest) GetRefundStatus() int32 {
	if x != nil {
		return x.RefundStatus
	}
	return 0
}

func (x *CtmOrderGoodsDetailUpdateRequest) GetGoodsId() string {
	if x != nil && x.GoodsId != nil {
		return *x.GoodsId
	}
	return ""
}

func (x *CtmOrderGoodsDetailUpdateRequest) GetGoodsName() string {
	if x != nil && x.GoodsName != nil {
		return *x.GoodsName
	}
	return ""
}

func (x *CtmOrderGoodsDetailUpdateRequest) GetGoodsSpu() string {
	if x != nil {
		return x.GoodsSpu
	}
	return ""
}

func (x *CtmOrderGoodsDetailUpdateRequest) GetSpecNo() string {
	if x != nil {
		return x.SpecNo
	}
	return ""
}

func (x *CtmOrderGoodsDetailUpdateRequest) GetCtmOrder() int64 {
	if x != nil {
		return x.CtmOrder
	}
	return 0
}

func (x *CtmOrderGoodsDetailUpdateRequest) GetCanEdit() bool {
	if x != nil {
		return x.CanEdit
	}
	return false
}

type CtmOrderInvoiceChildrenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	InvoiceTypeName string   `protobuf:"bytes,2,opt,name=invoice_type_name,json=invoiceTypeName,proto3" json:"invoice_type_name,omitempty"`
	PayerTypeName   string   `protobuf:"bytes,3,opt,name=payer_type_name,json=payerTypeName,proto3" json:"payer_type_name,omitempty"`
	ReasonTypeName  string   `protobuf:"bytes,4,opt,name=reason_type_name,json=reasonTypeName,proto3" json:"reason_type_name,omitempty"`
	CreateTime      string   `protobuf:"bytes,5,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime      string   `protobuf:"bytes,6,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	InvoiceType     int32    `protobuf:"varint,7,opt,name=invoice_type,json=invoiceType,proto3" json:"invoice_type,omitempty"`
	PayerType       int32    `protobuf:"varint,8,opt,name=payer_type,json=payerType,proto3" json:"payer_type,omitempty"`
	PayerName       *string  `protobuf:"bytes,9,opt,name=payer_name,json=payerName,proto3,oneof" json:"payer_name,omitempty"`
	PayerRegisterNo *string  `protobuf:"bytes,10,opt,name=payer_register_no,json=payerRegisterNo,proto3,oneof" json:"payer_register_no,omitempty"`
	PayerPhone      *string  `protobuf:"bytes,11,opt,name=payer_phone,json=payerPhone,proto3,oneof" json:"payer_phone,omitempty"`
	PayerEmail      *string  `protobuf:"bytes,12,opt,name=payer_email,json=payerEmail,proto3,oneof" json:"payer_email,omitempty"`
	PayerAddress    *string  `protobuf:"bytes,13,opt,name=payer_address,json=payerAddress,proto3,oneof" json:"payer_address,omitempty"`
	PayerBank       *string  `protobuf:"bytes,14,opt,name=payer_bank,json=payerBank,proto3,oneof" json:"payer_bank,omitempty"`
	PayerAccount    *string  `protobuf:"bytes,15,opt,name=payer_account,json=payerAccount,proto3,oneof" json:"payer_account,omitempty"`
	InvoiceAmount   *float64 `protobuf:"fixed64,16,opt,name=invoice_amount,json=invoiceAmount,proto3,oneof" json:"invoice_amount,omitempty"`
	InvoiceRemark   *string  `protobuf:"bytes,17,opt,name=invoice_remark,json=invoiceRemark,proto3,oneof" json:"invoice_remark,omitempty"`
	ReasonType      int32    `protobuf:"varint,18,opt,name=reason_type,json=reasonType,proto3" json:"reason_type,omitempty"`
	InvoiceNo       *string  `protobuf:"bytes,19,opt,name=invoice_no,json=invoiceNo,proto3,oneof" json:"invoice_no,omitempty"`
	InvoiceCode     *string  `protobuf:"bytes,20,opt,name=invoice_code,json=invoiceCode,proto3,oneof" json:"invoice_code,omitempty"`
	CtmOrder        int64    `protobuf:"varint,21,opt,name=ctm_order,json=ctmOrder,proto3" json:"ctm_order,omitempty"`
	ParentInvoice   *int64   `protobuf:"varint,22,opt,name=parent_invoice,json=parentInvoice,proto3,oneof" json:"parent_invoice,omitempty"`
}

func (x *CtmOrderInvoiceChildrenResponse) Reset() {
	*x = CtmOrderInvoiceChildrenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmOrderInvoiceChildrenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmOrderInvoiceChildrenResponse) ProtoMessage() {}

func (x *CtmOrderInvoiceChildrenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmOrderInvoiceChildrenResponse.ProtoReflect.Descriptor instead.
func (*CtmOrderInvoiceChildrenResponse) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{34}
}

func (x *CtmOrderInvoiceChildrenResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CtmOrderInvoiceChildrenResponse) GetInvoiceTypeName() string {
	if x != nil {
		return x.InvoiceTypeName
	}
	return ""
}

func (x *CtmOrderInvoiceChildrenResponse) GetPayerTypeName() string {
	if x != nil {
		return x.PayerTypeName
	}
	return ""
}

func (x *CtmOrderInvoiceChildrenResponse) GetReasonTypeName() string {
	if x != nil {
		return x.ReasonTypeName
	}
	return ""
}

func (x *CtmOrderInvoiceChildrenResponse) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *CtmOrderInvoiceChildrenResponse) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *CtmOrderInvoiceChildrenResponse) GetInvoiceType() int32 {
	if x != nil {
		return x.InvoiceType
	}
	return 0
}

func (x *CtmOrderInvoiceChildrenResponse) GetPayerType() int32 {
	if x != nil {
		return x.PayerType
	}
	return 0
}

func (x *CtmOrderInvoiceChildrenResponse) GetPayerName() string {
	if x != nil && x.PayerName != nil {
		return *x.PayerName
	}
	return ""
}

func (x *CtmOrderInvoiceChildrenResponse) GetPayerRegisterNo() string {
	if x != nil && x.PayerRegisterNo != nil {
		return *x.PayerRegisterNo
	}
	return ""
}

func (x *CtmOrderInvoiceChildrenResponse) GetPayerPhone() string {
	if x != nil && x.PayerPhone != nil {
		return *x.PayerPhone
	}
	return ""
}

func (x *CtmOrderInvoiceChildrenResponse) GetPayerEmail() string {
	if x != nil && x.PayerEmail != nil {
		return *x.PayerEmail
	}
	return ""
}

func (x *CtmOrderInvoiceChildrenResponse) GetPayerAddress() string {
	if x != nil && x.PayerAddress != nil {
		return *x.PayerAddress
	}
	return ""
}

func (x *CtmOrderInvoiceChildrenResponse) GetPayerBank() string {
	if x != nil && x.PayerBank != nil {
		return *x.PayerBank
	}
	return ""
}

func (x *CtmOrderInvoiceChildrenResponse) GetPayerAccount() string {
	if x != nil && x.PayerAccount != nil {
		return *x.PayerAccount
	}
	return ""
}

func (x *CtmOrderInvoiceChildrenResponse) GetInvoiceAmount() float64 {
	if x != nil && x.InvoiceAmount != nil {
		return *x.InvoiceAmount
	}
	return 0
}

func (x *CtmOrderInvoiceChildrenResponse) GetInvoiceRemark() string {
	if x != nil && x.InvoiceRemark != nil {
		return *x.InvoiceRemark
	}
	return ""
}

func (x *CtmOrderInvoiceChildrenResponse) GetReasonType() int32 {
	if x != nil {
		return x.ReasonType
	}
	return 0
}

func (x *CtmOrderInvoiceChildrenResponse) GetInvoiceNo() string {
	if x != nil && x.InvoiceNo != nil {
		return *x.InvoiceNo
	}
	return ""
}

func (x *CtmOrderInvoiceChildrenResponse) GetInvoiceCode() string {
	if x != nil && x.InvoiceCode != nil {
		return *x.InvoiceCode
	}
	return ""
}

func (x *CtmOrderInvoiceChildrenResponse) GetCtmOrder() int64 {
	if x != nil {
		return x.CtmOrder
	}
	return 0
}

func (x *CtmOrderInvoiceChildrenResponse) GetParentInvoice() int64 {
	if x != nil && x.ParentInvoice != nil {
		return *x.ParentInvoice
	}
	return 0
}

type CtmOrderInvoiceDetailCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Filters         string   `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
	InvoiceType     int32    `protobuf:"varint,3,opt,name=invoice_type,json=invoiceType,proto3" json:"invoice_type,omitempty"`
	PayerType       int32    `protobuf:"varint,4,opt,name=payer_type,json=payerType,proto3" json:"payer_type,omitempty"`
	PayerName       *string  `protobuf:"bytes,5,opt,name=payer_name,json=payerName,proto3,oneof" json:"payer_name,omitempty"`
	PayerRegisterNo *string  `protobuf:"bytes,6,opt,name=payer_register_no,json=payerRegisterNo,proto3,oneof" json:"payer_register_no,omitempty"`
	PayerPhone      *string  `protobuf:"bytes,7,opt,name=payer_phone,json=payerPhone,proto3,oneof" json:"payer_phone,omitempty"`
	PayerEmail      *string  `protobuf:"bytes,8,opt,name=payer_email,json=payerEmail,proto3,oneof" json:"payer_email,omitempty"`
	PayerAddress    *string  `protobuf:"bytes,9,opt,name=payer_address,json=payerAddress,proto3,oneof" json:"payer_address,omitempty"`
	PayerBank       *string  `protobuf:"bytes,10,opt,name=payer_bank,json=payerBank,proto3,oneof" json:"payer_bank,omitempty"`
	PayerAccount    *string  `protobuf:"bytes,11,opt,name=payer_account,json=payerAccount,proto3,oneof" json:"payer_account,omitempty"`
	InvoiceAmount   *float64 `protobuf:"fixed64,12,opt,name=invoice_amount,json=invoiceAmount,proto3,oneof" json:"invoice_amount,omitempty"`
	InvoiceRemark   *string  `protobuf:"bytes,13,opt,name=invoice_remark,json=invoiceRemark,proto3,oneof" json:"invoice_remark,omitempty"`
	InvoiceNo       *string  `protobuf:"bytes,15,opt,name=invoice_no,json=invoiceNo,proto3,oneof" json:"invoice_no,omitempty"`
	InvoiceCode     *string  `protobuf:"bytes,16,opt,name=invoice_code,json=invoiceCode,proto3,oneof" json:"invoice_code,omitempty"`
	CtmOrder        int64    `protobuf:"varint,17,opt,name=ctm_order,json=ctmOrder,proto3" json:"ctm_order,omitempty"`
	ParentInvoice   *int64   `protobuf:"varint,18,opt,name=parent_invoice,json=parentInvoice,proto3,oneof" json:"parent_invoice,omitempty"`
	ReasonType      int32    `protobuf:"varint,19,opt,name=reason_type,json=reasonType,proto3" json:"reason_type,omitempty"`
}

func (x *CtmOrderInvoiceDetailCreateRequest) Reset() {
	*x = CtmOrderInvoiceDetailCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmOrderInvoiceDetailCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmOrderInvoiceDetailCreateRequest) ProtoMessage() {}

func (x *CtmOrderInvoiceDetailCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmOrderInvoiceDetailCreateRequest.ProtoReflect.Descriptor instead.
func (*CtmOrderInvoiceDetailCreateRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{35}
}

func (x *CtmOrderInvoiceDetailCreateRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CtmOrderInvoiceDetailCreateRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *CtmOrderInvoiceDetailCreateRequest) GetInvoiceType() int32 {
	if x != nil {
		return x.InvoiceType
	}
	return 0
}

func (x *CtmOrderInvoiceDetailCreateRequest) GetPayerType() int32 {
	if x != nil {
		return x.PayerType
	}
	return 0
}

func (x *CtmOrderInvoiceDetailCreateRequest) GetPayerName() string {
	if x != nil && x.PayerName != nil {
		return *x.PayerName
	}
	return ""
}

func (x *CtmOrderInvoiceDetailCreateRequest) GetPayerRegisterNo() string {
	if x != nil && x.PayerRegisterNo != nil {
		return *x.PayerRegisterNo
	}
	return ""
}

func (x *CtmOrderInvoiceDetailCreateRequest) GetPayerPhone() string {
	if x != nil && x.PayerPhone != nil {
		return *x.PayerPhone
	}
	return ""
}

func (x *CtmOrderInvoiceDetailCreateRequest) GetPayerEmail() string {
	if x != nil && x.PayerEmail != nil {
		return *x.PayerEmail
	}
	return ""
}

func (x *CtmOrderInvoiceDetailCreateRequest) GetPayerAddress() string {
	if x != nil && x.PayerAddress != nil {
		return *x.PayerAddress
	}
	return ""
}

func (x *CtmOrderInvoiceDetailCreateRequest) GetPayerBank() string {
	if x != nil && x.PayerBank != nil {
		return *x.PayerBank
	}
	return ""
}

func (x *CtmOrderInvoiceDetailCreateRequest) GetPayerAccount() string {
	if x != nil && x.PayerAccount != nil {
		return *x.PayerAccount
	}
	return ""
}

func (x *CtmOrderInvoiceDetailCreateRequest) GetInvoiceAmount() float64 {
	if x != nil && x.InvoiceAmount != nil {
		return *x.InvoiceAmount
	}
	return 0
}

func (x *CtmOrderInvoiceDetailCreateRequest) GetInvoiceRemark() string {
	if x != nil && x.InvoiceRemark != nil {
		return *x.InvoiceRemark
	}
	return ""
}

func (x *CtmOrderInvoiceDetailCreateRequest) GetInvoiceNo() string {
	if x != nil && x.InvoiceNo != nil {
		return *x.InvoiceNo
	}
	return ""
}

func (x *CtmOrderInvoiceDetailCreateRequest) GetInvoiceCode() string {
	if x != nil && x.InvoiceCode != nil {
		return *x.InvoiceCode
	}
	return ""
}

func (x *CtmOrderInvoiceDetailCreateRequest) GetCtmOrder() int64 {
	if x != nil {
		return x.CtmOrder
	}
	return 0
}

func (x *CtmOrderInvoiceDetailCreateRequest) GetParentInvoice() int64 {
	if x != nil && x.ParentInvoice != nil {
		return *x.ParentInvoice
	}
	return 0
}

func (x *CtmOrderInvoiceDetailCreateRequest) GetReasonType() int32 {
	if x != nil {
		return x.ReasonType
	}
	return 0
}

type CtmOrderInvoiceDetailDestroyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CtmOrderInvoiceDetailDestroyRequest) Reset() {
	*x = CtmOrderInvoiceDetailDestroyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmOrderInvoiceDetailDestroyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmOrderInvoiceDetailDestroyRequest) ProtoMessage() {}

func (x *CtmOrderInvoiceDetailDestroyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmOrderInvoiceDetailDestroyRequest.ProtoReflect.Descriptor instead.
func (*CtmOrderInvoiceDetailDestroyRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{36}
}

func (x *CtmOrderInvoiceDetailDestroyRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CtmOrderInvoiceDetailListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters string `protobuf:"bytes,1,opt,name=filters,proto3" json:"filters,omitempty"`
}

func (x *CtmOrderInvoiceDetailListRequest) Reset() {
	*x = CtmOrderInvoiceDetailListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmOrderInvoiceDetailListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmOrderInvoiceDetailListRequest) ProtoMessage() {}

func (x *CtmOrderInvoiceDetailListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmOrderInvoiceDetailListRequest.ProtoReflect.Descriptor instead.
func (*CtmOrderInvoiceDetailListRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{37}
}

func (x *CtmOrderInvoiceDetailListRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

type CtmOrderInvoiceDetailRetrieveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CtmOrderInvoiceDetailRetrieveRequest) Reset() {
	*x = CtmOrderInvoiceDetailRetrieveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmOrderInvoiceDetailRetrieveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmOrderInvoiceDetailRetrieveRequest) ProtoMessage() {}

func (x *CtmOrderInvoiceDetailRetrieveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmOrderInvoiceDetailRetrieveRequest.ProtoReflect.Descriptor instead.
func (*CtmOrderInvoiceDetailRetrieveRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{38}
}

func (x *CtmOrderInvoiceDetailRetrieveRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CtmOrderInvoiceDetailUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   int32                         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Filters              string                        `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
	GoodsList            []*CtmOrderGoodsDetailRequest `protobuf:"bytes,3,rep,name=goods_list,json=goodsList,proto3" json:"goods_list,omitempty"`
	CancelReasons        []*CtmRefundReasonRequest     `protobuf:"bytes,4,rep,name=cancel_reasons,json=cancelReasons,proto3" json:"cancel_reasons,omitempty"`
	XPartialUpdateFields []string                      `protobuf:"bytes,5,rep,name=_partial_update_fields,json=PartialUpdateFields,proto3" json:"_partial_update_fields,omitempty"`
	TradeType            int32                         `protobuf:"varint,6,opt,name=trade_type,json=tradeType,proto3" json:"trade_type,omitempty"`
	CreateType           int32                         `protobuf:"varint,7,opt,name=Create_type,json=CreateType,proto3" json:"Create_type,omitempty"`
	ShopNo               string                        `protobuf:"bytes,8,opt,name=shop_no,json=shopNo,proto3" json:"shop_no,omitempty"`
	ShopName             string                        `protobuf:"bytes,9,opt,name=shop_name,json=shopName,proto3" json:"shop_name,omitempty"`
	WarehouseNo          string                        `protobuf:"bytes,10,opt,name=warehouse_no,json=warehouseNo,proto3" json:"warehouse_no,omitempty"`
	WarehouseName        string                        `protobuf:"bytes,11,opt,name=warehouse_name,json=warehouseName,proto3" json:"warehouse_name,omitempty"`
	Tid                  string                        `protobuf:"bytes,12,opt,name=tid,proto3" json:"tid,omitempty"`
	TradeStatus          int32                         `protobuf:"varint,13,opt,name=trade_status,json=tradeStatus,proto3" json:"trade_status,omitempty"`
	PayStatus            int32                         `protobuf:"varint,14,opt,name=pay_status,json=payStatus,proto3" json:"pay_status,omitempty"`
	PayTime              *string                       `protobuf:"bytes,15,opt,name=pay_time,json=payTime,proto3,oneof" json:"pay_time,omitempty"`
	DeliveryTerm         int32                         `protobuf:"varint,16,opt,name=delivery_term,json=deliveryTerm,proto3" json:"delivery_term,omitempty"`
	BuyerNick            string                        `protobuf:"bytes,17,opt,name=buyer_nick,json=buyerNick,proto3" json:"buyer_nick,omitempty"`
	BuyerMobile          *string                       `protobuf:"bytes,18,opt,name=buyer_mobile,json=buyerMobile,proto3,oneof" json:"buyer_mobile,omitempty"`
	BuyerMessage         *string                       `protobuf:"bytes,19,opt,name=buyer_message,json=buyerMessage,proto3,oneof" json:"buyer_message,omitempty"`
	SellerMemo           *string                       `protobuf:"bytes,20,opt,name=seller_memo,json=sellerMemo,proto3,oneof" json:"seller_memo,omitempty"`
	ReceiverName         *string                       `protobuf:"bytes,21,opt,name=receiver_name,json=receiverName,proto3,oneof" json:"receiver_name,omitempty"`
	ReceiverProvince     *string                       `protobuf:"bytes,22,opt,name=receiver_province,json=receiverProvince,proto3,oneof" json:"receiver_province,omitempty"`
	ReceiverCity         *string                       `protobuf:"bytes,23,opt,name=receiver_city,json=receiverCity,proto3,oneof" json:"receiver_city,omitempty"`
	ReceiverDistrict     *string                       `protobuf:"bytes,24,opt,name=receiver_district,json=receiverDistrict,proto3,oneof" json:"receiver_district,omitempty"`
	ReceiverAddress      *string                       `protobuf:"bytes,25,opt,name=receiver_address,json=receiverAddress,proto3,oneof" json:"receiver_address,omitempty"`
	ReceiverMobile       *string                       `protobuf:"bytes,26,opt,name=receiver_mobile,json=receiverMobile,proto3,oneof" json:"receiver_mobile,omitempty"`
	PostAmount           float64                       `protobuf:"fixed64,27,opt,name=post_amount,json=postAmount,proto3" json:"post_amount,omitempty"`
	OtherAmount          float64                       `protobuf:"fixed64,28,opt,name=other_amount,json=otherAmount,proto3" json:"other_amount,omitempty"`
	CodAmount            float64                       `protobuf:"fixed64,29,opt,name=cod_amount,json=codAmount,proto3" json:"cod_amount,omitempty"`
	ExtCodFee            float64                       `protobuf:"fixed64,30,opt,name=ext_cod_fee,json=extCodFee,proto3" json:"ext_cod_fee,omitempty"`
	Paid                 float64                       `protobuf:"fixed64,31,opt,name=paid,proto3" json:"paid,omitempty"`
	InvoiceStatus        int32                         `protobuf:"varint,32,opt,name=invoice_status,json=invoiceStatus,proto3" json:"invoice_status,omitempty"`
	Receivable           float64                       `protobuf:"fixed64,33,opt,name=receivable,proto3" json:"receivable,omitempty"`
	Discount             float64                       `protobuf:"fixed64,34,opt,name=discount,proto3" json:"discount,omitempty"`
	DebitPay             float64                       `protobuf:"fixed64,35,opt,name=debit_pay,json=debitPay,proto3" json:"debit_pay,omitempty"`
	GiftPay              float64                       `protobuf:"fixed64,36,opt,name=gift_pay,json=giftPay,proto3" json:"gift_pay,omitempty"`
	ScorePay             int32                         `protobuf:"varint,37,opt,name=score_pay,json=scorePay,proto3" json:"score_pay,omitempty"`
	BadgePay             int32                         `protobuf:"varint,38,opt,name=badge_pay,json=badgePay,proto3" json:"badge_pay,omitempty"`
	NutPay               int32                         `protobuf:"varint,39,opt,name=nut_pay,json=nutPay,proto3" json:"nut_pay,omitempty"`
	Ctm                  *int64                        `protobuf:"varint,40,opt,name=ctm,proto3,oneof" json:"ctm,omitempty"`
	RefundOrder          *int64                        `protobuf:"varint,41,opt,name=refund_order,json=refundOrder,proto3,oneof" json:"refund_order,omitempty"`
	DebitCard            *int64                        `protobuf:"varint,42,opt,name=debit_card,json=debitCard,proto3,oneof" json:"debit_card,omitempty"`
	ScoreCard            *int64                        `protobuf:"varint,43,opt,name=score_card,json=scoreCard,proto3,oneof" json:"score_card,omitempty"`
	BadgeCard            *int64                        `protobuf:"varint,44,opt,name=badge_card,json=badgeCard,proto3,oneof" json:"badge_card,omitempty"`
	NutCard              *int64                        `protobuf:"varint,45,opt,name=nut_card,json=nutCard,proto3,oneof" json:"nut_card,omitempty"`
	GiftCards            []int64                       `protobuf:"varint,46,rep,packed,name=gift_cards,json=giftCards,proto3" json:"gift_cards,omitempty"`
	CouponList           []*CtmOrderPromotionRequest   `protobuf:"bytes,47,rep,name=coupon_list,json=couponList,proto3" json:"coupon_list,omitempty"`
	OrderPay             []*CtmOrderPayRequest         `protobuf:"bytes,48,rep,name=order_pay,json=orderPay,proto3" json:"order_pay,omitempty"`
	OrderInvoice         []*CtmOrderInvoiceRequest     `protobuf:"bytes,49,rep,name=order_invoice,json=orderInvoice,proto3" json:"order_invoice,omitempty"`
}

func (x *CtmOrderInvoiceDetailUpdateRequest) Reset() {
	*x = CtmOrderInvoiceDetailUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmOrderInvoiceDetailUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmOrderInvoiceDetailUpdateRequest) ProtoMessage() {}

func (x *CtmOrderInvoiceDetailUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmOrderInvoiceDetailUpdateRequest.ProtoReflect.Descriptor instead.
func (*CtmOrderInvoiceDetailUpdateRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{39}
}

func (x *CtmOrderInvoiceDetailUpdateRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CtmOrderInvoiceDetailUpdateRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *CtmOrderInvoiceDetailUpdateRequest) GetGoodsList() []*CtmOrderGoodsDetailRequest {
	if x != nil {
		return x.GoodsList
	}
	return nil
}

func (x *CtmOrderInvoiceDetailUpdateRequest) GetCancelReasons() []*CtmRefundReasonRequest {
	if x != nil {
		return x.CancelReasons
	}
	return nil
}

func (x *CtmOrderInvoiceDetailUpdateRequest) GetXPartialUpdateFields() []string {
	if x != nil {
		return x.XPartialUpdateFields
	}
	return nil
}

func (x *CtmOrderInvoiceDetailUpdateRequest) GetTradeType() int32 {
	if x != nil {
		return x.TradeType
	}
	return 0
}

func (x *CtmOrderInvoiceDetailUpdateRequest) GetCreateType() int32 {
	if x != nil {
		return x.CreateType
	}
	return 0
}

func (x *CtmOrderInvoiceDetailUpdateRequest) GetShopNo() string {
	if x != nil {
		return x.ShopNo
	}
	return ""
}

func (x *CtmOrderInvoiceDetailUpdateRequest) GetShopName() string {
	if x != nil {
		return x.ShopName
	}
	return ""
}

func (x *CtmOrderInvoiceDetailUpdateRequest) GetWarehouseNo() string {
	if x != nil {
		return x.WarehouseNo
	}
	return ""
}

func (x *CtmOrderInvoiceDetailUpdateRequest) GetWarehouseName() string {
	if x != nil {
		return x.WarehouseName
	}
	return ""
}

func (x *CtmOrderInvoiceDetailUpdateRequest) GetTid() string {
	if x != nil {
		return x.Tid
	}
	return ""
}

func (x *CtmOrderInvoiceDetailUpdateRequest) GetTradeStatus() int32 {
	if x != nil {
		return x.TradeStatus
	}
	return 0
}

func (x *CtmOrderInvoiceDetailUpdateRequest) GetPayStatus() int32 {
	if x != nil {
		return x.PayStatus
	}
	return 0
}

func (x *CtmOrderInvoiceDetailUpdateRequest) GetPayTime() string {
	if x != nil && x.PayTime != nil {
		return *x.PayTime
	}
	return ""
}

func (x *CtmOrderInvoiceDetailUpdateRequest) GetDeliveryTerm() int32 {
	if x != nil {
		return x.DeliveryTerm
	}
	return 0
}

func (x *CtmOrderInvoiceDetailUpdateRequest) GetBuyerNick() string {
	if x != nil {
		return x.BuyerNick
	}
	return ""
}

func (x *CtmOrderInvoiceDetailUpdateRequest) GetBuyerMobile() string {
	if x != nil && x.BuyerMobile != nil {
		return *x.BuyerMobile
	}
	return ""
}

func (x *CtmOrderInvoiceDetailUpdateRequest) GetBuyerMessage() string {
	if x != nil && x.BuyerMessage != nil {
		return *x.BuyerMessage
	}
	return ""
}

func (x *CtmOrderInvoiceDetailUpdateRequest) GetSellerMemo() string {
	if x != nil && x.SellerMemo != nil {
		return *x.SellerMemo
	}
	return ""
}

func (x *CtmOrderInvoiceDetailUpdateRequest) GetReceiverName() string {
	if x != nil && x.ReceiverName != nil {
		return *x.ReceiverName
	}
	return ""
}

func (x *CtmOrderInvoiceDetailUpdateRequest) GetReceiverProvince() string {
	if x != nil && x.ReceiverProvince != nil {
		return *x.ReceiverProvince
	}
	return ""
}

func (x *CtmOrderInvoiceDetailUpdateRequest) GetReceiverCity() string {
	if x != nil && x.ReceiverCity != nil {
		return *x.ReceiverCity
	}
	return ""
}

func (x *CtmOrderInvoiceDetailUpdateRequest) GetReceiverDistrict() string {
	if x != nil && x.ReceiverDistrict != nil {
		return *x.ReceiverDistrict
	}
	return ""
}

func (x *CtmOrderInvoiceDetailUpdateRequest) GetReceiverAddress() string {
	if x != nil && x.ReceiverAddress != nil {
		return *x.ReceiverAddress
	}
	return ""
}

func (x *CtmOrderInvoiceDetailUpdateRequest) GetReceiverMobile() string {
	if x != nil && x.ReceiverMobile != nil {
		return *x.ReceiverMobile
	}
	return ""
}

func (x *CtmOrderInvoiceDetailUpdateRequest) GetPostAmount() float64 {
	if x != nil {
		return x.PostAmount
	}
	return 0
}

func (x *CtmOrderInvoiceDetailUpdateRequest) GetOtherAmount() float64 {
	if x != nil {
		return x.OtherAmount
	}
	return 0
}

func (x *CtmOrderInvoiceDetailUpdateRequest) GetCodAmount() float64 {
	if x != nil {
		return x.CodAmount
	}
	return 0
}

func (x *CtmOrderInvoiceDetailUpdateRequest) GetExtCodFee() float64 {
	if x != nil {
		return x.ExtCodFee
	}
	return 0
}

func (x *CtmOrderInvoiceDetailUpdateRequest) GetPaid() float64 {
	if x != nil {
		return x.Paid
	}
	return 0
}

func (x *CtmOrderInvoiceDetailUpdateRequest) GetInvoiceStatus() int32 {
	if x != nil {
		return x.InvoiceStatus
	}
	return 0
}

func (x *CtmOrderInvoiceDetailUpdateRequest) GetReceivable() float64 {
	if x != nil {
		return x.Receivable
	}
	return 0
}

func (x *CtmOrderInvoiceDetailUpdateRequest) GetDiscount() float64 {
	if x != nil {
		return x.Discount
	}
	return 0
}

func (x *CtmOrderInvoiceDetailUpdateRequest) GetDebitPay() float64 {
	if x != nil {
		return x.DebitPay
	}
	return 0
}

func (x *CtmOrderInvoiceDetailUpdateRequest) GetGiftPay() float64 {
	if x != nil {
		return x.GiftPay
	}
	return 0
}

func (x *CtmOrderInvoiceDetailUpdateRequest) GetScorePay() int32 {
	if x != nil {
		return x.ScorePay
	}
	return 0
}

func (x *CtmOrderInvoiceDetailUpdateRequest) GetBadgePay() int32 {
	if x != nil {
		return x.BadgePay
	}
	return 0
}

func (x *CtmOrderInvoiceDetailUpdateRequest) GetNutPay() int32 {
	if x != nil {
		return x.NutPay
	}
	return 0
}

func (x *CtmOrderInvoiceDetailUpdateRequest) GetCtm() int64 {
	if x != nil && x.Ctm != nil {
		return *x.Ctm
	}
	return 0
}

func (x *CtmOrderInvoiceDetailUpdateRequest) GetRefundOrder() int64 {
	if x != nil && x.RefundOrder != nil {
		return *x.RefundOrder
	}
	return 0
}

func (x *CtmOrderInvoiceDetailUpdateRequest) GetDebitCard() int64 {
	if x != nil && x.DebitCard != nil {
		return *x.DebitCard
	}
	return 0
}

func (x *CtmOrderInvoiceDetailUpdateRequest) GetScoreCard() int64 {
	if x != nil && x.ScoreCard != nil {
		return *x.ScoreCard
	}
	return 0
}

func (x *CtmOrderInvoiceDetailUpdateRequest) GetBadgeCard() int64 {
	if x != nil && x.BadgeCard != nil {
		return *x.BadgeCard
	}
	return 0
}

func (x *CtmOrderInvoiceDetailUpdateRequest) GetNutCard() int64 {
	if x != nil && x.NutCard != nil {
		return *x.NutCard
	}
	return 0
}

func (x *CtmOrderInvoiceDetailUpdateRequest) GetGiftCards() []int64 {
	if x != nil {
		return x.GiftCards
	}
	return nil
}

func (x *CtmOrderInvoiceDetailUpdateRequest) GetCouponList() []*CtmOrderPromotionRequest {
	if x != nil {
		return x.CouponList
	}
	return nil
}

func (x *CtmOrderInvoiceDetailUpdateRequest) GetOrderPay() []*CtmOrderPayRequest {
	if x != nil {
		return x.OrderPay
	}
	return nil
}

func (x *CtmOrderInvoiceDetailUpdateRequest) GetOrderInvoice() []*CtmOrderInvoiceRequest {
	if x != nil {
		return x.OrderInvoice
	}
	return nil
}

type CtmOrderInvoiceListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*CtmOrderInvoiceResponse `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Count   int32                      `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *CtmOrderInvoiceListResponse) Reset() {
	*x = CtmOrderInvoiceListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmOrderInvoiceListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmOrderInvoiceListResponse) ProtoMessage() {}

func (x *CtmOrderInvoiceListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmOrderInvoiceListResponse.ProtoReflect.Descriptor instead.
func (*CtmOrderInvoiceListResponse) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{40}
}

func (x *CtmOrderInvoiceListResponse) GetResults() []*CtmOrderInvoiceResponse {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *CtmOrderInvoiceListResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type CtmOrderInvoiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Filters         string   `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
	InvoiceType     int32    `protobuf:"varint,3,opt,name=invoice_type,json=invoiceType,proto3" json:"invoice_type,omitempty"`
	PayerType       int32    `protobuf:"varint,4,opt,name=payer_type,json=payerType,proto3" json:"payer_type,omitempty"`
	PayerName       *string  `protobuf:"bytes,5,opt,name=payer_name,json=payerName,proto3,oneof" json:"payer_name,omitempty"`
	PayerRegisterNo *string  `protobuf:"bytes,6,opt,name=payer_register_no,json=payerRegisterNo,proto3,oneof" json:"payer_register_no,omitempty"`
	PayerPhone      *string  `protobuf:"bytes,7,opt,name=payer_phone,json=payerPhone,proto3,oneof" json:"payer_phone,omitempty"`
	PayerEmail      *string  `protobuf:"bytes,8,opt,name=payer_email,json=payerEmail,proto3,oneof" json:"payer_email,omitempty"`
	PayerAddress    *string  `protobuf:"bytes,9,opt,name=payer_address,json=payerAddress,proto3,oneof" json:"payer_address,omitempty"`
	PayerBank       *string  `protobuf:"bytes,10,opt,name=payer_bank,json=payerBank,proto3,oneof" json:"payer_bank,omitempty"`
	PayerAccount    *string  `protobuf:"bytes,11,opt,name=payer_account,json=payerAccount,proto3,oneof" json:"payer_account,omitempty"`
	InvoiceAmount   *float64 `protobuf:"fixed64,12,opt,name=invoice_amount,json=invoiceAmount,proto3,oneof" json:"invoice_amount,omitempty"`
	InvoiceRemark   *string  `protobuf:"bytes,13,opt,name=invoice_remark,json=invoiceRemark,proto3,oneof" json:"invoice_remark,omitempty"`
	ReasonType      int32    `protobuf:"varint,14,opt,name=reason_type,json=reasonType,proto3" json:"reason_type,omitempty"`
	InvoiceNo       *string  `protobuf:"bytes,15,opt,name=invoice_no,json=invoiceNo,proto3,oneof" json:"invoice_no,omitempty"`
	InvoiceCode     *string  `protobuf:"bytes,16,opt,name=invoice_code,json=invoiceCode,proto3,oneof" json:"invoice_code,omitempty"`
	CtmOrder        int64    `protobuf:"varint,17,opt,name=ctm_order,json=ctmOrder,proto3" json:"ctm_order,omitempty"`
	ParentInvoice   *int64   `protobuf:"varint,18,opt,name=parent_invoice,json=parentInvoice,proto3,oneof" json:"parent_invoice,omitempty"`
}

func (x *CtmOrderInvoiceRequest) Reset() {
	*x = CtmOrderInvoiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmOrderInvoiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmOrderInvoiceRequest) ProtoMessage() {}

func (x *CtmOrderInvoiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmOrderInvoiceRequest.ProtoReflect.Descriptor instead.
func (*CtmOrderInvoiceRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{41}
}

func (x *CtmOrderInvoiceRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CtmOrderInvoiceRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *CtmOrderInvoiceRequest) GetInvoiceType() int32 {
	if x != nil {
		return x.InvoiceType
	}
	return 0
}

func (x *CtmOrderInvoiceRequest) GetPayerType() int32 {
	if x != nil {
		return x.PayerType
	}
	return 0
}

func (x *CtmOrderInvoiceRequest) GetPayerName() string {
	if x != nil && x.PayerName != nil {
		return *x.PayerName
	}
	return ""
}

func (x *CtmOrderInvoiceRequest) GetPayerRegisterNo() string {
	if x != nil && x.PayerRegisterNo != nil {
		return *x.PayerRegisterNo
	}
	return ""
}

func (x *CtmOrderInvoiceRequest) GetPayerPhone() string {
	if x != nil && x.PayerPhone != nil {
		return *x.PayerPhone
	}
	return ""
}

func (x *CtmOrderInvoiceRequest) GetPayerEmail() string {
	if x != nil && x.PayerEmail != nil {
		return *x.PayerEmail
	}
	return ""
}

func (x *CtmOrderInvoiceRequest) GetPayerAddress() string {
	if x != nil && x.PayerAddress != nil {
		return *x.PayerAddress
	}
	return ""
}

func (x *CtmOrderInvoiceRequest) GetPayerBank() string {
	if x != nil && x.PayerBank != nil {
		return *x.PayerBank
	}
	return ""
}

func (x *CtmOrderInvoiceRequest) GetPayerAccount() string {
	if x != nil && x.PayerAccount != nil {
		return *x.PayerAccount
	}
	return ""
}

func (x *CtmOrderInvoiceRequest) GetInvoiceAmount() float64 {
	if x != nil && x.InvoiceAmount != nil {
		return *x.InvoiceAmount
	}
	return 0
}

func (x *CtmOrderInvoiceRequest) GetInvoiceRemark() string {
	if x != nil && x.InvoiceRemark != nil {
		return *x.InvoiceRemark
	}
	return ""
}

func (x *CtmOrderInvoiceRequest) GetReasonType() int32 {
	if x != nil {
		return x.ReasonType
	}
	return 0
}

func (x *CtmOrderInvoiceRequest) GetInvoiceNo() string {
	if x != nil && x.InvoiceNo != nil {
		return *x.InvoiceNo
	}
	return ""
}

func (x *CtmOrderInvoiceRequest) GetInvoiceCode() string {
	if x != nil && x.InvoiceCode != nil {
		return *x.InvoiceCode
	}
	return ""
}

func (x *CtmOrderInvoiceRequest) GetCtmOrder() int64 {
	if x != nil {
		return x.CtmOrder
	}
	return 0
}

func (x *CtmOrderInvoiceRequest) GetParentInvoice() int64 {
	if x != nil && x.ParentInvoice != nil {
		return *x.ParentInvoice
	}
	return 0
}

type CtmOrderInvoiceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int32                              `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreateTime      string                             `protobuf:"bytes,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime      string                             `protobuf:"bytes,3,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	InvoiceType     int32                              `protobuf:"varint,4,opt,name=invoice_type,json=invoiceType,proto3" json:"invoice_type,omitempty"`
	PayerType       int32                              `protobuf:"varint,5,opt,name=payer_type,json=payerType,proto3" json:"payer_type,omitempty"`
	PayerName       *string                            `protobuf:"bytes,6,opt,name=payer_name,json=payerName,proto3,oneof" json:"payer_name,omitempty"`
	PayerRegisterNo *string                            `protobuf:"bytes,7,opt,name=payer_register_no,json=payerRegisterNo,proto3,oneof" json:"payer_register_no,omitempty"`
	PayerPhone      *string                            `protobuf:"bytes,8,opt,name=payer_phone,json=payerPhone,proto3,oneof" json:"payer_phone,omitempty"`
	PayerEmail      *string                            `protobuf:"bytes,9,opt,name=payer_email,json=payerEmail,proto3,oneof" json:"payer_email,omitempty"`
	PayerAddress    *string                            `protobuf:"bytes,10,opt,name=payer_address,json=payerAddress,proto3,oneof" json:"payer_address,omitempty"`
	PayerBank       *string                            `protobuf:"bytes,11,opt,name=payer_bank,json=payerBank,proto3,oneof" json:"payer_bank,omitempty"`
	PayerAccount    *string                            `protobuf:"bytes,12,opt,name=payer_account,json=payerAccount,proto3,oneof" json:"payer_account,omitempty"`
	InvoiceAmount   *float64                           `protobuf:"fixed64,13,opt,name=invoice_amount,json=invoiceAmount,proto3,oneof" json:"invoice_amount,omitempty"`
	InvoiceRemark   *string                            `protobuf:"bytes,14,opt,name=invoice_remark,json=invoiceRemark,proto3,oneof" json:"invoice_remark,omitempty"`
	InvoiceNo       *string                            `protobuf:"bytes,16,opt,name=invoice_no,json=invoiceNo,proto3,oneof" json:"invoice_no,omitempty"`
	InvoiceCode     *string                            `protobuf:"bytes,17,opt,name=invoice_code,json=invoiceCode,proto3,oneof" json:"invoice_code,omitempty"`
	CtmOrder        int64                              `protobuf:"varint,18,opt,name=ctm_order,json=ctmOrder,proto3" json:"ctm_order,omitempty"`
	ParentInvoice   *int64                             `protobuf:"varint,19,opt,name=parent_invoice,json=parentInvoice,proto3,oneof" json:"parent_invoice,omitempty"`
	InvoiceTypeName string                             `protobuf:"bytes,20,opt,name=invoice_type_name,json=invoiceTypeName,proto3" json:"invoice_type_name,omitempty"`
	PayerTypeName   string                             `protobuf:"bytes,21,opt,name=payer_type_name,json=payerTypeName,proto3" json:"payer_type_name,omitempty"`
	ReasonTypeName  string                             `protobuf:"bytes,22,opt,name=reason_type_name,json=reasonTypeName,proto3" json:"reason_type_name,omitempty"`
	Children        []*CtmOrderInvoiceChildrenResponse `protobuf:"bytes,23,rep,name=children,proto3" json:"children,omitempty"`
	ReasonType      int32                              `protobuf:"varint,24,opt,name=reason_type,json=reasonType,proto3" json:"reason_type,omitempty"`
}

func (x *CtmOrderInvoiceResponse) Reset() {
	*x = CtmOrderInvoiceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmOrderInvoiceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmOrderInvoiceResponse) ProtoMessage() {}

func (x *CtmOrderInvoiceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmOrderInvoiceResponse.ProtoReflect.Descriptor instead.
func (*CtmOrderInvoiceResponse) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{42}
}

func (x *CtmOrderInvoiceResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CtmOrderInvoiceResponse) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *CtmOrderInvoiceResponse) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *CtmOrderInvoiceResponse) GetInvoiceType() int32 {
	if x != nil {
		return x.InvoiceType
	}
	return 0
}

func (x *CtmOrderInvoiceResponse) GetPayerType() int32 {
	if x != nil {
		return x.PayerType
	}
	return 0
}

func (x *CtmOrderInvoiceResponse) GetPayerName() string {
	if x != nil && x.PayerName != nil {
		return *x.PayerName
	}
	return ""
}

func (x *CtmOrderInvoiceResponse) GetPayerRegisterNo() string {
	if x != nil && x.PayerRegisterNo != nil {
		return *x.PayerRegisterNo
	}
	return ""
}

func (x *CtmOrderInvoiceResponse) GetPayerPhone() string {
	if x != nil && x.PayerPhone != nil {
		return *x.PayerPhone
	}
	return ""
}

func (x *CtmOrderInvoiceResponse) GetPayerEmail() string {
	if x != nil && x.PayerEmail != nil {
		return *x.PayerEmail
	}
	return ""
}

func (x *CtmOrderInvoiceResponse) GetPayerAddress() string {
	if x != nil && x.PayerAddress != nil {
		return *x.PayerAddress
	}
	return ""
}

func (x *CtmOrderInvoiceResponse) GetPayerBank() string {
	if x != nil && x.PayerBank != nil {
		return *x.PayerBank
	}
	return ""
}

func (x *CtmOrderInvoiceResponse) GetPayerAccount() string {
	if x != nil && x.PayerAccount != nil {
		return *x.PayerAccount
	}
	return ""
}

func (x *CtmOrderInvoiceResponse) GetInvoiceAmount() float64 {
	if x != nil && x.InvoiceAmount != nil {
		return *x.InvoiceAmount
	}
	return 0
}

func (x *CtmOrderInvoiceResponse) GetInvoiceRemark() string {
	if x != nil && x.InvoiceRemark != nil {
		return *x.InvoiceRemark
	}
	return ""
}

func (x *CtmOrderInvoiceResponse) GetInvoiceNo() string {
	if x != nil && x.InvoiceNo != nil {
		return *x.InvoiceNo
	}
	return ""
}

func (x *CtmOrderInvoiceResponse) GetInvoiceCode() string {
	if x != nil && x.InvoiceCode != nil {
		return *x.InvoiceCode
	}
	return ""
}

func (x *CtmOrderInvoiceResponse) GetCtmOrder() int64 {
	if x != nil {
		return x.CtmOrder
	}
	return 0
}

func (x *CtmOrderInvoiceResponse) GetParentInvoice() int64 {
	if x != nil && x.ParentInvoice != nil {
		return *x.ParentInvoice
	}
	return 0
}

func (x *CtmOrderInvoiceResponse) GetInvoiceTypeName() string {
	if x != nil {
		return x.InvoiceTypeName
	}
	return ""
}

func (x *CtmOrderInvoiceResponse) GetPayerTypeName() string {
	if x != nil {
		return x.PayerTypeName
	}
	return ""
}

func (x *CtmOrderInvoiceResponse) GetReasonTypeName() string {
	if x != nil {
		return x.ReasonTypeName
	}
	return ""
}

func (x *CtmOrderInvoiceResponse) GetChildren() []*CtmOrderInvoiceChildrenResponse {
	if x != nil {
		return x.Children
	}
	return nil
}

func (x *CtmOrderInvoiceResponse) GetReasonType() int32 {
	if x != nil {
		return x.ReasonType
	}
	return 0
}

type CtmOrderListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int32                         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TradeType        int32                         `protobuf:"varint,2,opt,name=trade_type,json=tradeType,proto3" json:"trade_type,omitempty"`
	ShopNo           string                        `protobuf:"bytes,3,opt,name=shop_no,json=shopNo,proto3" json:"shop_no,omitempty"`
	ShopName         string                        `protobuf:"bytes,4,opt,name=shop_name,json=shopName,proto3" json:"shop_name,omitempty"`
	WarehouseNo      string                        `protobuf:"bytes,5,opt,name=warehouse_no,json=warehouseNo,proto3" json:"warehouse_no,omitempty"`
	WarehouseName    string                        `protobuf:"bytes,6,opt,name=warehouse_name,json=warehouseName,proto3" json:"warehouse_name,omitempty"`
	Tid              string                        `protobuf:"bytes,7,opt,name=tid,proto3" json:"tid,omitempty"`
	TradeStatus      int32                         `protobuf:"varint,8,opt,name=trade_status,json=tradeStatus,proto3" json:"trade_status,omitempty"`
	PayStatus        int32                         `protobuf:"varint,9,opt,name=pay_status,json=payStatus,proto3" json:"pay_status,omitempty"`
	PayTime          *string                       `protobuf:"bytes,10,opt,name=pay_time,json=payTime,proto3,oneof" json:"pay_time,omitempty"`
	DeliveryTerm     int32                         `protobuf:"varint,11,opt,name=delivery_term,json=deliveryTerm,proto3" json:"delivery_term,omitempty"`
	BuyerNick        string                        `protobuf:"bytes,12,opt,name=buyer_nick,json=buyerNick,proto3" json:"buyer_nick,omitempty"`
	BuyerMobile      *string                       `protobuf:"bytes,13,opt,name=buyer_mobile,json=buyerMobile,proto3,oneof" json:"buyer_mobile,omitempty"`
	BuyerMessage     *string                       `protobuf:"bytes,14,opt,name=buyer_message,json=buyerMessage,proto3,oneof" json:"buyer_message,omitempty"`
	SellerMemo       *string                       `protobuf:"bytes,15,opt,name=seller_memo,json=sellerMemo,proto3,oneof" json:"seller_memo,omitempty"`
	ReceiverName     *string                       `protobuf:"bytes,16,opt,name=receiver_name,json=receiverName,proto3,oneof" json:"receiver_name,omitempty"`
	ReceiverProvince *string                       `protobuf:"bytes,17,opt,name=receiver_province,json=receiverProvince,proto3,oneof" json:"receiver_province,omitempty"`
	ReceiverCity     *string                       `protobuf:"bytes,18,opt,name=receiver_city,json=receiverCity,proto3,oneof" json:"receiver_city,omitempty"`
	ReceiverDistrict *string                       `protobuf:"bytes,19,opt,name=receiver_district,json=receiverDistrict,proto3,oneof" json:"receiver_district,omitempty"`
	ReceiverAddress  *string                       `protobuf:"bytes,20,opt,name=receiver_address,json=receiverAddress,proto3,oneof" json:"receiver_address,omitempty"`
	ReceiverMobile   *string                       `protobuf:"bytes,21,opt,name=receiver_mobile,json=receiverMobile,proto3,oneof" json:"receiver_mobile,omitempty"`
	PostAmount       float64                       `protobuf:"fixed64,22,opt,name=post_amount,json=postAmount,proto3" json:"post_amount,omitempty"`
	OtherAmount      float64                       `protobuf:"fixed64,23,opt,name=other_amount,json=otherAmount,proto3" json:"other_amount,omitempty"`
	CodAmount        float64                       `protobuf:"fixed64,24,opt,name=cod_amount,json=codAmount,proto3" json:"cod_amount,omitempty"`
	ExtCodFee        float64                       `protobuf:"fixed64,25,opt,name=ext_cod_fee,json=extCodFee,proto3" json:"ext_cod_fee,omitempty"`
	Paid             float64                       `protobuf:"fixed64,26,opt,name=paid,proto3" json:"paid,omitempty"`
	InvoiceStatus    int32                         `protobuf:"varint,27,opt,name=invoice_status,json=invoiceStatus,proto3" json:"invoice_status,omitempty"`
	Receivable       float64                       `protobuf:"fixed64,28,opt,name=receivable,proto3" json:"receivable,omitempty"`
	Discount         float64                       `protobuf:"fixed64,29,opt,name=discount,proto3" json:"discount,omitempty"`
	Ctm              *int64                        `protobuf:"varint,35,opt,name=ctm,proto3,oneof" json:"ctm,omitempty"`
	RefundOrder      *int64                        `protobuf:"varint,36,opt,name=refund_order,json=refundOrder,proto3,oneof" json:"refund_order,omitempty"`
	Filters          string                        `protobuf:"bytes,37,opt,name=filters,proto3" json:"filters,omitempty"`
	DebitPay         float64                       `protobuf:"fixed64,38,opt,name=debit_pay,json=debitPay,proto3" json:"debit_pay,omitempty"`
	GiftPay          float64                       `protobuf:"fixed64,39,opt,name=gift_pay,json=giftPay,proto3" json:"gift_pay,omitempty"`
	ScorePay         int32                         `protobuf:"varint,40,opt,name=score_pay,json=scorePay,proto3" json:"score_pay,omitempty"`
	BadgePay         int32                         `protobuf:"varint,41,opt,name=badge_pay,json=badgePay,proto3" json:"badge_pay,omitempty"`
	NutPay           int32                         `protobuf:"varint,42,opt,name=nut_pay,json=nutPay,proto3" json:"nut_pay,omitempty"`
	DebitCard        *int64                        `protobuf:"varint,43,opt,name=debit_card,json=debitCard,proto3,oneof" json:"debit_card,omitempty"`
	ScoreCard        *int64                        `protobuf:"varint,44,opt,name=score_card,json=scoreCard,proto3,oneof" json:"score_card,omitempty"`
	BadgeCard        *int64                        `protobuf:"varint,45,opt,name=badge_card,json=badgeCard,proto3,oneof" json:"badge_card,omitempty"`
	NutCard          *int64                        `protobuf:"varint,46,opt,name=nut_card,json=nutCard,proto3,oneof" json:"nut_card,omitempty"`
	GiftCards        []int64                       `protobuf:"varint,47,rep,packed,name=gift_cards,json=giftCards,proto3" json:"gift_cards,omitempty"`
	GoodsList        []*CtmOrderGoodsDetailRequest `protobuf:"bytes,48,rep,name=goods_list,json=goodsList,proto3" json:"goods_list,omitempty"`
	CancelReasons    []*CtmRefundReasonRequest     `protobuf:"bytes,49,rep,name=cancel_reasons,json=cancelReasons,proto3" json:"cancel_reasons,omitempty"`
	CreateType       int32                         `protobuf:"varint,50,opt,name=Create_type,json=CreateType,proto3" json:"Create_type,omitempty"`
	CouponList       []*CtmOrderPromotionRequest   `protobuf:"bytes,51,rep,name=coupon_list,json=couponList,proto3" json:"coupon_list,omitempty"`
	OrderPay         []*CtmOrderPayRequest         `protobuf:"bytes,52,rep,name=order_pay,json=orderPay,proto3" json:"order_pay,omitempty"`
	OrderInvoice     []*CtmOrderInvoiceRequest     `protobuf:"bytes,53,rep,name=order_invoice,json=orderInvoice,proto3" json:"order_invoice,omitempty"`
}

func (x *CtmOrderListRequest) Reset() {
	*x = CtmOrderListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmOrderListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmOrderListRequest) ProtoMessage() {}

func (x *CtmOrderListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmOrderListRequest.ProtoReflect.Descriptor instead.
func (*CtmOrderListRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{43}
}

func (x *CtmOrderListRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CtmOrderListRequest) GetTradeType() int32 {
	if x != nil {
		return x.TradeType
	}
	return 0
}

func (x *CtmOrderListRequest) GetShopNo() string {
	if x != nil {
		return x.ShopNo
	}
	return ""
}

func (x *CtmOrderListRequest) GetShopName() string {
	if x != nil {
		return x.ShopName
	}
	return ""
}

func (x *CtmOrderListRequest) GetWarehouseNo() string {
	if x != nil {
		return x.WarehouseNo
	}
	return ""
}

func (x *CtmOrderListRequest) GetWarehouseName() string {
	if x != nil {
		return x.WarehouseName
	}
	return ""
}

func (x *CtmOrderListRequest) GetTid() string {
	if x != nil {
		return x.Tid
	}
	return ""
}

func (x *CtmOrderListRequest) GetTradeStatus() int32 {
	if x != nil {
		return x.TradeStatus
	}
	return 0
}

func (x *CtmOrderListRequest) GetPayStatus() int32 {
	if x != nil {
		return x.PayStatus
	}
	return 0
}

func (x *CtmOrderListRequest) GetPayTime() string {
	if x != nil && x.PayTime != nil {
		return *x.PayTime
	}
	return ""
}

func (x *CtmOrderListRequest) GetDeliveryTerm() int32 {
	if x != nil {
		return x.DeliveryTerm
	}
	return 0
}

func (x *CtmOrderListRequest) GetBuyerNick() string {
	if x != nil {
		return x.BuyerNick
	}
	return ""
}

func (x *CtmOrderListRequest) GetBuyerMobile() string {
	if x != nil && x.BuyerMobile != nil {
		return *x.BuyerMobile
	}
	return ""
}

func (x *CtmOrderListRequest) GetBuyerMessage() string {
	if x != nil && x.BuyerMessage != nil {
		return *x.BuyerMessage
	}
	return ""
}

func (x *CtmOrderListRequest) GetSellerMemo() string {
	if x != nil && x.SellerMemo != nil {
		return *x.SellerMemo
	}
	return ""
}

func (x *CtmOrderListRequest) GetReceiverName() string {
	if x != nil && x.ReceiverName != nil {
		return *x.ReceiverName
	}
	return ""
}

func (x *CtmOrderListRequest) GetReceiverProvince() string {
	if x != nil && x.ReceiverProvince != nil {
		return *x.ReceiverProvince
	}
	return ""
}

func (x *CtmOrderListRequest) GetReceiverCity() string {
	if x != nil && x.ReceiverCity != nil {
		return *x.ReceiverCity
	}
	return ""
}

func (x *CtmOrderListRequest) GetReceiverDistrict() string {
	if x != nil && x.ReceiverDistrict != nil {
		return *x.ReceiverDistrict
	}
	return ""
}

func (x *CtmOrderListRequest) GetReceiverAddress() string {
	if x != nil && x.ReceiverAddress != nil {
		return *x.ReceiverAddress
	}
	return ""
}

func (x *CtmOrderListRequest) GetReceiverMobile() string {
	if x != nil && x.ReceiverMobile != nil {
		return *x.ReceiverMobile
	}
	return ""
}

func (x *CtmOrderListRequest) GetPostAmount() float64 {
	if x != nil {
		return x.PostAmount
	}
	return 0
}

func (x *CtmOrderListRequest) GetOtherAmount() float64 {
	if x != nil {
		return x.OtherAmount
	}
	return 0
}

func (x *CtmOrderListRequest) GetCodAmount() float64 {
	if x != nil {
		return x.CodAmount
	}
	return 0
}

func (x *CtmOrderListRequest) GetExtCodFee() float64 {
	if x != nil {
		return x.ExtCodFee
	}
	return 0
}

func (x *CtmOrderListRequest) GetPaid() float64 {
	if x != nil {
		return x.Paid
	}
	return 0
}

func (x *CtmOrderListRequest) GetInvoiceStatus() int32 {
	if x != nil {
		return x.InvoiceStatus
	}
	return 0
}

func (x *CtmOrderListRequest) GetReceivable() float64 {
	if x != nil {
		return x.Receivable
	}
	return 0
}

func (x *CtmOrderListRequest) GetDiscount() float64 {
	if x != nil {
		return x.Discount
	}
	return 0
}

func (x *CtmOrderListRequest) GetCtm() int64 {
	if x != nil && x.Ctm != nil {
		return *x.Ctm
	}
	return 0
}

func (x *CtmOrderListRequest) GetRefundOrder() int64 {
	if x != nil && x.RefundOrder != nil {
		return *x.RefundOrder
	}
	return 0
}

func (x *CtmOrderListRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *CtmOrderListRequest) GetDebitPay() float64 {
	if x != nil {
		return x.DebitPay
	}
	return 0
}

func (x *CtmOrderListRequest) GetGiftPay() float64 {
	if x != nil {
		return x.GiftPay
	}
	return 0
}

func (x *CtmOrderListRequest) GetScorePay() int32 {
	if x != nil {
		return x.ScorePay
	}
	return 0
}

func (x *CtmOrderListRequest) GetBadgePay() int32 {
	if x != nil {
		return x.BadgePay
	}
	return 0
}

func (x *CtmOrderListRequest) GetNutPay() int32 {
	if x != nil {
		return x.NutPay
	}
	return 0
}

func (x *CtmOrderListRequest) GetDebitCard() int64 {
	if x != nil && x.DebitCard != nil {
		return *x.DebitCard
	}
	return 0
}

func (x *CtmOrderListRequest) GetScoreCard() int64 {
	if x != nil && x.ScoreCard != nil {
		return *x.ScoreCard
	}
	return 0
}

func (x *CtmOrderListRequest) GetBadgeCard() int64 {
	if x != nil && x.BadgeCard != nil {
		return *x.BadgeCard
	}
	return 0
}

func (x *CtmOrderListRequest) GetNutCard() int64 {
	if x != nil && x.NutCard != nil {
		return *x.NutCard
	}
	return 0
}

func (x *CtmOrderListRequest) GetGiftCards() []int64 {
	if x != nil {
		return x.GiftCards
	}
	return nil
}

func (x *CtmOrderListRequest) GetGoodsList() []*CtmOrderGoodsDetailRequest {
	if x != nil {
		return x.GoodsList
	}
	return nil
}

func (x *CtmOrderListRequest) GetCancelReasons() []*CtmRefundReasonRequest {
	if x != nil {
		return x.CancelReasons
	}
	return nil
}

func (x *CtmOrderListRequest) GetCreateType() int32 {
	if x != nil {
		return x.CreateType
	}
	return 0
}

func (x *CtmOrderListRequest) GetCouponList() []*CtmOrderPromotionRequest {
	if x != nil {
		return x.CouponList
	}
	return nil
}

func (x *CtmOrderListRequest) GetOrderPay() []*CtmOrderPayRequest {
	if x != nil {
		return x.OrderPay
	}
	return nil
}

func (x *CtmOrderListRequest) GetOrderInvoice() []*CtmOrderInvoiceRequest {
	if x != nil {
		return x.OrderInvoice
	}
	return nil
}

type CtmOrderListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*CtmOrderResponse `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Count   int32               `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *CtmOrderListResponse) Reset() {
	*x = CtmOrderListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmOrderListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmOrderListResponse) ProtoMessage() {}

func (x *CtmOrderListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmOrderListResponse.ProtoReflect.Descriptor instead.
func (*CtmOrderListResponse) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{44}
}

func (x *CtmOrderListResponse) GetResults() []*CtmOrderResponse {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *CtmOrderListResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type CtmOrderNextTidResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NextTid string `protobuf:"bytes,1,opt,name=next_tid,json=nextTid,proto3" json:"next_tid,omitempty"`
}

func (x *CtmOrderNextTidResponse) Reset() {
	*x = CtmOrderNextTidResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmOrderNextTidResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmOrderNextTidResponse) ProtoMessage() {}

func (x *CtmOrderNextTidResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmOrderNextTidResponse.ProtoReflect.Descriptor instead.
func (*CtmOrderNextTidResponse) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{45}
}

func (x *CtmOrderNextTidResponse) GetNextTid() string {
	if x != nil {
		return x.NextTid
	}
	return ""
}

type CtmOrderOptionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TradeType     []*LabelValueResponse `protobuf:"bytes,2,rep,name=trade_type,json=tradeType,proto3" json:"trade_type,omitempty"`
	TradeStatus   []*LabelValueResponse `protobuf:"bytes,3,rep,name=trade_status,json=tradeStatus,proto3" json:"trade_status,omitempty"`
	PayStatus     []*LabelValueResponse `protobuf:"bytes,4,rep,name=pay_status,json=payStatus,proto3" json:"pay_status,omitempty"`
	DeliveryTerm  []*LabelValueResponse `protobuf:"bytes,5,rep,name=delivery_term,json=deliveryTerm,proto3" json:"delivery_term,omitempty"`
	InvoiceStatus []*LabelValueResponse `protobuf:"bytes,6,rep,name=invoice_status,json=invoiceStatus,proto3" json:"invoice_status,omitempty"`
	CancelReasons []*LabelValueResponse `protobuf:"bytes,7,rep,name=cancel_reasons,json=cancelReasons,proto3" json:"cancel_reasons,omitempty"`
	CreateType    []*LabelValueResponse `protobuf:"bytes,8,rep,name=create_type,json=createType,proto3" json:"create_type,omitempty"`
}

func (x *CtmOrderOptionsResponse) Reset() {
	*x = CtmOrderOptionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmOrderOptionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmOrderOptionsResponse) ProtoMessage() {}

func (x *CtmOrderOptionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmOrderOptionsResponse.ProtoReflect.Descriptor instead.
func (*CtmOrderOptionsResponse) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{46}
}

func (x *CtmOrderOptionsResponse) GetTradeType() []*LabelValueResponse {
	if x != nil {
		return x.TradeType
	}
	return nil
}

func (x *CtmOrderOptionsResponse) GetTradeStatus() []*LabelValueResponse {
	if x != nil {
		return x.TradeStatus
	}
	return nil
}

func (x *CtmOrderOptionsResponse) GetPayStatus() []*LabelValueResponse {
	if x != nil {
		return x.PayStatus
	}
	return nil
}

func (x *CtmOrderOptionsResponse) GetDeliveryTerm() []*LabelValueResponse {
	if x != nil {
		return x.DeliveryTerm
	}
	return nil
}

func (x *CtmOrderOptionsResponse) GetInvoiceStatus() []*LabelValueResponse {
	if x != nil {
		return x.InvoiceStatus
	}
	return nil
}

func (x *CtmOrderOptionsResponse) GetCancelReasons() []*LabelValueResponse {
	if x != nil {
		return x.CancelReasons
	}
	return nil
}

func (x *CtmOrderOptionsResponse) GetCreateType() []*LabelValueResponse {
	if x != nil {
		return x.CreateType
	}
	return nil
}

type CtmOrderPartialUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   int32                         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XPartialUpdateFields []string                      `protobuf:"bytes,2,rep,name=_partial_update_fields,json=PartialUpdateFields,proto3" json:"_partial_update_fields,omitempty"`
	TradeType            int32                         `protobuf:"varint,3,opt,name=trade_type,json=tradeType,proto3" json:"trade_type,omitempty"`
	ShopNo               string                        `protobuf:"bytes,4,opt,name=shop_no,json=shopNo,proto3" json:"shop_no,omitempty"`
	ShopName             string                        `protobuf:"bytes,5,opt,name=shop_name,json=shopName,proto3" json:"shop_name,omitempty"`
	WarehouseNo          string                        `protobuf:"bytes,6,opt,name=warehouse_no,json=warehouseNo,proto3" json:"warehouse_no,omitempty"`
	WarehouseName        string                        `protobuf:"bytes,7,opt,name=warehouse_name,json=warehouseName,proto3" json:"warehouse_name,omitempty"`
	Tid                  string                        `protobuf:"bytes,8,opt,name=tid,proto3" json:"tid,omitempty"`
	TradeStatus          int32                         `protobuf:"varint,9,opt,name=trade_status,json=tradeStatus,proto3" json:"trade_status,omitempty"`
	PayStatus            int32                         `protobuf:"varint,10,opt,name=pay_status,json=payStatus,proto3" json:"pay_status,omitempty"`
	PayTime              *string                       `protobuf:"bytes,11,opt,name=pay_time,json=payTime,proto3,oneof" json:"pay_time,omitempty"`
	DeliveryTerm         int32                         `protobuf:"varint,12,opt,name=delivery_term,json=deliveryTerm,proto3" json:"delivery_term,omitempty"`
	BuyerNick            string                        `protobuf:"bytes,13,opt,name=buyer_nick,json=buyerNick,proto3" json:"buyer_nick,omitempty"`
	BuyerMobile          *string                       `protobuf:"bytes,14,opt,name=buyer_mobile,json=buyerMobile,proto3,oneof" json:"buyer_mobile,omitempty"`
	BuyerMessage         *string                       `protobuf:"bytes,15,opt,name=buyer_message,json=buyerMessage,proto3,oneof" json:"buyer_message,omitempty"`
	SellerMemo           *string                       `protobuf:"bytes,16,opt,name=seller_memo,json=sellerMemo,proto3,oneof" json:"seller_memo,omitempty"`
	ReceiverName         *string                       `protobuf:"bytes,17,opt,name=receiver_name,json=receiverName,proto3,oneof" json:"receiver_name,omitempty"`
	ReceiverProvince     *string                       `protobuf:"bytes,18,opt,name=receiver_province,json=receiverProvince,proto3,oneof" json:"receiver_province,omitempty"`
	ReceiverCity         *string                       `protobuf:"bytes,19,opt,name=receiver_city,json=receiverCity,proto3,oneof" json:"receiver_city,omitempty"`
	ReceiverDistrict     *string                       `protobuf:"bytes,20,opt,name=receiver_district,json=receiverDistrict,proto3,oneof" json:"receiver_district,omitempty"`
	ReceiverAddress      *string                       `protobuf:"bytes,21,opt,name=receiver_address,json=receiverAddress,proto3,oneof" json:"receiver_address,omitempty"`
	ReceiverMobile       *string                       `protobuf:"bytes,22,opt,name=receiver_mobile,json=receiverMobile,proto3,oneof" json:"receiver_mobile,omitempty"`
	PostAmount           float64                       `protobuf:"fixed64,23,opt,name=post_amount,json=postAmount,proto3" json:"post_amount,omitempty"`
	OtherAmount          float64                       `protobuf:"fixed64,24,opt,name=other_amount,json=otherAmount,proto3" json:"other_amount,omitempty"`
	CodAmount            float64                       `protobuf:"fixed64,25,opt,name=cod_amount,json=codAmount,proto3" json:"cod_amount,omitempty"`
	ExtCodFee            float64                       `protobuf:"fixed64,26,opt,name=ext_cod_fee,json=extCodFee,proto3" json:"ext_cod_fee,omitempty"`
	Paid                 float64                       `protobuf:"fixed64,27,opt,name=paid,proto3" json:"paid,omitempty"`
	InvoiceStatus        int32                         `protobuf:"varint,28,opt,name=invoice_status,json=invoiceStatus,proto3" json:"invoice_status,omitempty"`
	Receivable           float64                       `protobuf:"fixed64,29,opt,name=receivable,proto3" json:"receivable,omitempty"`
	Discount             float64                       `protobuf:"fixed64,30,opt,name=discount,proto3" json:"discount,omitempty"`
	Ctm                  *int64                        `protobuf:"varint,36,opt,name=ctm,proto3,oneof" json:"ctm,omitempty"`
	RefundOrder          *int64                        `protobuf:"varint,37,opt,name=refund_order,json=refundOrder,proto3,oneof" json:"refund_order,omitempty"`
	Filters              string                        `protobuf:"bytes,38,opt,name=filters,proto3" json:"filters,omitempty"`
	DebitPay             float64                       `protobuf:"fixed64,39,opt,name=debit_pay,json=debitPay,proto3" json:"debit_pay,omitempty"`
	GiftPay              float64                       `protobuf:"fixed64,40,opt,name=gift_pay,json=giftPay,proto3" json:"gift_pay,omitempty"`
	ScorePay             int32                         `protobuf:"varint,41,opt,name=score_pay,json=scorePay,proto3" json:"score_pay,omitempty"`
	BadgePay             int32                         `protobuf:"varint,42,opt,name=badge_pay,json=badgePay,proto3" json:"badge_pay,omitempty"`
	NutPay               int32                         `protobuf:"varint,43,opt,name=nut_pay,json=nutPay,proto3" json:"nut_pay,omitempty"`
	DebitCard            *int64                        `protobuf:"varint,44,opt,name=debit_card,json=debitCard,proto3,oneof" json:"debit_card,omitempty"`
	ScoreCard            *int64                        `protobuf:"varint,45,opt,name=score_card,json=scoreCard,proto3,oneof" json:"score_card,omitempty"`
	BadgeCard            *int64                        `protobuf:"varint,46,opt,name=badge_card,json=badgeCard,proto3,oneof" json:"badge_card,omitempty"`
	NutCard              *int64                        `protobuf:"varint,47,opt,name=nut_card,json=nutCard,proto3,oneof" json:"nut_card,omitempty"`
	GiftCards            []int64                       `protobuf:"varint,48,rep,packed,name=gift_cards,json=giftCards,proto3" json:"gift_cards,omitempty"`
	GoodsList            []*CtmOrderGoodsDetailRequest `protobuf:"bytes,49,rep,name=goods_list,json=goodsList,proto3" json:"goods_list,omitempty"`
	CancelReasons        []*CtmRefundReasonRequest     `protobuf:"bytes,50,rep,name=cancel_reasons,json=cancelReasons,proto3" json:"cancel_reasons,omitempty"`
	CreateType           int32                         `protobuf:"varint,51,opt,name=Create_type,json=CreateType,proto3" json:"Create_type,omitempty"`
	CouponList           []*CtmOrderPromotionRequest   `protobuf:"bytes,52,rep,name=coupon_list,json=couponList,proto3" json:"coupon_list,omitempty"`
	OrderPay             []*CtmOrderPayRequest         `protobuf:"bytes,53,rep,name=order_pay,json=orderPay,proto3" json:"order_pay,omitempty"`
	OrderInvoice         []*CtmOrderInvoiceRequest     `protobuf:"bytes,54,rep,name=order_invoice,json=orderInvoice,proto3" json:"order_invoice,omitempty"`
}

func (x *CtmOrderPartialUpdateRequest) Reset() {
	*x = CtmOrderPartialUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmOrderPartialUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmOrderPartialUpdateRequest) ProtoMessage() {}

func (x *CtmOrderPartialUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmOrderPartialUpdateRequest.ProtoReflect.Descriptor instead.
func (*CtmOrderPartialUpdateRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{47}
}

func (x *CtmOrderPartialUpdateRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CtmOrderPartialUpdateRequest) GetXPartialUpdateFields() []string {
	if x != nil {
		return x.XPartialUpdateFields
	}
	return nil
}

func (x *CtmOrderPartialUpdateRequest) GetTradeType() int32 {
	if x != nil {
		return x.TradeType
	}
	return 0
}

func (x *CtmOrderPartialUpdateRequest) GetShopNo() string {
	if x != nil {
		return x.ShopNo
	}
	return ""
}

func (x *CtmOrderPartialUpdateRequest) GetShopName() string {
	if x != nil {
		return x.ShopName
	}
	return ""
}

func (x *CtmOrderPartialUpdateRequest) GetWarehouseNo() string {
	if x != nil {
		return x.WarehouseNo
	}
	return ""
}

func (x *CtmOrderPartialUpdateRequest) GetWarehouseName() string {
	if x != nil {
		return x.WarehouseName
	}
	return ""
}

func (x *CtmOrderPartialUpdateRequest) GetTid() string {
	if x != nil {
		return x.Tid
	}
	return ""
}

func (x *CtmOrderPartialUpdateRequest) GetTradeStatus() int32 {
	if x != nil {
		return x.TradeStatus
	}
	return 0
}

func (x *CtmOrderPartialUpdateRequest) GetPayStatus() int32 {
	if x != nil {
		return x.PayStatus
	}
	return 0
}

func (x *CtmOrderPartialUpdateRequest) GetPayTime() string {
	if x != nil && x.PayTime != nil {
		return *x.PayTime
	}
	return ""
}

func (x *CtmOrderPartialUpdateRequest) GetDeliveryTerm() int32 {
	if x != nil {
		return x.DeliveryTerm
	}
	return 0
}

func (x *CtmOrderPartialUpdateRequest) GetBuyerNick() string {
	if x != nil {
		return x.BuyerNick
	}
	return ""
}

func (x *CtmOrderPartialUpdateRequest) GetBuyerMobile() string {
	if x != nil && x.BuyerMobile != nil {
		return *x.BuyerMobile
	}
	return ""
}

func (x *CtmOrderPartialUpdateRequest) GetBuyerMessage() string {
	if x != nil && x.BuyerMessage != nil {
		return *x.BuyerMessage
	}
	return ""
}

func (x *CtmOrderPartialUpdateRequest) GetSellerMemo() string {
	if x != nil && x.SellerMemo != nil {
		return *x.SellerMemo
	}
	return ""
}

func (x *CtmOrderPartialUpdateRequest) GetReceiverName() string {
	if x != nil && x.ReceiverName != nil {
		return *x.ReceiverName
	}
	return ""
}

func (x *CtmOrderPartialUpdateRequest) GetReceiverProvince() string {
	if x != nil && x.ReceiverProvince != nil {
		return *x.ReceiverProvince
	}
	return ""
}

func (x *CtmOrderPartialUpdateRequest) GetReceiverCity() string {
	if x != nil && x.ReceiverCity != nil {
		return *x.ReceiverCity
	}
	return ""
}

func (x *CtmOrderPartialUpdateRequest) GetReceiverDistrict() string {
	if x != nil && x.ReceiverDistrict != nil {
		return *x.ReceiverDistrict
	}
	return ""
}

func (x *CtmOrderPartialUpdateRequest) GetReceiverAddress() string {
	if x != nil && x.ReceiverAddress != nil {
		return *x.ReceiverAddress
	}
	return ""
}

func (x *CtmOrderPartialUpdateRequest) GetReceiverMobile() string {
	if x != nil && x.ReceiverMobile != nil {
		return *x.ReceiverMobile
	}
	return ""
}

func (x *CtmOrderPartialUpdateRequest) GetPostAmount() float64 {
	if x != nil {
		return x.PostAmount
	}
	return 0
}

func (x *CtmOrderPartialUpdateRequest) GetOtherAmount() float64 {
	if x != nil {
		return x.OtherAmount
	}
	return 0
}

func (x *CtmOrderPartialUpdateRequest) GetCodAmount() float64 {
	if x != nil {
		return x.CodAmount
	}
	return 0
}

func (x *CtmOrderPartialUpdateRequest) GetExtCodFee() float64 {
	if x != nil {
		return x.ExtCodFee
	}
	return 0
}

func (x *CtmOrderPartialUpdateRequest) GetPaid() float64 {
	if x != nil {
		return x.Paid
	}
	return 0
}

func (x *CtmOrderPartialUpdateRequest) GetInvoiceStatus() int32 {
	if x != nil {
		return x.InvoiceStatus
	}
	return 0
}

func (x *CtmOrderPartialUpdateRequest) GetReceivable() float64 {
	if x != nil {
		return x.Receivable
	}
	return 0
}

func (x *CtmOrderPartialUpdateRequest) GetDiscount() float64 {
	if x != nil {
		return x.Discount
	}
	return 0
}

func (x *CtmOrderPartialUpdateRequest) GetCtm() int64 {
	if x != nil && x.Ctm != nil {
		return *x.Ctm
	}
	return 0
}

func (x *CtmOrderPartialUpdateRequest) GetRefundOrder() int64 {
	if x != nil && x.RefundOrder != nil {
		return *x.RefundOrder
	}
	return 0
}

func (x *CtmOrderPartialUpdateRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *CtmOrderPartialUpdateRequest) GetDebitPay() float64 {
	if x != nil {
		return x.DebitPay
	}
	return 0
}

func (x *CtmOrderPartialUpdateRequest) GetGiftPay() float64 {
	if x != nil {
		return x.GiftPay
	}
	return 0
}

func (x *CtmOrderPartialUpdateRequest) GetScorePay() int32 {
	if x != nil {
		return x.ScorePay
	}
	return 0
}

func (x *CtmOrderPartialUpdateRequest) GetBadgePay() int32 {
	if x != nil {
		return x.BadgePay
	}
	return 0
}

func (x *CtmOrderPartialUpdateRequest) GetNutPay() int32 {
	if x != nil {
		return x.NutPay
	}
	return 0
}

func (x *CtmOrderPartialUpdateRequest) GetDebitCard() int64 {
	if x != nil && x.DebitCard != nil {
		return *x.DebitCard
	}
	return 0
}

func (x *CtmOrderPartialUpdateRequest) GetScoreCard() int64 {
	if x != nil && x.ScoreCard != nil {
		return *x.ScoreCard
	}
	return 0
}

func (x *CtmOrderPartialUpdateRequest) GetBadgeCard() int64 {
	if x != nil && x.BadgeCard != nil {
		return *x.BadgeCard
	}
	return 0
}

func (x *CtmOrderPartialUpdateRequest) GetNutCard() int64 {
	if x != nil && x.NutCard != nil {
		return *x.NutCard
	}
	return 0
}

func (x *CtmOrderPartialUpdateRequest) GetGiftCards() []int64 {
	if x != nil {
		return x.GiftCards
	}
	return nil
}

func (x *CtmOrderPartialUpdateRequest) GetGoodsList() []*CtmOrderGoodsDetailRequest {
	if x != nil {
		return x.GoodsList
	}
	return nil
}

func (x *CtmOrderPartialUpdateRequest) GetCancelReasons() []*CtmRefundReasonRequest {
	if x != nil {
		return x.CancelReasons
	}
	return nil
}

func (x *CtmOrderPartialUpdateRequest) GetCreateType() int32 {
	if x != nil {
		return x.CreateType
	}
	return 0
}

func (x *CtmOrderPartialUpdateRequest) GetCouponList() []*CtmOrderPromotionRequest {
	if x != nil {
		return x.CouponList
	}
	return nil
}

func (x *CtmOrderPartialUpdateRequest) GetOrderPay() []*CtmOrderPayRequest {
	if x != nil {
		return x.OrderPay
	}
	return nil
}

func (x *CtmOrderPartialUpdateRequest) GetOrderInvoice() []*CtmOrderInvoiceRequest {
	if x != nil {
		return x.OrderInvoice
	}
	return nil
}

type CtmOrderPayDetailCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Filters        string  `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
	PrepayId       string  `protobuf:"bytes,3,opt,name=prepay_id,json=prepayId,proto3" json:"prepay_id,omitempty"`
	PrepayExpired  string  `protobuf:"bytes,4,opt,name=prepay_expired,json=prepayExpired,proto3" json:"prepay_expired,omitempty"`
	TradeType      *string `protobuf:"bytes,5,opt,name=trade_type,json=tradeType,proto3,oneof" json:"trade_type,omitempty"`
	TransactionId  *string `protobuf:"bytes,6,opt,name=transaction_id,json=transactionId,proto3,oneof" json:"transaction_id,omitempty"`
	TradeState     *string `protobuf:"bytes,7,opt,name=trade_state,json=tradeState,proto3,oneof" json:"trade_state,omitempty"`
	TradeStateDesc *string `protobuf:"bytes,8,opt,name=trade_state_desc,json=tradeStateDesc,proto3,oneof" json:"trade_state_desc,omitempty"`
	PayId          string  `protobuf:"bytes,9,opt,name=pay_id,json=payId,proto3" json:"pay_id,omitempty"`
	PayAccount     string  `protobuf:"bytes,10,opt,name=pay_account,json=payAccount,proto3" json:"pay_account,omitempty"`
	BankType       *string `protobuf:"bytes,11,opt,name=bank_type,json=bankType,proto3,oneof" json:"bank_type,omitempty"`
	SuccessTime    *string `protobuf:"bytes,12,opt,name=success_time,json=successTime,proto3,oneof" json:"success_time,omitempty"`
	CtmOrder       *int64  `protobuf:"varint,13,opt,name=ctm_order,json=ctmOrder,proto3,oneof" json:"ctm_order,omitempty"`
	CtmRefund      *int64  `protobuf:"varint,14,opt,name=ctm_refund,json=ctmRefund,proto3,oneof" json:"ctm_refund,omitempty"`
}

func (x *CtmOrderPayDetailCreateRequest) Reset() {
	*x = CtmOrderPayDetailCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmOrderPayDetailCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmOrderPayDetailCreateRequest) ProtoMessage() {}

func (x *CtmOrderPayDetailCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmOrderPayDetailCreateRequest.ProtoReflect.Descriptor instead.
func (*CtmOrderPayDetailCreateRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{48}
}

func (x *CtmOrderPayDetailCreateRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CtmOrderPayDetailCreateRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *CtmOrderPayDetailCreateRequest) GetPrepayId() string {
	if x != nil {
		return x.PrepayId
	}
	return ""
}

func (x *CtmOrderPayDetailCreateRequest) GetPrepayExpired() string {
	if x != nil {
		return x.PrepayExpired
	}
	return ""
}

func (x *CtmOrderPayDetailCreateRequest) GetTradeType() string {
	if x != nil && x.TradeType != nil {
		return *x.TradeType
	}
	return ""
}

func (x *CtmOrderPayDetailCreateRequest) GetTransactionId() string {
	if x != nil && x.TransactionId != nil {
		return *x.TransactionId
	}
	return ""
}

func (x *CtmOrderPayDetailCreateRequest) GetTradeState() string {
	if x != nil && x.TradeState != nil {
		return *x.TradeState
	}
	return ""
}

func (x *CtmOrderPayDetailCreateRequest) GetTradeStateDesc() string {
	if x != nil && x.TradeStateDesc != nil {
		return *x.TradeStateDesc
	}
	return ""
}

func (x *CtmOrderPayDetailCreateRequest) GetPayId() string {
	if x != nil {
		return x.PayId
	}
	return ""
}

func (x *CtmOrderPayDetailCreateRequest) GetPayAccount() string {
	if x != nil {
		return x.PayAccount
	}
	return ""
}

func (x *CtmOrderPayDetailCreateRequest) GetBankType() string {
	if x != nil && x.BankType != nil {
		return *x.BankType
	}
	return ""
}

func (x *CtmOrderPayDetailCreateRequest) GetSuccessTime() string {
	if x != nil && x.SuccessTime != nil {
		return *x.SuccessTime
	}
	return ""
}

func (x *CtmOrderPayDetailCreateRequest) GetCtmOrder() int64 {
	if x != nil && x.CtmOrder != nil {
		return *x.CtmOrder
	}
	return 0
}

func (x *CtmOrderPayDetailCreateRequest) GetCtmRefund() int64 {
	if x != nil && x.CtmRefund != nil {
		return *x.CtmRefund
	}
	return 0
}

type CtmOrderPayDetailDestroyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CtmOrderPayDetailDestroyRequest) Reset() {
	*x = CtmOrderPayDetailDestroyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmOrderPayDetailDestroyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmOrderPayDetailDestroyRequest) ProtoMessage() {}

func (x *CtmOrderPayDetailDestroyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmOrderPayDetailDestroyRequest.ProtoReflect.Descriptor instead.
func (*CtmOrderPayDetailDestroyRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{49}
}

func (x *CtmOrderPayDetailDestroyRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CtmOrderPayDetailListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters string `protobuf:"bytes,1,opt,name=filters,proto3" json:"filters,omitempty"`
}

func (x *CtmOrderPayDetailListRequest) Reset() {
	*x = CtmOrderPayDetailListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmOrderPayDetailListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmOrderPayDetailListRequest) ProtoMessage() {}

func (x *CtmOrderPayDetailListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmOrderPayDetailListRequest.ProtoReflect.Descriptor instead.
func (*CtmOrderPayDetailListRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{50}
}

func (x *CtmOrderPayDetailListRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

type CtmOrderPayDetailRetrieveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CtmOrderPayDetailRetrieveRequest) Reset() {
	*x = CtmOrderPayDetailRetrieveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmOrderPayDetailRetrieveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmOrderPayDetailRetrieveRequest) ProtoMessage() {}

func (x *CtmOrderPayDetailRetrieveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmOrderPayDetailRetrieveRequest.ProtoReflect.Descriptor instead.
func (*CtmOrderPayDetailRetrieveRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{51}
}

func (x *CtmOrderPayDetailRetrieveRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CtmOrderPayDetailUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   int32                         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Filters              string                        `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
	GoodsList            []*CtmOrderGoodsDetailRequest `protobuf:"bytes,3,rep,name=goods_list,json=goodsList,proto3" json:"goods_list,omitempty"`
	CancelReasons        []*CtmRefundReasonRequest     `protobuf:"bytes,4,rep,name=cancel_reasons,json=cancelReasons,proto3" json:"cancel_reasons,omitempty"`
	XPartialUpdateFields []string                      `protobuf:"bytes,5,rep,name=_partial_update_fields,json=PartialUpdateFields,proto3" json:"_partial_update_fields,omitempty"`
	TradeType            int32                         `protobuf:"varint,6,opt,name=trade_type,json=tradeType,proto3" json:"trade_type,omitempty"`
	CreateType           int32                         `protobuf:"varint,7,opt,name=Create_type,json=CreateType,proto3" json:"Create_type,omitempty"`
	ShopNo               string                        `protobuf:"bytes,8,opt,name=shop_no,json=shopNo,proto3" json:"shop_no,omitempty"`
	ShopName             string                        `protobuf:"bytes,9,opt,name=shop_name,json=shopName,proto3" json:"shop_name,omitempty"`
	WarehouseNo          string                        `protobuf:"bytes,10,opt,name=warehouse_no,json=warehouseNo,proto3" json:"warehouse_no,omitempty"`
	WarehouseName        string                        `protobuf:"bytes,11,opt,name=warehouse_name,json=warehouseName,proto3" json:"warehouse_name,omitempty"`
	Tid                  string                        `protobuf:"bytes,12,opt,name=tid,proto3" json:"tid,omitempty"`
	TradeStatus          int32                         `protobuf:"varint,13,opt,name=trade_status,json=tradeStatus,proto3" json:"trade_status,omitempty"`
	PayStatus            int32                         `protobuf:"varint,14,opt,name=pay_status,json=payStatus,proto3" json:"pay_status,omitempty"`
	PayTime              *string                       `protobuf:"bytes,15,opt,name=pay_time,json=payTime,proto3,oneof" json:"pay_time,omitempty"`
	DeliveryTerm         int32                         `protobuf:"varint,16,opt,name=delivery_term,json=deliveryTerm,proto3" json:"delivery_term,omitempty"`
	BuyerNick            string                        `protobuf:"bytes,17,opt,name=buyer_nick,json=buyerNick,proto3" json:"buyer_nick,omitempty"`
	BuyerMobile          *string                       `protobuf:"bytes,18,opt,name=buyer_mobile,json=buyerMobile,proto3,oneof" json:"buyer_mobile,omitempty"`
	BuyerMessage         *string                       `protobuf:"bytes,19,opt,name=buyer_message,json=buyerMessage,proto3,oneof" json:"buyer_message,omitempty"`
	SellerMemo           *string                       `protobuf:"bytes,20,opt,name=seller_memo,json=sellerMemo,proto3,oneof" json:"seller_memo,omitempty"`
	ReceiverName         *string                       `protobuf:"bytes,21,opt,name=receiver_name,json=receiverName,proto3,oneof" json:"receiver_name,omitempty"`
	ReceiverProvince     *string                       `protobuf:"bytes,22,opt,name=receiver_province,json=receiverProvince,proto3,oneof" json:"receiver_province,omitempty"`
	ReceiverCity         *string                       `protobuf:"bytes,23,opt,name=receiver_city,json=receiverCity,proto3,oneof" json:"receiver_city,omitempty"`
	ReceiverDistrict     *string                       `protobuf:"bytes,24,opt,name=receiver_district,json=receiverDistrict,proto3,oneof" json:"receiver_district,omitempty"`
	ReceiverAddress      *string                       `protobuf:"bytes,25,opt,name=receiver_address,json=receiverAddress,proto3,oneof" json:"receiver_address,omitempty"`
	ReceiverMobile       *string                       `protobuf:"bytes,26,opt,name=receiver_mobile,json=receiverMobile,proto3,oneof" json:"receiver_mobile,omitempty"`
	PostAmount           float64                       `protobuf:"fixed64,27,opt,name=post_amount,json=postAmount,proto3" json:"post_amount,omitempty"`
	OtherAmount          float64                       `protobuf:"fixed64,28,opt,name=other_amount,json=otherAmount,proto3" json:"other_amount,omitempty"`
	CodAmount            float64                       `protobuf:"fixed64,29,opt,name=cod_amount,json=codAmount,proto3" json:"cod_amount,omitempty"`
	ExtCodFee            float64                       `protobuf:"fixed64,30,opt,name=ext_cod_fee,json=extCodFee,proto3" json:"ext_cod_fee,omitempty"`
	Paid                 float64                       `protobuf:"fixed64,31,opt,name=paid,proto3" json:"paid,omitempty"`
	InvoiceStatus        int32                         `protobuf:"varint,32,opt,name=invoice_status,json=invoiceStatus,proto3" json:"invoice_status,omitempty"`
	Receivable           float64                       `protobuf:"fixed64,33,opt,name=receivable,proto3" json:"receivable,omitempty"`
	Discount             float64                       `protobuf:"fixed64,34,opt,name=discount,proto3" json:"discount,omitempty"`
	DebitPay             float64                       `protobuf:"fixed64,35,opt,name=debit_pay,json=debitPay,proto3" json:"debit_pay,omitempty"`
	GiftPay              float64                       `protobuf:"fixed64,36,opt,name=gift_pay,json=giftPay,proto3" json:"gift_pay,omitempty"`
	ScorePay             int32                         `protobuf:"varint,37,opt,name=score_pay,json=scorePay,proto3" json:"score_pay,omitempty"`
	BadgePay             int32                         `protobuf:"varint,38,opt,name=badge_pay,json=badgePay,proto3" json:"badge_pay,omitempty"`
	NutPay               int32                         `protobuf:"varint,39,opt,name=nut_pay,json=nutPay,proto3" json:"nut_pay,omitempty"`
	Ctm                  *int64                        `protobuf:"varint,40,opt,name=ctm,proto3,oneof" json:"ctm,omitempty"`
	RefundOrder          *int64                        `protobuf:"varint,41,opt,name=refund_order,json=refundOrder,proto3,oneof" json:"refund_order,omitempty"`
	DebitCard            *int64                        `protobuf:"varint,42,opt,name=debit_card,json=debitCard,proto3,oneof" json:"debit_card,omitempty"`
	ScoreCard            *int64                        `protobuf:"varint,43,opt,name=score_card,json=scoreCard,proto3,oneof" json:"score_card,omitempty"`
	BadgeCard            *int64                        `protobuf:"varint,44,opt,name=badge_card,json=badgeCard,proto3,oneof" json:"badge_card,omitempty"`
	NutCard              *int64                        `protobuf:"varint,45,opt,name=nut_card,json=nutCard,proto3,oneof" json:"nut_card,omitempty"`
	GiftCards            []int64                       `protobuf:"varint,46,rep,packed,name=gift_cards,json=giftCards,proto3" json:"gift_cards,omitempty"`
	CouponList           []*CtmOrderPromotionRequest   `protobuf:"bytes,47,rep,name=coupon_list,json=couponList,proto3" json:"coupon_list,omitempty"`
	OrderPay             []*CtmOrderPayRequest         `protobuf:"bytes,48,rep,name=order_pay,json=orderPay,proto3" json:"order_pay,omitempty"`
	OrderInvoice         []*CtmOrderInvoiceRequest     `protobuf:"bytes,49,rep,name=order_invoice,json=orderInvoice,proto3" json:"order_invoice,omitempty"`
}

func (x *CtmOrderPayDetailUpdateRequest) Reset() {
	*x = CtmOrderPayDetailUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmOrderPayDetailUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmOrderPayDetailUpdateRequest) ProtoMessage() {}

func (x *CtmOrderPayDetailUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmOrderPayDetailUpdateRequest.ProtoReflect.Descriptor instead.
func (*CtmOrderPayDetailUpdateRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{52}
}

func (x *CtmOrderPayDetailUpdateRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CtmOrderPayDetailUpdateRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *CtmOrderPayDetailUpdateRequest) GetGoodsList() []*CtmOrderGoodsDetailRequest {
	if x != nil {
		return x.GoodsList
	}
	return nil
}

func (x *CtmOrderPayDetailUpdateRequest) GetCancelReasons() []*CtmRefundReasonRequest {
	if x != nil {
		return x.CancelReasons
	}
	return nil
}

func (x *CtmOrderPayDetailUpdateRequest) GetXPartialUpdateFields() []string {
	if x != nil {
		return x.XPartialUpdateFields
	}
	return nil
}

func (x *CtmOrderPayDetailUpdateRequest) GetTradeType() int32 {
	if x != nil {
		return x.TradeType
	}
	return 0
}

func (x *CtmOrderPayDetailUpdateRequest) GetCreateType() int32 {
	if x != nil {
		return x.CreateType
	}
	return 0
}

func (x *CtmOrderPayDetailUpdateRequest) GetShopNo() string {
	if x != nil {
		return x.ShopNo
	}
	return ""
}

func (x *CtmOrderPayDetailUpdateRequest) GetShopName() string {
	if x != nil {
		return x.ShopName
	}
	return ""
}

func (x *CtmOrderPayDetailUpdateRequest) GetWarehouseNo() string {
	if x != nil {
		return x.WarehouseNo
	}
	return ""
}

func (x *CtmOrderPayDetailUpdateRequest) GetWarehouseName() string {
	if x != nil {
		return x.WarehouseName
	}
	return ""
}

func (x *CtmOrderPayDetailUpdateRequest) GetTid() string {
	if x != nil {
		return x.Tid
	}
	return ""
}

func (x *CtmOrderPayDetailUpdateRequest) GetTradeStatus() int32 {
	if x != nil {
		return x.TradeStatus
	}
	return 0
}

func (x *CtmOrderPayDetailUpdateRequest) GetPayStatus() int32 {
	if x != nil {
		return x.PayStatus
	}
	return 0
}

func (x *CtmOrderPayDetailUpdateRequest) GetPayTime() string {
	if x != nil && x.PayTime != nil {
		return *x.PayTime
	}
	return ""
}

func (x *CtmOrderPayDetailUpdateRequest) GetDeliveryTerm() int32 {
	if x != nil {
		return x.DeliveryTerm
	}
	return 0
}

func (x *CtmOrderPayDetailUpdateRequest) GetBuyerNick() string {
	if x != nil {
		return x.BuyerNick
	}
	return ""
}

func (x *CtmOrderPayDetailUpdateRequest) GetBuyerMobile() string {
	if x != nil && x.BuyerMobile != nil {
		return *x.BuyerMobile
	}
	return ""
}

func (x *CtmOrderPayDetailUpdateRequest) GetBuyerMessage() string {
	if x != nil && x.BuyerMessage != nil {
		return *x.BuyerMessage
	}
	return ""
}

func (x *CtmOrderPayDetailUpdateRequest) GetSellerMemo() string {
	if x != nil && x.SellerMemo != nil {
		return *x.SellerMemo
	}
	return ""
}

func (x *CtmOrderPayDetailUpdateRequest) GetReceiverName() string {
	if x != nil && x.ReceiverName != nil {
		return *x.ReceiverName
	}
	return ""
}

func (x *CtmOrderPayDetailUpdateRequest) GetReceiverProvince() string {
	if x != nil && x.ReceiverProvince != nil {
		return *x.ReceiverProvince
	}
	return ""
}

func (x *CtmOrderPayDetailUpdateRequest) GetReceiverCity() string {
	if x != nil && x.ReceiverCity != nil {
		return *x.ReceiverCity
	}
	return ""
}

func (x *CtmOrderPayDetailUpdateRequest) GetReceiverDistrict() string {
	if x != nil && x.ReceiverDistrict != nil {
		return *x.ReceiverDistrict
	}
	return ""
}

func (x *CtmOrderPayDetailUpdateRequest) GetReceiverAddress() string {
	if x != nil && x.ReceiverAddress != nil {
		return *x.ReceiverAddress
	}
	return ""
}

func (x *CtmOrderPayDetailUpdateRequest) GetReceiverMobile() string {
	if x != nil && x.ReceiverMobile != nil {
		return *x.ReceiverMobile
	}
	return ""
}

func (x *CtmOrderPayDetailUpdateRequest) GetPostAmount() float64 {
	if x != nil {
		return x.PostAmount
	}
	return 0
}

func (x *CtmOrderPayDetailUpdateRequest) GetOtherAmount() float64 {
	if x != nil {
		return x.OtherAmount
	}
	return 0
}

func (x *CtmOrderPayDetailUpdateRequest) GetCodAmount() float64 {
	if x != nil {
		return x.CodAmount
	}
	return 0
}

func (x *CtmOrderPayDetailUpdateRequest) GetExtCodFee() float64 {
	if x != nil {
		return x.ExtCodFee
	}
	return 0
}

func (x *CtmOrderPayDetailUpdateRequest) GetPaid() float64 {
	if x != nil {
		return x.Paid
	}
	return 0
}

func (x *CtmOrderPayDetailUpdateRequest) GetInvoiceStatus() int32 {
	if x != nil {
		return x.InvoiceStatus
	}
	return 0
}

func (x *CtmOrderPayDetailUpdateRequest) GetReceivable() float64 {
	if x != nil {
		return x.Receivable
	}
	return 0
}

func (x *CtmOrderPayDetailUpdateRequest) GetDiscount() float64 {
	if x != nil {
		return x.Discount
	}
	return 0
}

func (x *CtmOrderPayDetailUpdateRequest) GetDebitPay() float64 {
	if x != nil {
		return x.DebitPay
	}
	return 0
}

func (x *CtmOrderPayDetailUpdateRequest) GetGiftPay() float64 {
	if x != nil {
		return x.GiftPay
	}
	return 0
}

func (x *CtmOrderPayDetailUpdateRequest) GetScorePay() int32 {
	if x != nil {
		return x.ScorePay
	}
	return 0
}

func (x *CtmOrderPayDetailUpdateRequest) GetBadgePay() int32 {
	if x != nil {
		return x.BadgePay
	}
	return 0
}

func (x *CtmOrderPayDetailUpdateRequest) GetNutPay() int32 {
	if x != nil {
		return x.NutPay
	}
	return 0
}

func (x *CtmOrderPayDetailUpdateRequest) GetCtm() int64 {
	if x != nil && x.Ctm != nil {
		return *x.Ctm
	}
	return 0
}

func (x *CtmOrderPayDetailUpdateRequest) GetRefundOrder() int64 {
	if x != nil && x.RefundOrder != nil {
		return *x.RefundOrder
	}
	return 0
}

func (x *CtmOrderPayDetailUpdateRequest) GetDebitCard() int64 {
	if x != nil && x.DebitCard != nil {
		return *x.DebitCard
	}
	return 0
}

func (x *CtmOrderPayDetailUpdateRequest) GetScoreCard() int64 {
	if x != nil && x.ScoreCard != nil {
		return *x.ScoreCard
	}
	return 0
}

func (x *CtmOrderPayDetailUpdateRequest) GetBadgeCard() int64 {
	if x != nil && x.BadgeCard != nil {
		return *x.BadgeCard
	}
	return 0
}

func (x *CtmOrderPayDetailUpdateRequest) GetNutCard() int64 {
	if x != nil && x.NutCard != nil {
		return *x.NutCard
	}
	return 0
}

func (x *CtmOrderPayDetailUpdateRequest) GetGiftCards() []int64 {
	if x != nil {
		return x.GiftCards
	}
	return nil
}

func (x *CtmOrderPayDetailUpdateRequest) GetCouponList() []*CtmOrderPromotionRequest {
	if x != nil {
		return x.CouponList
	}
	return nil
}

func (x *CtmOrderPayDetailUpdateRequest) GetOrderPay() []*CtmOrderPayRequest {
	if x != nil {
		return x.OrderPay
	}
	return nil
}

func (x *CtmOrderPayDetailUpdateRequest) GetOrderInvoice() []*CtmOrderInvoiceRequest {
	if x != nil {
		return x.OrderInvoice
	}
	return nil
}

type CtmOrderPayListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*CtmOrderPayResponse `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Count   int32                  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *CtmOrderPayListResponse) Reset() {
	*x = CtmOrderPayListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmOrderPayListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmOrderPayListResponse) ProtoMessage() {}

func (x *CtmOrderPayListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmOrderPayListResponse.ProtoReflect.Descriptor instead.
func (*CtmOrderPayListResponse) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{53}
}

func (x *CtmOrderPayListResponse) GetResults() []*CtmOrderPayResponse {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *CtmOrderPayListResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type CtmOrderPayRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Filters        string  `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
	PrepayId       string  `protobuf:"bytes,3,opt,name=prepay_id,json=prepayId,proto3" json:"prepay_id,omitempty"`
	PrepayExpired  string  `protobuf:"bytes,4,opt,name=prepay_expired,json=prepayExpired,proto3" json:"prepay_expired,omitempty"`
	TradeType      *string `protobuf:"bytes,5,opt,name=trade_type,json=tradeType,proto3,oneof" json:"trade_type,omitempty"`
	TransactionId  *string `protobuf:"bytes,6,opt,name=transaction_id,json=transactionId,proto3,oneof" json:"transaction_id,omitempty"`
	TradeState     *string `protobuf:"bytes,7,opt,name=trade_state,json=tradeState,proto3,oneof" json:"trade_state,omitempty"`
	TradeStateDesc *string `protobuf:"bytes,8,opt,name=trade_state_desc,json=tradeStateDesc,proto3,oneof" json:"trade_state_desc,omitempty"`
	PayId          string  `protobuf:"bytes,9,opt,name=pay_id,json=payId,proto3" json:"pay_id,omitempty"`
	PayAccount     string  `protobuf:"bytes,10,opt,name=pay_account,json=payAccount,proto3" json:"pay_account,omitempty"`
	BankType       *string `protobuf:"bytes,11,opt,name=bank_type,json=bankType,proto3,oneof" json:"bank_type,omitempty"`
	SuccessTime    *string `protobuf:"bytes,12,opt,name=success_time,json=successTime,proto3,oneof" json:"success_time,omitempty"`
	CtmOrder       *int64  `protobuf:"varint,13,opt,name=ctm_order,json=ctmOrder,proto3,oneof" json:"ctm_order,omitempty"`
	CtmRefund      *int64  `protobuf:"varint,14,opt,name=ctm_refund,json=ctmRefund,proto3,oneof" json:"ctm_refund,omitempty"`
}

func (x *CtmOrderPayRequest) Reset() {
	*x = CtmOrderPayRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmOrderPayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmOrderPayRequest) ProtoMessage() {}

func (x *CtmOrderPayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmOrderPayRequest.ProtoReflect.Descriptor instead.
func (*CtmOrderPayRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{54}
}

func (x *CtmOrderPayRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CtmOrderPayRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *CtmOrderPayRequest) GetPrepayId() string {
	if x != nil {
		return x.PrepayId
	}
	return ""
}

func (x *CtmOrderPayRequest) GetPrepayExpired() string {
	if x != nil {
		return x.PrepayExpired
	}
	return ""
}

func (x *CtmOrderPayRequest) GetTradeType() string {
	if x != nil && x.TradeType != nil {
		return *x.TradeType
	}
	return ""
}

func (x *CtmOrderPayRequest) GetTransactionId() string {
	if x != nil && x.TransactionId != nil {
		return *x.TransactionId
	}
	return ""
}

func (x *CtmOrderPayRequest) GetTradeState() string {
	if x != nil && x.TradeState != nil {
		return *x.TradeState
	}
	return ""
}

func (x *CtmOrderPayRequest) GetTradeStateDesc() string {
	if x != nil && x.TradeStateDesc != nil {
		return *x.TradeStateDesc
	}
	return ""
}

func (x *CtmOrderPayRequest) GetPayId() string {
	if x != nil {
		return x.PayId
	}
	return ""
}

func (x *CtmOrderPayRequest) GetPayAccount() string {
	if x != nil {
		return x.PayAccount
	}
	return ""
}

func (x *CtmOrderPayRequest) GetBankType() string {
	if x != nil && x.BankType != nil {
		return *x.BankType
	}
	return ""
}

func (x *CtmOrderPayRequest) GetSuccessTime() string {
	if x != nil && x.SuccessTime != nil {
		return *x.SuccessTime
	}
	return ""
}

func (x *CtmOrderPayRequest) GetCtmOrder() int64 {
	if x != nil && x.CtmOrder != nil {
		return *x.CtmOrder
	}
	return 0
}

func (x *CtmOrderPayRequest) GetCtmRefund() int64 {
	if x != nil && x.CtmRefund != nil {
		return *x.CtmRefund
	}
	return 0
}

type CtmOrderPayResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreateTime      string  `protobuf:"bytes,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime      string  `protobuf:"bytes,3,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	PrepayId        string  `protobuf:"bytes,4,opt,name=prepay_id,json=prepayId,proto3" json:"prepay_id,omitempty"`
	PrepayExpired   string  `protobuf:"bytes,5,opt,name=prepay_expired,json=prepayExpired,proto3" json:"prepay_expired,omitempty"`
	TradeType       *string `protobuf:"bytes,6,opt,name=trade_type,json=tradeType,proto3,oneof" json:"trade_type,omitempty"`
	TransactionId   *string `protobuf:"bytes,7,opt,name=transaction_id,json=transactionId,proto3,oneof" json:"transaction_id,omitempty"`
	TradeState      *string `protobuf:"bytes,8,opt,name=trade_state,json=tradeState,proto3,oneof" json:"trade_state,omitempty"`
	TradeStateDesc  *string `protobuf:"bytes,9,opt,name=trade_state_desc,json=tradeStateDesc,proto3,oneof" json:"trade_state_desc,omitempty"`
	PayId           string  `protobuf:"bytes,10,opt,name=pay_id,json=payId,proto3" json:"pay_id,omitempty"`
	PayAccount      string  `protobuf:"bytes,11,opt,name=pay_account,json=payAccount,proto3" json:"pay_account,omitempty"`
	BankType        *string `protobuf:"bytes,12,opt,name=bank_type,json=bankType,proto3,oneof" json:"bank_type,omitempty"`
	SuccessTime     *string `protobuf:"bytes,13,opt,name=success_time,json=successTime,proto3,oneof" json:"success_time,omitempty"`
	CtmOrder        *int64  `protobuf:"varint,14,opt,name=ctm_order,json=ctmOrder,proto3,oneof" json:"ctm_order,omitempty"`
	CtmRefund       *int64  `protobuf:"varint,15,opt,name=ctm_refund,json=ctmRefund,proto3,oneof" json:"ctm_refund,omitempty"`
	TradeTypeName   string  `protobuf:"bytes,16,opt,name=trade_type_name,json=tradeTypeName,proto3" json:"trade_type_name,omitempty"`
	TradeStatusName string  `protobuf:"bytes,17,opt,name=trade_status_name,json=tradeStatusName,proto3" json:"trade_status_name,omitempty"`
}

func (x *CtmOrderPayResponse) Reset() {
	*x = CtmOrderPayResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmOrderPayResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmOrderPayResponse) ProtoMessage() {}

func (x *CtmOrderPayResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmOrderPayResponse.ProtoReflect.Descriptor instead.
func (*CtmOrderPayResponse) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{55}
}

func (x *CtmOrderPayResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CtmOrderPayResponse) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *CtmOrderPayResponse) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *CtmOrderPayResponse) GetPrepayId() string {
	if x != nil {
		return x.PrepayId
	}
	return ""
}

func (x *CtmOrderPayResponse) GetPrepayExpired() string {
	if x != nil {
		return x.PrepayExpired
	}
	return ""
}

func (x *CtmOrderPayResponse) GetTradeType() string {
	if x != nil && x.TradeType != nil {
		return *x.TradeType
	}
	return ""
}

func (x *CtmOrderPayResponse) GetTransactionId() string {
	if x != nil && x.TransactionId != nil {
		return *x.TransactionId
	}
	return ""
}

func (x *CtmOrderPayResponse) GetTradeState() string {
	if x != nil && x.TradeState != nil {
		return *x.TradeState
	}
	return ""
}

func (x *CtmOrderPayResponse) GetTradeStateDesc() string {
	if x != nil && x.TradeStateDesc != nil {
		return *x.TradeStateDesc
	}
	return ""
}

func (x *CtmOrderPayResponse) GetPayId() string {
	if x != nil {
		return x.PayId
	}
	return ""
}

func (x *CtmOrderPayResponse) GetPayAccount() string {
	if x != nil {
		return x.PayAccount
	}
	return ""
}

func (x *CtmOrderPayResponse) GetBankType() string {
	if x != nil && x.BankType != nil {
		return *x.BankType
	}
	return ""
}

func (x *CtmOrderPayResponse) GetSuccessTime() string {
	if x != nil && x.SuccessTime != nil {
		return *x.SuccessTime
	}
	return ""
}

func (x *CtmOrderPayResponse) GetCtmOrder() int64 {
	if x != nil && x.CtmOrder != nil {
		return *x.CtmOrder
	}
	return 0
}

func (x *CtmOrderPayResponse) GetCtmRefund() int64 {
	if x != nil && x.CtmRefund != nil {
		return *x.CtmRefund
	}
	return 0
}

func (x *CtmOrderPayResponse) GetTradeTypeName() string {
	if x != nil {
		return x.TradeTypeName
	}
	return ""
}

func (x *CtmOrderPayResponse) GetTradeStatusName() string {
	if x != nil {
		return x.TradeStatusName
	}
	return ""
}

type CtmOrderPromotionDetailCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CouponId       int32   `protobuf:"varint,3,opt,name=coupon_id,json=couponId,proto3" json:"coupon_id,omitempty"`
	CouponSku      *string `protobuf:"bytes,4,opt,name=coupon_sku,json=couponSku,proto3,oneof" json:"coupon_sku,omitempty"`
	CouponName     string  `protobuf:"bytes,5,opt,name=coupon_name,json=couponName,proto3" json:"coupon_name,omitempty"`
	CouponCode     *string `protobuf:"bytes,6,opt,name=coupon_code,json=couponCode,proto3,oneof" json:"coupon_code,omitempty"`
	CouponIntro    *string `protobuf:"bytes,7,opt,name=coupon_intro,json=couponIntro,proto3,oneof" json:"coupon_intro,omitempty"`
	CouponClass    int32   `protobuf:"varint,8,opt,name=coupon_class,json=couponClass,proto3" json:"coupon_class,omitempty"`
	CouponType     int32   `protobuf:"varint,9,opt,name=coupon_type,json=couponType,proto3" json:"coupon_type,omitempty"`
	TriggerAmount  *int32  `protobuf:"varint,10,opt,name=trigger_amount,json=triggerAmount,proto3,oneof" json:"trigger_amount,omitempty"`
	DiscountAmount *int32  `protobuf:"varint,11,opt,name=discount_amount,json=discountAmount,proto3,oneof" json:"discount_amount,omitempty"`
	TriggerQty     *int32  `protobuf:"varint,12,opt,name=trigger_qty,json=triggerQty,proto3,oneof" json:"trigger_qty,omitempty"`
	Discount       *int32  `protobuf:"varint,13,opt,name=discount,proto3,oneof" json:"discount,omitempty"`
	CanStack       bool    `protobuf:"varint,14,opt,name=can_stack,json=canStack,proto3" json:"can_stack,omitempty"`
	ProdRange      *string `protobuf:"bytes,15,opt,name=prod_range,json=prodRange,proto3,oneof" json:"prod_range,omitempty"`
	StartTime      *string `protobuf:"bytes,16,opt,name=start_time,json=startTime,proto3,oneof" json:"start_time,omitempty"`
	ExpireTime     *string `protobuf:"bytes,17,opt,name=expire_time,json=expireTime,proto3,oneof" json:"expire_time,omitempty"`
	CtmOrder       int64   `protobuf:"varint,18,opt,name=ctm_order,json=ctmOrder,proto3" json:"ctm_order,omitempty"`
	IsRegistered   *bool   `protobuf:"varint,19,opt,name=is_registered,json=isRegistered,proto3,oneof" json:"is_registered,omitempty"`
	Filters        string  `protobuf:"bytes,20,opt,name=filters,proto3" json:"filters,omitempty"`
}

func (x *CtmOrderPromotionDetailCreateRequest) Reset() {
	*x = CtmOrderPromotionDetailCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmOrderPromotionDetailCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmOrderPromotionDetailCreateRequest) ProtoMessage() {}

func (x *CtmOrderPromotionDetailCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmOrderPromotionDetailCreateRequest.ProtoReflect.Descriptor instead.
func (*CtmOrderPromotionDetailCreateRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{56}
}

func (x *CtmOrderPromotionDetailCreateRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CtmOrderPromotionDetailCreateRequest) GetCouponId() int32 {
	if x != nil {
		return x.CouponId
	}
	return 0
}

func (x *CtmOrderPromotionDetailCreateRequest) GetCouponSku() string {
	if x != nil && x.CouponSku != nil {
		return *x.CouponSku
	}
	return ""
}

func (x *CtmOrderPromotionDetailCreateRequest) GetCouponName() string {
	if x != nil {
		return x.CouponName
	}
	return ""
}

func (x *CtmOrderPromotionDetailCreateRequest) GetCouponCode() string {
	if x != nil && x.CouponCode != nil {
		return *x.CouponCode
	}
	return ""
}

func (x *CtmOrderPromotionDetailCreateRequest) GetCouponIntro() string {
	if x != nil && x.CouponIntro != nil {
		return *x.CouponIntro
	}
	return ""
}

func (x *CtmOrderPromotionDetailCreateRequest) GetCouponClass() int32 {
	if x != nil {
		return x.CouponClass
	}
	return 0
}

func (x *CtmOrderPromotionDetailCreateRequest) GetCouponType() int32 {
	if x != nil {
		return x.CouponType
	}
	return 0
}

func (x *CtmOrderPromotionDetailCreateRequest) GetTriggerAmount() int32 {
	if x != nil && x.TriggerAmount != nil {
		return *x.TriggerAmount
	}
	return 0
}

func (x *CtmOrderPromotionDetailCreateRequest) GetDiscountAmount() int32 {
	if x != nil && x.DiscountAmount != nil {
		return *x.DiscountAmount
	}
	return 0
}

func (x *CtmOrderPromotionDetailCreateRequest) GetTriggerQty() int32 {
	if x != nil && x.TriggerQty != nil {
		return *x.TriggerQty
	}
	return 0
}

func (x *CtmOrderPromotionDetailCreateRequest) GetDiscount() int32 {
	if x != nil && x.Discount != nil {
		return *x.Discount
	}
	return 0
}

func (x *CtmOrderPromotionDetailCreateRequest) GetCanStack() bool {
	if x != nil {
		return x.CanStack
	}
	return false
}

func (x *CtmOrderPromotionDetailCreateRequest) GetProdRange() string {
	if x != nil && x.ProdRange != nil {
		return *x.ProdRange
	}
	return ""
}

func (x *CtmOrderPromotionDetailCreateRequest) GetStartTime() string {
	if x != nil && x.StartTime != nil {
		return *x.StartTime
	}
	return ""
}

func (x *CtmOrderPromotionDetailCreateRequest) GetExpireTime() string {
	if x != nil && x.ExpireTime != nil {
		return *x.ExpireTime
	}
	return ""
}

func (x *CtmOrderPromotionDetailCreateRequest) GetCtmOrder() int64 {
	if x != nil {
		return x.CtmOrder
	}
	return 0
}

func (x *CtmOrderPromotionDetailCreateRequest) GetIsRegistered() bool {
	if x != nil && x.IsRegistered != nil {
		return *x.IsRegistered
	}
	return false
}

func (x *CtmOrderPromotionDetailCreateRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

type CtmOrderPromotionDetailDestroyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CtmOrderPromotionDetailDestroyRequest) Reset() {
	*x = CtmOrderPromotionDetailDestroyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmOrderPromotionDetailDestroyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmOrderPromotionDetailDestroyRequest) ProtoMessage() {}

func (x *CtmOrderPromotionDetailDestroyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmOrderPromotionDetailDestroyRequest.ProtoReflect.Descriptor instead.
func (*CtmOrderPromotionDetailDestroyRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{57}
}

func (x *CtmOrderPromotionDetailDestroyRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CtmOrderPromotionDetailListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters string `protobuf:"bytes,1,opt,name=filters,proto3" json:"filters,omitempty"`
}

func (x *CtmOrderPromotionDetailListRequest) Reset() {
	*x = CtmOrderPromotionDetailListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmOrderPromotionDetailListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmOrderPromotionDetailListRequest) ProtoMessage() {}

func (x *CtmOrderPromotionDetailListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmOrderPromotionDetailListRequest.ProtoReflect.Descriptor instead.
func (*CtmOrderPromotionDetailListRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{58}
}

func (x *CtmOrderPromotionDetailListRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

type CtmOrderPromotionDetailRetrieveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CtmOrderPromotionDetailRetrieveRequest) Reset() {
	*x = CtmOrderPromotionDetailRetrieveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmOrderPromotionDetailRetrieveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmOrderPromotionDetailRetrieveRequest) ProtoMessage() {}

func (x *CtmOrderPromotionDetailRetrieveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmOrderPromotionDetailRetrieveRequest.ProtoReflect.Descriptor instead.
func (*CtmOrderPromotionDetailRetrieveRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{59}
}

func (x *CtmOrderPromotionDetailRetrieveRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CtmOrderPromotionDetailUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   int32                         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Filters              string                        `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
	GoodsList            []*CtmOrderGoodsDetailRequest `protobuf:"bytes,3,rep,name=goods_list,json=goodsList,proto3" json:"goods_list,omitempty"`
	CancelReasons        []*CtmRefundReasonRequest     `protobuf:"bytes,4,rep,name=cancel_reasons,json=cancelReasons,proto3" json:"cancel_reasons,omitempty"`
	XPartialUpdateFields []string                      `protobuf:"bytes,5,rep,name=_partial_update_fields,json=PartialUpdateFields,proto3" json:"_partial_update_fields,omitempty"`
	TradeType            int32                         `protobuf:"varint,6,opt,name=trade_type,json=tradeType,proto3" json:"trade_type,omitempty"`
	CreateType           int32                         `protobuf:"varint,7,opt,name=Create_type,json=CreateType,proto3" json:"Create_type,omitempty"`
	ShopNo               string                        `protobuf:"bytes,8,opt,name=shop_no,json=shopNo,proto3" json:"shop_no,omitempty"`
	ShopName             string                        `protobuf:"bytes,9,opt,name=shop_name,json=shopName,proto3" json:"shop_name,omitempty"`
	WarehouseNo          string                        `protobuf:"bytes,10,opt,name=warehouse_no,json=warehouseNo,proto3" json:"warehouse_no,omitempty"`
	WarehouseName        string                        `protobuf:"bytes,11,opt,name=warehouse_name,json=warehouseName,proto3" json:"warehouse_name,omitempty"`
	Tid                  string                        `protobuf:"bytes,12,opt,name=tid,proto3" json:"tid,omitempty"`
	TradeStatus          int32                         `protobuf:"varint,13,opt,name=trade_status,json=tradeStatus,proto3" json:"trade_status,omitempty"`
	PayStatus            int32                         `protobuf:"varint,14,opt,name=pay_status,json=payStatus,proto3" json:"pay_status,omitempty"`
	PayTime              *string                       `protobuf:"bytes,15,opt,name=pay_time,json=payTime,proto3,oneof" json:"pay_time,omitempty"`
	DeliveryTerm         int32                         `protobuf:"varint,16,opt,name=delivery_term,json=deliveryTerm,proto3" json:"delivery_term,omitempty"`
	BuyerNick            string                        `protobuf:"bytes,17,opt,name=buyer_nick,json=buyerNick,proto3" json:"buyer_nick,omitempty"`
	BuyerMobile          *string                       `protobuf:"bytes,18,opt,name=buyer_mobile,json=buyerMobile,proto3,oneof" json:"buyer_mobile,omitempty"`
	BuyerMessage         *string                       `protobuf:"bytes,19,opt,name=buyer_message,json=buyerMessage,proto3,oneof" json:"buyer_message,omitempty"`
	SellerMemo           *string                       `protobuf:"bytes,20,opt,name=seller_memo,json=sellerMemo,proto3,oneof" json:"seller_memo,omitempty"`
	ReceiverName         *string                       `protobuf:"bytes,21,opt,name=receiver_name,json=receiverName,proto3,oneof" json:"receiver_name,omitempty"`
	ReceiverProvince     *string                       `protobuf:"bytes,22,opt,name=receiver_province,json=receiverProvince,proto3,oneof" json:"receiver_province,omitempty"`
	ReceiverCity         *string                       `protobuf:"bytes,23,opt,name=receiver_city,json=receiverCity,proto3,oneof" json:"receiver_city,omitempty"`
	ReceiverDistrict     *string                       `protobuf:"bytes,24,opt,name=receiver_district,json=receiverDistrict,proto3,oneof" json:"receiver_district,omitempty"`
	ReceiverAddress      *string                       `protobuf:"bytes,25,opt,name=receiver_address,json=receiverAddress,proto3,oneof" json:"receiver_address,omitempty"`
	ReceiverMobile       *string                       `protobuf:"bytes,26,opt,name=receiver_mobile,json=receiverMobile,proto3,oneof" json:"receiver_mobile,omitempty"`
	PostAmount           float64                       `protobuf:"fixed64,27,opt,name=post_amount,json=postAmount,proto3" json:"post_amount,omitempty"`
	OtherAmount          float64                       `protobuf:"fixed64,28,opt,name=other_amount,json=otherAmount,proto3" json:"other_amount,omitempty"`
	CodAmount            float64                       `protobuf:"fixed64,29,opt,name=cod_amount,json=codAmount,proto3" json:"cod_amount,omitempty"`
	ExtCodFee            float64                       `protobuf:"fixed64,30,opt,name=ext_cod_fee,json=extCodFee,proto3" json:"ext_cod_fee,omitempty"`
	Paid                 float64                       `protobuf:"fixed64,31,opt,name=paid,proto3" json:"paid,omitempty"`
	InvoiceStatus        int32                         `protobuf:"varint,32,opt,name=invoice_status,json=invoiceStatus,proto3" json:"invoice_status,omitempty"`
	Receivable           float64                       `protobuf:"fixed64,33,opt,name=receivable,proto3" json:"receivable,omitempty"`
	Discount             float64                       `protobuf:"fixed64,34,opt,name=discount,proto3" json:"discount,omitempty"`
	DebitPay             float64                       `protobuf:"fixed64,35,opt,name=debit_pay,json=debitPay,proto3" json:"debit_pay,omitempty"`
	GiftPay              float64                       `protobuf:"fixed64,36,opt,name=gift_pay,json=giftPay,proto3" json:"gift_pay,omitempty"`
	ScorePay             int32                         `protobuf:"varint,37,opt,name=score_pay,json=scorePay,proto3" json:"score_pay,omitempty"`
	BadgePay             int32                         `protobuf:"varint,38,opt,name=badge_pay,json=badgePay,proto3" json:"badge_pay,omitempty"`
	NutPay               int32                         `protobuf:"varint,39,opt,name=nut_pay,json=nutPay,proto3" json:"nut_pay,omitempty"`
	Ctm                  *int64                        `protobuf:"varint,40,opt,name=ctm,proto3,oneof" json:"ctm,omitempty"`
	RefundOrder          *int64                        `protobuf:"varint,41,opt,name=refund_order,json=refundOrder,proto3,oneof" json:"refund_order,omitempty"`
	DebitCard            *int64                        `protobuf:"varint,42,opt,name=debit_card,json=debitCard,proto3,oneof" json:"debit_card,omitempty"`
	ScoreCard            *int64                        `protobuf:"varint,43,opt,name=score_card,json=scoreCard,proto3,oneof" json:"score_card,omitempty"`
	BadgeCard            *int64                        `protobuf:"varint,44,opt,name=badge_card,json=badgeCard,proto3,oneof" json:"badge_card,omitempty"`
	NutCard              *int64                        `protobuf:"varint,45,opt,name=nut_card,json=nutCard,proto3,oneof" json:"nut_card,omitempty"`
	GiftCards            []int64                       `protobuf:"varint,46,rep,packed,name=gift_cards,json=giftCards,proto3" json:"gift_cards,omitempty"`
	CouponList           []*CtmOrderPromotionRequest   `protobuf:"bytes,47,rep,name=coupon_list,json=couponList,proto3" json:"coupon_list,omitempty"`
	OrderPay             []*CtmOrderPayRequest         `protobuf:"bytes,48,rep,name=order_pay,json=orderPay,proto3" json:"order_pay,omitempty"`
	OrderInvoice         []*CtmOrderInvoiceRequest     `protobuf:"bytes,49,rep,name=order_invoice,json=orderInvoice,proto3" json:"order_invoice,omitempty"`
}

func (x *CtmOrderPromotionDetailUpdateRequest) Reset() {
	*x = CtmOrderPromotionDetailUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmOrderPromotionDetailUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmOrderPromotionDetailUpdateRequest) ProtoMessage() {}

func (x *CtmOrderPromotionDetailUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmOrderPromotionDetailUpdateRequest.ProtoReflect.Descriptor instead.
func (*CtmOrderPromotionDetailUpdateRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{60}
}

func (x *CtmOrderPromotionDetailUpdateRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CtmOrderPromotionDetailUpdateRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *CtmOrderPromotionDetailUpdateRequest) GetGoodsList() []*CtmOrderGoodsDetailRequest {
	if x != nil {
		return x.GoodsList
	}
	return nil
}

func (x *CtmOrderPromotionDetailUpdateRequest) GetCancelReasons() []*CtmRefundReasonRequest {
	if x != nil {
		return x.CancelReasons
	}
	return nil
}

func (x *CtmOrderPromotionDetailUpdateRequest) GetXPartialUpdateFields() []string {
	if x != nil {
		return x.XPartialUpdateFields
	}
	return nil
}

func (x *CtmOrderPromotionDetailUpdateRequest) GetTradeType() int32 {
	if x != nil {
		return x.TradeType
	}
	return 0
}

func (x *CtmOrderPromotionDetailUpdateRequest) GetCreateType() int32 {
	if x != nil {
		return x.CreateType
	}
	return 0
}

func (x *CtmOrderPromotionDetailUpdateRequest) GetShopNo() string {
	if x != nil {
		return x.ShopNo
	}
	return ""
}

func (x *CtmOrderPromotionDetailUpdateRequest) GetShopName() string {
	if x != nil {
		return x.ShopName
	}
	return ""
}

func (x *CtmOrderPromotionDetailUpdateRequest) GetWarehouseNo() string {
	if x != nil {
		return x.WarehouseNo
	}
	return ""
}

func (x *CtmOrderPromotionDetailUpdateRequest) GetWarehouseName() string {
	if x != nil {
		return x.WarehouseName
	}
	return ""
}

func (x *CtmOrderPromotionDetailUpdateRequest) GetTid() string {
	if x != nil {
		return x.Tid
	}
	return ""
}

func (x *CtmOrderPromotionDetailUpdateRequest) GetTradeStatus() int32 {
	if x != nil {
		return x.TradeStatus
	}
	return 0
}

func (x *CtmOrderPromotionDetailUpdateRequest) GetPayStatus() int32 {
	if x != nil {
		return x.PayStatus
	}
	return 0
}

func (x *CtmOrderPromotionDetailUpdateRequest) GetPayTime() string {
	if x != nil && x.PayTime != nil {
		return *x.PayTime
	}
	return ""
}

func (x *CtmOrderPromotionDetailUpdateRequest) GetDeliveryTerm() int32 {
	if x != nil {
		return x.DeliveryTerm
	}
	return 0
}

func (x *CtmOrderPromotionDetailUpdateRequest) GetBuyerNick() string {
	if x != nil {
		return x.BuyerNick
	}
	return ""
}

func (x *CtmOrderPromotionDetailUpdateRequest) GetBuyerMobile() string {
	if x != nil && x.BuyerMobile != nil {
		return *x.BuyerMobile
	}
	return ""
}

func (x *CtmOrderPromotionDetailUpdateRequest) GetBuyerMessage() string {
	if x != nil && x.BuyerMessage != nil {
		return *x.BuyerMessage
	}
	return ""
}

func (x *CtmOrderPromotionDetailUpdateRequest) GetSellerMemo() string {
	if x != nil && x.SellerMemo != nil {
		return *x.SellerMemo
	}
	return ""
}

func (x *CtmOrderPromotionDetailUpdateRequest) GetReceiverName() string {
	if x != nil && x.ReceiverName != nil {
		return *x.ReceiverName
	}
	return ""
}

func (x *CtmOrderPromotionDetailUpdateRequest) GetReceiverProvince() string {
	if x != nil && x.ReceiverProvince != nil {
		return *x.ReceiverProvince
	}
	return ""
}

func (x *CtmOrderPromotionDetailUpdateRequest) GetReceiverCity() string {
	if x != nil && x.ReceiverCity != nil {
		return *x.ReceiverCity
	}
	return ""
}

func (x *CtmOrderPromotionDetailUpdateRequest) GetReceiverDistrict() string {
	if x != nil && x.ReceiverDistrict != nil {
		return *x.ReceiverDistrict
	}
	return ""
}

func (x *CtmOrderPromotionDetailUpdateRequest) GetReceiverAddress() string {
	if x != nil && x.ReceiverAddress != nil {
		return *x.ReceiverAddress
	}
	return ""
}

func (x *CtmOrderPromotionDetailUpdateRequest) GetReceiverMobile() string {
	if x != nil && x.ReceiverMobile != nil {
		return *x.ReceiverMobile
	}
	return ""
}

func (x *CtmOrderPromotionDetailUpdateRequest) GetPostAmount() float64 {
	if x != nil {
		return x.PostAmount
	}
	return 0
}

func (x *CtmOrderPromotionDetailUpdateRequest) GetOtherAmount() float64 {
	if x != nil {
		return x.OtherAmount
	}
	return 0
}

func (x *CtmOrderPromotionDetailUpdateRequest) GetCodAmount() float64 {
	if x != nil {
		return x.CodAmount
	}
	return 0
}

func (x *CtmOrderPromotionDetailUpdateRequest) GetExtCodFee() float64 {
	if x != nil {
		return x.ExtCodFee
	}
	return 0
}

func (x *CtmOrderPromotionDetailUpdateRequest) GetPaid() float64 {
	if x != nil {
		return x.Paid
	}
	return 0
}

func (x *CtmOrderPromotionDetailUpdateRequest) GetInvoiceStatus() int32 {
	if x != nil {
		return x.InvoiceStatus
	}
	return 0
}

func (x *CtmOrderPromotionDetailUpdateRequest) GetReceivable() float64 {
	if x != nil {
		return x.Receivable
	}
	return 0
}

func (x *CtmOrderPromotionDetailUpdateRequest) GetDiscount() float64 {
	if x != nil {
		return x.Discount
	}
	return 0
}

func (x *CtmOrderPromotionDetailUpdateRequest) GetDebitPay() float64 {
	if x != nil {
		return x.DebitPay
	}
	return 0
}

func (x *CtmOrderPromotionDetailUpdateRequest) GetGiftPay() float64 {
	if x != nil {
		return x.GiftPay
	}
	return 0
}

func (x *CtmOrderPromotionDetailUpdateRequest) GetScorePay() int32 {
	if x != nil {
		return x.ScorePay
	}
	return 0
}

func (x *CtmOrderPromotionDetailUpdateRequest) GetBadgePay() int32 {
	if x != nil {
		return x.BadgePay
	}
	return 0
}

func (x *CtmOrderPromotionDetailUpdateRequest) GetNutPay() int32 {
	if x != nil {
		return x.NutPay
	}
	return 0
}

func (x *CtmOrderPromotionDetailUpdateRequest) GetCtm() int64 {
	if x != nil && x.Ctm != nil {
		return *x.Ctm
	}
	return 0
}

func (x *CtmOrderPromotionDetailUpdateRequest) GetRefundOrder() int64 {
	if x != nil && x.RefundOrder != nil {
		return *x.RefundOrder
	}
	return 0
}

func (x *CtmOrderPromotionDetailUpdateRequest) GetDebitCard() int64 {
	if x != nil && x.DebitCard != nil {
		return *x.DebitCard
	}
	return 0
}

func (x *CtmOrderPromotionDetailUpdateRequest) GetScoreCard() int64 {
	if x != nil && x.ScoreCard != nil {
		return *x.ScoreCard
	}
	return 0
}

func (x *CtmOrderPromotionDetailUpdateRequest) GetBadgeCard() int64 {
	if x != nil && x.BadgeCard != nil {
		return *x.BadgeCard
	}
	return 0
}

func (x *CtmOrderPromotionDetailUpdateRequest) GetNutCard() int64 {
	if x != nil && x.NutCard != nil {
		return *x.NutCard
	}
	return 0
}

func (x *CtmOrderPromotionDetailUpdateRequest) GetGiftCards() []int64 {
	if x != nil {
		return x.GiftCards
	}
	return nil
}

func (x *CtmOrderPromotionDetailUpdateRequest) GetCouponList() []*CtmOrderPromotionRequest {
	if x != nil {
		return x.CouponList
	}
	return nil
}

func (x *CtmOrderPromotionDetailUpdateRequest) GetOrderPay() []*CtmOrderPayRequest {
	if x != nil {
		return x.OrderPay
	}
	return nil
}

func (x *CtmOrderPromotionDetailUpdateRequest) GetOrderInvoice() []*CtmOrderInvoiceRequest {
	if x != nil {
		return x.OrderInvoice
	}
	return nil
}

type CtmOrderPromotionListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*CtmOrderPromotionResponse `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Count   int32                        `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *CtmOrderPromotionListResponse) Reset() {
	*x = CtmOrderPromotionListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmOrderPromotionListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmOrderPromotionListResponse) ProtoMessage() {}

func (x *CtmOrderPromotionListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmOrderPromotionListResponse.ProtoReflect.Descriptor instead.
func (*CtmOrderPromotionListResponse) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{61}
}

func (x *CtmOrderPromotionListResponse) GetResults() []*CtmOrderPromotionResponse {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *CtmOrderPromotionListResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type CtmOrderPromotionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CouponId       int32   `protobuf:"varint,3,opt,name=coupon_id,json=couponId,proto3" json:"coupon_id,omitempty"`
	CouponSku      *string `protobuf:"bytes,4,opt,name=coupon_sku,json=couponSku,proto3,oneof" json:"coupon_sku,omitempty"`
	CouponName     string  `protobuf:"bytes,5,opt,name=coupon_name,json=couponName,proto3" json:"coupon_name,omitempty"`
	CouponCode     *string `protobuf:"bytes,6,opt,name=coupon_code,json=couponCode,proto3,oneof" json:"coupon_code,omitempty"`
	CouponIntro    *string `protobuf:"bytes,7,opt,name=coupon_intro,json=couponIntro,proto3,oneof" json:"coupon_intro,omitempty"`
	CouponClass    int32   `protobuf:"varint,8,opt,name=coupon_class,json=couponClass,proto3" json:"coupon_class,omitempty"`
	CouponType     int32   `protobuf:"varint,9,opt,name=coupon_type,json=couponType,proto3" json:"coupon_type,omitempty"`
	TriggerAmount  *int32  `protobuf:"varint,10,opt,name=trigger_amount,json=triggerAmount,proto3,oneof" json:"trigger_amount,omitempty"`
	DiscountAmount *int32  `protobuf:"varint,11,opt,name=discount_amount,json=discountAmount,proto3,oneof" json:"discount_amount,omitempty"`
	TriggerQty     *int32  `protobuf:"varint,12,opt,name=trigger_qty,json=triggerQty,proto3,oneof" json:"trigger_qty,omitempty"`
	Discount       *int32  `protobuf:"varint,13,opt,name=discount,proto3,oneof" json:"discount,omitempty"`
	CanStack       bool    `protobuf:"varint,14,opt,name=can_stack,json=canStack,proto3" json:"can_stack,omitempty"`
	ProdRange      *string `protobuf:"bytes,15,opt,name=prod_range,json=prodRange,proto3,oneof" json:"prod_range,omitempty"`
	StartTime      *string `protobuf:"bytes,16,opt,name=start_time,json=startTime,proto3,oneof" json:"start_time,omitempty"`
	ExpireTime     *string `protobuf:"bytes,17,opt,name=expire_time,json=expireTime,proto3,oneof" json:"expire_time,omitempty"`
	CtmOrder       int64   `protobuf:"varint,18,opt,name=ctm_order,json=ctmOrder,proto3" json:"ctm_order,omitempty"`
	IsRegistered   *bool   `protobuf:"varint,19,opt,name=is_registered,json=isRegistered,proto3,oneof" json:"is_registered,omitempty"`
	Filters        string  `protobuf:"bytes,20,opt,name=filters,proto3" json:"filters,omitempty"`
}

func (x *CtmOrderPromotionRequest) Reset() {
	*x = CtmOrderPromotionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmOrderPromotionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmOrderPromotionRequest) ProtoMessage() {}

func (x *CtmOrderPromotionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmOrderPromotionRequest.ProtoReflect.Descriptor instead.
func (*CtmOrderPromotionRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{62}
}

func (x *CtmOrderPromotionRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CtmOrderPromotionRequest) GetCouponId() int32 {
	if x != nil {
		return x.CouponId
	}
	return 0
}

func (x *CtmOrderPromotionRequest) GetCouponSku() string {
	if x != nil && x.CouponSku != nil {
		return *x.CouponSku
	}
	return ""
}

func (x *CtmOrderPromotionRequest) GetCouponName() string {
	if x != nil {
		return x.CouponName
	}
	return ""
}

func (x *CtmOrderPromotionRequest) GetCouponCode() string {
	if x != nil && x.CouponCode != nil {
		return *x.CouponCode
	}
	return ""
}

func (x *CtmOrderPromotionRequest) GetCouponIntro() string {
	if x != nil && x.CouponIntro != nil {
		return *x.CouponIntro
	}
	return ""
}

func (x *CtmOrderPromotionRequest) GetCouponClass() int32 {
	if x != nil {
		return x.CouponClass
	}
	return 0
}

func (x *CtmOrderPromotionRequest) GetCouponType() int32 {
	if x != nil {
		return x.CouponType
	}
	return 0
}

func (x *CtmOrderPromotionRequest) GetTriggerAmount() int32 {
	if x != nil && x.TriggerAmount != nil {
		return *x.TriggerAmount
	}
	return 0
}

func (x *CtmOrderPromotionRequest) GetDiscountAmount() int32 {
	if x != nil && x.DiscountAmount != nil {
		return *x.DiscountAmount
	}
	return 0
}

func (x *CtmOrderPromotionRequest) GetTriggerQty() int32 {
	if x != nil && x.TriggerQty != nil {
		return *x.TriggerQty
	}
	return 0
}

func (x *CtmOrderPromotionRequest) GetDiscount() int32 {
	if x != nil && x.Discount != nil {
		return *x.Discount
	}
	return 0
}

func (x *CtmOrderPromotionRequest) GetCanStack() bool {
	if x != nil {
		return x.CanStack
	}
	return false
}

func (x *CtmOrderPromotionRequest) GetProdRange() string {
	if x != nil && x.ProdRange != nil {
		return *x.ProdRange
	}
	return ""
}

func (x *CtmOrderPromotionRequest) GetStartTime() string {
	if x != nil && x.StartTime != nil {
		return *x.StartTime
	}
	return ""
}

func (x *CtmOrderPromotionRequest) GetExpireTime() string {
	if x != nil && x.ExpireTime != nil {
		return *x.ExpireTime
	}
	return ""
}

func (x *CtmOrderPromotionRequest) GetCtmOrder() int64 {
	if x != nil {
		return x.CtmOrder
	}
	return 0
}

func (x *CtmOrderPromotionRequest) GetIsRegistered() bool {
	if x != nil && x.IsRegistered != nil {
		return *x.IsRegistered
	}
	return false
}

func (x *CtmOrderPromotionRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

type CtmOrderPromotionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreateTime      string  `protobuf:"bytes,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime      string  `protobuf:"bytes,3,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	CouponId        int32   `protobuf:"varint,5,opt,name=coupon_id,json=couponId,proto3" json:"coupon_id,omitempty"`
	CouponSku       *string `protobuf:"bytes,6,opt,name=coupon_sku,json=couponSku,proto3,oneof" json:"coupon_sku,omitempty"`
	CouponName      string  `protobuf:"bytes,7,opt,name=coupon_name,json=couponName,proto3" json:"coupon_name,omitempty"`
	CouponCode      *string `protobuf:"bytes,8,opt,name=coupon_code,json=couponCode,proto3,oneof" json:"coupon_code,omitempty"`
	CouponIntro     *string `protobuf:"bytes,9,opt,name=coupon_intro,json=couponIntro,proto3,oneof" json:"coupon_intro,omitempty"`
	CouponClass     int32   `protobuf:"varint,10,opt,name=coupon_class,json=couponClass,proto3" json:"coupon_class,omitempty"`
	CouponType      int32   `protobuf:"varint,11,opt,name=coupon_type,json=couponType,proto3" json:"coupon_type,omitempty"`
	TriggerAmount   *int32  `protobuf:"varint,12,opt,name=trigger_amount,json=triggerAmount,proto3,oneof" json:"trigger_amount,omitempty"`
	DiscountAmount  *int32  `protobuf:"varint,13,opt,name=discount_amount,json=discountAmount,proto3,oneof" json:"discount_amount,omitempty"`
	TriggerQty      *int32  `protobuf:"varint,14,opt,name=trigger_qty,json=triggerQty,proto3,oneof" json:"trigger_qty,omitempty"`
	Discount        *int32  `protobuf:"varint,15,opt,name=discount,proto3,oneof" json:"discount,omitempty"`
	CanStack        bool    `protobuf:"varint,16,opt,name=can_stack,json=canStack,proto3" json:"can_stack,omitempty"`
	ProdRange       *string `protobuf:"bytes,17,opt,name=prod_range,json=prodRange,proto3,oneof" json:"prod_range,omitempty"`
	StartTime       *string `protobuf:"bytes,18,opt,name=start_time,json=startTime,proto3,oneof" json:"start_time,omitempty"`
	ExpireTime      *string `protobuf:"bytes,19,opt,name=expire_time,json=expireTime,proto3,oneof" json:"expire_time,omitempty"`
	CtmOrder        int64   `protobuf:"varint,20,opt,name=ctm_order,json=ctmOrder,proto3" json:"ctm_order,omitempty"`
	CouponClassName string  `protobuf:"bytes,21,opt,name=coupon_class_name,json=couponClassName,proto3" json:"coupon_class_name,omitempty"`
	CouponTypeName  string  `protobuf:"bytes,22,opt,name=coupon_type_name,json=couponTypeName,proto3" json:"coupon_type_name,omitempty"`
	IsRegistered    *bool   `protobuf:"varint,23,opt,name=is_registered,json=isRegistered,proto3,oneof" json:"is_registered,omitempty"`
}

func (x *CtmOrderPromotionResponse) Reset() {
	*x = CtmOrderPromotionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmOrderPromotionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmOrderPromotionResponse) ProtoMessage() {}

func (x *CtmOrderPromotionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmOrderPromotionResponse.ProtoReflect.Descriptor instead.
func (*CtmOrderPromotionResponse) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{63}
}

func (x *CtmOrderPromotionResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CtmOrderPromotionResponse) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *CtmOrderPromotionResponse) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *CtmOrderPromotionResponse) GetCouponId() int32 {
	if x != nil {
		return x.CouponId
	}
	return 0
}

func (x *CtmOrderPromotionResponse) GetCouponSku() string {
	if x != nil && x.CouponSku != nil {
		return *x.CouponSku
	}
	return ""
}

func (x *CtmOrderPromotionResponse) GetCouponName() string {
	if x != nil {
		return x.CouponName
	}
	return ""
}

func (x *CtmOrderPromotionResponse) GetCouponCode() string {
	if x != nil && x.CouponCode != nil {
		return *x.CouponCode
	}
	return ""
}

func (x *CtmOrderPromotionResponse) GetCouponIntro() string {
	if x != nil && x.CouponIntro != nil {
		return *x.CouponIntro
	}
	return ""
}

func (x *CtmOrderPromotionResponse) GetCouponClass() int32 {
	if x != nil {
		return x.CouponClass
	}
	return 0
}

func (x *CtmOrderPromotionResponse) GetCouponType() int32 {
	if x != nil {
		return x.CouponType
	}
	return 0
}

func (x *CtmOrderPromotionResponse) GetTriggerAmount() int32 {
	if x != nil && x.TriggerAmount != nil {
		return *x.TriggerAmount
	}
	return 0
}

func (x *CtmOrderPromotionResponse) GetDiscountAmount() int32 {
	if x != nil && x.DiscountAmount != nil {
		return *x.DiscountAmount
	}
	return 0
}

func (x *CtmOrderPromotionResponse) GetTriggerQty() int32 {
	if x != nil && x.TriggerQty != nil {
		return *x.TriggerQty
	}
	return 0
}

func (x *CtmOrderPromotionResponse) GetDiscount() int32 {
	if x != nil && x.Discount != nil {
		return *x.Discount
	}
	return 0
}

func (x *CtmOrderPromotionResponse) GetCanStack() bool {
	if x != nil {
		return x.CanStack
	}
	return false
}

func (x *CtmOrderPromotionResponse) GetProdRange() string {
	if x != nil && x.ProdRange != nil {
		return *x.ProdRange
	}
	return ""
}

func (x *CtmOrderPromotionResponse) GetStartTime() string {
	if x != nil && x.StartTime != nil {
		return *x.StartTime
	}
	return ""
}

func (x *CtmOrderPromotionResponse) GetExpireTime() string {
	if x != nil && x.ExpireTime != nil {
		return *x.ExpireTime
	}
	return ""
}

func (x *CtmOrderPromotionResponse) GetCtmOrder() int64 {
	if x != nil {
		return x.CtmOrder
	}
	return 0
}

func (x *CtmOrderPromotionResponse) GetCouponClassName() string {
	if x != nil {
		return x.CouponClassName
	}
	return ""
}

func (x *CtmOrderPromotionResponse) GetCouponTypeName() string {
	if x != nil {
		return x.CouponTypeName
	}
	return ""
}

func (x *CtmOrderPromotionResponse) GetIsRegistered() bool {
	if x != nil && x.IsRegistered != nil {
		return *x.IsRegistered
	}
	return false
}

type CtmOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int32                         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TradeType        int32                         `protobuf:"varint,2,opt,name=trade_type,json=tradeType,proto3" json:"trade_type,omitempty"`
	ShopNo           string                        `protobuf:"bytes,3,opt,name=shop_no,json=shopNo,proto3" json:"shop_no,omitempty"`
	ShopName         string                        `protobuf:"bytes,4,opt,name=shop_name,json=shopName,proto3" json:"shop_name,omitempty"`
	WarehouseNo      string                        `protobuf:"bytes,5,opt,name=warehouse_no,json=warehouseNo,proto3" json:"warehouse_no,omitempty"`
	WarehouseName    string                        `protobuf:"bytes,6,opt,name=warehouse_name,json=warehouseName,proto3" json:"warehouse_name,omitempty"`
	Tid              string                        `protobuf:"bytes,7,opt,name=tid,proto3" json:"tid,omitempty"`
	TradeStatus      int32                         `protobuf:"varint,8,opt,name=trade_status,json=tradeStatus,proto3" json:"trade_status,omitempty"`
	PayStatus        int32                         `protobuf:"varint,9,opt,name=pay_status,json=payStatus,proto3" json:"pay_status,omitempty"`
	PayTime          *string                       `protobuf:"bytes,10,opt,name=pay_time,json=payTime,proto3,oneof" json:"pay_time,omitempty"`
	DeliveryTerm     int32                         `protobuf:"varint,11,opt,name=delivery_term,json=deliveryTerm,proto3" json:"delivery_term,omitempty"`
	BuyerNick        string                        `protobuf:"bytes,12,opt,name=buyer_nick,json=buyerNick,proto3" json:"buyer_nick,omitempty"`
	BuyerMobile      *string                       `protobuf:"bytes,13,opt,name=buyer_mobile,json=buyerMobile,proto3,oneof" json:"buyer_mobile,omitempty"`
	BuyerMessage     *string                       `protobuf:"bytes,14,opt,name=buyer_message,json=buyerMessage,proto3,oneof" json:"buyer_message,omitempty"`
	SellerMemo       *string                       `protobuf:"bytes,15,opt,name=seller_memo,json=sellerMemo,proto3,oneof" json:"seller_memo,omitempty"`
	ReceiverName     *string                       `protobuf:"bytes,16,opt,name=receiver_name,json=receiverName,proto3,oneof" json:"receiver_name,omitempty"`
	ReceiverProvince *string                       `protobuf:"bytes,17,opt,name=receiver_province,json=receiverProvince,proto3,oneof" json:"receiver_province,omitempty"`
	ReceiverCity     *string                       `protobuf:"bytes,18,opt,name=receiver_city,json=receiverCity,proto3,oneof" json:"receiver_city,omitempty"`
	ReceiverDistrict *string                       `protobuf:"bytes,19,opt,name=receiver_district,json=receiverDistrict,proto3,oneof" json:"receiver_district,omitempty"`
	ReceiverAddress  *string                       `protobuf:"bytes,20,opt,name=receiver_address,json=receiverAddress,proto3,oneof" json:"receiver_address,omitempty"`
	ReceiverMobile   *string                       `protobuf:"bytes,21,opt,name=receiver_mobile,json=receiverMobile,proto3,oneof" json:"receiver_mobile,omitempty"`
	PostAmount       float64                       `protobuf:"fixed64,22,opt,name=post_amount,json=postAmount,proto3" json:"post_amount,omitempty"`
	OtherAmount      float64                       `protobuf:"fixed64,23,opt,name=other_amount,json=otherAmount,proto3" json:"other_amount,omitempty"`
	CodAmount        float64                       `protobuf:"fixed64,24,opt,name=cod_amount,json=codAmount,proto3" json:"cod_amount,omitempty"`
	ExtCodFee        float64                       `protobuf:"fixed64,25,opt,name=ext_cod_fee,json=extCodFee,proto3" json:"ext_cod_fee,omitempty"`
	Paid             float64                       `protobuf:"fixed64,26,opt,name=paid,proto3" json:"paid,omitempty"`
	InvoiceStatus    int32                         `protobuf:"varint,27,opt,name=invoice_status,json=invoiceStatus,proto3" json:"invoice_status,omitempty"`
	Receivable       float64                       `protobuf:"fixed64,28,opt,name=receivable,proto3" json:"receivable,omitempty"`
	Discount         float64                       `protobuf:"fixed64,29,opt,name=discount,proto3" json:"discount,omitempty"`
	Ctm              *int64                        `protobuf:"varint,35,opt,name=ctm,proto3,oneof" json:"ctm,omitempty"`
	RefundOrder      *int64                        `protobuf:"varint,36,opt,name=refund_order,json=refundOrder,proto3,oneof" json:"refund_order,omitempty"`
	Filters          string                        `protobuf:"bytes,37,opt,name=filters,proto3" json:"filters,omitempty"`
	DebitPay         float64                       `protobuf:"fixed64,38,opt,name=debit_pay,json=debitPay,proto3" json:"debit_pay,omitempty"`
	GiftPay          float64                       `protobuf:"fixed64,39,opt,name=gift_pay,json=giftPay,proto3" json:"gift_pay,omitempty"`
	ScorePay         int32                         `protobuf:"varint,40,opt,name=score_pay,json=scorePay,proto3" json:"score_pay,omitempty"`
	BadgePay         int32                         `protobuf:"varint,41,opt,name=badge_pay,json=badgePay,proto3" json:"badge_pay,omitempty"`
	NutPay           int32                         `protobuf:"varint,42,opt,name=nut_pay,json=nutPay,proto3" json:"nut_pay,omitempty"`
	DebitCard        *int64                        `protobuf:"varint,43,opt,name=debit_card,json=debitCard,proto3,oneof" json:"debit_card,omitempty"`
	ScoreCard        *int64                        `protobuf:"varint,44,opt,name=score_card,json=scoreCard,proto3,oneof" json:"score_card,omitempty"`
	BadgeCard        *int64                        `protobuf:"varint,45,opt,name=badge_card,json=badgeCard,proto3,oneof" json:"badge_card,omitempty"`
	NutCard          *int64                        `protobuf:"varint,46,opt,name=nut_card,json=nutCard,proto3,oneof" json:"nut_card,omitempty"`
	GiftCards        []int64                       `protobuf:"varint,47,rep,packed,name=gift_cards,json=giftCards,proto3" json:"gift_cards,omitempty"`
	GoodsList        []*CtmOrderGoodsDetailRequest `protobuf:"bytes,48,rep,name=goods_list,json=goodsList,proto3" json:"goods_list,omitempty"`
	CancelReasons    []*CtmRefundReasonRequest     `protobuf:"bytes,49,rep,name=cancel_reasons,json=cancelReasons,proto3" json:"cancel_reasons,omitempty"`
	CreateType       int32                         `protobuf:"varint,50,opt,name=Create_type,json=CreateType,proto3" json:"Create_type,omitempty"`
	CouponList       []*CtmOrderPromotionRequest   `protobuf:"bytes,51,rep,name=coupon_list,json=couponList,proto3" json:"coupon_list,omitempty"`
	OrderPay         []*CtmOrderPayRequest         `protobuf:"bytes,52,rep,name=order_pay,json=orderPay,proto3" json:"order_pay,omitempty"`
	OrderInvoice     []*CtmOrderInvoiceRequest     `protobuf:"bytes,53,rep,name=order_invoice,json=orderInvoice,proto3" json:"order_invoice,omitempty"`
}

func (x *CtmOrderRequest) Reset() {
	*x = CtmOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmOrderRequest) ProtoMessage() {}

func (x *CtmOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmOrderRequest.ProtoReflect.Descriptor instead.
func (*CtmOrderRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{64}
}

func (x *CtmOrderRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CtmOrderRequest) GetTradeType() int32 {
	if x != nil {
		return x.TradeType
	}
	return 0
}

func (x *CtmOrderRequest) GetShopNo() string {
	if x != nil {
		return x.ShopNo
	}
	return ""
}

func (x *CtmOrderRequest) GetShopName() string {
	if x != nil {
		return x.ShopName
	}
	return ""
}

func (x *CtmOrderRequest) GetWarehouseNo() string {
	if x != nil {
		return x.WarehouseNo
	}
	return ""
}

func (x *CtmOrderRequest) GetWarehouseName() string {
	if x != nil {
		return x.WarehouseName
	}
	return ""
}

func (x *CtmOrderRequest) GetTid() string {
	if x != nil {
		return x.Tid
	}
	return ""
}

func (x *CtmOrderRequest) GetTradeStatus() int32 {
	if x != nil {
		return x.TradeStatus
	}
	return 0
}

func (x *CtmOrderRequest) GetPayStatus() int32 {
	if x != nil {
		return x.PayStatus
	}
	return 0
}

func (x *CtmOrderRequest) GetPayTime() string {
	if x != nil && x.PayTime != nil {
		return *x.PayTime
	}
	return ""
}

func (x *CtmOrderRequest) GetDeliveryTerm() int32 {
	if x != nil {
		return x.DeliveryTerm
	}
	return 0
}

func (x *CtmOrderRequest) GetBuyerNick() string {
	if x != nil {
		return x.BuyerNick
	}
	return ""
}

func (x *CtmOrderRequest) GetBuyerMobile() string {
	if x != nil && x.BuyerMobile != nil {
		return *x.BuyerMobile
	}
	return ""
}

func (x *CtmOrderRequest) GetBuyerMessage() string {
	if x != nil && x.BuyerMessage != nil {
		return *x.BuyerMessage
	}
	return ""
}

func (x *CtmOrderRequest) GetSellerMemo() string {
	if x != nil && x.SellerMemo != nil {
		return *x.SellerMemo
	}
	return ""
}

func (x *CtmOrderRequest) GetReceiverName() string {
	if x != nil && x.ReceiverName != nil {
		return *x.ReceiverName
	}
	return ""
}

func (x *CtmOrderRequest) GetReceiverProvince() string {
	if x != nil && x.ReceiverProvince != nil {
		return *x.ReceiverProvince
	}
	return ""
}

func (x *CtmOrderRequest) GetReceiverCity() string {
	if x != nil && x.ReceiverCity != nil {
		return *x.ReceiverCity
	}
	return ""
}

func (x *CtmOrderRequest) GetReceiverDistrict() string {
	if x != nil && x.ReceiverDistrict != nil {
		return *x.ReceiverDistrict
	}
	return ""
}

func (x *CtmOrderRequest) GetReceiverAddress() string {
	if x != nil && x.ReceiverAddress != nil {
		return *x.ReceiverAddress
	}
	return ""
}

func (x *CtmOrderRequest) GetReceiverMobile() string {
	if x != nil && x.ReceiverMobile != nil {
		return *x.ReceiverMobile
	}
	return ""
}

func (x *CtmOrderRequest) GetPostAmount() float64 {
	if x != nil {
		return x.PostAmount
	}
	return 0
}

func (x *CtmOrderRequest) GetOtherAmount() float64 {
	if x != nil {
		return x.OtherAmount
	}
	return 0
}

func (x *CtmOrderRequest) GetCodAmount() float64 {
	if x != nil {
		return x.CodAmount
	}
	return 0
}

func (x *CtmOrderRequest) GetExtCodFee() float64 {
	if x != nil {
		return x.ExtCodFee
	}
	return 0
}

func (x *CtmOrderRequest) GetPaid() float64 {
	if x != nil {
		return x.Paid
	}
	return 0
}

func (x *CtmOrderRequest) GetInvoiceStatus() int32 {
	if x != nil {
		return x.InvoiceStatus
	}
	return 0
}

func (x *CtmOrderRequest) GetReceivable() float64 {
	if x != nil {
		return x.Receivable
	}
	return 0
}

func (x *CtmOrderRequest) GetDiscount() float64 {
	if x != nil {
		return x.Discount
	}
	return 0
}

func (x *CtmOrderRequest) GetCtm() int64 {
	if x != nil && x.Ctm != nil {
		return *x.Ctm
	}
	return 0
}

func (x *CtmOrderRequest) GetRefundOrder() int64 {
	if x != nil && x.RefundOrder != nil {
		return *x.RefundOrder
	}
	return 0
}

func (x *CtmOrderRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *CtmOrderRequest) GetDebitPay() float64 {
	if x != nil {
		return x.DebitPay
	}
	return 0
}

func (x *CtmOrderRequest) GetGiftPay() float64 {
	if x != nil {
		return x.GiftPay
	}
	return 0
}

func (x *CtmOrderRequest) GetScorePay() int32 {
	if x != nil {
		return x.ScorePay
	}
	return 0
}

func (x *CtmOrderRequest) GetBadgePay() int32 {
	if x != nil {
		return x.BadgePay
	}
	return 0
}

func (x *CtmOrderRequest) GetNutPay() int32 {
	if x != nil {
		return x.NutPay
	}
	return 0
}

func (x *CtmOrderRequest) GetDebitCard() int64 {
	if x != nil && x.DebitCard != nil {
		return *x.DebitCard
	}
	return 0
}

func (x *CtmOrderRequest) GetScoreCard() int64 {
	if x != nil && x.ScoreCard != nil {
		return *x.ScoreCard
	}
	return 0
}

func (x *CtmOrderRequest) GetBadgeCard() int64 {
	if x != nil && x.BadgeCard != nil {
		return *x.BadgeCard
	}
	return 0
}

func (x *CtmOrderRequest) GetNutCard() int64 {
	if x != nil && x.NutCard != nil {
		return *x.NutCard
	}
	return 0
}

func (x *CtmOrderRequest) GetGiftCards() []int64 {
	if x != nil {
		return x.GiftCards
	}
	return nil
}

func (x *CtmOrderRequest) GetGoodsList() []*CtmOrderGoodsDetailRequest {
	if x != nil {
		return x.GoodsList
	}
	return nil
}

func (x *CtmOrderRequest) GetCancelReasons() []*CtmRefundReasonRequest {
	if x != nil {
		return x.CancelReasons
	}
	return nil
}

func (x *CtmOrderRequest) GetCreateType() int32 {
	if x != nil {
		return x.CreateType
	}
	return 0
}

func (x *CtmOrderRequest) GetCouponList() []*CtmOrderPromotionRequest {
	if x != nil {
		return x.CouponList
	}
	return nil
}

func (x *CtmOrderRequest) GetOrderPay() []*CtmOrderPayRequest {
	if x != nil {
		return x.OrderPay
	}
	return nil
}

func (x *CtmOrderRequest) GetOrderInvoice() []*CtmOrderInvoiceRequest {
	if x != nil {
		return x.OrderInvoice
	}
	return nil
}

type CtmOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int32                          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreateTime        string                         `protobuf:"bytes,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime        string                         `protobuf:"bytes,3,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	TradeType         int32                          `protobuf:"varint,4,opt,name=trade_type,json=tradeType,proto3" json:"trade_type,omitempty"`
	ShopNo            string                         `protobuf:"bytes,5,opt,name=shop_no,json=shopNo,proto3" json:"shop_no,omitempty"`
	ShopName          string                         `protobuf:"bytes,6,opt,name=shop_name,json=shopName,proto3" json:"shop_name,omitempty"`
	WarehouseNo       string                         `protobuf:"bytes,7,opt,name=warehouse_no,json=warehouseNo,proto3" json:"warehouse_no,omitempty"`
	WarehouseName     string                         `protobuf:"bytes,8,opt,name=warehouse_name,json=warehouseName,proto3" json:"warehouse_name,omitempty"`
	Tid               string                         `protobuf:"bytes,9,opt,name=tid,proto3" json:"tid,omitempty"`
	TradeStatus       int32                          `protobuf:"varint,10,opt,name=trade_status,json=tradeStatus,proto3" json:"trade_status,omitempty"`
	PayStatus         int32                          `protobuf:"varint,11,opt,name=pay_status,json=payStatus,proto3" json:"pay_status,omitempty"`
	PayTime           *string                        `protobuf:"bytes,12,opt,name=pay_time,json=payTime,proto3,oneof" json:"pay_time,omitempty"`
	DeliveryTerm      int32                          `protobuf:"varint,13,opt,name=delivery_term,json=deliveryTerm,proto3" json:"delivery_term,omitempty"`
	BuyerNick         string                         `protobuf:"bytes,14,opt,name=buyer_nick,json=buyerNick,proto3" json:"buyer_nick,omitempty"`
	BuyerMobile       *string                        `protobuf:"bytes,15,opt,name=buyer_mobile,json=buyerMobile,proto3,oneof" json:"buyer_mobile,omitempty"`
	BuyerMessage      *string                        `protobuf:"bytes,16,opt,name=buyer_message,json=buyerMessage,proto3,oneof" json:"buyer_message,omitempty"`
	SellerMemo        *string                        `protobuf:"bytes,17,opt,name=seller_memo,json=sellerMemo,proto3,oneof" json:"seller_memo,omitempty"`
	ReceiverName      *string                        `protobuf:"bytes,18,opt,name=receiver_name,json=receiverName,proto3,oneof" json:"receiver_name,omitempty"`
	ReceiverProvince  *string                        `protobuf:"bytes,19,opt,name=receiver_province,json=receiverProvince,proto3,oneof" json:"receiver_province,omitempty"`
	ReceiverCity      *string                        `protobuf:"bytes,20,opt,name=receiver_city,json=receiverCity,proto3,oneof" json:"receiver_city,omitempty"`
	ReceiverDistrict  *string                        `protobuf:"bytes,21,opt,name=receiver_district,json=receiverDistrict,proto3,oneof" json:"receiver_district,omitempty"`
	ReceiverAddress   *string                        `protobuf:"bytes,22,opt,name=receiver_address,json=receiverAddress,proto3,oneof" json:"receiver_address,omitempty"`
	ReceiverMobile    *string                        `protobuf:"bytes,23,opt,name=receiver_mobile,json=receiverMobile,proto3,oneof" json:"receiver_mobile,omitempty"`
	PostAmount        float64                        `protobuf:"fixed64,24,opt,name=post_amount,json=postAmount,proto3" json:"post_amount,omitempty"`
	OtherAmount       float64                        `protobuf:"fixed64,25,opt,name=other_amount,json=otherAmount,proto3" json:"other_amount,omitempty"`
	CodAmount         float64                        `protobuf:"fixed64,26,opt,name=cod_amount,json=codAmount,proto3" json:"cod_amount,omitempty"`
	ExtCodFee         float64                        `protobuf:"fixed64,27,opt,name=ext_cod_fee,json=extCodFee,proto3" json:"ext_cod_fee,omitempty"`
	Paid              float64                        `protobuf:"fixed64,28,opt,name=paid,proto3" json:"paid,omitempty"`
	InvoiceStatus     int32                          `protobuf:"varint,29,opt,name=invoice_status,json=invoiceStatus,proto3" json:"invoice_status,omitempty"`
	Receivable        float64                        `protobuf:"fixed64,30,opt,name=receivable,proto3" json:"receivable,omitempty"`
	Discount          float64                        `protobuf:"fixed64,31,opt,name=discount,proto3" json:"discount,omitempty"`
	Ctm               *int64                         `protobuf:"varint,37,opt,name=ctm,proto3,oneof" json:"ctm,omitempty"`
	RefundOrder       *int64                         `protobuf:"varint,38,opt,name=refund_order,json=refundOrder,proto3,oneof" json:"refund_order,omitempty"`
	TradeTypeName     string                         `protobuf:"bytes,39,opt,name=trade_type_name,json=tradeTypeName,proto3" json:"trade_type_name,omitempty"`
	TradeStatusName   string                         `protobuf:"bytes,40,opt,name=trade_status_name,json=tradeStatusName,proto3" json:"trade_status_name,omitempty"`
	PayStatusName     string                         `protobuf:"bytes,41,opt,name=pay_status_name,json=payStatusName,proto3" json:"pay_status_name,omitempty"`
	DeliveryTermName  string                         `protobuf:"bytes,42,opt,name=delivery_term_name,json=deliveryTermName,proto3" json:"delivery_term_name,omitempty"`
	InvoiceStatusName string                         `protobuf:"bytes,43,opt,name=invoice_status_name,json=invoiceStatusName,proto3" json:"invoice_status_name,omitempty"`
	GoodsList         []*CtmOrderGoodsDetailResponse `protobuf:"bytes,44,rep,name=goods_list,json=goodsList,proto3" json:"goods_list,omitempty"`
	DebitPay          float64                        `protobuf:"fixed64,45,opt,name=debit_pay,json=debitPay,proto3" json:"debit_pay,omitempty"`
	GiftPay           float64                        `protobuf:"fixed64,46,opt,name=gift_pay,json=giftPay,proto3" json:"gift_pay,omitempty"`
	ScorePay          int32                          `protobuf:"varint,47,opt,name=score_pay,json=scorePay,proto3" json:"score_pay,omitempty"`
	BadgePay          int32                          `protobuf:"varint,48,opt,name=badge_pay,json=badgePay,proto3" json:"badge_pay,omitempty"`
	NutPay            int32                          `protobuf:"varint,49,opt,name=nut_pay,json=nutPay,proto3" json:"nut_pay,omitempty"`
	DebitCard         *int64                         `protobuf:"varint,50,opt,name=debit_card,json=debitCard,proto3,oneof" json:"debit_card,omitempty"`
	ScoreCard         *int64                         `protobuf:"varint,51,opt,name=score_card,json=scoreCard,proto3,oneof" json:"score_card,omitempty"`
	BadgeCard         *int64                         `protobuf:"varint,52,opt,name=badge_card,json=badgeCard,proto3,oneof" json:"badge_card,omitempty"`
	NutCard           *int64                         `protobuf:"varint,53,opt,name=nut_card,json=nutCard,proto3,oneof" json:"nut_card,omitempty"`
	GiftCards         []int64                        `protobuf:"varint,54,rep,packed,name=gift_cards,json=giftCards,proto3" json:"gift_cards,omitempty"`
	CancelReasons     []*CtmRefundReasonResponse     `protobuf:"bytes,55,rep,name=cancel_reasons,json=cancelReasons,proto3" json:"cancel_reasons,omitempty"`
	CreateType        int32                          `protobuf:"varint,56,opt,name=Create_type,json=CreateType,proto3" json:"Create_type,omitempty"`
	CouponList        []*CtmOrderPromotionResponse   `protobuf:"bytes,57,rep,name=coupon_list,json=couponList,proto3" json:"coupon_list,omitempty"`
	OrderPay          []*CtmOrderPayResponse         `protobuf:"bytes,58,rep,name=order_pay,json=orderPay,proto3" json:"order_pay,omitempty"`
	OrderInvoice      []*CtmOrderInvoiceResponse     `protobuf:"bytes,59,rep,name=order_invoice,json=orderInvoice,proto3" json:"order_invoice,omitempty"`
}

func (x *CtmOrderResponse) Reset() {
	*x = CtmOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmOrderResponse) ProtoMessage() {}

func (x *CtmOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmOrderResponse.ProtoReflect.Descriptor instead.
func (*CtmOrderResponse) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{65}
}

func (x *CtmOrderResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CtmOrderResponse) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *CtmOrderResponse) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *CtmOrderResponse) GetTradeType() int32 {
	if x != nil {
		return x.TradeType
	}
	return 0
}

func (x *CtmOrderResponse) GetShopNo() string {
	if x != nil {
		return x.ShopNo
	}
	return ""
}

func (x *CtmOrderResponse) GetShopName() string {
	if x != nil {
		return x.ShopName
	}
	return ""
}

func (x *CtmOrderResponse) GetWarehouseNo() string {
	if x != nil {
		return x.WarehouseNo
	}
	return ""
}

func (x *CtmOrderResponse) GetWarehouseName() string {
	if x != nil {
		return x.WarehouseName
	}
	return ""
}

func (x *CtmOrderResponse) GetTid() string {
	if x != nil {
		return x.Tid
	}
	return ""
}

func (x *CtmOrderResponse) GetTradeStatus() int32 {
	if x != nil {
		return x.TradeStatus
	}
	return 0
}

func (x *CtmOrderResponse) GetPayStatus() int32 {
	if x != nil {
		return x.PayStatus
	}
	return 0
}

func (x *CtmOrderResponse) GetPayTime() string {
	if x != nil && x.PayTime != nil {
		return *x.PayTime
	}
	return ""
}

func (x *CtmOrderResponse) GetDeliveryTerm() int32 {
	if x != nil {
		return x.DeliveryTerm
	}
	return 0
}

func (x *CtmOrderResponse) GetBuyerNick() string {
	if x != nil {
		return x.BuyerNick
	}
	return ""
}

func (x *CtmOrderResponse) GetBuyerMobile() string {
	if x != nil && x.BuyerMobile != nil {
		return *x.BuyerMobile
	}
	return ""
}

func (x *CtmOrderResponse) GetBuyerMessage() string {
	if x != nil && x.BuyerMessage != nil {
		return *x.BuyerMessage
	}
	return ""
}

func (x *CtmOrderResponse) GetSellerMemo() string {
	if x != nil && x.SellerMemo != nil {
		return *x.SellerMemo
	}
	return ""
}

func (x *CtmOrderResponse) GetReceiverName() string {
	if x != nil && x.ReceiverName != nil {
		return *x.ReceiverName
	}
	return ""
}

func (x *CtmOrderResponse) GetReceiverProvince() string {
	if x != nil && x.ReceiverProvince != nil {
		return *x.ReceiverProvince
	}
	return ""
}

func (x *CtmOrderResponse) GetReceiverCity() string {
	if x != nil && x.ReceiverCity != nil {
		return *x.ReceiverCity
	}
	return ""
}

func (x *CtmOrderResponse) GetReceiverDistrict() string {
	if x != nil && x.ReceiverDistrict != nil {
		return *x.ReceiverDistrict
	}
	return ""
}

func (x *CtmOrderResponse) GetReceiverAddress() string {
	if x != nil && x.ReceiverAddress != nil {
		return *x.ReceiverAddress
	}
	return ""
}

func (x *CtmOrderResponse) GetReceiverMobile() string {
	if x != nil && x.ReceiverMobile != nil {
		return *x.ReceiverMobile
	}
	return ""
}

func (x *CtmOrderResponse) GetPostAmount() float64 {
	if x != nil {
		return x.PostAmount
	}
	return 0
}

func (x *CtmOrderResponse) GetOtherAmount() float64 {
	if x != nil {
		return x.OtherAmount
	}
	return 0
}

func (x *CtmOrderResponse) GetCodAmount() float64 {
	if x != nil {
		return x.CodAmount
	}
	return 0
}

func (x *CtmOrderResponse) GetExtCodFee() float64 {
	if x != nil {
		return x.ExtCodFee
	}
	return 0
}

func (x *CtmOrderResponse) GetPaid() float64 {
	if x != nil {
		return x.Paid
	}
	return 0
}

func (x *CtmOrderResponse) GetInvoiceStatus() int32 {
	if x != nil {
		return x.InvoiceStatus
	}
	return 0
}

func (x *CtmOrderResponse) GetReceivable() float64 {
	if x != nil {
		return x.Receivable
	}
	return 0
}

func (x *CtmOrderResponse) GetDiscount() float64 {
	if x != nil {
		return x.Discount
	}
	return 0
}

func (x *CtmOrderResponse) GetCtm() int64 {
	if x != nil && x.Ctm != nil {
		return *x.Ctm
	}
	return 0
}

func (x *CtmOrderResponse) GetRefundOrder() int64 {
	if x != nil && x.RefundOrder != nil {
		return *x.RefundOrder
	}
	return 0
}

func (x *CtmOrderResponse) GetTradeTypeName() string {
	if x != nil {
		return x.TradeTypeName
	}
	return ""
}

func (x *CtmOrderResponse) GetTradeStatusName() string {
	if x != nil {
		return x.TradeStatusName
	}
	return ""
}

func (x *CtmOrderResponse) GetPayStatusName() string {
	if x != nil {
		return x.PayStatusName
	}
	return ""
}

func (x *CtmOrderResponse) GetDeliveryTermName() string {
	if x != nil {
		return x.DeliveryTermName
	}
	return ""
}

func (x *CtmOrderResponse) GetInvoiceStatusName() string {
	if x != nil {
		return x.InvoiceStatusName
	}
	return ""
}

func (x *CtmOrderResponse) GetGoodsList() []*CtmOrderGoodsDetailResponse {
	if x != nil {
		return x.GoodsList
	}
	return nil
}

func (x *CtmOrderResponse) GetDebitPay() float64 {
	if x != nil {
		return x.DebitPay
	}
	return 0
}

func (x *CtmOrderResponse) GetGiftPay() float64 {
	if x != nil {
		return x.GiftPay
	}
	return 0
}

func (x *CtmOrderResponse) GetScorePay() int32 {
	if x != nil {
		return x.ScorePay
	}
	return 0
}

func (x *CtmOrderResponse) GetBadgePay() int32 {
	if x != nil {
		return x.BadgePay
	}
	return 0
}

func (x *CtmOrderResponse) GetNutPay() int32 {
	if x != nil {
		return x.NutPay
	}
	return 0
}

func (x *CtmOrderResponse) GetDebitCard() int64 {
	if x != nil && x.DebitCard != nil {
		return *x.DebitCard
	}
	return 0
}

func (x *CtmOrderResponse) GetScoreCard() int64 {
	if x != nil && x.ScoreCard != nil {
		return *x.ScoreCard
	}
	return 0
}

func (x *CtmOrderResponse) GetBadgeCard() int64 {
	if x != nil && x.BadgeCard != nil {
		return *x.BadgeCard
	}
	return 0
}

func (x *CtmOrderResponse) GetNutCard() int64 {
	if x != nil && x.NutCard != nil {
		return *x.NutCard
	}
	return 0
}

func (x *CtmOrderResponse) GetGiftCards() []int64 {
	if x != nil {
		return x.GiftCards
	}
	return nil
}

func (x *CtmOrderResponse) GetCancelReasons() []*CtmRefundReasonResponse {
	if x != nil {
		return x.CancelReasons
	}
	return nil
}

func (x *CtmOrderResponse) GetCreateType() int32 {
	if x != nil {
		return x.CreateType
	}
	return 0
}

func (x *CtmOrderResponse) GetCouponList() []*CtmOrderPromotionResponse {
	if x != nil {
		return x.CouponList
	}
	return nil
}

func (x *CtmOrderResponse) GetOrderPay() []*CtmOrderPayResponse {
	if x != nil {
		return x.OrderPay
	}
	return nil
}

func (x *CtmOrderResponse) GetOrderInvoice() []*CtmOrderInvoiceResponse {
	if x != nil {
		return x.OrderInvoice
	}
	return nil
}

type CtmOrderRetrieveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CtmOrderRetrieveRequest) Reset() {
	*x = CtmOrderRetrieveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmOrderRetrieveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmOrderRetrieveRequest) ProtoMessage() {}

func (x *CtmOrderRetrieveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmOrderRetrieveRequest.ProtoReflect.Descriptor instead.
func (*CtmOrderRetrieveRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{66}
}

func (x *CtmOrderRetrieveRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CtmRefundReasonChildrenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreateTime         string  `protobuf:"bytes,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime         string  `protobuf:"bytes,3,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	Type               int32   `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
	ReasonCode         int32   `protobuf:"varint,5,opt,name=reason_code,json=reasonCode,proto3" json:"reason_code,omitempty"`
	ReasonName         string  `protobuf:"bytes,6,opt,name=reason_name,json=reasonName,proto3" json:"reason_name,omitempty"`
	ReasonDesc         *string `protobuf:"bytes,7,opt,name=reason_desc,json=reasonDesc,proto3,oneof" json:"reason_desc,omitempty"`
	IsValid            bool    `protobuf:"varint,8,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
	OrderConfig        *int64  `protobuf:"varint,9,opt,name=order_config,json=orderConfig,proto3,oneof" json:"order_config,omitempty"`
	Parent             *int64  `protobuf:"varint,10,opt,name=parent,proto3,oneof" json:"parent,omitempty"`
	CancelOrders       []int64 `protobuf:"varint,11,rep,packed,name=cancel_orders,json=cancelOrders,proto3" json:"cancel_orders,omitempty"`
	RefundOrders       []int64 `protobuf:"varint,12,rep,packed,name=refund_orders,json=refundOrders,proto3" json:"refund_orders,omitempty"`
	RefundRejectOrders []int64 `protobuf:"varint,13,rep,packed,name=refund_reject_orders,json=refundRejectOrders,proto3" json:"refund_reject_orders,omitempty"`
	EventOrders        []int64 `protobuf:"varint,14,rep,packed,name=event_orders,json=eventOrders,proto3" json:"event_orders,omitempty"`
}

func (x *CtmRefundReasonChildrenResponse) Reset() {
	*x = CtmRefundReasonChildrenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmRefundReasonChildrenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmRefundReasonChildrenResponse) ProtoMessage() {}

func (x *CtmRefundReasonChildrenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmRefundReasonChildrenResponse.ProtoReflect.Descriptor instead.
func (*CtmRefundReasonChildrenResponse) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{67}
}

func (x *CtmRefundReasonChildrenResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CtmRefundReasonChildrenResponse) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *CtmRefundReasonChildrenResponse) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *CtmRefundReasonChildrenResponse) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *CtmRefundReasonChildrenResponse) GetReasonCode() int32 {
	if x != nil {
		return x.ReasonCode
	}
	return 0
}

func (x *CtmRefundReasonChildrenResponse) GetReasonName() string {
	if x != nil {
		return x.ReasonName
	}
	return ""
}

func (x *CtmRefundReasonChildrenResponse) GetReasonDesc() string {
	if x != nil && x.ReasonDesc != nil {
		return *x.ReasonDesc
	}
	return ""
}

func (x *CtmRefundReasonChildrenResponse) GetIsValid() bool {
	if x != nil {
		return x.IsValid
	}
	return false
}

func (x *CtmRefundReasonChildrenResponse) GetOrderConfig() int64 {
	if x != nil && x.OrderConfig != nil {
		return *x.OrderConfig
	}
	return 0
}

func (x *CtmRefundReasonChildrenResponse) GetParent() int64 {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return 0
}

func (x *CtmRefundReasonChildrenResponse) GetCancelOrders() []int64 {
	if x != nil {
		return x.CancelOrders
	}
	return nil
}

func (x *CtmRefundReasonChildrenResponse) GetRefundOrders() []int64 {
	if x != nil {
		return x.RefundOrders
	}
	return nil
}

func (x *CtmRefundReasonChildrenResponse) GetRefundRejectOrders() []int64 {
	if x != nil {
		return x.RefundRejectOrders
	}
	return nil
}

func (x *CtmRefundReasonChildrenResponse) GetEventOrders() []int64 {
	if x != nil {
		return x.EventOrders
	}
	return nil
}

type CtmRefundReasonCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Type               int32   `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	ReasonCode         int32   `protobuf:"varint,3,opt,name=reason_code,json=reasonCode,proto3" json:"reason_code,omitempty"`
	ReasonName         string  `protobuf:"bytes,4,opt,name=reason_name,json=reasonName,proto3" json:"reason_name,omitempty"`
	ReasonDesc         *string `protobuf:"bytes,5,opt,name=reason_desc,json=reasonDesc,proto3,oneof" json:"reason_desc,omitempty"`
	IsValid            bool    `protobuf:"varint,6,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
	OrderConfig        *int64  `protobuf:"varint,7,opt,name=order_config,json=orderConfig,proto3,oneof" json:"order_config,omitempty"`
	Parent             *int64  `protobuf:"varint,8,opt,name=parent,proto3,oneof" json:"parent,omitempty"`
	CancelOrders       []int64 `protobuf:"varint,9,rep,packed,name=cancel_orders,json=cancelOrders,proto3" json:"cancel_orders,omitempty"`
	RefundOrders       []int64 `protobuf:"varint,10,rep,packed,name=refund_orders,json=refundOrders,proto3" json:"refund_orders,omitempty"`
	RefundRejectOrders []int64 `protobuf:"varint,11,rep,packed,name=refund_reject_orders,json=refundRejectOrders,proto3" json:"refund_reject_orders,omitempty"`
	EventOrders        []int64 `protobuf:"varint,12,rep,packed,name=event_orders,json=eventOrders,proto3" json:"event_orders,omitempty"`
}

func (x *CtmRefundReasonCreateRequest) Reset() {
	*x = CtmRefundReasonCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmRefundReasonCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmRefundReasonCreateRequest) ProtoMessage() {}

func (x *CtmRefundReasonCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmRefundReasonCreateRequest.ProtoReflect.Descriptor instead.
func (*CtmRefundReasonCreateRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{68}
}

func (x *CtmRefundReasonCreateRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CtmRefundReasonCreateRequest) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *CtmRefundReasonCreateRequest) GetReasonCode() int32 {
	if x != nil {
		return x.ReasonCode
	}
	return 0
}

func (x *CtmRefundReasonCreateRequest) GetReasonName() string {
	if x != nil {
		return x.ReasonName
	}
	return ""
}

func (x *CtmRefundReasonCreateRequest) GetReasonDesc() string {
	if x != nil && x.ReasonDesc != nil {
		return *x.ReasonDesc
	}
	return ""
}

func (x *CtmRefundReasonCreateRequest) GetIsValid() bool {
	if x != nil {
		return x.IsValid
	}
	return false
}

func (x *CtmRefundReasonCreateRequest) GetOrderConfig() int64 {
	if x != nil && x.OrderConfig != nil {
		return *x.OrderConfig
	}
	return 0
}

func (x *CtmRefundReasonCreateRequest) GetParent() int64 {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return 0
}

func (x *CtmRefundReasonCreateRequest) GetCancelOrders() []int64 {
	if x != nil {
		return x.CancelOrders
	}
	return nil
}

func (x *CtmRefundReasonCreateRequest) GetRefundOrders() []int64 {
	if x != nil {
		return x.RefundOrders
	}
	return nil
}

func (x *CtmRefundReasonCreateRequest) GetRefundRejectOrders() []int64 {
	if x != nil {
		return x.RefundRejectOrders
	}
	return nil
}

func (x *CtmRefundReasonCreateRequest) GetEventOrders() []int64 {
	if x != nil {
		return x.EventOrders
	}
	return nil
}

type CtmRefundReasonDestroyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CtmRefundReasonDestroyRequest) Reset() {
	*x = CtmRefundReasonDestroyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmRefundReasonDestroyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmRefundReasonDestroyRequest) ProtoMessage() {}

func (x *CtmRefundReasonDestroyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmRefundReasonDestroyRequest.ProtoReflect.Descriptor instead.
func (*CtmRefundReasonDestroyRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{69}
}

func (x *CtmRefundReasonDestroyRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CtmRefundReasonListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters string `protobuf:"bytes,1,opt,name=filters,proto3" json:"filters,omitempty"`
}

func (x *CtmRefundReasonListRequest) Reset() {
	*x = CtmRefundReasonListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmRefundReasonListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmRefundReasonListRequest) ProtoMessage() {}

func (x *CtmRefundReasonListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmRefundReasonListRequest.ProtoReflect.Descriptor instead.
func (*CtmRefundReasonListRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{70}
}

func (x *CtmRefundReasonListRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

type CtmRefundReasonListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*CtmRefundReasonResponse `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Count   int32                      `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *CtmRefundReasonListResponse) Reset() {
	*x = CtmRefundReasonListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmRefundReasonListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmRefundReasonListResponse) ProtoMessage() {}

func (x *CtmRefundReasonListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmRefundReasonListResponse.ProtoReflect.Descriptor instead.
func (*CtmRefundReasonListResponse) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{71}
}

func (x *CtmRefundReasonListResponse) GetResults() []*CtmRefundReasonResponse {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *CtmRefundReasonListResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type CtmRefundReasonRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Type               int32   `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	ReasonCode         int32   `protobuf:"varint,3,opt,name=reason_code,json=reasonCode,proto3" json:"reason_code,omitempty"`
	ReasonName         string  `protobuf:"bytes,4,opt,name=reason_name,json=reasonName,proto3" json:"reason_name,omitempty"`
	ReasonDesc         *string `protobuf:"bytes,5,opt,name=reason_desc,json=reasonDesc,proto3,oneof" json:"reason_desc,omitempty"`
	IsValid            bool    `protobuf:"varint,6,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
	OrderConfig        *int64  `protobuf:"varint,7,opt,name=order_config,json=orderConfig,proto3,oneof" json:"order_config,omitempty"`
	Parent             *int64  `protobuf:"varint,8,opt,name=parent,proto3,oneof" json:"parent,omitempty"`
	CancelOrders       []int64 `protobuf:"varint,9,rep,packed,name=cancel_orders,json=cancelOrders,proto3" json:"cancel_orders,omitempty"`
	RefundOrders       []int64 `protobuf:"varint,10,rep,packed,name=refund_orders,json=refundOrders,proto3" json:"refund_orders,omitempty"`
	RefundRejectOrders []int64 `protobuf:"varint,11,rep,packed,name=refund_reject_orders,json=refundRejectOrders,proto3" json:"refund_reject_orders,omitempty"`
	EventOrders        []int64 `protobuf:"varint,12,rep,packed,name=event_orders,json=eventOrders,proto3" json:"event_orders,omitempty"`
}

func (x *CtmRefundReasonRequest) Reset() {
	*x = CtmRefundReasonRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmRefundReasonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmRefundReasonRequest) ProtoMessage() {}

func (x *CtmRefundReasonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmRefundReasonRequest.ProtoReflect.Descriptor instead.
func (*CtmRefundReasonRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{72}
}

func (x *CtmRefundReasonRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CtmRefundReasonRequest) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *CtmRefundReasonRequest) GetReasonCode() int32 {
	if x != nil {
		return x.ReasonCode
	}
	return 0
}

func (x *CtmRefundReasonRequest) GetReasonName() string {
	if x != nil {
		return x.ReasonName
	}
	return ""
}

func (x *CtmRefundReasonRequest) GetReasonDesc() string {
	if x != nil && x.ReasonDesc != nil {
		return *x.ReasonDesc
	}
	return ""
}

func (x *CtmRefundReasonRequest) GetIsValid() bool {
	if x != nil {
		return x.IsValid
	}
	return false
}

func (x *CtmRefundReasonRequest) GetOrderConfig() int64 {
	if x != nil && x.OrderConfig != nil {
		return *x.OrderConfig
	}
	return 0
}

func (x *CtmRefundReasonRequest) GetParent() int64 {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return 0
}

func (x *CtmRefundReasonRequest) GetCancelOrders() []int64 {
	if x != nil {
		return x.CancelOrders
	}
	return nil
}

func (x *CtmRefundReasonRequest) GetRefundOrders() []int64 {
	if x != nil {
		return x.RefundOrders
	}
	return nil
}

func (x *CtmRefundReasonRequest) GetRefundRejectOrders() []int64 {
	if x != nil {
		return x.RefundRejectOrders
	}
	return nil
}

func (x *CtmRefundReasonRequest) GetEventOrders() []int64 {
	if x != nil {
		return x.EventOrders
	}
	return nil
}

type CtmRefundReasonResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 int32                              `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreateTime         string                             `protobuf:"bytes,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime         string                             `protobuf:"bytes,3,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	Type               int32                              `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
	ReasonCode         int32                              `protobuf:"varint,5,opt,name=reason_code,json=reasonCode,proto3" json:"reason_code,omitempty"`
	ReasonName         string                             `protobuf:"bytes,6,opt,name=reason_name,json=reasonName,proto3" json:"reason_name,omitempty"`
	ReasonDesc         *string                            `protobuf:"bytes,7,opt,name=reason_desc,json=reasonDesc,proto3,oneof" json:"reason_desc,omitempty"`
	IsValid            bool                               `protobuf:"varint,8,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
	OrderConfig        *int64                             `protobuf:"varint,9,opt,name=order_config,json=orderConfig,proto3,oneof" json:"order_config,omitempty"`
	Parent             *int64                             `protobuf:"varint,10,opt,name=parent,proto3,oneof" json:"parent,omitempty"`
	TypeName           string                             `protobuf:"bytes,11,opt,name=type_name,json=typeName,proto3" json:"type_name,omitempty"`
	Children           []*CtmRefundReasonChildrenResponse `protobuf:"bytes,12,rep,name=children,proto3" json:"children,omitempty"`
	CancelOrders       []int64                            `protobuf:"varint,13,rep,packed,name=cancel_orders,json=cancelOrders,proto3" json:"cancel_orders,omitempty"`
	RefundOrders       []int64                            `protobuf:"varint,14,rep,packed,name=refund_orders,json=refundOrders,proto3" json:"refund_orders,omitempty"`
	RefundRejectOrders []int64                            `protobuf:"varint,15,rep,packed,name=refund_reject_orders,json=refundRejectOrders,proto3" json:"refund_reject_orders,omitempty"`
	EventOrders        []int64                            `protobuf:"varint,16,rep,packed,name=event_orders,json=eventOrders,proto3" json:"event_orders,omitempty"`
}

func (x *CtmRefundReasonResponse) Reset() {
	*x = CtmRefundReasonResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmRefundReasonResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmRefundReasonResponse) ProtoMessage() {}

func (x *CtmRefundReasonResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmRefundReasonResponse.ProtoReflect.Descriptor instead.
func (*CtmRefundReasonResponse) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{73}
}

func (x *CtmRefundReasonResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CtmRefundReasonResponse) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *CtmRefundReasonResponse) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *CtmRefundReasonResponse) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *CtmRefundReasonResponse) GetReasonCode() int32 {
	if x != nil {
		return x.ReasonCode
	}
	return 0
}

func (x *CtmRefundReasonResponse) GetReasonName() string {
	if x != nil {
		return x.ReasonName
	}
	return ""
}

func (x *CtmRefundReasonResponse) GetReasonDesc() string {
	if x != nil && x.ReasonDesc != nil {
		return *x.ReasonDesc
	}
	return ""
}

func (x *CtmRefundReasonResponse) GetIsValid() bool {
	if x != nil {
		return x.IsValid
	}
	return false
}

func (x *CtmRefundReasonResponse) GetOrderConfig() int64 {
	if x != nil && x.OrderConfig != nil {
		return *x.OrderConfig
	}
	return 0
}

func (x *CtmRefundReasonResponse) GetParent() int64 {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return 0
}

func (x *CtmRefundReasonResponse) GetTypeName() string {
	if x != nil {
		return x.TypeName
	}
	return ""
}

func (x *CtmRefundReasonResponse) GetChildren() []*CtmRefundReasonChildrenResponse {
	if x != nil {
		return x.Children
	}
	return nil
}

func (x *CtmRefundReasonResponse) GetCancelOrders() []int64 {
	if x != nil {
		return x.CancelOrders
	}
	return nil
}

func (x *CtmRefundReasonResponse) GetRefundOrders() []int64 {
	if x != nil {
		return x.RefundOrders
	}
	return nil
}

func (x *CtmRefundReasonResponse) GetRefundRejectOrders() []int64 {
	if x != nil {
		return x.RefundRejectOrders
	}
	return nil
}

func (x *CtmRefundReasonResponse) GetEventOrders() []int64 {
	if x != nil {
		return x.EventOrders
	}
	return nil
}

type CtmRefundReasonRetrieveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CtmRefundReasonRetrieveRequest) Reset() {
	*x = CtmRefundReasonRetrieveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmRefundReasonRetrieveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmRefundReasonRetrieveRequest) ProtoMessage() {}

func (x *CtmRefundReasonRetrieveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmRefundReasonRetrieveRequest.ProtoReflect.Descriptor instead.
func (*CtmRefundReasonRetrieveRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{74}
}

func (x *CtmRefundReasonRetrieveRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CtmRefundReasonUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XPartialUpdateFields []string `protobuf:"bytes,2,rep,name=_partial_update_fields,json=PartialUpdateFields,proto3" json:"_partial_update_fields,omitempty"`
	Type                 int32    `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	ReasonCode           int32    `protobuf:"varint,4,opt,name=reason_code,json=reasonCode,proto3" json:"reason_code,omitempty"`
	ReasonName           string   `protobuf:"bytes,5,opt,name=reason_name,json=reasonName,proto3" json:"reason_name,omitempty"`
	ReasonDesc           *string  `protobuf:"bytes,6,opt,name=reason_desc,json=reasonDesc,proto3,oneof" json:"reason_desc,omitempty"`
	IsValid              bool     `protobuf:"varint,7,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
	OrderConfig          *int64   `protobuf:"varint,8,opt,name=order_config,json=orderConfig,proto3,oneof" json:"order_config,omitempty"`
	Parent               *int64   `protobuf:"varint,9,opt,name=parent,proto3,oneof" json:"parent,omitempty"`
	CancelOrders         []int64  `protobuf:"varint,10,rep,packed,name=cancel_orders,json=cancelOrders,proto3" json:"cancel_orders,omitempty"`
	RefundOrders         []int64  `protobuf:"varint,11,rep,packed,name=refund_orders,json=refundOrders,proto3" json:"refund_orders,omitempty"`
	RefundRejectOrders   []int64  `protobuf:"varint,12,rep,packed,name=refund_reject_orders,json=refundRejectOrders,proto3" json:"refund_reject_orders,omitempty"`
	EventOrders          []int64  `protobuf:"varint,13,rep,packed,name=event_orders,json=eventOrders,proto3" json:"event_orders,omitempty"`
}

func (x *CtmRefundReasonUpdateRequest) Reset() {
	*x = CtmRefundReasonUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmRefundReasonUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmRefundReasonUpdateRequest) ProtoMessage() {}

func (x *CtmRefundReasonUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmRefundReasonUpdateRequest.ProtoReflect.Descriptor instead.
func (*CtmRefundReasonUpdateRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{75}
}

func (x *CtmRefundReasonUpdateRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CtmRefundReasonUpdateRequest) GetXPartialUpdateFields() []string {
	if x != nil {
		return x.XPartialUpdateFields
	}
	return nil
}

func (x *CtmRefundReasonUpdateRequest) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *CtmRefundReasonUpdateRequest) GetReasonCode() int32 {
	if x != nil {
		return x.ReasonCode
	}
	return 0
}

func (x *CtmRefundReasonUpdateRequest) GetReasonName() string {
	if x != nil {
		return x.ReasonName
	}
	return ""
}

func (x *CtmRefundReasonUpdateRequest) GetReasonDesc() string {
	if x != nil && x.ReasonDesc != nil {
		return *x.ReasonDesc
	}
	return ""
}

func (x *CtmRefundReasonUpdateRequest) GetIsValid() bool {
	if x != nil {
		return x.IsValid
	}
	return false
}

func (x *CtmRefundReasonUpdateRequest) GetOrderConfig() int64 {
	if x != nil && x.OrderConfig != nil {
		return *x.OrderConfig
	}
	return 0
}

func (x *CtmRefundReasonUpdateRequest) GetParent() int64 {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return 0
}

func (x *CtmRefundReasonUpdateRequest) GetCancelOrders() []int64 {
	if x != nil {
		return x.CancelOrders
	}
	return nil
}

func (x *CtmRefundReasonUpdateRequest) GetRefundOrders() []int64 {
	if x != nil {
		return x.RefundOrders
	}
	return nil
}

func (x *CtmRefundReasonUpdateRequest) GetRefundRejectOrders() []int64 {
	if x != nil {
		return x.RefundRejectOrders
	}
	return nil
}

func (x *CtmRefundReasonUpdateRequest) GetEventOrders() []int64 {
	if x != nil {
		return x.EventOrders
	}
	return nil
}

type LabelValueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Label string `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
}

func (x *LabelValueResponse) Reset() {
	*x = LabelValueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LabelValueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LabelValueResponse) ProtoMessage() {}

func (x *LabelValueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LabelValueResponse.ProtoReflect.Descriptor instead.
func (*LabelValueResponse) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{76}
}

func (x *LabelValueResponse) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *LabelValueResponse) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

type OnSpuListCustomerCouponRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ctm     int64  `protobuf:"varint,1,opt,name=ctm,proto3" json:"ctm,omitempty"`
	SpuList string `protobuf:"bytes,2,opt,name=spu_list,json=spuList,proto3" json:"spu_list,omitempty"`
	Filters string `protobuf:"bytes,3,opt,name=filters,proto3" json:"filters,omitempty"`
}

func (x *OnSpuListCustomerCouponRequest) Reset() {
	*x = OnSpuListCustomerCouponRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnSpuListCustomerCouponRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnSpuListCustomerCouponRequest) ProtoMessage() {}

func (x *OnSpuListCustomerCouponRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnSpuListCustomerCouponRequest.ProtoReflect.Descriptor instead.
func (*OnSpuListCustomerCouponRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{77}
}

func (x *OnSpuListCustomerCouponRequest) GetCtm() int64 {
	if x != nil {
		return x.Ctm
	}
	return 0
}

func (x *OnSpuListCustomerCouponRequest) GetSpuList() string {
	if x != nil {
		return x.SpuList
	}
	return ""
}

func (x *OnSpuListCustomerCouponRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

type OptionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OptionRequest) Reset() {
	*x = OptionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OptionRequest) ProtoMessage() {}

func (x *OptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OptionRequest.ProtoReflect.Descriptor instead.
func (*OptionRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{78}
}

type OrderNextTidRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OrderNextTidRequest) Reset() {
	*x = OrderNextTidRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderNextTidRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderNextTidRequest) ProtoMessage() {}

func (x *OrderNextTidRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderNextTidRequest.ProtoReflect.Descriptor instead.
func (*OrderNextTidRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{79}
}

type OrderOptionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OrderOptionsRequest) Reset() {
	*x = OrderOptionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderOptionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderOptionsRequest) ProtoMessage() {}

func (x *OrderOptionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderOptionsRequest.ProtoReflect.Descriptor instead.
func (*OrderOptionsRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{80}
}

type ReasonTypeOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code  int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ReasonTypeOption) Reset() {
	*x = ReasonTypeOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReasonTypeOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReasonTypeOption) ProtoMessage() {}

func (x *ReasonTypeOption) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReasonTypeOption.ProtoReflect.Descriptor instead.
func (*ReasonTypeOption) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{81}
}

func (x *ReasonTypeOption) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ReasonTypeOption) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type ReasonTypeOptionListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*ReasonTypeOption `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Count   int32               `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *ReasonTypeOptionListResponse) Reset() {
	*x = ReasonTypeOptionListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReasonTypeOptionListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReasonTypeOptionListResponse) ProtoMessage() {}

func (x *ReasonTypeOptionListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReasonTypeOptionListResponse.ProtoReflect.Descriptor instead.
func (*ReasonTypeOptionListResponse) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{82}
}

func (x *ReasonTypeOptionListResponse) GetResults() []*ReasonTypeOption {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *ReasonTypeOptionListResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ReasonTypeOptionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TradeType int32 `protobuf:"varint,1,opt,name=trade_type,json=tradeType,proto3" json:"trade_type,omitempty"`
}

func (x *ReasonTypeOptionsRequest) Reset() {
	*x = ReasonTypeOptionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReasonTypeOptionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReasonTypeOptionsRequest) ProtoMessage() {}

func (x *ReasonTypeOptionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReasonTypeOptionsRequest.ProtoReflect.Descriptor instead.
func (*ReasonTypeOptionsRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{83}
}

func (x *ReasonTypeOptionsRequest) GetTradeType() int32 {
	if x != nil {
		return x.TradeType
	}
	return 0
}

type RefundReasonCheckListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderConfig int64 `protobuf:"varint,1,opt,name=order_config,json=orderConfig,proto3" json:"order_config,omitempty"`
	Type        int32 `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *RefundReasonCheckListRequest) Reset() {
	*x = RefundReasonCheckListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefundReasonCheckListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefundReasonCheckListRequest) ProtoMessage() {}

func (x *RefundReasonCheckListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefundReasonCheckListRequest.ProtoReflect.Descriptor instead.
func (*RefundReasonCheckListRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{84}
}

func (x *RefundReasonCheckListRequest) GetOrderConfig() int64 {
	if x != nil {
		return x.OrderConfig
	}
	return 0
}

func (x *RefundReasonCheckListRequest) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type RefundReasonCheckListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReasonName string `protobuf:"bytes,1,opt,name=reason_name,json=reasonName,proto3" json:"reason_name,omitempty"`
	ReasonCode string `protobuf:"bytes,2,opt,name=reason_code,json=reasonCode,proto3" json:"reason_code,omitempty"`
}

func (x *RefundReasonCheckListResponse) Reset() {
	*x = RefundReasonCheckListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefundReasonCheckListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefundReasonCheckListResponse) ProtoMessage() {}

func (x *RefundReasonCheckListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefundReasonCheckListResponse.ProtoReflect.Descriptor instead.
func (*RefundReasonCheckListResponse) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{85}
}

func (x *RefundReasonCheckListResponse) GetReasonName() string {
	if x != nil {
		return x.ReasonName
	}
	return ""
}

func (x *RefundReasonCheckListResponse) GetReasonCode() string {
	if x != nil {
		return x.ReasonCode
	}
	return ""
}

type RefundReasonOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code  int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *RefundReasonOption) Reset() {
	*x = RefundReasonOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefundReasonOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefundReasonOption) ProtoMessage() {}

func (x *RefundReasonOption) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefundReasonOption.ProtoReflect.Descriptor instead.
func (*RefundReasonOption) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{86}
}

func (x *RefundReasonOption) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *RefundReasonOption) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type RefundReasonOptionListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*RefundReasonOption `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Count   int32                 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *RefundReasonOptionListResponse) Reset() {
	*x = RefundReasonOptionListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefundReasonOptionListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefundReasonOptionListResponse) ProtoMessage() {}

func (x *RefundReasonOptionListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefundReasonOptionListResponse.ProtoReflect.Descriptor instead.
func (*RefundReasonOptionListResponse) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{87}
}

func (x *RefundReasonOptionListResponse) GetResults() []*RefundReasonOption {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *RefundReasonOptionListResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type RefundReasonOptionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RefundReasonOptionsRequest) Reset() {
	*x = RefundReasonOptionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefundReasonOptionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefundReasonOptionsRequest) ProtoMessage() {}

func (x *RefundReasonOptionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefundReasonOptionsRequest.ProtoReflect.Descriptor instead.
func (*RefundReasonOptionsRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{88}
}

type TradeReasonOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 int32                              `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreateTime         string                             `protobuf:"bytes,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime         string                             `protobuf:"bytes,3,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	Type               int32                              `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
	ReasonCode         int32                              `protobuf:"varint,5,opt,name=reason_code,json=reasonCode,proto3" json:"reason_code,omitempty"`
	ReasonName         string                             `protobuf:"bytes,6,opt,name=reason_name,json=reasonName,proto3" json:"reason_name,omitempty"`
	ReasonDesc         *string                            `protobuf:"bytes,7,opt,name=reason_desc,json=reasonDesc,proto3,oneof" json:"reason_desc,omitempty"`
	IsValid            bool                               `protobuf:"varint,8,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
	OrderConfig        *int64                             `protobuf:"varint,9,opt,name=order_config,json=orderConfig,proto3,oneof" json:"order_config,omitempty"`
	Parent             *int64                             `protobuf:"varint,10,opt,name=parent,proto3,oneof" json:"parent,omitempty"`
	TypeName           string                             `protobuf:"bytes,11,opt,name=type_name,json=typeName,proto3" json:"type_name,omitempty"`
	Children           []*CtmRefundReasonChildrenResponse `protobuf:"bytes,12,rep,name=children,proto3" json:"children,omitempty"`
	CancelOrders       []int64                            `protobuf:"varint,13,rep,packed,name=cancel_orders,json=cancelOrders,proto3" json:"cancel_orders,omitempty"`
	RefundOrders       []int64                            `protobuf:"varint,14,rep,packed,name=refund_orders,json=refundOrders,proto3" json:"refund_orders,omitempty"`
	RefundRejectOrders []int64                            `protobuf:"varint,15,rep,packed,name=refund_reject_orders,json=refundRejectOrders,proto3" json:"refund_reject_orders,omitempty"`
	EventOrders        []int64                            `protobuf:"varint,16,rep,packed,name=event_orders,json=eventOrders,proto3" json:"event_orders,omitempty"`
}

func (x *TradeReasonOption) Reset() {
	*x = TradeReasonOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TradeReasonOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeReasonOption) ProtoMessage() {}

func (x *TradeReasonOption) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeReasonOption.ProtoReflect.Descriptor instead.
func (*TradeReasonOption) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{89}
}

func (x *TradeReasonOption) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TradeReasonOption) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *TradeReasonOption) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *TradeReasonOption) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *TradeReasonOption) GetReasonCode() int32 {
	if x != nil {
		return x.ReasonCode
	}
	return 0
}

func (x *TradeReasonOption) GetReasonName() string {
	if x != nil {
		return x.ReasonName
	}
	return ""
}

func (x *TradeReasonOption) GetReasonDesc() string {
	if x != nil && x.ReasonDesc != nil {
		return *x.ReasonDesc
	}
	return ""
}

func (x *TradeReasonOption) GetIsValid() bool {
	if x != nil {
		return x.IsValid
	}
	return false
}

func (x *TradeReasonOption) GetOrderConfig() int64 {
	if x != nil && x.OrderConfig != nil {
		return *x.OrderConfig
	}
	return 0
}

func (x *TradeReasonOption) GetParent() int64 {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return 0
}

func (x *TradeReasonOption) GetTypeName() string {
	if x != nil {
		return x.TypeName
	}
	return ""
}

func (x *TradeReasonOption) GetChildren() []*CtmRefundReasonChildrenResponse {
	if x != nil {
		return x.Children
	}
	return nil
}

func (x *TradeReasonOption) GetCancelOrders() []int64 {
	if x != nil {
		return x.CancelOrders
	}
	return nil
}

func (x *TradeReasonOption) GetRefundOrders() []int64 {
	if x != nil {
		return x.RefundOrders
	}
	return nil
}

func (x *TradeReasonOption) GetRefundRejectOrders() []int64 {
	if x != nil {
		return x.RefundRejectOrders
	}
	return nil
}

func (x *TradeReasonOption) GetEventOrders() []int64 {
	if x != nil {
		return x.EventOrders
	}
	return nil
}

type TradeReasonOptionListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*TradeReasonOption `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Count   int32                `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *TradeReasonOptionListResponse) Reset() {
	*x = TradeReasonOptionListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TradeReasonOptionListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeReasonOptionListResponse) ProtoMessage() {}

func (x *TradeReasonOptionListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeReasonOptionListResponse.ProtoReflect.Descriptor instead.
func (*TradeReasonOptionListResponse) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{90}
}

func (x *TradeReasonOptionListResponse) GetResults() []*TradeReasonOption {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *TradeReasonOptionListResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type TradeReasonOptionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TradeType int32  `protobuf:"varint,1,opt,name=trade_type,json=tradeType,proto3" json:"trade_type,omitempty"`
	Filters   string `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
}

func (x *TradeReasonOptionsRequest) Reset() {
	*x = TradeReasonOptionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TradeReasonOptionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeReasonOptionsRequest) ProtoMessage() {}

func (x *TradeReasonOptionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeReasonOptionsRequest.ProtoReflect.Descriptor instead.
func (*TradeReasonOptionsRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{91}
}

func (x *TradeReasonOptionsRequest) GetTradeType() int32 {
	if x != nil {
		return x.TradeType
	}
	return 0
}

func (x *TradeReasonOptionsRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

type TradeStatusOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code  int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *TradeStatusOptions) Reset() {
	*x = TradeStatusOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TradeStatusOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeStatusOptions) ProtoMessage() {}

func (x *TradeStatusOptions) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeStatusOptions.ProtoReflect.Descriptor instead.
func (*TradeStatusOptions) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{92}
}

func (x *TradeStatusOptions) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *TradeStatusOptions) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type TradeStatusOptionsListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*TradeStatusOptions `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Count   int32                 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *TradeStatusOptionsListResponse) Reset() {
	*x = TradeStatusOptionsListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TradeStatusOptionsListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeStatusOptionsListResponse) ProtoMessage() {}

func (x *TradeStatusOptionsListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeStatusOptionsListResponse.ProtoReflect.Descriptor instead.
func (*TradeStatusOptionsListResponse) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{93}
}

func (x *TradeStatusOptionsListResponse) GetResults() []*TradeStatusOptions {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *TradeStatusOptionsListResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type TradeStatusOptionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TradeStatusOptionsRequest) Reset() {
	*x = TradeStatusOptionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TradeStatusOptionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeStatusOptionsRequest) ProtoMessage() {}

func (x *TradeStatusOptionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeStatusOptionsRequest.ProtoReflect.Descriptor instead.
func (*TradeStatusOptionsRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{94}
}

type TradeTypeOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code  int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Id    int64  `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *TradeTypeOption) Reset() {
	*x = TradeTypeOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TradeTypeOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeTypeOption) ProtoMessage() {}

func (x *TradeTypeOption) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeTypeOption.ProtoReflect.Descriptor instead.
func (*TradeTypeOption) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{95}
}

func (x *TradeTypeOption) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *TradeTypeOption) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *TradeTypeOption) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type TradeTypeOptionListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*TradeTypeOption `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Count   int32              `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *TradeTypeOptionListResponse) Reset() {
	*x = TradeTypeOptionListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TradeTypeOptionListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeTypeOptionListResponse) ProtoMessage() {}

func (x *TradeTypeOptionListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeTypeOptionListResponse.ProtoReflect.Descriptor instead.
func (*TradeTypeOptionListResponse) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{96}
}

func (x *TradeTypeOptionListResponse) GetResults() []*TradeTypeOption {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *TradeTypeOptionListResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type TradeTypeOptionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TradeTypeOptionsRequest) Reset() {
	*x = TradeTypeOptionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TradeTypeOptionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeTypeOptionsRequest) ProtoMessage() {}

func (x *TradeTypeOptionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeTypeOptionsRequest.ProtoReflect.Descriptor instead.
func (*TradeTypeOptionsRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{97}
}

type WdtShop struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShopCode string `protobuf:"bytes,1,opt,name=shop_code,json=shopCode,proto3" json:"shop_code,omitempty"`
	ShopName string `protobuf:"bytes,2,opt,name=shop_name,json=shopName,proto3" json:"shop_name,omitempty"`
}

func (x *WdtShop) Reset() {
	*x = WdtShop{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WdtShop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WdtShop) ProtoMessage() {}

func (x *WdtShop) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WdtShop.ProtoReflect.Descriptor instead.
func (*WdtShop) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{98}
}

func (x *WdtShop) GetShopCode() string {
	if x != nil {
		return x.ShopCode
	}
	return ""
}

func (x *WdtShop) GetShopName() string {
	if x != nil {
		return x.ShopName
	}
	return ""
}

type WdtShopListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WdtShopListRequest) Reset() {
	*x = WdtShopListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WdtShopListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WdtShopListRequest) ProtoMessage() {}

func (x *WdtShopListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WdtShopListRequest.ProtoReflect.Descriptor instead.
func (*WdtShopListRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{99}
}

type WdtShopListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*WdtShop `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Count   int32      `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *WdtShopListResponse) Reset() {
	*x = WdtShopListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WdtShopListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WdtShopListResponse) ProtoMessage() {}

func (x *WdtShopListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WdtShopListResponse.ProtoReflect.Descriptor instead.
func (*WdtShopListResponse) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{100}
}

func (x *WdtShopListResponse) GetResults() []*WdtShop {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *WdtShopListResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type WdtStock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StockCode string `protobuf:"bytes,1,opt,name=stock_code,json=stockCode,proto3" json:"stock_code,omitempty"`
	StockName string `protobuf:"bytes,2,opt,name=stock_name,json=stockName,proto3" json:"stock_name,omitempty"`
}

func (x *WdtStock) Reset() {
	*x = WdtStock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WdtStock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WdtStock) ProtoMessage() {}

func (x *WdtStock) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WdtStock.ProtoReflect.Descriptor instead.
func (*WdtStock) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{101}
}

func (x *WdtStock) GetStockCode() string {
	if x != nil {
		return x.StockCode
	}
	return ""
}

func (x *WdtStock) GetStockName() string {
	if x != nil {
		return x.StockName
	}
	return ""
}

type WdtStockListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WdtStockListRequest) Reset() {
	*x = WdtStockListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WdtStockListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WdtStockListRequest) ProtoMessage() {}

func (x *WdtStockListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WdtStockListRequest.ProtoReflect.Descriptor instead.
func (*WdtStockListRequest) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{102}
}

type WdtStockListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*WdtStock `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Count   int32       `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *WdtStockListResponse) Reset() {
	*x = WdtStockListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_ito_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WdtStockListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WdtStockListResponse) ProtoMessage() {}

func (x *WdtStockListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_ito_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WdtStockListResponse.ProtoReflect.Descriptor instead.
func (*WdtStockListResponse) Descriptor() ([]byte, []int) {
	return file_order_ito_proto_rawDescGZIP(), []int{103}
}

func (x *WdtStockListResponse) GetResults() []*WdtStock {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *WdtStockListResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

var File_order_ito_proto protoreflect.FileDescriptor

var file_order_ito_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x1d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f,
	0x22, 0x15, 0x0a, 0x13, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x73, 0x74,
	0x72, 0x6f, 0x79, 0x52, 0x65, 0x73, 0x70, 0x22, 0x16, 0x0a, 0x14, 0x43, 0x74, 0x6d, 0x43, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x20, 0x0a, 0x1e, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x47, 0x6f, 0x6f, 0x64, 0x73,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x22, 0x0a, 0x20, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x22, 0x19, 0x0a, 0x17, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x43, 0x6f, 0x6e, 0x66, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x1e, 0x0a, 0x1c, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x79, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x24, 0x0a, 0x22, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x44, 0x65, 0x73, 0x74, 0x72,
	0x6f, 0x79, 0x52, 0x65, 0x73, 0x70, 0x22, 0x1c, 0x0a, 0x1a, 0x43, 0x74, 0x6d, 0x52, 0x65, 0x66,
	0x75, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x47, 0x0a, 0x1a, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x22, 0x39, 0x0a,
	0x1b, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x61, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x61, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x22, 0xbb, 0x07, 0x0a, 0x16, 0x43, 0x74, 0x6d,
	0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x73, 0x6b,
	0x75, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x63, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x53, 0x6b, 0x75, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x26, 0x0a, 0x0c, 0x63, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x01, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x88, 0x01,
	0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x48, 0x02, 0x52, 0x0d, 0x74, 0x72, 0x69,
	0x67, 0x67, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a,
	0x0f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x48, 0x03, 0x52, 0x0e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x74,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x71, 0x74, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05,
	0x48, 0x04, 0x52, 0x0a, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x51, 0x74, 0x79, 0x88, 0x01,
	0x01, 0x12, 0x1f, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x05, 0x48, 0x05, 0x52, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x88,
	0x01, 0x01, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x63, 0x61, 0x6e, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x12,
	0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x0c, 0x61, 0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x0b, 0x61, 0x63,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a,
	0x63, 0x6c, 0x61, 0x69, 0x6d, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x07, 0x52, 0x09, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x22, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x52, 0x61, 0x6e, 0x67,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0a, 0x52,
	0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x10,
	0x0a, 0x03, 0x63, 0x74, 0x6d, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x63, 0x74, 0x6d,
	0x12, 0x22, 0x0a, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x03, 0x48, 0x0b, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x55, 0x73, 0x65,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x18, 0x17, 0x20, 0x01, 0x28, 0x08, 0x48, 0x0c, 0x52, 0x07, 0x69, 0x73,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x5f, 0x73, 0x6b, 0x75, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x63, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x74, 0x72, 0x69,
	0x67, 0x67, 0x65, 0x72, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x12, 0x0a, 0x10, 0x5f,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42,
	0x0e, 0x0a, 0x0c, 0x5f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x71, 0x74, 0x79, 0x42,
	0x0b, 0x0a, 0x09, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x0f, 0x0a, 0x0d,
	0x5f, 0x61, 0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x0d, 0x0a,
	0x0b, 0x5f, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x0d, 0x0a, 0x0b,
	0x5f, 0x70, 0x72, 0x6f, 0x64, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x69, 0x73,
	0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x22, 0x29, 0x0a, 0x17, 0x43, 0x74, 0x6d, 0x43, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x30, 0x0a, 0x14, 0x43, 0x74, 0x6d, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x73, 0x22, 0x79, 0x0a, 0x15, 0x43, 0x74, 0x6d, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x07,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74,
	0x6d, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xa1,
	0x02, 0x0a, 0x17, 0x43, 0x74, 0x6d, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x0e, 0x63, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x31, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69,
	0x74, 0x6f, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0d, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x65, 0x73, 0x12, 0x54, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0b, 0x63,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x56, 0x0a, 0x0d, 0x63, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x31, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74,
	0x6f, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0c, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0xfc, 0x08, 0x0a, 0x11, 0x43, 0x74, 0x6d, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0a, 0x63, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x73, 0x6b, 0x75, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x09, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x53, 0x6b, 0x75, 0x88, 0x01, 0x01, 0x12, 0x1f,
	0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x26, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x74, 0x72, 0x6f,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x49, 0x6e, 0x74, 0x72, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x74, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05,
	0x48, 0x02, 0x52, 0x0d, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a, 0x0f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x48, 0x03, 0x52,
	0x0e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x88,
	0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x71, 0x74,
	0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x48, 0x04, 0x52, 0x0a, 0x74, 0x72, 0x69, 0x67, 0x67,
	0x65, 0x72, 0x51, 0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x48, 0x05, 0x52, 0x08, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x6e,
	0x5f, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x63, 0x61,
	0x6e, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x0c, 0x61,
	0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x06, 0x52, 0x0b, 0x61, 0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x09, 0x63, 0x6c, 0x61, 0x69, 0x6d,
	0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x5f,
	0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x64, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x24, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x0a, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x74, 0x6d, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x63, 0x74, 0x6d, 0x12, 0x22, 0x0a, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0b, 0x52, 0x09, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x55, 0x73, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x0c, 0x63,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x17, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x1f,
	0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x18, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1e, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x19, 0x20, 0x01, 0x28,
	0x08, 0x48, 0x0c, 0x52, 0x07, 0x69, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12,
	0x28, 0x0a, 0x10, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x1b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x1c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4e,
	0x61, 0x6d, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x73,
	0x6b, 0x75, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x69, 0x6e,
	0x74, 0x72, 0x6f, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x74,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x71, 0x74, 0x79, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x61, 0x63, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x6c, 0x61,
	0x69, 0x6d, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x72, 0x6f, 0x64,
	0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f,
	0x75, 0x73, 0x65, 0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x69, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x22, 0x2a, 0x0a, 0x18, 0x43, 0x74, 0x6d, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65,
	0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0xf0, 0x07,
	0x0a, 0x16, 0x43, 0x74, 0x6d, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x33, 0x0a, 0x16, 0x5f, 0x70, 0x61, 0x72,
	0x74, 0x69, 0x61, 0x6c, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61,
	0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x22, 0x0a,
	0x0a, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x73, 0x6b, 0x75, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x09, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x53, 0x6b, 0x75, 0x88, 0x01,
	0x01, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x26, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x69, 0x6e,
	0x74, 0x72, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0b, 0x63, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x74,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x05, 0x48, 0x02, 0x52, 0x0d, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a, 0x0f, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05,
	0x48, 0x03, 0x52, 0x0e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x5f, 0x71, 0x74, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x48, 0x04, 0x52, 0x0a, 0x74, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x51, 0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x48, 0x05, 0x52,
	0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x61, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x63, 0x61, 0x6e, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x26,
	0x0a, 0x0c, 0x61, 0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x0b, 0x61, 0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x09, 0x63, 0x6c,
	0x61, 0x69, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x70, 0x72,
	0x6f, 0x64, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x22,
	0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0a, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x74, 0x6d, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x63, 0x74, 0x6d, 0x12, 0x22, 0x0a, 0x0a, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0b,
	0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x55, 0x73, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x21,
	0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x17, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1e, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x18,
	0x20, 0x01, 0x28, 0x08, 0x48, 0x0c, 0x52, 0x07, 0x69, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x88,
	0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x73, 0x6b,
	0x75, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x74,
	0x72, 0x6f, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x74, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x71, 0x74, 0x79, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x61, 0x63, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x6c, 0x61, 0x69,
	0x6d, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x5f,
	0x72, 0x61, 0x6e, 0x67, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x75,
	0x73, 0x65, 0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x69, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x22, 0xb5, 0x03, 0x0a, 0x19, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e,
	0x66, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x6c, 0x61, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74,
	0x72, 0x61, 0x64, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x74, 0x72, 0x61, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x68,
	0x6f, 0x70, 0x5f, 0x6e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x68, 0x6f,
	0x70, 0x4e, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x70, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x6e, 0x6f,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73,
	0x65, 0x4e, 0x6f, 0x12, 0x25, 0x0a, 0x0e, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x77, 0x61, 0x72,
	0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x5f, 0x6f, 0x76, 0x65, 0x72,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x72, 0x6d, 0x4f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x66,
	0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x4f, 0x76, 0x65, 0x72,
	0x74, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x61, 0x70,
	0x70, 0x72, 0x6f, 0x76, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x61, 0x75, 0x74,
	0x6f, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x22, 0x2c, 0x0a, 0x1a, 0x43, 0x74, 0x6d, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x19, 0x0a, 0x17, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x7f, 0x0a, 0x18, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e,
	0x66, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a,
	0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43,
	0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0xf2, 0x03, 0x0a, 0x14, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x6c, 0x61, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x72,
	0x61, 0x64, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x74, 0x72, 0x61, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x68, 0x6f,
	0x70, 0x5f, 0x6e, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70,
	0x4e, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x6e, 0x6f, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65,
	0x4e, 0x6f, 0x12, 0x25, 0x0a, 0x0e, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x77, 0x61, 0x72, 0x65,
	0x68, 0x6f, 0x75, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x72, 0x6d, 0x4f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x66, 0x69,
	0x6e, 0x69, 0x73, 0x68, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0e, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x4f, 0x76, 0x65, 0x72, 0x74,
	0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x61, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x61, 0x75, 0x74, 0x6f,
	0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x22, 0x2d, 0x0a, 0x1b, 0x43, 0x74, 0x6d, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0xea, 0x03, 0x0a, 0x19, 0x43, 0x74, 0x6d, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x33, 0x0a, 0x16, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c,
	0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61,
	0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c,
	0x61, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x72, 0x61, 0x64,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x6e, 0x6f,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x4e, 0x6f, 0x12, 0x1b,
	0x0a, 0x09, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x77,
	0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x4e, 0x6f, 0x12, 0x25,
	0x0a, 0x0e, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x4f, 0x76,
	0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68,
	0x5f, 0x6f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0e, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x4f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x61, 0x75, 0x74, 0x6f, 0x41, 0x70, 0x70, 0x72,
	0x6f, 0x76, 0x65, 0x22, 0x28, 0x0a, 0x16, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44,
	0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x8c, 0x05,
	0x0a, 0x20, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x10, 0x0a, 0x03,
	0x6e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x5f, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x61, 0x64, 0x6a,
	0x75, 0x73, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0b, 0x73, 0x68, 0x61, 0x72, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x21, 0x0a, 0x0c, 0x64, 0x65, 0x62, 0x69, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x64, 0x65, 0x62, 0x69, 0x74, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x63, 0x6f, 0x72,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x63, 0x65, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x62, 0x61, 0x64,
	0x67, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x63, 0x65, 0x42,
	0x61, 0x64, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x75,
	0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x69, 0x63, 0x65, 0x4e, 0x75,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66,
	0x75, 0x6e, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e,
	0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22,
	0x0a, 0x0a, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x01, 0x52, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x73, 0x70, 0x75, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x53, 0x70, 0x75, 0x12,
	0x17, 0x0a, 0x07, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x6e, 0x6f, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x70, 0x65, 0x63, 0x4e, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x74, 0x6d, 0x5f,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x74, 0x6d,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x61, 0x6e, 0x5f, 0x65, 0x64, 0x69,
	0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x63, 0x61, 0x6e, 0x45, 0x64, 0x69, 0x74,
	0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x42, 0x0d, 0x0a,
	0x0b, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x33, 0x0a, 0x21,
	0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x3a, 0x0a, 0x1e, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x47, 0x6f, 0x6f,
	0x64, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x22, 0x8d, 0x01,
	0x0a, 0x1f, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x54, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69,
	0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x47, 0x6f, 0x6f, 0x64, 0x73,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x07,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x86, 0x05,
	0x0a, 0x1a, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x61, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x61, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x25, 0x0a, 0x0e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x73, 0x68, 0x61, 0x72, 0x65, 0x44, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x62,
	0x69, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0b, 0x64, 0x65, 0x62, 0x69, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x63, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x62, 0x61, 0x64, 0x67, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x63, 0x65, 0x42, 0x61, 0x64, 0x67, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x70, 0x72, 0x69, 0x63, 0x65, 0x4e, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64,
	0x73, 0x5f, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x67, 0x6f,
	0x6f, 0x64, 0x73, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x67, 0x6f, 0x6f, 0x64,
	0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x09,
	0x67, 0x6f, 0x6f, 0x64, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x09,
	0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x73, 0x70, 0x75, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x53, 0x70, 0x75, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x70, 0x65,
	0x63, 0x5f, 0x6e, 0x6f, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x70, 0x65, 0x63,
	0x4e, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x74, 0x6d, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12,
	0x19, 0x0a, 0x08, 0x63, 0x61, 0x6e, 0x5f, 0x65, 0x64, 0x69, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x63, 0x61, 0x6e, 0x45, 0x64, 0x69, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x67,
	0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x67, 0x6f, 0x6f, 0x64,
	0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xfe, 0x05, 0x0a, 0x1b, 0x43, 0x74, 0x6d, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x61, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x61, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x70, 0x72, 0x69, 0x63, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x62, 0x61, 0x64, 0x67, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x63, 0x65, 0x42, 0x61, 0x64, 0x67, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x70, 0x72, 0x69, 0x63, 0x65, 0x4e, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73,
	0x5f, 0x73, 0x70, 0x75, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x6f, 0x6f, 0x64,
	0x73, 0x53, 0x70, 0x75, 0x12, 0x1e, 0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x09, 0x67, 0x6f, 0x6f, 0x64,
	0x73, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x70, 0x65, 0x63,
	0x5f, 0x6e, 0x6f, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x70, 0x65, 0x63, 0x4e,
	0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x74, 0x6d, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x2c, 0x0a, 0x12, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x66,
	0x75, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x64, 0x65, 0x62, 0x69, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x17, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0b, 0x64, 0x65, 0x62, 0x69, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x63, 0x61, 0x6e, 0x5f, 0x65, 0x64, 0x69, 0x74, 0x18, 0x18, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x63, 0x61, 0x6e, 0x45, 0x64, 0x69, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f,
	0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x67, 0x6f, 0x6f,
	0x64, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x34, 0x0a, 0x22, 0x43, 0x74, 0x6d, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0xc1, 0x05,
	0x0a, 0x20, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x33, 0x0a, 0x16,
	0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x50, 0x61,
	0x72, 0x74, 0x69, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03,
	0x6e, 0x75, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x64, 0x6a,
	0x75, 0x73, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x0c, 0x61, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0d, 0x73, 0x68, 0x61, 0x72, 0x65, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x73, 0x68, 0x61, 0x72, 0x65, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x62, 0x69, 0x74, 0x5f, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x64, 0x65, 0x62, 0x69,
	0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x5f, 0x62, 0x61, 0x64, 0x67, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x42, 0x61, 0x64, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x5f, 0x6e, 0x75, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x4e, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23,
	0x0a, 0x0d, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73,
	0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73,
	0x5f, 0x73, 0x70, 0x75, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x6f, 0x6f, 0x64,
	0x73, 0x53, 0x70, 0x75, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x6e, 0x6f, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x70, 0x65, 0x63, 0x4e, 0x6f, 0x12, 0x1b, 0x0a,
	0x09, 0x63, 0x74, 0x6d, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x63, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x61,
	0x6e, 0x5f, 0x65, 0x64, 0x69, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x63, 0x61,
	0x6e, 0x45, 0x64, 0x69, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f,
	0x69, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0xab, 0x08, 0x0a, 0x1f, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x69, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x65,
	0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x61,
	0x79, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x65, 0x72,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x70,
	0x61, 0x79, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x11, 0x70,
	0x61, 0x79, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x6f,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0f, 0x70, 0x61, 0x79, 0x65, 0x72, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b,
	0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x02, 0x52, 0x0a, 0x70, 0x61, 0x79, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x0a, 0x70, 0x61, 0x79, 0x65, 0x72,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x70, 0x61, 0x79, 0x65,
	0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x04, 0x52, 0x0c, 0x70, 0x61, 0x79, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x88,
	0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x62, 0x61, 0x6e, 0x6b,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x09, 0x70, 0x61, 0x79, 0x65, 0x72, 0x42,
	0x61, 0x6e, 0x6b, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52,
	0x0c, 0x70, 0x61, 0x79, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01,
	0x12, 0x2a, 0x0a, 0x0e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x01, 0x48, 0x07, 0x52, 0x0d, 0x69, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e,
	0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x0d, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0a, 0x69, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52,
	0x09, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x4e, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a,
	0x0c, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x0a, 0x52, 0x0b, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x74, 0x6d, 0x5f, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x74, 0x6d, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x12, 0x2a, 0x0a, 0x0e, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0b, 0x52, 0x0d, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0d,
	0x0a, 0x0b, 0x5f, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x14, 0x0a,
	0x12, 0x5f, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x5f, 0x6e, 0x6f, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f,
	0x62, 0x61, 0x6e, 0x6b, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x69, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x42, 0x0d, 0x0a, 0x0b,
	0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x6f, 0x42, 0x0f, 0x0a, 0x0d, 0x5f,
	0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x11, 0x0a, 0x0f,
	0x5f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x22,
	0x88, 0x07, 0x0a, 0x22, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73,
	0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x61, 0x79, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x22, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x70, 0x61, 0x79, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x11, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x01, 0x52, 0x0f, 0x70, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x4e, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x65, 0x72,
	0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0a,
	0x70, 0x61, 0x79, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a,
	0x0b, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x03, 0x52, 0x0a, 0x70, 0x61, 0x79, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x0c, 0x70, 0x61,
	0x79, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a,
	0x0a, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x62, 0x61, 0x6e, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x05, 0x52, 0x09, 0x70, 0x61, 0x79, 0x65, 0x72, 0x42, 0x61, 0x6e, 0x6b, 0x88, 0x01,
	0x01, 0x12, 0x28, 0x0a, 0x0d, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x0c, 0x70, 0x61, 0x79, 0x65,
	0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x69,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x01, 0x48, 0x07, 0x52, 0x0d, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x69, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x08, 0x52, 0x0d, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6e,
	0x6f, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x4e, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x69, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0a, 0x52,
	0x0b, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x1b, 0x0a, 0x09, 0x63, 0x74, 0x6d, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x63, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x0e,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x03, 0x48, 0x0b, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x61,
	0x79, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x70, 0x61, 0x79,
	0x65, 0x72, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x42, 0x0e,
	0x0a, 0x0c, 0x5f, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x42, 0x0e,
	0x0a, 0x0c, 0x5f, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x42, 0x10,
	0x0a, 0x0e, 0x5f, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x62, 0x61, 0x6e, 0x6b, 0x42,
	0x10, 0x0a, 0x0e, 0x5f, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x5f, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x69, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x5f, 0x6e, 0x6f, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x22, 0x35, 0x0a, 0x23, 0x43, 0x74,
	0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x3c, 0x0a, 0x20, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x22,
	0x36, 0x0a, 0x24, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0xc2, 0x11, 0x0a, 0x22, 0x43, 0x74, 0x6d, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x58, 0x0a, 0x0a, 0x67, 0x6f, 0x6f, 0x64,
	0x73, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x5c, 0x0a, 0x0e, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x5f, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x52, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x0d, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73,
	0x12, 0x33, 0x0a, 0x16, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x13, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x72, 0x61, 0x64, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x6e, 0x6f,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x4e, 0x6f, 0x12, 0x1b,
	0x0a, 0x09, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x77,
	0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x4e, 0x6f, 0x12, 0x25,
	0x0a, 0x0e, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x74, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x64, 0x65,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x74,
	0x72, 0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61,
	0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x70, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x08, 0x70, 0x61, 0x79,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x70,
	0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x65, 0x72, 0x6d, 0x12, 0x1d,
	0x0a, 0x0a, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x62, 0x75, 0x79, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x12, 0x26, 0x0a,
	0x0c, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0b, 0x62, 0x75, 0x79, 0x65, 0x72, 0x4d, 0x6f, 0x62, 0x69,
	0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0c,
	0x62, 0x75, 0x79, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x24, 0x0a, 0x0b, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x0a, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x4d, 0x65,
	0x6d, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x0c,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x30, 0x0a, 0x11, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x6e, 0x63, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x10, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x28, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x63, 0x69,
	0x74, 0x79, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x43, 0x69, 0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x11, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74,
	0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x10, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x88, 0x01, 0x01, 0x12, 0x2e, 0x0a,
	0x10, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x0f, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a,
	0x0f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
	0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x0b, 0x70,
	0x6f, 0x73, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x0a, 0x70, 0x6f, 0x73, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c,
	0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x1c, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0b, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x1d, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x09, 0x63, 0x6f, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e,
	0x0a, 0x0b, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x1e, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x09, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x64, 0x46, 0x65, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x69, 0x64, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x70, 0x61,
	0x69, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x20, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x69, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x21, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x22, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x62, 0x69, 0x74, 0x5f, 0x70,
	0x61, 0x79, 0x18, 0x23, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x64, 0x65, 0x62, 0x69, 0x74, 0x50,
	0x61, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x69, 0x66, 0x74, 0x5f, 0x70, 0x61, 0x79, 0x18, 0x24,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x67, 0x69, 0x66, 0x74, 0x50, 0x61, 0x79, 0x12, 0x1b, 0x0a,
	0x09, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x70, 0x61, 0x79, 0x18, 0x25, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x50, 0x61, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x61,
	0x64, 0x67, 0x65, 0x5f, 0x70, 0x61, 0x79, 0x18, 0x26, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x62,
	0x61, 0x64, 0x67, 0x65, 0x50, 0x61, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x75, 0x74, 0x5f, 0x70,
	0x61, 0x79, 0x18, 0x27, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x75, 0x74, 0x50, 0x61, 0x79,
	0x12, 0x15, 0x0a, 0x03, 0x63, 0x74, 0x6d, 0x18, 0x28, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0a, 0x52,
	0x03, 0x63, 0x74, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x72, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x29, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0b, 0x52,
	0x0b, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12,
	0x22, 0x0a, 0x0a, 0x64, 0x65, 0x62, 0x69, 0x74, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x2a, 0x20,
	0x01, 0x28, 0x03, 0x48, 0x0c, 0x52, 0x09, 0x64, 0x65, 0x62, 0x69, 0x74, 0x43, 0x61, 0x72, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x63, 0x61, 0x72,
	0x64, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0d, 0x52, 0x09, 0x73, 0x63, 0x6f, 0x72, 0x65,
	0x43, 0x61, 0x72, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x62, 0x61, 0x64, 0x67, 0x65,
	0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0e, 0x52, 0x09, 0x62,
	0x61, 0x64, 0x67, 0x65, 0x43, 0x61, 0x72, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x6e,
	0x75, 0x74, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0f, 0x52,
	0x07, 0x6e, 0x75, 0x74, 0x43, 0x61, 0x72, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x0a, 0x67,
	0x69, 0x66, 0x74, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x73, 0x18, 0x2e, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x09, 0x67, 0x69, 0x66, 0x74, 0x43, 0x61, 0x72, 0x64, 0x73, 0x12, 0x58, 0x0a, 0x0b, 0x63, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x2f, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x37, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e,
	0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x4e, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x70, 0x61,
	0x79, 0x18, 0x30, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x50, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x08, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x50, 0x61, 0x79, 0x12, 0x5a, 0x0a, 0x0d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x18, 0x31, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x0f, 0x0a,
	0x0d, 0x5f, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x42, 0x10,
	0x0a, 0x0e, 0x5f, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x6d, 0x6f,
	0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x63, 0x69, 0x74, 0x79, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74,
	0x42, 0x13, 0x0a, 0x11, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x63, 0x74,
	0x6d, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x64, 0x65, 0x62, 0x69, 0x74, 0x5f, 0x63, 0x61, 0x72,
	0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x63, 0x61, 0x72, 0x64,
	0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x62, 0x61, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x42,
	0x0b, 0x0a, 0x09, 0x5f, 0x6e, 0x75, 0x74, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x22, 0x85, 0x01, 0x0a,
	0x1b, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x07,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74,
	0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0xfc, 0x06, 0x0a, 0x16, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x70, 0x61, 0x79, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0a, 0x70,
	0x61, 0x79, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x09, 0x70, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x2f, 0x0a, 0x11, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x5f, 0x6e, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0f, 0x70, 0x61,
	0x79, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x88, 0x01, 0x01,
	0x12, 0x24, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0a, 0x70, 0x61, 0x79, 0x65, 0x72, 0x50, 0x68,
	0x6f, 0x6e, 0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x0a, 0x70,
	0x61, 0x79, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d,
	0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x0c, 0x70, 0x61, 0x79, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f,
	0x62, 0x61, 0x6e, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x09, 0x70, 0x61,
	0x79, 0x65, 0x72, 0x42, 0x61, 0x6e, 0x6b, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x70, 0x61,
	0x79, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x06, 0x52, 0x0c, 0x70, 0x61, 0x79, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x48, 0x07, 0x52, 0x0d,
	0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01,
	0x12, 0x2a, 0x0a, 0x0e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x0d, 0x69, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x0b,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a,
	0x0a, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x4e, 0x6f, 0x88, 0x01,
	0x01, 0x12, 0x26, 0x0a, 0x0c, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0a, 0x52, 0x0b, 0x69, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x74, 0x6d,
	0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x74,
	0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x0e, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0b,
	0x52, 0x0d, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x88,
	0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x70, 0x61, 0x79, 0x65,
	0x72, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x70, 0x61, 0x79, 0x65,
	0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x70, 0x61, 0x79, 0x65,
	0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x61,
	0x79, 0x65, 0x72, 0x5f, 0x62, 0x61, 0x6e, 0x6b, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x70, 0x61, 0x79,
	0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x69,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x11, 0x0a,
	0x0f, 0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x6f, 0x42,
	0x0f, 0x0a, 0x0d, 0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x22, 0xff, 0x08, 0x0a, 0x17, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x61, 0x79, 0x65, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x70, 0x61, 0x79, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x11, 0x70, 0x61, 0x79, 0x65, 0x72,
	0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x01, 0x52, 0x0f, 0x70, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x4e, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x65,
	0x72, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52,
	0x0a, 0x70, 0x61, 0x79, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x88, 0x01, 0x01, 0x12, 0x24,
	0x0a, 0x0b, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x0a, 0x70, 0x61, 0x79, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x0c, 0x70,
	0x61, 0x79, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x88, 0x01, 0x01, 0x12, 0x22,
	0x0a, 0x0a, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x62, 0x61, 0x6e, 0x6b, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x05, 0x52, 0x09, 0x70, 0x61, 0x79, 0x65, 0x72, 0x42, 0x61, 0x6e, 0x6b, 0x88,
	0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x0c, 0x70, 0x61, 0x79,
	0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e,
	0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x01, 0x48, 0x07, 0x52, 0x0d, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x69, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x08, 0x52, 0x0d, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f,
	0x6e, 0x6f, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x4e, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x69, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0a,
	0x52, 0x0b, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x1b, 0x0a, 0x09, 0x63, 0x74, 0x6d, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x2a, 0x0a,
	0x0e, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0b, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x11, 0x69, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x70, 0x61, 0x79, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a,
	0x10, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x5a, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64,
	0x72, 0x65, 0x6e, 0x18, 0x17, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64,
	0x72, 0x65, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x70, 0x61,
	0x79, 0x65, 0x72, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x70, 0x61,
	0x79, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x70, 0x61,
	0x79, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x0d, 0x0a, 0x0b, 0x5f,
	0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x62, 0x61, 0x6e, 0x6b, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x70,
	0x61, 0x79, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x11, 0x0a, 0x0f,
	0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42,
	0x11, 0x0a, 0x0f, 0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6e,
	0x6f, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x22, 0xfe, 0x10, 0x0a, 0x13, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x74, 0x72, 0x61, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x73, 0x68, 0x6f, 0x70, 0x5f, 0x6e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x68, 0x6f, 0x70, 0x4e, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x70, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f,
	0x6e, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f,
	0x75, 0x73, 0x65, 0x4e, 0x6f, 0x12, 0x25, 0x0a, 0x0e, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75,
	0x73, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x77,
	0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x74, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x69, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1e, 0x0a, 0x08, 0x70, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x70, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x65, 0x72,
	0x6d, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x54, 0x65, 0x72, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x6e,
	0x69, 0x63, 0x6b, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x75, 0x79, 0x65, 0x72,
	0x4e, 0x69, 0x63, 0x6b, 0x12, 0x26, 0x0a, 0x0c, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x6d, 0x6f,
	0x62, 0x69, 0x6c, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0b, 0x62, 0x75,
	0x79, 0x65, 0x72, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d,
	0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0c, 0x62, 0x75, 0x79, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72,
	0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x0a, 0x73,
	0x65, 0x6c, 0x6c, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x11, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x05, 0x52, 0x10, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x6e, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x5f, 0x63, 0x69, 0x74, 0x79, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x06, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x43, 0x69, 0x74, 0x79, 0x88,
	0x01, 0x01, 0x12, 0x30, 0x0a, 0x11, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x64,
	0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52,
	0x10, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63,
	0x74, 0x88, 0x01, 0x01, 0x12, 0x2e, 0x0a, 0x10, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08,
	0x52, 0x0f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a, 0x0f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72,
	0x5f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52,
	0x0e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x70, 0x6f, 0x73, 0x74, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x17, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x6f, 0x74, 0x68, 0x65, 0x72,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x64, 0x5f, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x18, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x63, 0x6f, 0x64, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0b, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6f, 0x64,
	0x5f, 0x66, 0x65, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x65, 0x78, 0x74, 0x43,
	0x6f, 0x64, 0x46, 0x65, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x69, 0x64, 0x18, 0x1a, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x04, 0x70, 0x61, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x1b, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0d, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x1c,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x61, 0x62, 0x6c, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x1d, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x15, 0x0a, 0x03,
	0x63, 0x74, 0x6d, 0x18, 0x23, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0a, 0x52, 0x03, 0x63, 0x74, 0x6d,
	0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x18, 0x24, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0b, 0x52, 0x0b, 0x72, 0x65, 0x66,
	0x75, 0x6e, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x18, 0x0a, 0x07, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x25, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x62, 0x69, 0x74, 0x5f, 0x70,
	0x61, 0x79, 0x18, 0x26, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x64, 0x65, 0x62, 0x69, 0x74, 0x50,
	0x61, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x69, 0x66, 0x74, 0x5f, 0x70, 0x61, 0x79, 0x18, 0x27,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x67, 0x69, 0x66, 0x74, 0x50, 0x61, 0x79, 0x12, 0x1b, 0x0a,
	0x09, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x70, 0x61, 0x79, 0x18, 0x28, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x50, 0x61, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x61,
	0x64, 0x67, 0x65, 0x5f, 0x70, 0x61, 0x79, 0x18, 0x29, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x62,
	0x61, 0x64, 0x67, 0x65, 0x50, 0x61, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x75, 0x74, 0x5f, 0x70,
	0x61, 0x79, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x75, 0x74, 0x50, 0x61, 0x79,
	0x12, 0x22, 0x0a, 0x0a, 0x64, 0x65, 0x62, 0x69, 0x74, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x2b,
	0x20, 0x01, 0x28, 0x03, 0x48, 0x0c, 0x52, 0x09, 0x64, 0x65, 0x62, 0x69, 0x74, 0x43, 0x61, 0x72,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x63, 0x61,
	0x72, 0x64, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0d, 0x52, 0x09, 0x73, 0x63, 0x6f, 0x72,
	0x65, 0x43, 0x61, 0x72, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x62, 0x61, 0x64, 0x67,
	0x65, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0e, 0x52, 0x09,
	0x62, 0x61, 0x64, 0x67, 0x65, 0x43, 0x61, 0x72, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08,
	0x6e, 0x75, 0x74, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x2e, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0f,
	0x52, 0x07, 0x6e, 0x75, 0x74, 0x43, 0x61, 0x72, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x0a,
	0x67, 0x69, 0x66, 0x74, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x73, 0x18, 0x2f, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x09, 0x67, 0x69, 0x66, 0x74, 0x43, 0x61, 0x72, 0x64, 0x73, 0x12, 0x58, 0x0a, 0x0a, 0x67,
	0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x30, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x39, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e,
	0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x09, 0x67, 0x6f, 0x6f, 0x64,
	0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x5c, 0x0a, 0x0e, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x5f,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x18, 0x31, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74,
	0x6d, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x0d, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x32, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x58, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x33, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x4e,
	0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x79, 0x18, 0x34, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x31, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74,
	0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x79, 0x12, 0x5a,
	0x0a, 0x0d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x18,
	0x35, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0c, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70,
	0x61, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x62, 0x75, 0x79, 0x65,
	0x72, 0x5f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x62, 0x75, 0x79,
	0x65, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x73,
	0x65, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x14, 0x0a, 0x12,
	0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e,
	0x63, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f,
	0x63, 0x69, 0x74, 0x79, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42,
	0x12, 0x0a, 0x10, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x62,
	0x69, 0x6c, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x63, 0x74, 0x6d, 0x42, 0x0f, 0x0a, 0x0d, 0x5f,
	0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x0d, 0x0a, 0x0b,
	0x5f, 0x64, 0x65, 0x62, 0x69, 0x74, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x62,
	0x61, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6e, 0x75,
	0x74, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x22, 0x77, 0x0a, 0x14, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49,
	0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2f, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e,
	0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x34, 0x0a, 0x17, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x65, 0x78, 0x74, 0x54,
	0x69, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x65,
	0x78, 0x74, 0x5f, 0x74, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65,
	0x78, 0x74, 0x54, 0x69, 0x64, 0x22, 0xf3, 0x04, 0x0a, 0x17, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x50, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x09, 0x74, 0x72, 0x61, 0x64, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x54, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0b, 0x74, 0x72,
	0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x50, 0x0a, 0x0a, 0x70, 0x61, 0x79,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x09, 0x70, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x56, 0x0a, 0x0d, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x31, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69,
	0x74, 0x6f, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54,
	0x65, 0x72, 0x6d, 0x12, 0x58, 0x0a, 0x0e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0d,
	0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x58, 0x0a,
	0x0e, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x18,
	0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0d, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x12, 0x52, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0xbc, 0x11, 0x0a, 0x1c,
	0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x33, 0x0a, 0x16,
	0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x50, 0x61,
	0x72, 0x74, 0x69, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x72, 0x61, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x6e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x4e, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x68, 0x6f,
	0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x68,
	0x6f, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f,
	0x75, 0x73, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x61,
	0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x4e, 0x6f, 0x12, 0x25, 0x0a, 0x0e, 0x77, 0x61, 0x72,
	0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x74, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74,
	0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x64, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x61, 0x79, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x08, 0x70, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x70, 0x61, 0x79, 0x54, 0x69, 0x6d,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x5f, 0x74, 0x65, 0x72, 0x6d, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x64, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x65, 0x72, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x75, 0x79,
	0x65, 0x72, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62,
	0x75, 0x79, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x12, 0x26, 0x0a, 0x0c, 0x62, 0x75, 0x79, 0x65,
	0x72, 0x5f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01,
	0x52, 0x0b, 0x62, 0x75, 0x79, 0x65, 0x72, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x28, 0x0a, 0x0d, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0c, 0x62, 0x75, 0x79, 0x65, 0x72,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x73, 0x65,
	0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x03, 0x52, 0x0a, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x6f, 0x88, 0x01, 0x01,
	0x12, 0x28, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x11, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x10, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x63, 0x69, 0x74, 0x79, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x43,
	0x69, 0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x11, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x07, 0x52, 0x10, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x44, 0x69, 0x73,
	0x74, 0x72, 0x69, 0x63, 0x74, 0x88, 0x01, 0x01, 0x12, 0x2e, 0x0a, 0x10, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x08, 0x52, 0x0f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a, 0x0f, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x4d, 0x6f, 0x62,
	0x69, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x17, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x70, 0x6f, 0x73,
	0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x74, 0x68, 0x65, 0x72,
	0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x18, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x6f,
	0x74, 0x68, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f,
	0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x19, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09,
	0x63, 0x6f, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0b, 0x65, 0x78, 0x74,
	0x5f, 0x63, 0x6f, 0x64, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09,
	0x65, 0x78, 0x74, 0x43, 0x6f, 0x64, 0x46, 0x65, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x69,
	0x64, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x70, 0x61, 0x69, 0x64, 0x12, 0x25, 0x0a,
	0x0e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x1c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x61, 0x62,
	0x6c, 0x65, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x61, 0x62, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x1e, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x15, 0x0a, 0x03, 0x63, 0x74, 0x6d, 0x18, 0x24, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0a, 0x52,
	0x03, 0x63, 0x74, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x72, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x25, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0b, 0x52,
	0x0b, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12,
	0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x26, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x62,
	0x69, 0x74, 0x5f, 0x70, 0x61, 0x79, 0x18, 0x27, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x64, 0x65,
	0x62, 0x69, 0x74, 0x50, 0x61, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x69, 0x66, 0x74, 0x5f, 0x70,
	0x61, 0x79, 0x18, 0x28, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x67, 0x69, 0x66, 0x74, 0x50, 0x61,
	0x79, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x70, 0x61, 0x79, 0x18, 0x29,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x50, 0x61, 0x79, 0x12, 0x1b,
	0x0a, 0x09, 0x62, 0x61, 0x64, 0x67, 0x65, 0x5f, 0x70, 0x61, 0x79, 0x18, 0x2a, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x62, 0x61, 0x64, 0x67, 0x65, 0x50, 0x61, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x6e,
	0x75, 0x74, 0x5f, 0x70, 0x61, 0x79, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x75,
	0x74, 0x50, 0x61, 0x79, 0x12, 0x22, 0x0a, 0x0a, 0x64, 0x65, 0x62, 0x69, 0x74, 0x5f, 0x63, 0x61,
	0x72, 0x64, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0c, 0x52, 0x09, 0x64, 0x65, 0x62, 0x69,
	0x74, 0x43, 0x61, 0x72, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x73, 0x63, 0x6f, 0x72,
	0x65, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0d, 0x52, 0x09,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x43, 0x61, 0x72, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a,
	0x62, 0x61, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x2e, 0x20, 0x01, 0x28, 0x03,
	0x48, 0x0e, 0x52, 0x09, 0x62, 0x61, 0x64, 0x67, 0x65, 0x43, 0x61, 0x72, 0x64, 0x88, 0x01, 0x01,
	0x12, 0x1e, 0x0a, 0x08, 0x6e, 0x75, 0x74, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x2f, 0x20, 0x01,
	0x28, 0x03, 0x48, 0x0f, 0x52, 0x07, 0x6e, 0x75, 0x74, 0x43, 0x61, 0x72, 0x64, 0x88, 0x01, 0x01,
	0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x69, 0x66, 0x74, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x73, 0x18, 0x30,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x09, 0x67, 0x69, 0x66, 0x74, 0x43, 0x61, 0x72, 0x64, 0x73, 0x12,
	0x58, 0x0a, 0x0a, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x31, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x47, 0x6f, 0x6f, 0x64,
	0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x09,
	0x67, 0x6f, 0x6f, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x5c, 0x0a, 0x0e, 0x63, 0x61, 0x6e,
	0x63, 0x65, 0x6c, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x18, 0x32, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x35, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74,
	0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0d, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x33, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x58, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x34, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74,
	0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x4e, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x79, 0x18,
	0x35, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x50,
	0x61, 0x79, 0x12, 0x5a, 0x0a, 0x0d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x18, 0x36, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x42, 0x0b,
	0x0a, 0x09, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f,
	0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x42, 0x10, 0x0a, 0x0e,
	0x5f, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x0e,
	0x0a, 0x0c, 0x5f, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x42, 0x10,
	0x0a, 0x0e, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x42, 0x14, 0x0a, 0x12, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x5f, 0x63, 0x69, 0x74, 0x79, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x42, 0x13,
	0x0a, 0x11, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72,
	0x5f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x63, 0x74, 0x6d, 0x42,
	0x0f, 0x0a, 0x0d, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x64, 0x65, 0x62, 0x69, 0x74, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x42,
	0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x42, 0x0d,
	0x0a, 0x0b, 0x5f, 0x62, 0x61, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x42, 0x0b, 0x0a,
	0x09, 0x5f, 0x6e, 0x75, 0x74, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x22, 0xfe, 0x04, 0x0a, 0x1e, 0x43,
	0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x72, 0x65, 0x70, 0x61,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x65, 0x70,
	0x61, 0x79, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72, 0x65, 0x70, 0x61, 0x79, 0x5f, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x72,
	0x65, 0x70, 0x61, 0x79, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x12, 0x22, 0x0a, 0x0a, 0x74,
	0x72, 0x61, 0x64, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x09, 0x74, 0x72, 0x61, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x2a, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x74,
	0x72, 0x61, 0x64, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x02, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x2d, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x0e, 0x74,
	0x72, 0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x44, 0x65, 0x73, 0x63, 0x88, 0x01, 0x01,
	0x12, 0x15, 0x0a, 0x06, 0x70, 0x61, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x70, 0x61, 0x79, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x5f, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61,
	0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x09, 0x62, 0x61, 0x6e, 0x6b,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x08, 0x62,
	0x61, 0x6e, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x05, 0x52, 0x0b, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x63, 0x74, 0x6d, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x03, 0x48, 0x06, 0x52, 0x08, 0x63, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x63, 0x74, 0x6d, 0x5f, 0x72, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x48, 0x07, 0x52, 0x09, 0x63, 0x74, 0x6d, 0x52,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x74, 0x72, 0x61,
	0x64, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x74,
	0x72, 0x61, 0x64, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x74,
	0x72, 0x61, 0x64, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x42,
	0x0c, 0x0a, 0x0a, 0x5f, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x0f, 0x0a,
	0x0d, 0x5f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x0c,
	0x0a, 0x0a, 0x5f, 0x63, 0x74, 0x6d, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x0d, 0x0a, 0x0b,
	0x5f, 0x63, 0x74, 0x6d, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x22, 0x31, 0x0a, 0x1f, 0x43,
	0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x38,
	0x0a, 0x1c, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x79, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x22, 0x32, 0x0a, 0x20, 0x43, 0x74, 0x6d, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x74,
	0x72, 0x69, 0x65, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0xbe, 0x11, 0x0a,
	0x1e, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x79, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x58, 0x0a, 0x0a, 0x67, 0x6f, 0x6f,
	0x64, 0x73, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74,
	0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x5c, 0x0a, 0x0e, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x5f, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x52,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x0d, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x73, 0x12, 0x33, 0x0a, 0x16, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x13, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x72, 0x61, 0x64,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x6e,
	0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x4e, 0x6f, 0x12,
	0x1b, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x4e, 0x6f, 0x12,
	0x25, 0x0a, 0x0e, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75,
	0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x69, 0x64, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x64,
	0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x74, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x61, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x70, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x08, 0x70, 0x61,
	0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07,
	0x70, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x65, 0x72, 0x6d, 0x12,
	0x1d, 0x0a, 0x0a, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x75, 0x79, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x12, 0x26,
	0x0a, 0x0c, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0b, 0x62, 0x75, 0x79, 0x65, 0x72, 0x4d, 0x6f, 0x62,
	0x69, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52,
	0x0c, 0x62, 0x75, 0x79, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x24, 0x0a, 0x0b, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x0a, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x4d,
	0x65, 0x6d, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52,
	0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x30, 0x0a, 0x11, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x10, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x63,
	0x69, 0x74, 0x79, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x0c, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x72, 0x43, 0x69, 0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x11,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63,
	0x74, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x10, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x88, 0x01, 0x01, 0x12, 0x2e,
	0x0a, 0x10, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x0f, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x88, 0x01, 0x01, 0x12, 0x2c,
	0x0a, 0x0f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x62, 0x69, 0x6c,
	0x65, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x0b,
	0x70, 0x6f, 0x73, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x1b, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0a, 0x70, 0x6f, 0x73, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a,
	0x0c, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x1c, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0b, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x1d,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x63, 0x6f, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x1e, 0x0a, 0x0b, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x1e,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x64, 0x46, 0x65, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x69, 0x64, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x70,
	0x61, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x20, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x69, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x21, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x22, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x62, 0x69, 0x74, 0x5f,
	0x70, 0x61, 0x79, 0x18, 0x23, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x64, 0x65, 0x62, 0x69, 0x74,
	0x50, 0x61, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x69, 0x66, 0x74, 0x5f, 0x70, 0x61, 0x79, 0x18,
	0x24, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x67, 0x69, 0x66, 0x74, 0x50, 0x61, 0x79, 0x12, 0x1b,
	0x0a, 0x09, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x70, 0x61, 0x79, 0x18, 0x25, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x50, 0x61, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x62,
	0x61, 0x64, 0x67, 0x65, 0x5f, 0x70, 0x61, 0x79, 0x18, 0x26, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x62, 0x61, 0x64, 0x67, 0x65, 0x50, 0x61, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x75, 0x74, 0x5f,
	0x70, 0x61, 0x79, 0x18, 0x27, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x75, 0x74, 0x50, 0x61,
	0x79, 0x12, 0x15, 0x0a, 0x03, 0x63, 0x74, 0x6d, 0x18, 0x28, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0a,
	0x52, 0x03, 0x63, 0x74, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x72, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x29, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0b,
	0x52, 0x0b, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01,
	0x12, 0x22, 0x0a, 0x0a, 0x64, 0x65, 0x62, 0x69, 0x74, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x2a,
	0x20, 0x01, 0x28, 0x03, 0x48, 0x0c, 0x52, 0x09, 0x64, 0x65, 0x62, 0x69, 0x74, 0x43, 0x61, 0x72,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x63, 0x61,
	0x72, 0x64, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0d, 0x52, 0x09, 0x73, 0x63, 0x6f, 0x72,
	0x65, 0x43, 0x61, 0x72, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x62, 0x61, 0x64, 0x67,
	0x65, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0e, 0x52, 0x09,
	0x62, 0x61, 0x64, 0x67, 0x65, 0x43, 0x61, 0x72, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08,
	0x6e, 0x75, 0x74, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0f,
	0x52, 0x07, 0x6e, 0x75, 0x74, 0x43, 0x61, 0x72, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x0a,
	0x67, 0x69, 0x66, 0x74, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x73, 0x18, 0x2e, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x09, 0x67, 0x69, 0x66, 0x74, 0x43, 0x61, 0x72, 0x64, 0x73, 0x12, 0x58, 0x0a, 0x0b, 0x63,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x2f, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x37, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f,
	0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x4e, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x70,
	0x61, 0x79, 0x18, 0x30, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x50, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x08, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x50, 0x61, 0x79, 0x12, 0x5a, 0x0a, 0x0d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x18, 0x31, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x0f,
	0x0a, 0x0d, 0x5f, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x42,
	0x10, 0x0a, 0x0e, 0x5f, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x6d,
	0x6f, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72,
	0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x63, 0x69, 0x74, 0x79, 0x42, 0x14, 0x0a, 0x12, 0x5f,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63,
	0x74, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x63,
	0x74, 0x6d, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x64, 0x65, 0x62, 0x69, 0x74, 0x5f, 0x63, 0x61,
	0x72, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x63, 0x61, 0x72,
	0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x62, 0x61, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x61, 0x72, 0x64,
	0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6e, 0x75, 0x74, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x22, 0x7d, 0x0a,
	0x17, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x79, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x50, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x07, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xf2, 0x04, 0x0a,
	0x12, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x72, 0x65, 0x70, 0x61, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x72, 0x65, 0x70, 0x61, 0x79, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72,
	0x65, 0x70, 0x61, 0x79, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x70, 0x72, 0x65, 0x70, 0x61, 0x79, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x64, 0x12, 0x22, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x74, 0x72, 0x61, 0x64, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52,
	0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x88, 0x01,
	0x01, 0x12, 0x24, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x64, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x64, 0x65,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x03, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x44,
	0x65, 0x73, 0x63, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x06, 0x70, 0x61, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x79, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x70, 0x61, 0x79, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20,
	0x0a, 0x09, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x04, 0x52, 0x08, 0x62, 0x61, 0x6e, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x26, 0x0a, 0x0c, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x0b, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x63, 0x74, 0x6d, 0x5f,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x48, 0x06, 0x52, 0x08, 0x63,
	0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x63, 0x74,
	0x6d, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x48, 0x07,
	0x52, 0x09, 0x63, 0x74, 0x6d, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0d,
	0x0a, 0x0b, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x11, 0x0a,
	0x0f, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x42, 0x13, 0x0a, 0x11, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x5f, 0x64, 0x65, 0x73, 0x63, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x63, 0x74, 0x6d, 0x5f, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x74, 0x6d, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x22, 0xef, 0x05, 0x0a, 0x13, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x72, 0x65, 0x70, 0x61, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x72, 0x65, 0x70, 0x61, 0x79, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72, 0x65, 0x70,
	0x61, 0x79, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x70, 0x72, 0x65, 0x70, 0x61, 0x79, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x12,
	0x22, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x74, 0x72, 0x61, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0d, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12,
	0x24, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x03, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x44, 0x65, 0x73,
	0x63, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x06, 0x70, 0x61, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x79, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70,
	0x61, 0x79, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x70, 0x61, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x09,
	0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x04, 0x52, 0x08, 0x62, 0x61, 0x6e, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x26,
	0x0a, 0x0c, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x0b, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54,
	0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x63, 0x74, 0x6d, 0x5f, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x48, 0x06, 0x52, 0x08, 0x63, 0x74, 0x6d,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x63, 0x74, 0x6d, 0x5f,
	0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x48, 0x07, 0x52, 0x09,
	0x63, 0x74, 0x6d, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0f,
	0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4e, 0x61, 0x6d, 0x65,
	0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42,
	0x11, 0x0a, 0x0f, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x62, 0x61, 0x6e, 0x6b,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x63, 0x74, 0x6d, 0x5f, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x74, 0x6d, 0x5f, 0x72, 0x65, 0x66,
	0x75, 0x6e, 0x64, 0x22, 0xeb, 0x06, 0x0a, 0x24, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0a, 0x63, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x5f, 0x73, 0x6b, 0x75, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x09, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x53, 0x6b, 0x75, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24,
	0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x43, 0x6f, 0x64,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x69,
	0x6e, 0x74, 0x72, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0b, 0x63, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x0c,
	0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12,
	0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x2a, 0x0a, 0x0e, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x48, 0x03, 0x52, 0x0d, 0x74, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a, 0x0f,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x05, 0x48, 0x04, 0x52, 0x0e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x74, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x71, 0x74, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x05, 0x52, 0x0a, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x51, 0x74, 0x79, 0x88, 0x01, 0x01,
	0x12, 0x1f, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x05, 0x48, 0x06, 0x52, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x63, 0x61, 0x6e, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x12, 0x22,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x07, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52, 0x0a, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x74, 0x6d, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x63, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x0d, 0x69, 0x73, 0x5f,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x08,
	0x48, 0x0a, 0x52, 0x0c, 0x69, 0x73, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x42, 0x0d, 0x0a,
	0x0b, 0x5f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x73, 0x6b, 0x75, 0x42, 0x0e, 0x0a, 0x0c,
	0x5f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x0f, 0x0a, 0x0d,
	0x5f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x42, 0x11, 0x0a,
	0x0f, 0x5f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x42, 0x12, 0x0a, 0x10, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x5f, 0x71, 0x74, 0x79, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65,
	0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42,
	0x0e, 0x0a, 0x0c, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42,
	0x10, 0x0a, 0x0e, 0x5f, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65,
	0x64, 0x22, 0x37, 0x0a, 0x25, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x44, 0x65, 0x73, 0x74,
	0x72, 0x6f, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3e, 0x0a, 0x22, 0x43, 0x74,
	0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x22, 0x38, 0x0a, 0x26, 0x43, 0x74,
	0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x69, 0x64, 0x22, 0xc4, 0x11, 0x0a, 0x24, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x58, 0x0a, 0x0a, 0x67, 0x6f, 0x6f, 0x64, 0x73,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x5c, 0x0a, 0x0e, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x5f, 0x72, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x52, 0x65, 0x66,
	0x75, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x0d, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x12,
	0x33, 0x0a, 0x16, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x13, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x72, 0x61, 0x64, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x6e, 0x6f, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x4e, 0x6f, 0x12, 0x1b, 0x0a,
	0x09, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x68, 0x6f, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x61,
	0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x4e, 0x6f, 0x12, 0x25, 0x0a,
	0x0e, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x74, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x74, 0x72,
	0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x79,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70,
	0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x08, 0x70, 0x61, 0x79, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x70, 0x61,
	0x79, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x65, 0x72, 0x6d, 0x12, 0x1d, 0x0a,
	0x0a, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x62, 0x75, 0x79, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x12, 0x26, 0x0a, 0x0c,
	0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x01, 0x52, 0x0b, 0x62, 0x75, 0x79, 0x65, 0x72, 0x4d, 0x6f, 0x62, 0x69, 0x6c,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0c, 0x62,
	0x75, 0x79, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x24,
	0x0a, 0x0b, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x0a, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x4d, 0x65, 0x6d,
	0x6f, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x0c, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x30,
	0x0a, 0x11, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x6e, 0x63, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x10, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x28, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x63, 0x69, 0x74,
	0x79, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x43, 0x69, 0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x11, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x18,
	0x18, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x10, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x88, 0x01, 0x01, 0x12, 0x2e, 0x0a, 0x10,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x0f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a, 0x0f,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18,
	0x1a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6f,
	0x73, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0a, 0x70, 0x6f, 0x73, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x6f,
	0x74, 0x68, 0x65, 0x72, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x1c, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0b, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x6f, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x1d, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x09, 0x63, 0x6f, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a,
	0x0b, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x1e, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x09, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x64, 0x46, 0x65, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x69, 0x64, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x70, 0x61, 0x69,
	0x64, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x20, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x69, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x21, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x22, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x62, 0x69, 0x74, 0x5f, 0x70, 0x61,
	0x79, 0x18, 0x23, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x64, 0x65, 0x62, 0x69, 0x74, 0x50, 0x61,
	0x79, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x69, 0x66, 0x74, 0x5f, 0x70, 0x61, 0x79, 0x18, 0x24, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x07, 0x67, 0x69, 0x66, 0x74, 0x50, 0x61, 0x79, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x70, 0x61, 0x79, 0x18, 0x25, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x50, 0x61, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x61, 0x64,
	0x67, 0x65, 0x5f, 0x70, 0x61, 0x79, 0x18, 0x26, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x62, 0x61,
	0x64, 0x67, 0x65, 0x50, 0x61, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x75, 0x74, 0x5f, 0x70, 0x61,
	0x79, 0x18, 0x27, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x75, 0x74, 0x50, 0x61, 0x79, 0x12,
	0x15, 0x0a, 0x03, 0x63, 0x74, 0x6d, 0x18, 0x28, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0a, 0x52, 0x03,
	0x63, 0x74, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64,
	0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x29, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0b, 0x52, 0x0b,
	0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x22,
	0x0a, 0x0a, 0x64, 0x65, 0x62, 0x69, 0x74, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x2a, 0x20, 0x01,
	0x28, 0x03, 0x48, 0x0c, 0x52, 0x09, 0x64, 0x65, 0x62, 0x69, 0x74, 0x43, 0x61, 0x72, 0x64, 0x88,
	0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x63, 0x61, 0x72, 0x64,
	0x18, 0x2b, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0d, 0x52, 0x09, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x43,
	0x61, 0x72, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x62, 0x61, 0x64, 0x67, 0x65, 0x5f,
	0x63, 0x61, 0x72, 0x64, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0e, 0x52, 0x09, 0x62, 0x61,
	0x64, 0x67, 0x65, 0x43, 0x61, 0x72, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x6e, 0x75,
	0x74, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0f, 0x52, 0x07,
	0x6e, 0x75, 0x74, 0x43, 0x61, 0x72, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x69,
	0x66, 0x74, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x73, 0x18, 0x2e, 0x20, 0x03, 0x28, 0x03, 0x52, 0x09,
	0x67, 0x69, 0x66, 0x74, 0x43, 0x61, 0x72, 0x64, 0x73, 0x12, 0x58, 0x0a, 0x0b, 0x63, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x2f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43,
	0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x4e, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x79,
	0x18, 0x30, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50,
	0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x50, 0x61, 0x79, 0x12, 0x5a, 0x0a, 0x0d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x18, 0x31, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x42,
	0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x0f, 0x0a, 0x0d,
	0x5f, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x42, 0x10, 0x0a,
	0x0e, 0x5f, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42,
	0x0e, 0x0a, 0x0c, 0x5f, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x42,
	0x10, 0x0a, 0x0e, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x5f, 0x63, 0x69, 0x74, 0x79, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x42,
	0x13, 0x0a, 0x11, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x5f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x63, 0x74, 0x6d,
	0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x64, 0x65, 0x62, 0x69, 0x74, 0x5f, 0x63, 0x61, 0x72, 0x64,
	0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x42,
	0x0d, 0x0a, 0x0b, 0x5f, 0x62, 0x61, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x42, 0x0b,
	0x0a, 0x09, 0x5f, 0x6e, 0x75, 0x74, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x22, 0x89, 0x01, 0x0a, 0x1d,
	0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a,
	0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43,
	0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xdf, 0x06, 0x0a, 0x18, 0x43, 0x74, 0x6d, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x22, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x73, 0x6b, 0x75, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x53,
	0x6b, 0x75, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0a, 0x63,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c,
	0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x02, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49, 0x6e, 0x74, 0x72,
	0x6f, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x0e, 0x74, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05,
	0x48, 0x03, 0x52, 0x0d, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a, 0x0f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x48, 0x04, 0x52,
	0x0e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x88,
	0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x71, 0x74,
	0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x48, 0x05, 0x52, 0x0a, 0x74, 0x72, 0x69, 0x67, 0x67,
	0x65, 0x72, 0x51, 0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x48, 0x06, 0x52, 0x08, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x6e,
	0x5f, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x63, 0x61,
	0x6e, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x12, 0x22, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x5f, 0x72,
	0x61, 0x6e, 0x67, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x64, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x24,
	0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x74, 0x6d, 0x5f, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x12, 0x28, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x65, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x08, 0x48, 0x0a, 0x52, 0x0c, 0x69, 0x73, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x18, 0x0a, 0x07, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x73, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x5f, 0x73, 0x6b, 0x75, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f,
	0x69, 0x6e, 0x74, 0x72, 0x6f, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x0e, 0x0a, 0x0c,
	0x5f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x71, 0x74, 0x79, 0x42, 0x0b, 0x0a, 0x09,
	0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x72,
	0x6f, 0x64, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x69, 0x73, 0x5f, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x22, 0xde, 0x07, 0x0a, 0x19, 0x43, 0x74,
	0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x5f, 0x73, 0x6b, 0x75, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x63, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x53, 0x6b, 0x75, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0b, 0x63,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x01, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x26, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x74, 0x72,
	0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x1f, 0x0a, 0x0b,
	0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a,
	0x0e, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x05, 0x48, 0x03, 0x52, 0x0d, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a, 0x0f, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x05, 0x48, 0x04, 0x52, 0x0e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x74, 0x72, 0x69, 0x67, 0x67,
	0x65, 0x72, 0x5f, 0x71, 0x74, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x48, 0x05, 0x52, 0x0a,
	0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x51, 0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a,
	0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x06, 0x52, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1b,
	0x0a, 0x09, 0x63, 0x61, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x63, 0x61, 0x6e, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x12, 0x22, 0x0a, 0x0a, 0x70,
	0x72, 0x6f, 0x64, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x07, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x22, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x74, 0x6d,
	0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x74,
	0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0d,
	0x69, 0x73, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x18, 0x17, 0x20,
	0x01, 0x28, 0x08, 0x48, 0x0a, 0x52, 0x0c, 0x69, 0x73, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x65, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x5f, 0x73, 0x6b, 0x75, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x5f, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x74, 0x72, 0x69, 0x67, 0x67,
	0x65, 0x72, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x0e, 0x0a,
	0x0c, 0x5f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x71, 0x74, 0x79, 0x42, 0x0b, 0x0a,
	0x09, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70,
	0x72, 0x6f, 0x64, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x69, 0x73, 0x5f,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x22, 0xfa, 0x10, 0x0a, 0x0f, 0x43,
	0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x74, 0x72, 0x61, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a,
	0x07, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x6e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x68, 0x6f, 0x70, 0x4e, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x70, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65,
	0x5f, 0x6e, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x61, 0x72, 0x65, 0x68,
	0x6f, 0x75, 0x73, 0x65, 0x4e, 0x6f, 0x12, 0x25, 0x0a, 0x0e, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f,
	0x75, 0x73, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x74, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x69, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1e, 0x0a, 0x08, 0x70, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x70, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x65,
	0x72, 0x6d, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x54, 0x65, 0x72, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f,
	0x6e, 0x69, 0x63, 0x6b, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x75, 0x79, 0x65,
	0x72, 0x4e, 0x69, 0x63, 0x6b, 0x12, 0x26, 0x0a, 0x0c, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x6d,
	0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0b, 0x62,
	0x75, 0x79, 0x65, 0x72, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a,
	0x0d, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0c, 0x62, 0x75, 0x79, 0x65, 0x72, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x73, 0x65, 0x6c, 0x6c, 0x65,
	0x72, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x0a,
	0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a,
	0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x11, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x05, 0x52, 0x10, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x63, 0x69, 0x74, 0x79, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x06, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x43, 0x69, 0x74, 0x79,
	0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x11, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f,
	0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07,
	0x52, 0x10, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69,
	0x63, 0x74, 0x88, 0x01, 0x01, 0x12, 0x2e, 0x0a, 0x10, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x08, 0x52, 0x0f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a, 0x0f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x5f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09,
	0x52, 0x0e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x70, 0x6f, 0x73, 0x74, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x17, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x6f, 0x74, 0x68, 0x65,
	0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x64, 0x5f, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x18, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x63, 0x6f, 0x64,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0b, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6f,
	0x64, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x65, 0x78, 0x74,
	0x43, 0x6f, 0x64, 0x46, 0x65, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x69, 0x64, 0x18, 0x1a,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x70, 0x61, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x1b, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0d, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x18,
	0x1c, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x61, 0x62, 0x6c,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x1d, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x15, 0x0a,
	0x03, 0x63, 0x74, 0x6d, 0x18, 0x23, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0a, 0x52, 0x03, 0x63, 0x74,
	0x6d, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x18, 0x24, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0b, 0x52, 0x0b, 0x72, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x18, 0x0a, 0x07,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x25, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x62, 0x69, 0x74, 0x5f,
	0x70, 0x61, 0x79, 0x18, 0x26, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x64, 0x65, 0x62, 0x69, 0x74,
	0x50, 0x61, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x69, 0x66, 0x74, 0x5f, 0x70, 0x61, 0x79, 0x18,
	0x27, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x67, 0x69, 0x66, 0x74, 0x50, 0x61, 0x79, 0x12, 0x1b,
	0x0a, 0x09, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x70, 0x61, 0x79, 0x18, 0x28, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x50, 0x61, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x62,
	0x61, 0x64, 0x67, 0x65, 0x5f, 0x70, 0x61, 0x79, 0x18, 0x29, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x62, 0x61, 0x64, 0x67, 0x65, 0x50, 0x61, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x75, 0x74, 0x5f,
	0x70, 0x61, 0x79, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x75, 0x74, 0x50, 0x61,
	0x79, 0x12, 0x22, 0x0a, 0x0a, 0x64, 0x65, 0x62, 0x69, 0x74, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18,
	0x2b, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0c, 0x52, 0x09, 0x64, 0x65, 0x62, 0x69, 0x74, 0x43, 0x61,
	0x72, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x63,
	0x61, 0x72, 0x64, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0d, 0x52, 0x09, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x43, 0x61, 0x72, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x62, 0x61, 0x64,
	0x67, 0x65, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0e, 0x52,
	0x09, 0x62, 0x61, 0x64, 0x67, 0x65, 0x43, 0x61, 0x72, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a,
	0x08, 0x6e, 0x75, 0x74, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x2e, 0x20, 0x01, 0x28, 0x03, 0x48,
	0x0f, 0x52, 0x07, 0x6e, 0x75, 0x74, 0x43, 0x61, 0x72, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a,
	0x0a, 0x67, 0x69, 0x66, 0x74, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x73, 0x18, 0x2f, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x09, 0x67, 0x69, 0x66, 0x74, 0x43, 0x61, 0x72, 0x64, 0x73, 0x12, 0x58, 0x0a, 0x0a,
	0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x30, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x39, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f,
	0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x09, 0x67, 0x6f, 0x6f,
	0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x5c, 0x0a, 0x0e, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x18, 0x31, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43,
	0x74, 0x6d, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0d, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x32, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x58, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x33, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x4e, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x79, 0x18, 0x34, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x31, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69,
	0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x79, 0x12,
	0x5a, 0x0a, 0x0d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x18, 0x35, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0c, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f,
	0x70, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x62, 0x75, 0x79,
	0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x62, 0x75,
	0x79, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f,
	0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x42, 0x10, 0x0a, 0x0e, 0x5f,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x14, 0x0a,
	0x12, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x6e, 0x63, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72,
	0x5f, 0x63, 0x69, 0x74, 0x79, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x42, 0x13, 0x0a, 0x11, 0x5f,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x42, 0x12, 0x0a, 0x10, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x6d, 0x6f,
	0x62, 0x69, 0x6c, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x63, 0x74, 0x6d, 0x42, 0x0f, 0x0a, 0x0d,
	0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x0d, 0x0a,
	0x0b, 0x5f, 0x64, 0x65, 0x62, 0x69, 0x74, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x42, 0x0d, 0x0a, 0x0b,
	0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f,
	0x62, 0x61, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6e,
	0x75, 0x74, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x22, 0x82, 0x13, 0x0a, 0x10, 0x43, 0x74, 0x6d, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x74, 0x72, 0x61, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a,
	0x07, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x6e, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x68, 0x6f, 0x70, 0x4e, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x70, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65,
	0x5f, 0x6e, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x61, 0x72, 0x65, 0x68,
	0x6f, 0x75, 0x73, 0x65, 0x4e, 0x6f, 0x12, 0x25, 0x0a, 0x0e, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f,
	0x75, 0x73, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x74, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x69, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1e, 0x0a, 0x08, 0x70, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x70, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x65,
	0x72, 0x6d, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x54, 0x65, 0x72, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f,
	0x6e, 0x69, 0x63, 0x6b, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x75, 0x79, 0x65,
	0x72, 0x4e, 0x69, 0x63, 0x6b, 0x12, 0x26, 0x0a, 0x0c, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x6d,
	0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0b, 0x62,
	0x75, 0x79, 0x65, 0x72, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a,
	0x0d, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0c, 0x62, 0x75, 0x79, 0x65, 0x72, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x73, 0x65, 0x6c, 0x6c, 0x65,
	0x72, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x0a,
	0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a,
	0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x11, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x05, 0x52, 0x10, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x63, 0x69, 0x74, 0x79, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x06, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x43, 0x69, 0x74, 0x79,
	0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x11, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f,
	0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07,
	0x52, 0x10, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69,
	0x63, 0x74, 0x88, 0x01, 0x01, 0x12, 0x2e, 0x0a, 0x10, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x08, 0x52, 0x0f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a, 0x0f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x5f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09,
	0x52, 0x0e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x18, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x70, 0x6f, 0x73, 0x74, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x19, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x6f, 0x74, 0x68, 0x65,
	0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x64, 0x5f, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x63, 0x6f, 0x64,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0b, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6f,
	0x64, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x65, 0x78, 0x74,
	0x43, 0x6f, 0x64, 0x46, 0x65, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x69, 0x64, 0x18, 0x1c,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x70, 0x61, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x1d, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0d, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x18,
	0x1e, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x61, 0x62, 0x6c,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x1f, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x15, 0x0a,
	0x03, 0x63, 0x74, 0x6d, 0x18, 0x25, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0a, 0x52, 0x03, 0x63, 0x74,
	0x6d, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x18, 0x26, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0b, 0x52, 0x0b, 0x72, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0f,
	0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x27, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x26, 0x0a, 0x0f, 0x70, 0x61, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x29, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x64, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x2a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x65,
	0x72, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x2b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x11, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x59, 0x0a, 0x0a, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x2c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x62, 0x69, 0x74, 0x5f, 0x70, 0x61, 0x79, 0x18, 0x2d,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x64, 0x65, 0x62, 0x69, 0x74, 0x50, 0x61, 0x79, 0x12, 0x19,
	0x0a, 0x08, 0x67, 0x69, 0x66, 0x74, 0x5f, 0x70, 0x61, 0x79, 0x18, 0x2e, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x07, 0x67, 0x69, 0x66, 0x74, 0x50, 0x61, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x5f, 0x70, 0x61, 0x79, 0x18, 0x2f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x50, 0x61, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x61, 0x64, 0x67, 0x65, 0x5f,
	0x70, 0x61, 0x79, 0x18, 0x30, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x62, 0x61, 0x64, 0x67, 0x65,
	0x50, 0x61, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x75, 0x74, 0x5f, 0x70, 0x61, 0x79, 0x18, 0x31,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x75, 0x74, 0x50, 0x61, 0x79, 0x12, 0x22, 0x0a, 0x0a,
	0x64, 0x65, 0x62, 0x69, 0x74, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x32, 0x20, 0x01, 0x28, 0x03,
	0x48, 0x0c, 0x52, 0x09, 0x64, 0x65, 0x62, 0x69, 0x74, 0x43, 0x61, 0x72, 0x64, 0x88, 0x01, 0x01,
	0x12, 0x22, 0x0a, 0x0a, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x33,
	0x20, 0x01, 0x28, 0x03, 0x48, 0x0d, 0x52, 0x09, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x43, 0x61, 0x72,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x62, 0x61, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x61,
	0x72, 0x64, 0x18, 0x34, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0e, 0x52, 0x09, 0x62, 0x61, 0x64, 0x67,
	0x65, 0x43, 0x61, 0x72, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x6e, 0x75, 0x74, 0x5f,
	0x63, 0x61, 0x72, 0x64, 0x18, 0x35, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0f, 0x52, 0x07, 0x6e, 0x75,
	0x74, 0x43, 0x61, 0x72, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x69, 0x66, 0x74,
	0x5f, 0x63, 0x61, 0x72, 0x64, 0x73, 0x18, 0x36, 0x20, 0x03, 0x28, 0x03, 0x52, 0x09, 0x67, 0x69,
	0x66, 0x74, 0x43, 0x61, 0x72, 0x64, 0x73, 0x12, 0x5d, 0x0a, 0x0e, 0x63, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x18, 0x37, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x36, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e,
	0x43, 0x74, 0x6d, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0d, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x38, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x59, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x39, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x4f, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x79, 0x18,
	0x3a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x50, 0x61, 0x79, 0x12, 0x5b, 0x0a, 0x0d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x18, 0x3b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x0f, 0x0a,
	0x0d, 0x5f, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x42, 0x10,
	0x0a, 0x0e, 0x5f, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x6d, 0x6f,
	0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x63, 0x69, 0x74, 0x79, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74,
	0x42, 0x13, 0x0a, 0x11, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x63, 0x74,
	0x6d, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x64, 0x65, 0x62, 0x69, 0x74, 0x5f, 0x63, 0x61, 0x72,
	0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x63, 0x61, 0x72, 0x64,
	0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x62, 0x61, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x42,
	0x0b, 0x0a, 0x09, 0x5f, 0x6e, 0x75, 0x74, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x22, 0x29, 0x0a, 0x17,
	0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x9a, 0x04, 0x0a, 0x1f, 0x43, 0x74, 0x6d, 0x52,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x43, 0x68, 0x69, 0x6c, 0x64,
	0x72, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0b, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x64, 0x65,
	0x73, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x72, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x0b, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x48, 0x02, 0x52, 0x06,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61, 0x6e,
	0x63, 0x65, 0x6c, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x0c, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x23,
	0x0a, 0x0d, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18,
	0x0c, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x72, 0x65,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x12, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0b, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x22, 0xd5, 0x03, 0x0a, 0x1c, 0x43, 0x74, 0x6d, 0x52, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0b, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x0a, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x88, 0x01,
	0x01, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0c,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x48, 0x01, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x48, 0x02, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x5f, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64,
	0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0c, 0x72,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x72,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x03, 0x52, 0x12, 0x72, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x21, 0x0a,
	0x0c, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x0c, 0x20,
	0x03, 0x28, 0x03, 0x52, 0x0b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73,
	0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x73, 0x63,
	0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x22, 0x2f, 0x0a, 0x1d,
	0x43, 0x74, 0x6d, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x44,
	0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x36, 0x0a,
	0x1a, 0x43, 0x74, 0x6d, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x73, 0x22, 0x85, 0x01, 0x0a, 0x1b, 0x43, 0x74, 0x6d, 0x52, 0x65, 0x66,
	0x75, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64,
	0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x07,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xcf, 0x03,
	0x0a, 0x16, 0x43, 0x74, 0x6d, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24,
	0x0a, 0x0b, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x44, 0x65, 0x73,
	0x63, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x12,
	0x26, 0x0a, 0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x48, 0x02, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x5f, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x61, 0x6e,
	0x63, 0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66,
	0x75, 0x6e, 0x64, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x0c, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x30,
	0x0a, 0x14, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x03, 0x52, 0x12, 0x72, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73,
	0x12, 0x21, 0x0a, 0x0c, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73,
	0x18, 0x0c, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x73, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x64,
	0x65, 0x73, 0x63, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x22,
	0x8b, 0x05, 0x0a, 0x17, 0x43, 0x74, 0x6d, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0b, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x64, 0x65,
	0x73, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x72, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x0b, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x48, 0x02, 0x52, 0x06,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x79,
	0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x5a, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72,
	0x65, 0x6e, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x52, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72,
	0x65, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x5f, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0c,
	0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x30, 0x0a, 0x14,
	0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x03, 0x52, 0x12, 0x72, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x21,
	0x0a, 0x0c, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x10,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x0b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x73, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x73,
	0x63, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x22, 0x30, 0x0a,
	0x1e, 0x43, 0x74, 0x6d, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x8a, 0x04, 0x0a, 0x1c, 0x43, 0x74, 0x6d, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x33, 0x0a, 0x16, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x13, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0b, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x0a, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x88, 0x01,
	0x01, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0c,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x03, 0x48, 0x01, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x03, 0x48, 0x02, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x5f, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64,
	0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0c, 0x72,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x72,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x03, 0x52, 0x12, 0x72, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x21, 0x0a,
	0x0c, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x0d, 0x20,
	0x03, 0x28, 0x03, 0x52, 0x0b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73,
	0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x73, 0x63,
	0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x22, 0x40, 0x0a, 0x12,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0x67,
	0x0a, 0x1e, 0x4f, 0x6e, 0x53, 0x70, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x63, 0x74, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x63,
	0x74, 0x6d, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x70, 0x75, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x70, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x22, 0x0f, 0x0a, 0x0d, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x15, 0x0a, 0x13, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x4e, 0x65, 0x78, 0x74, 0x54, 0x69, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x15, 0x0a, 0x13, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x3c, 0x0a, 0x10, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x7f, 0x0a, 0x1c, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x39, 0x0a, 0x18, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x72, 0x61, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x22, 0x55, 0x0a, 0x1c, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x61, 0x0a, 0x1d, 0x52, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x3e, 0x0a, 0x12, 0x52, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x83, 0x01, 0x0a, 0x1e, 0x52,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a,
	0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x52,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x1c, 0x0a, 0x1a, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x85,
	0x05, 0x0a, 0x11, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0b,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x0a, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x88,
	0x01, 0x01, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x26, 0x0a,
	0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x03, 0x48, 0x02, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x88,
	0x01, 0x01, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x5a, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x0c, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x3e, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74,
	0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x63,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x0d, 0x20, 0x03,
	0x28, 0x03, 0x52, 0x0c, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73,
	0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f,
	0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x0f, 0x20,
	0x03, 0x28, 0x03, 0x52, 0x12, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x6a, 0x65, 0x63,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0b, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x09, 0x0a, 0x07, 0x5f,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x22, 0x81, 0x01, 0x0a, 0x1d, 0x54, 0x72, 0x61, 0x64, 0x65,
	0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x54, 0x0a, 0x19, 0x54, 0x72,
	0x61, 0x64, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x64, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x72, 0x61,
	0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73,
	0x22, 0x3e, 0x0a, 0x12, 0x54, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x83, 0x01, 0x0a, 0x1e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x1b, 0x0a, 0x19, 0x54, 0x72, 0x61, 0x64, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x4b, 0x0a, 0x0f, 0x54, 0x72, 0x61, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x7d, 0x0a, 0x1b, 0x54, 0x72, 0x61, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x48, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2e, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f,
	0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x19, 0x0a, 0x17, 0x54, 0x72, 0x61, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x43, 0x0a, 0x07, 0x57, 0x64,
	0x74, 0x53, 0x68, 0x6f, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x70, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0x14, 0x0a, 0x12, 0x57, 0x64, 0x74, 0x53, 0x68, 0x6f, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x6d, 0x0a, 0x13, 0x57, 0x64, 0x74, 0x53, 0x68, 0x6f, 0x70,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x07,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x57, 0x64,
	0x74, 0x53, 0x68, 0x6f, 0x70, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x48, 0x0a, 0x08, 0x57, 0x64, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x15,
	0x0a, 0x13, 0x57, 0x64, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x6f, 0x0a, 0x14, 0x57, 0x64, 0x74, 0x53, 0x74, 0x6f, 0x63,
	0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a,
	0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x57,
	0x64, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x32, 0x9b, 0x3b, 0x0a, 0x15, 0x43, 0x74, 0x6d, 0x49, 0x74,
	0x6f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72,
	0x12, 0x9a, 0x01, 0x0a, 0x1f, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x12, 0x39, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x3a, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e,
	0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x77, 0x0a,
	0x0d, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2c,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d,
	0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6b, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x12, 0x2e, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f,
	0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2f, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f,
	0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x79, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x12, 0x35, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x43, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x92,
	0x01, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x12, 0x3f, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x47, 0x6f, 0x6f,
	0x64, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x47, 0x6f,
	0x6f, 0x64, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x92, 0x01, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x41, 0x2e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43,
	0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x82, 0x01, 0x0a, 0x0f, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x12, 0x38, 0x2e, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x86, 0x01,
	0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x12, 0x3d, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74,
	0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x79, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x32, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f,
	0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x98, 0x01, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x12, 0x43, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f,
	0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x8b, 0x01, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x3b, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x52, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x76, 0x0a, 0x07, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x12, 0x35, 0x2e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x32, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74,
	0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x7e, 0x0a, 0x0d, 0x44, 0x65, 0x73, 0x74, 0x72,
	0x6f, 0x79, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x12, 0x36, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x43, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x33, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f,
	0x2e, 0x43, 0x74, 0x6d, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x97, 0x01, 0x0a, 0x12, 0x44, 0x65, 0x73, 0x74,
	0x72, 0x6f, 0x79, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x40,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43,
	0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x3d, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f,
	0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x00, 0x12, 0x9d, 0x01, 0x0a, 0x14, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x49, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x42, 0x2e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3f,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43,
	0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x00, 0x12, 0x87, 0x01, 0x0a, 0x10, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x12, 0x39, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x66, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x36, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74,
	0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x44, 0x65,
	0x73, 0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x91, 0x01, 0x0a, 0x10,
	0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x50, 0x61, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x12, 0x3e, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f,
	0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x79, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x3b, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f,
	0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x79, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12,
	0xa3, 0x01, 0x0a, 0x16, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x50, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x44, 0x2e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x41, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f,
	0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x90, 0x01, 0x0a, 0x13, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f,
	0x79, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x3c, 0x2e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74,
	0x6d, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x44, 0x65, 0x73,
	0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x52,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x74, 0x72,
	0x6f, 0x79, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x97, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x3b, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x3c, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69,
	0x74, 0x6f, 0x2e, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x71, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x32, 0x2e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43,
	0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x79, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x12, 0x33, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x43, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x92, 0x01, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x12, 0x3d, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x47, 0x6f, 0x6f,
	0x64, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x3e, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x47, 0x6f, 0x6f, 0x64,
	0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x92, 0x01, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x3f, 0x2e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x82, 0x01, 0x0a, 0x0d, 0x4c,
	0x69, 0x73, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x12, 0x36, 0x2e, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e,
	0x66, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x86, 0x01, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x12, 0x3b, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74,
	0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x79, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43,
	0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x98, 0x01, 0x0a, 0x13, 0x4c, 0x69, 0x73,
	0x74, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x12, 0x41, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f,
	0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x3c, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x8b, 0x01, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x39, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x52, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x90, 0x01, 0x0a, 0x17, 0x4f, 0x6e, 0x53, 0x70, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x12, 0x3d, 0x2e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x4f, 0x6e,
	0x53, 0x70, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x43,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d,
	0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x7c, 0x0a, 0x0c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x65, 0x78,
	0x74, 0x54, 0x69, 0x64, 0x12, 0x32, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x65, 0x78, 0x74, 0x54, 0x69,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x4e, 0x65, 0x78, 0x74, 0x54, 0x69, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x7c, 0x0a, 0x0c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x32, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69,
	0x74, 0x6f, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x7f, 0x0a, 0x0d, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x3b, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74,
	0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61,
	0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43,
	0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x92, 0x01, 0x0a, 0x1a, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66,
	0x12, 0x36, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f,
	0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x9b, 0x01, 0x0a, 0x1d, 0x52, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x39, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x69, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x75, 0x0a, 0x08, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65,
	0x12, 0x36, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f,
	0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7d, 0x0a, 0x0e, 0x52,
	0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x12, 0x37, 0x2e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74,
	0x6d, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x96, 0x01, 0x0a, 0x13, 0x52,
	0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x12, 0x41, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69,
	0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x47, 0x6f, 0x6f, 0x64, 0x73,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x47, 0x6f,
	0x6f, 0x64, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x96, 0x01, 0x0a, 0x15, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65,
	0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x43, 0x2e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74,
	0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x36, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69,
	0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x86, 0x01, 0x0a,
	0x11, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f,
	0x6e, 0x66, 0x12, 0x3a, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69,
	0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x52,
	0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43,
	0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x8a, 0x01, 0x0a, 0x11, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65,
	0x76, 0x65, 0x50, 0x61, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x3f, 0x2e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x74,
	0x72, 0x69, 0x65, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x9c, 0x01, 0x0a, 0x17, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x50,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x45,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43,
	0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x8f, 0x01, 0x0a, 0x14, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x52, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x3d, 0x2e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x52, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65,
	0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x52, 0x65, 0x66,
	0x75, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x79, 0x0a, 0x0e, 0x53, 0x68, 0x6f, 0x70, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x57, 0x64, 0x74, 0x12, 0x31, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x57, 0x64, 0x74, 0x53, 0x68, 0x6f, 0x70, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x57, 0x64, 0x74, 0x53, 0x68, 0x6f, 0x70,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7c,
	0x0a, 0x0f, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x57, 0x64,
	0x74, 0x12, 0x32, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74,
	0x6f, 0x2e, 0x57, 0x64, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x57, 0x64, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x94, 0x01, 0x0a,
	0x17, 0x54, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x38, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69,
	0x74, 0x6f, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x91, 0x01, 0x0a, 0x15, 0x54, 0x72, 0x61, 0x64, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x38, 0x2e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x54, 0x72,
	0x61, 0x64, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3c, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x91, 0x01, 0x0a, 0x17, 0x54, 0x79, 0x70, 0x65,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x12, 0x37, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x69, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3b, 0x2e, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6b, 0x0a, 0x06, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x2e, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x79, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x12, 0x35, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x43, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x30, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e,
	0x43, 0x74, 0x6d, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x92, 0x01, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x6f,
	0x6f, 0x64, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x3f, 0x2e, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x92, 0x01, 0x0a, 0x13, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x12, 0x41, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f,
	0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x82, 0x01,
	0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e,
	0x66, 0x12, 0x38, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74,
	0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x86, 0x01, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x3d, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50,
	0x61, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x98, 0x01, 0x0a, 0x15,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x43, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x8b, 0x01, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x3b, 0x2e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74,
	0x6d, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x52, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x42, 0x0f, 0x5a, 0x0d, 0x2e, 0x2f, 0x70, 0x62, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x73, 0x69, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_order_ito_proto_rawDescOnce sync.Once
	file_order_ito_proto_rawDescData = file_order_ito_proto_rawDesc
)

func file_order_ito_proto_rawDescGZIP() []byte {
	file_order_ito_proto_rawDescOnce.Do(func() {
		file_order_ito_proto_rawDescData = protoimpl.X.CompressGZIP(file_order_ito_proto_rawDescData)
	})
	return file_order_ito_proto_rawDescData
}

var file_order_ito_proto_msgTypes = make([]protoimpl.MessageInfo, 104)
var file_order_ito_proto_goTypes = []interface{}{
	(*CtmOrderDestroyResp)(nil),                    // 0: customer_service.customer_ito.CtmOrderDestroyResp
	(*CtmCouponDestroyResp)(nil),                   // 1: customer_service.customer_ito.CtmCouponDestroyResp
	(*CtmOrderGoodsDetailDestroyResp)(nil),         // 2: customer_service.customer_ito.CtmOrderGoodsDetailDestroyResp
	(*CtmOrderInvoiceDetailDestroyResp)(nil),       // 3: customer_service.customer_ito.CtmOrderInvoiceDetailDestroyResp
	(*CtmOrderConfDestroyResp)(nil),                // 4: customer_service.customer_ito.CtmOrderConfDestroyResp
	(*CtmOrderPayDetailDestroyResp)(nil),           // 5: customer_service.customer_ito.CtmOrderPayDetailDestroyResp
	(*CtmOrderPromotionDetailDestroyResp)(nil),     // 6: customer_service.customer_ito.CtmOrderPromotionDetailDestroyResp
	(*CtmRefundReasonDestroyResp)(nil),             // 7: customer_service.customer_ito.CtmRefundReasonDestroyResp
	(*ChildrenBatchUpdateRequest)(nil),             // 8: customer_service.customer_ito.ChildrenBatchUpdateRequest
	(*ChildrenBatchUpdateResponse)(nil),            // 9: customer_service.customer_ito.ChildrenBatchUpdateResponse
	(*CtmCouponCreateRequest)(nil),                 // 10: customer_service.customer_ito.CtmCouponCreateRequest
	(*CtmCouponDestroyRequest)(nil),                // 11: customer_service.customer_ito.CtmCouponDestroyRequest
	(*CtmCouponListRequest)(nil),                   // 12: customer_service.customer_ito.CtmCouponListRequest
	(*CtmCouponListResponse)(nil),                  // 13: customer_service.customer_ito.CtmCouponListResponse
	(*CtmCouponOptionResponse)(nil),                // 14: customer_service.customer_ito.CtmCouponOptionResponse
	(*CtmCouponResponse)(nil),                      // 15: customer_service.customer_ito.CtmCouponResponse
	(*CtmCouponRetrieveRequest)(nil),               // 16: customer_service.customer_ito.CtmCouponRetrieveRequest
	(*CtmCouponUpdateRequest)(nil),                 // 17: customer_service.customer_ito.CtmCouponUpdateRequest
	(*CtmOrderConfCreateRequest)(nil),              // 18: customer_service.customer_ito.CtmOrderConfCreateRequest
	(*CtmOrderConfDestroyRequest)(nil),             // 19: customer_service.customer_ito.CtmOrderConfDestroyRequest
	(*CtmOrderConfListRequest)(nil),                // 20: customer_service.customer_ito.CtmOrderConfListRequest
	(*CtmOrderConfListResponse)(nil),               // 21: customer_service.customer_ito.CtmOrderConfListResponse
	(*CtmOrderConfResponse)(nil),                   // 22: customer_service.customer_ito.CtmOrderConfResponse
	(*CtmOrderConfRetrieveRequest)(nil),            // 23: customer_service.customer_ito.CtmOrderConfRetrieveRequest
	(*CtmOrderConfUpdateRequest)(nil),              // 24: customer_service.customer_ito.CtmOrderConfUpdateRequest
	(*CtmOrderDestroyRequest)(nil),                 // 25: customer_service.customer_ito.CtmOrderDestroyRequest
	(*CtmOrderGoodsDetailCreateRequest)(nil),       // 26: customer_service.customer_ito.CtmOrderGoodsDetailCreateRequest
	(*CtmOrderGoodsDetailDestroyRequest)(nil),      // 27: customer_service.customer_ito.CtmOrderGoodsDetailDestroyRequest
	(*CtmOrderGoodsDetailListRequest)(nil),         // 28: customer_service.customer_ito.CtmOrderGoodsDetailListRequest
	(*CtmOrderGoodsDetailListResponse)(nil),        // 29: customer_service.customer_ito.CtmOrderGoodsDetailListResponse
	(*CtmOrderGoodsDetailRequest)(nil),             // 30: customer_service.customer_ito.CtmOrderGoodsDetailRequest
	(*CtmOrderGoodsDetailResponse)(nil),            // 31: customer_service.customer_ito.CtmOrderGoodsDetailResponse
	(*CtmOrderGoodsDetailRetrieveRequest)(nil),     // 32: customer_service.customer_ito.CtmOrderGoodsDetailRetrieveRequest
	(*CtmOrderGoodsDetailUpdateRequest)(nil),       // 33: customer_service.customer_ito.CtmOrderGoodsDetailUpdateRequest
	(*CtmOrderInvoiceChildrenResponse)(nil),        // 34: customer_service.customer_ito.CtmOrderInvoiceChildrenResponse
	(*CtmOrderInvoiceDetailCreateRequest)(nil),     // 35: customer_service.customer_ito.CtmOrderInvoiceDetailCreateRequest
	(*CtmOrderInvoiceDetailDestroyRequest)(nil),    // 36: customer_service.customer_ito.CtmOrderInvoiceDetailDestroyRequest
	(*CtmOrderInvoiceDetailListRequest)(nil),       // 37: customer_service.customer_ito.CtmOrderInvoiceDetailListRequest
	(*CtmOrderInvoiceDetailRetrieveRequest)(nil),   // 38: customer_service.customer_ito.CtmOrderInvoiceDetailRetrieveRequest
	(*CtmOrderInvoiceDetailUpdateRequest)(nil),     // 39: customer_service.customer_ito.CtmOrderInvoiceDetailUpdateRequest
	(*CtmOrderInvoiceListResponse)(nil),            // 40: customer_service.customer_ito.CtmOrderInvoiceListResponse
	(*CtmOrderInvoiceRequest)(nil),                 // 41: customer_service.customer_ito.CtmOrderInvoiceRequest
	(*CtmOrderInvoiceResponse)(nil),                // 42: customer_service.customer_ito.CtmOrderInvoiceResponse
	(*CtmOrderListRequest)(nil),                    // 43: customer_service.customer_ito.CtmOrderListRequest
	(*CtmOrderListResponse)(nil),                   // 44: customer_service.customer_ito.CtmOrderListResponse
	(*CtmOrderNextTidResponse)(nil),                // 45: customer_service.customer_ito.CtmOrderNextTidResponse
	(*CtmOrderOptionsResponse)(nil),                // 46: customer_service.customer_ito.CtmOrderOptionsResponse
	(*CtmOrderPartialUpdateRequest)(nil),           // 47: customer_service.customer_ito.CtmOrderPartialUpdateRequest
	(*CtmOrderPayDetailCreateRequest)(nil),         // 48: customer_service.customer_ito.CtmOrderPayDetailCreateRequest
	(*CtmOrderPayDetailDestroyRequest)(nil),        // 49: customer_service.customer_ito.CtmOrderPayDetailDestroyRequest
	(*CtmOrderPayDetailListRequest)(nil),           // 50: customer_service.customer_ito.CtmOrderPayDetailListRequest
	(*CtmOrderPayDetailRetrieveRequest)(nil),       // 51: customer_service.customer_ito.CtmOrderPayDetailRetrieveRequest
	(*CtmOrderPayDetailUpdateRequest)(nil),         // 52: customer_service.customer_ito.CtmOrderPayDetailUpdateRequest
	(*CtmOrderPayListResponse)(nil),                // 53: customer_service.customer_ito.CtmOrderPayListResponse
	(*CtmOrderPayRequest)(nil),                     // 54: customer_service.customer_ito.CtmOrderPayRequest
	(*CtmOrderPayResponse)(nil),                    // 55: customer_service.customer_ito.CtmOrderPayResponse
	(*CtmOrderPromotionDetailCreateRequest)(nil),   // 56: customer_service.customer_ito.CtmOrderPromotionDetailCreateRequest
	(*CtmOrderPromotionDetailDestroyRequest)(nil),  // 57: customer_service.customer_ito.CtmOrderPromotionDetailDestroyRequest
	(*CtmOrderPromotionDetailListRequest)(nil),     // 58: customer_service.customer_ito.CtmOrderPromotionDetailListRequest
	(*CtmOrderPromotionDetailRetrieveRequest)(nil), // 59: customer_service.customer_ito.CtmOrderPromotionDetailRetrieveRequest
	(*CtmOrderPromotionDetailUpdateRequest)(nil),   // 60: customer_service.customer_ito.CtmOrderPromotionDetailUpdateRequest
	(*CtmOrderPromotionListResponse)(nil),          // 61: customer_service.customer_ito.CtmOrderPromotionListResponse
	(*CtmOrderPromotionRequest)(nil),               // 62: customer_service.customer_ito.CtmOrderPromotionRequest
	(*CtmOrderPromotionResponse)(nil),              // 63: customer_service.customer_ito.CtmOrderPromotionResponse
	(*CtmOrderRequest)(nil),                        // 64: customer_service.customer_ito.CtmOrderRequest
	(*CtmOrderResponse)(nil),                       // 65: customer_service.customer_ito.CtmOrderResponse
	(*CtmOrderRetrieveRequest)(nil),                // 66: customer_service.customer_ito.CtmOrderRetrieveRequest
	(*CtmRefundReasonChildrenResponse)(nil),        // 67: customer_service.customer_ito.CtmRefundReasonChildrenResponse
	(*CtmRefundReasonCreateRequest)(nil),           // 68: customer_service.customer_ito.CtmRefundReasonCreateRequest
	(*CtmRefundReasonDestroyRequest)(nil),          // 69: customer_service.customer_ito.CtmRefundReasonDestroyRequest
	(*CtmRefundReasonListRequest)(nil),             // 70: customer_service.customer_ito.CtmRefundReasonListRequest
	(*CtmRefundReasonListResponse)(nil),            // 71: customer_service.customer_ito.CtmRefundReasonListResponse
	(*CtmRefundReasonRequest)(nil),                 // 72: customer_service.customer_ito.CtmRefundReasonRequest
	(*CtmRefundReasonResponse)(nil),                // 73: customer_service.customer_ito.CtmRefundReasonResponse
	(*CtmRefundReasonRetrieveRequest)(nil),         // 74: customer_service.customer_ito.CtmRefundReasonRetrieveRequest
	(*CtmRefundReasonUpdateRequest)(nil),           // 75: customer_service.customer_ito.CtmRefundReasonUpdateRequest
	(*LabelValueResponse)(nil),                     // 76: customer_service.customer_ito.LabelValueResponse
	(*OnSpuListCustomerCouponRequest)(nil),         // 77: customer_service.customer_ito.OnSpuListCustomerCouponRequest
	(*OptionRequest)(nil),                          // 78: customer_service.customer_ito.OptionRequest
	(*OrderNextTidRequest)(nil),                    // 79: customer_service.customer_ito.OrderNextTidRequest
	(*OrderOptionsRequest)(nil),                    // 80: customer_service.customer_ito.OrderOptionsRequest
	(*ReasonTypeOption)(nil),                       // 81: customer_service.customer_ito.ReasonTypeOption
	(*ReasonTypeOptionListResponse)(nil),           // 82: customer_service.customer_ito.ReasonTypeOptionListResponse
	(*ReasonTypeOptionsRequest)(nil),               // 83: customer_service.customer_ito.ReasonTypeOptionsRequest
	(*RefundReasonCheckListRequest)(nil),           // 84: customer_service.customer_ito.RefundReasonCheckListRequest
	(*RefundReasonCheckListResponse)(nil),          // 85: customer_service.customer_ito.RefundReasonCheckListResponse
	(*RefundReasonOption)(nil),                     // 86: customer_service.customer_ito.RefundReasonOption
	(*RefundReasonOptionListResponse)(nil),         // 87: customer_service.customer_ito.RefundReasonOptionListResponse
	(*RefundReasonOptionsRequest)(nil),             // 88: customer_service.customer_ito.RefundReasonOptionsRequest
	(*TradeReasonOption)(nil),                      // 89: customer_service.customer_ito.TradeReasonOption
	(*TradeReasonOptionListResponse)(nil),          // 90: customer_service.customer_ito.TradeReasonOptionListResponse
	(*TradeReasonOptionsRequest)(nil),              // 91: customer_service.customer_ito.TradeReasonOptionsRequest
	(*TradeStatusOptions)(nil),                     // 92: customer_service.customer_ito.TradeStatusOptions
	(*TradeStatusOptionsListResponse)(nil),         // 93: customer_service.customer_ito.TradeStatusOptionsListResponse
	(*TradeStatusOptionsRequest)(nil),              // 94: customer_service.customer_ito.TradeStatusOptionsRequest
	(*TradeTypeOption)(nil),                        // 95: customer_service.customer_ito.TradeTypeOption
	(*TradeTypeOptionListResponse)(nil),            // 96: customer_service.customer_ito.TradeTypeOptionListResponse
	(*TradeTypeOptionsRequest)(nil),                // 97: customer_service.customer_ito.TradeTypeOptionsRequest
	(*WdtShop)(nil),                                // 98: customer_service.customer_ito.WdtShop
	(*WdtShopListRequest)(nil),                     // 99: customer_service.customer_ito.WdtShopListRequest
	(*WdtShopListResponse)(nil),                    // 100: customer_service.customer_ito.WdtShopListResponse
	(*WdtStock)(nil),                               // 101: customer_service.customer_ito.WdtStock
	(*WdtStockListRequest)(nil),                    // 102: customer_service.customer_ito.WdtStockListRequest
	(*WdtStockListResponse)(nil),                   // 103: customer_service.customer_ito.WdtStockListResponse
}
var file_order_ito_proto_depIdxs = []int32{
	15,  // 0: customer_service.customer_ito.CtmCouponListResponse.results:type_name -> customer_service.customer_ito.CtmCouponResponse
	76,  // 1: customer_service.customer_ito.CtmCouponOptionResponse.coupon_classes:type_name -> customer_service.customer_ito.LabelValueResponse
	76,  // 2: customer_service.customer_ito.CtmCouponOptionResponse.coupon_types:type_name -> customer_service.customer_ito.LabelValueResponse
	76,  // 3: customer_service.customer_ito.CtmCouponOptionResponse.coupon_status:type_name -> customer_service.customer_ito.LabelValueResponse
	22,  // 4: customer_service.customer_ito.CtmOrderConfListResponse.results:type_name -> customer_service.customer_ito.CtmOrderConfResponse
	31,  // 5: customer_service.customer_ito.CtmOrderGoodsDetailListResponse.results:type_name -> customer_service.customer_ito.CtmOrderGoodsDetailResponse
	30,  // 6: customer_service.customer_ito.CtmOrderInvoiceDetailUpdateRequest.goods_list:type_name -> customer_service.customer_ito.CtmOrderGoodsDetailRequest
	72,  // 7: customer_service.customer_ito.CtmOrderInvoiceDetailUpdateRequest.cancel_reasons:type_name -> customer_service.customer_ito.CtmRefundReasonRequest
	62,  // 8: customer_service.customer_ito.CtmOrderInvoiceDetailUpdateRequest.coupon_list:type_name -> customer_service.customer_ito.CtmOrderPromotionRequest
	54,  // 9: customer_service.customer_ito.CtmOrderInvoiceDetailUpdateRequest.order_pay:type_name -> customer_service.customer_ito.CtmOrderPayRequest
	41,  // 10: customer_service.customer_ito.CtmOrderInvoiceDetailUpdateRequest.order_invoice:type_name -> customer_service.customer_ito.CtmOrderInvoiceRequest
	42,  // 11: customer_service.customer_ito.CtmOrderInvoiceListResponse.results:type_name -> customer_service.customer_ito.CtmOrderInvoiceResponse
	34,  // 12: customer_service.customer_ito.CtmOrderInvoiceResponse.children:type_name -> customer_service.customer_ito.CtmOrderInvoiceChildrenResponse
	30,  // 13: customer_service.customer_ito.CtmOrderListRequest.goods_list:type_name -> customer_service.customer_ito.CtmOrderGoodsDetailRequest
	72,  // 14: customer_service.customer_ito.CtmOrderListRequest.cancel_reasons:type_name -> customer_service.customer_ito.CtmRefundReasonRequest
	62,  // 15: customer_service.customer_ito.CtmOrderListRequest.coupon_list:type_name -> customer_service.customer_ito.CtmOrderPromotionRequest
	54,  // 16: customer_service.customer_ito.CtmOrderListRequest.order_pay:type_name -> customer_service.customer_ito.CtmOrderPayRequest
	41,  // 17: customer_service.customer_ito.CtmOrderListRequest.order_invoice:type_name -> customer_service.customer_ito.CtmOrderInvoiceRequest
	65,  // 18: customer_service.customer_ito.CtmOrderListResponse.results:type_name -> customer_service.customer_ito.CtmOrderResponse
	76,  // 19: customer_service.customer_ito.CtmOrderOptionsResponse.trade_type:type_name -> customer_service.customer_ito.LabelValueResponse
	76,  // 20: customer_service.customer_ito.CtmOrderOptionsResponse.trade_status:type_name -> customer_service.customer_ito.LabelValueResponse
	76,  // 21: customer_service.customer_ito.CtmOrderOptionsResponse.pay_status:type_name -> customer_service.customer_ito.LabelValueResponse
	76,  // 22: customer_service.customer_ito.CtmOrderOptionsResponse.delivery_term:type_name -> customer_service.customer_ito.LabelValueResponse
	76,  // 23: customer_service.customer_ito.CtmOrderOptionsResponse.invoice_status:type_name -> customer_service.customer_ito.LabelValueResponse
	76,  // 24: customer_service.customer_ito.CtmOrderOptionsResponse.cancel_reasons:type_name -> customer_service.customer_ito.LabelValueResponse
	76,  // 25: customer_service.customer_ito.CtmOrderOptionsResponse.create_type:type_name -> customer_service.customer_ito.LabelValueResponse
	30,  // 26: customer_service.customer_ito.CtmOrderPartialUpdateRequest.goods_list:type_name -> customer_service.customer_ito.CtmOrderGoodsDetailRequest
	72,  // 27: customer_service.customer_ito.CtmOrderPartialUpdateRequest.cancel_reasons:type_name -> customer_service.customer_ito.CtmRefundReasonRequest
	62,  // 28: customer_service.customer_ito.CtmOrderPartialUpdateRequest.coupon_list:type_name -> customer_service.customer_ito.CtmOrderPromotionRequest
	54,  // 29: customer_service.customer_ito.CtmOrderPartialUpdateRequest.order_pay:type_name -> customer_service.customer_ito.CtmOrderPayRequest
	41,  // 30: customer_service.customer_ito.CtmOrderPartialUpdateRequest.order_invoice:type_name -> customer_service.customer_ito.CtmOrderInvoiceRequest
	30,  // 31: customer_service.customer_ito.CtmOrderPayDetailUpdateRequest.goods_list:type_name -> customer_service.customer_ito.CtmOrderGoodsDetailRequest
	72,  // 32: customer_service.customer_ito.CtmOrderPayDetailUpdateRequest.cancel_reasons:type_name -> customer_service.customer_ito.CtmRefundReasonRequest
	62,  // 33: customer_service.customer_ito.CtmOrderPayDetailUpdateRequest.coupon_list:type_name -> customer_service.customer_ito.CtmOrderPromotionRequest
	54,  // 34: customer_service.customer_ito.CtmOrderPayDetailUpdateRequest.order_pay:type_name -> customer_service.customer_ito.CtmOrderPayRequest
	41,  // 35: customer_service.customer_ito.CtmOrderPayDetailUpdateRequest.order_invoice:type_name -> customer_service.customer_ito.CtmOrderInvoiceRequest
	55,  // 36: customer_service.customer_ito.CtmOrderPayListResponse.results:type_name -> customer_service.customer_ito.CtmOrderPayResponse
	30,  // 37: customer_service.customer_ito.CtmOrderPromotionDetailUpdateRequest.goods_list:type_name -> customer_service.customer_ito.CtmOrderGoodsDetailRequest
	72,  // 38: customer_service.customer_ito.CtmOrderPromotionDetailUpdateRequest.cancel_reasons:type_name -> customer_service.customer_ito.CtmRefundReasonRequest
	62,  // 39: customer_service.customer_ito.CtmOrderPromotionDetailUpdateRequest.coupon_list:type_name -> customer_service.customer_ito.CtmOrderPromotionRequest
	54,  // 40: customer_service.customer_ito.CtmOrderPromotionDetailUpdateRequest.order_pay:type_name -> customer_service.customer_ito.CtmOrderPayRequest
	41,  // 41: customer_service.customer_ito.CtmOrderPromotionDetailUpdateRequest.order_invoice:type_name -> customer_service.customer_ito.CtmOrderInvoiceRequest
	63,  // 42: customer_service.customer_ito.CtmOrderPromotionListResponse.results:type_name -> customer_service.customer_ito.CtmOrderPromotionResponse
	30,  // 43: customer_service.customer_ito.CtmOrderRequest.goods_list:type_name -> customer_service.customer_ito.CtmOrderGoodsDetailRequest
	72,  // 44: customer_service.customer_ito.CtmOrderRequest.cancel_reasons:type_name -> customer_service.customer_ito.CtmRefundReasonRequest
	62,  // 45: customer_service.customer_ito.CtmOrderRequest.coupon_list:type_name -> customer_service.customer_ito.CtmOrderPromotionRequest
	54,  // 46: customer_service.customer_ito.CtmOrderRequest.order_pay:type_name -> customer_service.customer_ito.CtmOrderPayRequest
	41,  // 47: customer_service.customer_ito.CtmOrderRequest.order_invoice:type_name -> customer_service.customer_ito.CtmOrderInvoiceRequest
	31,  // 48: customer_service.customer_ito.CtmOrderResponse.goods_list:type_name -> customer_service.customer_ito.CtmOrderGoodsDetailResponse
	73,  // 49: customer_service.customer_ito.CtmOrderResponse.cancel_reasons:type_name -> customer_service.customer_ito.CtmRefundReasonResponse
	63,  // 50: customer_service.customer_ito.CtmOrderResponse.coupon_list:type_name -> customer_service.customer_ito.CtmOrderPromotionResponse
	55,  // 51: customer_service.customer_ito.CtmOrderResponse.order_pay:type_name -> customer_service.customer_ito.CtmOrderPayResponse
	42,  // 52: customer_service.customer_ito.CtmOrderResponse.order_invoice:type_name -> customer_service.customer_ito.CtmOrderInvoiceResponse
	73,  // 53: customer_service.customer_ito.CtmRefundReasonListResponse.results:type_name -> customer_service.customer_ito.CtmRefundReasonResponse
	67,  // 54: customer_service.customer_ito.CtmRefundReasonResponse.children:type_name -> customer_service.customer_ito.CtmRefundReasonChildrenResponse
	81,  // 55: customer_service.customer_ito.ReasonTypeOptionListResponse.results:type_name -> customer_service.customer_ito.ReasonTypeOption
	86,  // 56: customer_service.customer_ito.RefundReasonOptionListResponse.results:type_name -> customer_service.customer_ito.RefundReasonOption
	67,  // 57: customer_service.customer_ito.TradeReasonOption.children:type_name -> customer_service.customer_ito.CtmRefundReasonChildrenResponse
	89,  // 58: customer_service.customer_ito.TradeReasonOptionListResponse.results:type_name -> customer_service.customer_ito.TradeReasonOption
	92,  // 59: customer_service.customer_ito.TradeStatusOptionsListResponse.results:type_name -> customer_service.customer_ito.TradeStatusOptions
	95,  // 60: customer_service.customer_ito.TradeTypeOptionListResponse.results:type_name -> customer_service.customer_ito.TradeTypeOption
	98,  // 61: customer_service.customer_ito.WdtShopListResponse.results:type_name -> customer_service.customer_ito.WdtShop
	101, // 62: customer_service.customer_ito.WdtStockListResponse.results:type_name -> customer_service.customer_ito.WdtStock
	8,   // 63: customer_service.customer_ito.CtmItoOrderController.ChildrenBatchUpdateRefundReason:input_type -> customer_service.customer_ito.ChildrenBatchUpdateRequest
	78,  // 64: customer_service.customer_ito.CtmItoOrderController.CouponOptions:input_type -> customer_service.customer_ito.OptionRequest
	64,  // 65: customer_service.customer_ito.CtmItoOrderController.Create:input_type -> customer_service.customer_ito.CtmOrderRequest
	10,  // 66: customer_service.customer_ito.CtmItoOrderController.CreateCoupon:input_type -> customer_service.customer_ito.CtmCouponCreateRequest
	26,  // 67: customer_service.customer_ito.CtmItoOrderController.CreateGoodsDetail:input_type -> customer_service.customer_ito.CtmOrderGoodsDetailCreateRequest
	35,  // 68: customer_service.customer_ito.CtmItoOrderController.CreateInvoiceDetail:input_type -> customer_service.customer_ito.CtmOrderInvoiceDetailCreateRequest
	18,  // 69: customer_service.customer_ito.CtmItoOrderController.CreateOrderConf:input_type -> customer_service.customer_ito.CtmOrderConfCreateRequest
	48,  // 70: customer_service.customer_ito.CtmItoOrderController.CreatePayDetail:input_type -> customer_service.customer_ito.CtmOrderPayDetailCreateRequest
	56,  // 71: customer_service.customer_ito.CtmItoOrderController.CreatePromotionDetail:input_type -> customer_service.customer_ito.CtmOrderPromotionDetailCreateRequest
	68,  // 72: customer_service.customer_ito.CtmItoOrderController.CreateRefundReason:input_type -> customer_service.customer_ito.CtmRefundReasonCreateRequest
	25,  // 73: customer_service.customer_ito.CtmItoOrderController.Destroy:input_type -> customer_service.customer_ito.CtmOrderDestroyRequest
	11,  // 74: customer_service.customer_ito.CtmItoOrderController.DestroyCoupon:input_type -> customer_service.customer_ito.CtmCouponDestroyRequest
	27,  // 75: customer_service.customer_ito.CtmItoOrderController.DestroyGoodsDetail:input_type -> customer_service.customer_ito.CtmOrderGoodsDetailDestroyRequest
	36,  // 76: customer_service.customer_ito.CtmItoOrderController.DestroyInvoiceDetail:input_type -> customer_service.customer_ito.CtmOrderInvoiceDetailDestroyRequest
	19,  // 77: customer_service.customer_ito.CtmItoOrderController.DestroyOrderConf:input_type -> customer_service.customer_ito.CtmOrderConfDestroyRequest
	49,  // 78: customer_service.customer_ito.CtmItoOrderController.DestroyPayDetail:input_type -> customer_service.customer_ito.CtmOrderPayDetailDestroyRequest
	57,  // 79: customer_service.customer_ito.CtmItoOrderController.DestroyPromotionDetail:input_type -> customer_service.customer_ito.CtmOrderPromotionDetailDestroyRequest
	69,  // 80: customer_service.customer_ito.CtmItoOrderController.DestroyRefundReason:input_type -> customer_service.customer_ito.CtmRefundReasonDestroyRequest
	84,  // 81: customer_service.customer_ito.CtmItoOrderController.GetCheckListRefundReason:input_type -> customer_service.customer_ito.RefundReasonCheckListRequest
	43,  // 82: customer_service.customer_ito.CtmItoOrderController.List:input_type -> customer_service.customer_ito.CtmOrderListRequest
	12,  // 83: customer_service.customer_ito.CtmItoOrderController.ListCoupon:input_type -> customer_service.customer_ito.CtmCouponListRequest
	28,  // 84: customer_service.customer_ito.CtmItoOrderController.ListGoodsDetail:input_type -> customer_service.customer_ito.CtmOrderGoodsDetailListRequest
	37,  // 85: customer_service.customer_ito.CtmItoOrderController.ListInvoiceDetail:input_type -> customer_service.customer_ito.CtmOrderInvoiceDetailListRequest
	20,  // 86: customer_service.customer_ito.CtmItoOrderController.ListOrderConf:input_type -> customer_service.customer_ito.CtmOrderConfListRequest
	50,  // 87: customer_service.customer_ito.CtmItoOrderController.ListPayDetail:input_type -> customer_service.customer_ito.CtmOrderPayDetailListRequest
	58,  // 88: customer_service.customer_ito.CtmItoOrderController.ListPromotionDetail:input_type -> customer_service.customer_ito.CtmOrderPromotionDetailListRequest
	70,  // 89: customer_service.customer_ito.CtmItoOrderController.ListRefundReason:input_type -> customer_service.customer_ito.CtmRefundReasonListRequest
	77,  // 90: customer_service.customer_ito.CtmItoOrderController.OnSpuListCustomerCoupon:input_type -> customer_service.customer_ito.OnSpuListCustomerCouponRequest
	79,  // 91: customer_service.customer_ito.CtmItoOrderController.OrderNextTid:input_type -> customer_service.customer_ito.OrderNextTidRequest
	80,  // 92: customer_service.customer_ito.CtmItoOrderController.OrderOptions:input_type -> customer_service.customer_ito.OrderOptionsRequest
	47,  // 93: customer_service.customer_ito.CtmItoOrderController.PartialUpdate:input_type -> customer_service.customer_ito.CtmOrderPartialUpdateRequest
	97,  // 94: customer_service.customer_ito.CtmItoOrderController.ReasonTypeOptionsOrderConf:input_type -> customer_service.customer_ito.TradeTypeOptionsRequest
	88,  // 95: customer_service.customer_ito.CtmItoOrderController.ReasonTypeOptionsRefundReason:input_type -> customer_service.customer_ito.RefundReasonOptionsRequest
	66,  // 96: customer_service.customer_ito.CtmItoOrderController.Retrieve:input_type -> customer_service.customer_ito.CtmOrderRetrieveRequest
	16,  // 97: customer_service.customer_ito.CtmItoOrderController.RetrieveCoupon:input_type -> customer_service.customer_ito.CtmCouponRetrieveRequest
	32,  // 98: customer_service.customer_ito.CtmItoOrderController.RetrieveGoodsDetail:input_type -> customer_service.customer_ito.CtmOrderGoodsDetailRetrieveRequest
	38,  // 99: customer_service.customer_ito.CtmItoOrderController.RetrieveInvoiceDetail:input_type -> customer_service.customer_ito.CtmOrderInvoiceDetailRetrieveRequest
	23,  // 100: customer_service.customer_ito.CtmItoOrderController.RetrieveOrderConf:input_type -> customer_service.customer_ito.CtmOrderConfRetrieveRequest
	51,  // 101: customer_service.customer_ito.CtmItoOrderController.RetrievePayDetail:input_type -> customer_service.customer_ito.CtmOrderPayDetailRetrieveRequest
	59,  // 102: customer_service.customer_ito.CtmItoOrderController.RetrievePromotionDetail:input_type -> customer_service.customer_ito.CtmOrderPromotionDetailRetrieveRequest
	74,  // 103: customer_service.customer_ito.CtmItoOrderController.RetrieveRefundReason:input_type -> customer_service.customer_ito.CtmRefundReasonRetrieveRequest
	99,  // 104: customer_service.customer_ito.CtmItoOrderController.ShopOptionsWdt:input_type -> customer_service.customer_ito.WdtShopListRequest
	102, // 105: customer_service.customer_ito.CtmItoOrderController.StockOptionsWdt:input_type -> customer_service.customer_ito.WdtStockListRequest
	94,  // 106: customer_service.customer_ito.CtmItoOrderController.TradeStatusOptionsOrder:input_type -> customer_service.customer_ito.TradeStatusOptionsRequest
	91,  // 107: customer_service.customer_ito.CtmItoOrderController.TradeTypeRefundReason:input_type -> customer_service.customer_ito.TradeReasonOptionsRequest
	83,  // 108: customer_service.customer_ito.CtmItoOrderController.TypeOptionsRefundReason:input_type -> customer_service.customer_ito.ReasonTypeOptionsRequest
	64,  // 109: customer_service.customer_ito.CtmItoOrderController.Update:input_type -> customer_service.customer_ito.CtmOrderRequest
	17,  // 110: customer_service.customer_ito.CtmItoOrderController.UpdateCoupon:input_type -> customer_service.customer_ito.CtmCouponUpdateRequest
	33,  // 111: customer_service.customer_ito.CtmItoOrderController.UpdateGoodsDetail:input_type -> customer_service.customer_ito.CtmOrderGoodsDetailUpdateRequest
	39,  // 112: customer_service.customer_ito.CtmItoOrderController.UpdateInvoiceDetail:input_type -> customer_service.customer_ito.CtmOrderInvoiceDetailUpdateRequest
	24,  // 113: customer_service.customer_ito.CtmItoOrderController.UpdateOrderConf:input_type -> customer_service.customer_ito.CtmOrderConfUpdateRequest
	52,  // 114: customer_service.customer_ito.CtmItoOrderController.UpdatePayDetail:input_type -> customer_service.customer_ito.CtmOrderPayDetailUpdateRequest
	60,  // 115: customer_service.customer_ito.CtmItoOrderController.UpdatePromotionDetail:input_type -> customer_service.customer_ito.CtmOrderPromotionDetailUpdateRequest
	75,  // 116: customer_service.customer_ito.CtmItoOrderController.UpdateRefundReason:input_type -> customer_service.customer_ito.CtmRefundReasonUpdateRequest
	9,   // 117: customer_service.customer_ito.CtmItoOrderController.ChildrenBatchUpdateRefundReason:output_type -> customer_service.customer_ito.ChildrenBatchUpdateResponse
	14,  // 118: customer_service.customer_ito.CtmItoOrderController.CouponOptions:output_type -> customer_service.customer_ito.CtmCouponOptionResponse
	65,  // 119: customer_service.customer_ito.CtmItoOrderController.Create:output_type -> customer_service.customer_ito.CtmOrderResponse
	15,  // 120: customer_service.customer_ito.CtmItoOrderController.CreateCoupon:output_type -> customer_service.customer_ito.CtmCouponResponse
	31,  // 121: customer_service.customer_ito.CtmItoOrderController.CreateGoodsDetail:output_type -> customer_service.customer_ito.CtmOrderGoodsDetailResponse
	42,  // 122: customer_service.customer_ito.CtmItoOrderController.CreateInvoiceDetail:output_type -> customer_service.customer_ito.CtmOrderInvoiceResponse
	22,  // 123: customer_service.customer_ito.CtmItoOrderController.CreateOrderConf:output_type -> customer_service.customer_ito.CtmOrderConfResponse
	55,  // 124: customer_service.customer_ito.CtmItoOrderController.CreatePayDetail:output_type -> customer_service.customer_ito.CtmOrderPayResponse
	63,  // 125: customer_service.customer_ito.CtmItoOrderController.CreatePromotionDetail:output_type -> customer_service.customer_ito.CtmOrderPromotionResponse
	73,  // 126: customer_service.customer_ito.CtmItoOrderController.CreateRefundReason:output_type -> customer_service.customer_ito.CtmRefundReasonResponse
	0,   // 127: customer_service.customer_ito.CtmItoOrderController.Destroy:output_type -> customer_service.customer_ito.CtmOrderDestroyResp
	1,   // 128: customer_service.customer_ito.CtmItoOrderController.DestroyCoupon:output_type -> customer_service.customer_ito.CtmCouponDestroyResp
	2,   // 129: customer_service.customer_ito.CtmItoOrderController.DestroyGoodsDetail:output_type -> customer_service.customer_ito.CtmOrderGoodsDetailDestroyResp
	3,   // 130: customer_service.customer_ito.CtmItoOrderController.DestroyInvoiceDetail:output_type -> customer_service.customer_ito.CtmOrderInvoiceDetailDestroyResp
	4,   // 131: customer_service.customer_ito.CtmItoOrderController.DestroyOrderConf:output_type -> customer_service.customer_ito.CtmOrderConfDestroyResp
	5,   // 132: customer_service.customer_ito.CtmItoOrderController.DestroyPayDetail:output_type -> customer_service.customer_ito.CtmOrderPayDetailDestroyResp
	6,   // 133: customer_service.customer_ito.CtmItoOrderController.DestroyPromotionDetail:output_type -> customer_service.customer_ito.CtmOrderPromotionDetailDestroyResp
	7,   // 134: customer_service.customer_ito.CtmItoOrderController.DestroyRefundReason:output_type -> customer_service.customer_ito.CtmRefundReasonDestroyResp
	85,  // 135: customer_service.customer_ito.CtmItoOrderController.GetCheckListRefundReason:output_type -> customer_service.customer_ito.RefundReasonCheckListResponse
	44,  // 136: customer_service.customer_ito.CtmItoOrderController.List:output_type -> customer_service.customer_ito.CtmOrderListResponse
	13,  // 137: customer_service.customer_ito.CtmItoOrderController.ListCoupon:output_type -> customer_service.customer_ito.CtmCouponListResponse
	29,  // 138: customer_service.customer_ito.CtmItoOrderController.ListGoodsDetail:output_type -> customer_service.customer_ito.CtmOrderGoodsDetailListResponse
	40,  // 139: customer_service.customer_ito.CtmItoOrderController.ListInvoiceDetail:output_type -> customer_service.customer_ito.CtmOrderInvoiceListResponse
	21,  // 140: customer_service.customer_ito.CtmItoOrderController.ListOrderConf:output_type -> customer_service.customer_ito.CtmOrderConfListResponse
	53,  // 141: customer_service.customer_ito.CtmItoOrderController.ListPayDetail:output_type -> customer_service.customer_ito.CtmOrderPayListResponse
	61,  // 142: customer_service.customer_ito.CtmItoOrderController.ListPromotionDetail:output_type -> customer_service.customer_ito.CtmOrderPromotionListResponse
	71,  // 143: customer_service.customer_ito.CtmItoOrderController.ListRefundReason:output_type -> customer_service.customer_ito.CtmRefundReasonListResponse
	13,  // 144: customer_service.customer_ito.CtmItoOrderController.OnSpuListCustomerCoupon:output_type -> customer_service.customer_ito.CtmCouponListResponse
	45,  // 145: customer_service.customer_ito.CtmItoOrderController.OrderNextTid:output_type -> customer_service.customer_ito.CtmOrderNextTidResponse
	46,  // 146: customer_service.customer_ito.CtmItoOrderController.OrderOptions:output_type -> customer_service.customer_ito.CtmOrderOptionsResponse
	65,  // 147: customer_service.customer_ito.CtmItoOrderController.PartialUpdate:output_type -> customer_service.customer_ito.CtmOrderResponse
	96,  // 148: customer_service.customer_ito.CtmItoOrderController.ReasonTypeOptionsOrderConf:output_type -> customer_service.customer_ito.TradeTypeOptionListResponse
	87,  // 149: customer_service.customer_ito.CtmItoOrderController.ReasonTypeOptionsRefundReason:output_type -> customer_service.customer_ito.RefundReasonOptionListResponse
	65,  // 150: customer_service.customer_ito.CtmItoOrderController.Retrieve:output_type -> customer_service.customer_ito.CtmOrderResponse
	15,  // 151: customer_service.customer_ito.CtmItoOrderController.RetrieveCoupon:output_type -> customer_service.customer_ito.CtmCouponResponse
	31,  // 152: customer_service.customer_ito.CtmItoOrderController.RetrieveGoodsDetail:output_type -> customer_service.customer_ito.CtmOrderGoodsDetailResponse
	42,  // 153: customer_service.customer_ito.CtmItoOrderController.RetrieveInvoiceDetail:output_type -> customer_service.customer_ito.CtmOrderInvoiceResponse
	22,  // 154: customer_service.customer_ito.CtmItoOrderController.RetrieveOrderConf:output_type -> customer_service.customer_ito.CtmOrderConfResponse
	55,  // 155: customer_service.customer_ito.CtmItoOrderController.RetrievePayDetail:output_type -> customer_service.customer_ito.CtmOrderPayResponse
	63,  // 156: customer_service.customer_ito.CtmItoOrderController.RetrievePromotionDetail:output_type -> customer_service.customer_ito.CtmOrderPromotionResponse
	73,  // 157: customer_service.customer_ito.CtmItoOrderController.RetrieveRefundReason:output_type -> customer_service.customer_ito.CtmRefundReasonResponse
	100, // 158: customer_service.customer_ito.CtmItoOrderController.ShopOptionsWdt:output_type -> customer_service.customer_ito.WdtShopListResponse
	103, // 159: customer_service.customer_ito.CtmItoOrderController.StockOptionsWdt:output_type -> customer_service.customer_ito.WdtStockListResponse
	93,  // 160: customer_service.customer_ito.CtmItoOrderController.TradeStatusOptionsOrder:output_type -> customer_service.customer_ito.TradeStatusOptionsListResponse
	90,  // 161: customer_service.customer_ito.CtmItoOrderController.TradeTypeRefundReason:output_type -> customer_service.customer_ito.TradeReasonOptionListResponse
	82,  // 162: customer_service.customer_ito.CtmItoOrderController.TypeOptionsRefundReason:output_type -> customer_service.customer_ito.ReasonTypeOptionListResponse
	65,  // 163: customer_service.customer_ito.CtmItoOrderController.Update:output_type -> customer_service.customer_ito.CtmOrderResponse
	15,  // 164: customer_service.customer_ito.CtmItoOrderController.UpdateCoupon:output_type -> customer_service.customer_ito.CtmCouponResponse
	31,  // 165: customer_service.customer_ito.CtmItoOrderController.UpdateGoodsDetail:output_type -> customer_service.customer_ito.CtmOrderGoodsDetailResponse
	42,  // 166: customer_service.customer_ito.CtmItoOrderController.UpdateInvoiceDetail:output_type -> customer_service.customer_ito.CtmOrderInvoiceResponse
	22,  // 167: customer_service.customer_ito.CtmItoOrderController.UpdateOrderConf:output_type -> customer_service.customer_ito.CtmOrderConfResponse
	55,  // 168: customer_service.customer_ito.CtmItoOrderController.UpdatePayDetail:output_type -> customer_service.customer_ito.CtmOrderPayResponse
	63,  // 169: customer_service.customer_ito.CtmItoOrderController.UpdatePromotionDetail:output_type -> customer_service.customer_ito.CtmOrderPromotionResponse
	73,  // 170: customer_service.customer_ito.CtmItoOrderController.UpdateRefundReason:output_type -> customer_service.customer_ito.CtmRefundReasonResponse
	117, // [117:171] is the sub-list for method output_type
	63,  // [63:117] is the sub-list for method input_type
	63,  // [63:63] is the sub-list for extension type_name
	63,  // [63:63] is the sub-list for extension extendee
	0,   // [0:63] is the sub-list for field type_name
}

func init() { file_order_ito_proto_init() }
func file_order_ito_proto_init() {
	if File_order_ito_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_order_ito_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmOrderDestroyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmCouponDestroyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmOrderGoodsDetailDestroyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmOrderInvoiceDetailDestroyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmOrderConfDestroyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmOrderPayDetailDestroyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmOrderPromotionDetailDestroyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmRefundReasonDestroyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChildrenBatchUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChildrenBatchUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmCouponCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmCouponDestroyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmCouponListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmCouponListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmCouponOptionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmCouponResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmCouponRetrieveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmCouponUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmOrderConfCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmOrderConfDestroyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmOrderConfListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmOrderConfListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmOrderConfResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmOrderConfRetrieveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmOrderConfUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmOrderDestroyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmOrderGoodsDetailCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmOrderGoodsDetailDestroyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmOrderGoodsDetailListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmOrderGoodsDetailListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmOrderGoodsDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmOrderGoodsDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmOrderGoodsDetailRetrieveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmOrderGoodsDetailUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmOrderInvoiceChildrenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmOrderInvoiceDetailCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmOrderInvoiceDetailDestroyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmOrderInvoiceDetailListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmOrderInvoiceDetailRetrieveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmOrderInvoiceDetailUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmOrderInvoiceListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmOrderInvoiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmOrderInvoiceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmOrderListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmOrderListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmOrderNextTidResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmOrderOptionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmOrderPartialUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmOrderPayDetailCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmOrderPayDetailDestroyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmOrderPayDetailListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmOrderPayDetailRetrieveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmOrderPayDetailUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmOrderPayListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmOrderPayRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmOrderPayResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmOrderPromotionDetailCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmOrderPromotionDetailDestroyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmOrderPromotionDetailListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmOrderPromotionDetailRetrieveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmOrderPromotionDetailUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmOrderPromotionListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmOrderPromotionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmOrderPromotionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmOrderRetrieveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmRefundReasonChildrenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmRefundReasonCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmRefundReasonDestroyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmRefundReasonListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmRefundReasonListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmRefundReasonRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmRefundReasonResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmRefundReasonRetrieveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmRefundReasonUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LabelValueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnSpuListCustomerCouponRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OptionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderNextTidRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderOptionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReasonTypeOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReasonTypeOptionListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReasonTypeOptionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefundReasonCheckListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefundReasonCheckListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefundReasonOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefundReasonOptionListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefundReasonOptionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TradeReasonOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TradeReasonOptionListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TradeReasonOptionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TradeStatusOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TradeStatusOptionsListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TradeStatusOptionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TradeTypeOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TradeTypeOptionListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TradeTypeOptionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WdtShop); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WdtShopListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WdtShopListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WdtStock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WdtStockListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_ito_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WdtStockListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_order_ito_proto_msgTypes[10].OneofWrappers = []interface{}{}
	file_order_ito_proto_msgTypes[15].OneofWrappers = []interface{}{}
	file_order_ito_proto_msgTypes[17].OneofWrappers = []interface{}{}
	file_order_ito_proto_msgTypes[26].OneofWrappers = []interface{}{}
	file_order_ito_proto_msgTypes[30].OneofWrappers = []interface{}{}
	file_order_ito_proto_msgTypes[31].OneofWrappers = []interface{}{}
	file_order_ito_proto_msgTypes[33].OneofWrappers = []interface{}{}
	file_order_ito_proto_msgTypes[34].OneofWrappers = []interface{}{}
	file_order_ito_proto_msgTypes[35].OneofWrappers = []interface{}{}
	file_order_ito_proto_msgTypes[39].OneofWrappers = []interface{}{}
	file_order_ito_proto_msgTypes[41].OneofWrappers = []interface{}{}
	file_order_ito_proto_msgTypes[42].OneofWrappers = []interface{}{}
	file_order_ito_proto_msgTypes[43].OneofWrappers = []interface{}{}
	file_order_ito_proto_msgTypes[47].OneofWrappers = []interface{}{}
	file_order_ito_proto_msgTypes[48].OneofWrappers = []interface{}{}
	file_order_ito_proto_msgTypes[52].OneofWrappers = []interface{}{}
	file_order_ito_proto_msgTypes[54].OneofWrappers = []interface{}{}
	file_order_ito_proto_msgTypes[55].OneofWrappers = []interface{}{}
	file_order_ito_proto_msgTypes[56].OneofWrappers = []interface{}{}
	file_order_ito_proto_msgTypes[60].OneofWrappers = []interface{}{}
	file_order_ito_proto_msgTypes[62].OneofWrappers = []interface{}{}
	file_order_ito_proto_msgTypes[63].OneofWrappers = []interface{}{}
	file_order_ito_proto_msgTypes[64].OneofWrappers = []interface{}{}
	file_order_ito_proto_msgTypes[65].OneofWrappers = []interface{}{}
	file_order_ito_proto_msgTypes[67].OneofWrappers = []interface{}{}
	file_order_ito_proto_msgTypes[68].OneofWrappers = []interface{}{}
	file_order_ito_proto_msgTypes[72].OneofWrappers = []interface{}{}
	file_order_ito_proto_msgTypes[73].OneofWrappers = []interface{}{}
	file_order_ito_proto_msgTypes[75].OneofWrappers = []interface{}{}
	file_order_ito_proto_msgTypes[89].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_order_ito_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   104,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_order_ito_proto_goTypes,
		DependencyIndexes: file_order_ito_proto_depIdxs,
		MessageInfos:      file_order_ito_proto_msgTypes,
	}.Build()
	File_order_ito_proto = out.File
	file_order_ito_proto_rawDesc = nil
	file_order_ito_proto_goTypes = nil
	file_order_ito_proto_depIdxs = nil
}
