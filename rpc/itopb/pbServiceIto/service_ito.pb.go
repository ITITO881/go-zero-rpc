// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.19.4
// source: service_ito.proto

package pbServiceIto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BulkCreateGoodsDeliverListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*BulkCreateGoodsDeliverRequest `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Count   int32                            `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *BulkCreateGoodsDeliverListRequest) Reset() {
	*x = BulkCreateGoodsDeliverListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkCreateGoodsDeliverListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkCreateGoodsDeliverListRequest) ProtoMessage() {}

func (x *BulkCreateGoodsDeliverListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkCreateGoodsDeliverListRequest.ProtoReflect.Descriptor instead.
func (*BulkCreateGoodsDeliverListRequest) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{0}
}

func (x *BulkCreateGoodsDeliverListRequest) GetResults() []*BulkCreateGoodsDeliverRequest {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *BulkCreateGoodsDeliverListRequest) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type BulkCreateGoodsDeliverRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Filters       string   `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
	CtmOrder      *int64   `protobuf:"varint,3,opt,name=ctm_order,json=ctmOrder,proto3,oneof" json:"ctm_order,omitempty"`
	CanEdit       bool     `protobuf:"varint,4,opt,name=can_edit,json=canEdit,proto3" json:"can_edit,omitempty"`
	Num           int32    `protobuf:"varint,5,opt,name=num,proto3" json:"num,omitempty"`
	Price         float64  `protobuf:"fixed64,6,opt,name=price,proto3" json:"price,omitempty"`
	AdjustAmount  float64  `protobuf:"fixed64,7,opt,name=adjust_amount,json=adjustAmount,proto3" json:"adjust_amount,omitempty"`
	Discount      float64  `protobuf:"fixed64,8,opt,name=discount,proto3" json:"discount,omitempty"`
	ShareDiscount float64  `protobuf:"fixed64,9,opt,name=share_discount,json=shareDiscount,proto3" json:"share_discount,omitempty"`
	ShareAmount   float64  `protobuf:"fixed64,10,opt,name=share_amount,json=shareAmount,proto3" json:"share_amount,omitempty"`
	DebitAmount   *float64 `protobuf:"fixed64,11,opt,name=debit_amount,json=debitAmount,proto3,oneof" json:"debit_amount,omitempty"`
	PriceScore    *int32   `protobuf:"varint,12,opt,name=price_score,json=priceScore,proto3,oneof" json:"price_score,omitempty"`
	PriceBadge    *int32   `protobuf:"varint,13,opt,name=price_badge,json=priceBadge,proto3,oneof" json:"price_badge,omitempty"`
	PriceNut      *int32   `protobuf:"varint,14,opt,name=price_nut,json=priceNut,proto3,oneof" json:"price_nut,omitempty"`
	Status        *int32   `protobuf:"varint,15,opt,name=status,proto3,oneof" json:"status,omitempty"`
	RefundStatus  *int32   `protobuf:"varint,16,opt,name=refund_status,json=refundStatus,proto3,oneof" json:"refund_status,omitempty"`
	GoodsId       *string  `protobuf:"bytes,17,opt,name=goods_id,json=goodsId,proto3,oneof" json:"goods_id,omitempty"`
	GoodsName     *string  `protobuf:"bytes,18,opt,name=goods_name,json=goodsName,proto3,oneof" json:"goods_name,omitempty"`
	GoodsSpu      *string  `protobuf:"bytes,19,opt,name=goods_spu,json=goodsSpu,proto3,oneof" json:"goods_spu,omitempty"`
	GoodsNo       *string  `protobuf:"bytes,20,opt,name=goods_no,json=goodsNo,proto3,oneof" json:"goods_no,omitempty"`
	SpecNo        string   `protobuf:"bytes,21,opt,name=spec_no,json=specNo,proto3" json:"spec_no,omitempty"`
	SpecName      *string  `protobuf:"bytes,22,opt,name=spec_name,json=specName,proto3,oneof" json:"spec_name,omitempty"`
	RfidCode      *string  `protobuf:"bytes,23,opt,name=rfid_code,json=rfidCode,proto3,oneof" json:"rfid_code,omitempty"`
	SecurityCode  *string  `protobuf:"bytes,24,opt,name=security_code,json=securityCode,proto3,oneof" json:"security_code,omitempty"`
	CtmRefund     *int64   `protobuf:"varint,25,opt,name=ctm_refund,json=ctmRefund,proto3,oneof" json:"ctm_refund,omitempty"`
	CtmService    *int64   `protobuf:"varint,26,opt,name=ctm_service,json=ctmService,proto3,oneof" json:"ctm_service,omitempty"`
	RefundOrders  *int64   `protobuf:"varint,27,opt,name=refund_orders,json=refundOrders,proto3,oneof" json:"refund_orders,omitempty"`
}

func (x *BulkCreateGoodsDeliverRequest) Reset() {
	*x = BulkCreateGoodsDeliverRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkCreateGoodsDeliverRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkCreateGoodsDeliverRequest) ProtoMessage() {}

func (x *BulkCreateGoodsDeliverRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkCreateGoodsDeliverRequest.ProtoReflect.Descriptor instead.
func (*BulkCreateGoodsDeliverRequest) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{1}
}

func (x *BulkCreateGoodsDeliverRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BulkCreateGoodsDeliverRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *BulkCreateGoodsDeliverRequest) GetCtmOrder() int64 {
	if x != nil && x.CtmOrder != nil {
		return *x.CtmOrder
	}
	return 0
}

func (x *BulkCreateGoodsDeliverRequest) GetCanEdit() bool {
	if x != nil {
		return x.CanEdit
	}
	return false
}

func (x *BulkCreateGoodsDeliverRequest) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *BulkCreateGoodsDeliverRequest) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *BulkCreateGoodsDeliverRequest) GetAdjustAmount() float64 {
	if x != nil {
		return x.AdjustAmount
	}
	return 0
}

func (x *BulkCreateGoodsDeliverRequest) GetDiscount() float64 {
	if x != nil {
		return x.Discount
	}
	return 0
}

func (x *BulkCreateGoodsDeliverRequest) GetShareDiscount() float64 {
	if x != nil {
		return x.ShareDiscount
	}
	return 0
}

func (x *BulkCreateGoodsDeliverRequest) GetShareAmount() float64 {
	if x != nil {
		return x.ShareAmount
	}
	return 0
}

func (x *BulkCreateGoodsDeliverRequest) GetDebitAmount() float64 {
	if x != nil && x.DebitAmount != nil {
		return *x.DebitAmount
	}
	return 0
}

func (x *BulkCreateGoodsDeliverRequest) GetPriceScore() int32 {
	if x != nil && x.PriceScore != nil {
		return *x.PriceScore
	}
	return 0
}

func (x *BulkCreateGoodsDeliverRequest) GetPriceBadge() int32 {
	if x != nil && x.PriceBadge != nil {
		return *x.PriceBadge
	}
	return 0
}

func (x *BulkCreateGoodsDeliverRequest) GetPriceNut() int32 {
	if x != nil && x.PriceNut != nil {
		return *x.PriceNut
	}
	return 0
}

func (x *BulkCreateGoodsDeliverRequest) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *BulkCreateGoodsDeliverRequest) GetRefundStatus() int32 {
	if x != nil && x.RefundStatus != nil {
		return *x.RefundStatus
	}
	return 0
}

func (x *BulkCreateGoodsDeliverRequest) GetGoodsId() string {
	if x != nil && x.GoodsId != nil {
		return *x.GoodsId
	}
	return ""
}

func (x *BulkCreateGoodsDeliverRequest) GetGoodsName() string {
	if x != nil && x.GoodsName != nil {
		return *x.GoodsName
	}
	return ""
}

func (x *BulkCreateGoodsDeliverRequest) GetGoodsSpu() string {
	if x != nil && x.GoodsSpu != nil {
		return *x.GoodsSpu
	}
	return ""
}

func (x *BulkCreateGoodsDeliverRequest) GetGoodsNo() string {
	if x != nil && x.GoodsNo != nil {
		return *x.GoodsNo
	}
	return ""
}

func (x *BulkCreateGoodsDeliverRequest) GetSpecNo() string {
	if x != nil {
		return x.SpecNo
	}
	return ""
}

func (x *BulkCreateGoodsDeliverRequest) GetSpecName() string {
	if x != nil && x.SpecName != nil {
		return *x.SpecName
	}
	return ""
}

func (x *BulkCreateGoodsDeliverRequest) GetRfidCode() string {
	if x != nil && x.RfidCode != nil {
		return *x.RfidCode
	}
	return ""
}

func (x *BulkCreateGoodsDeliverRequest) GetSecurityCode() string {
	if x != nil && x.SecurityCode != nil {
		return *x.SecurityCode
	}
	return ""
}

func (x *BulkCreateGoodsDeliverRequest) GetCtmRefund() int64 {
	if x != nil && x.CtmRefund != nil {
		return *x.CtmRefund
	}
	return 0
}

func (x *BulkCreateGoodsDeliverRequest) GetCtmService() int64 {
	if x != nil && x.CtmService != nil {
		return *x.CtmService
	}
	return 0
}

func (x *BulkCreateGoodsDeliverRequest) GetRefundOrders() int64 {
	if x != nil && x.RefundOrders != nil {
		return *x.RefundOrders
	}
	return 0
}

type BulkCreateGoodsReturnListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*BulkCreateGoodsReturnRequest `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Count   int32                           `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *BulkCreateGoodsReturnListRequest) Reset() {
	*x = BulkCreateGoodsReturnListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkCreateGoodsReturnListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkCreateGoodsReturnListRequest) ProtoMessage() {}

func (x *BulkCreateGoodsReturnListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkCreateGoodsReturnListRequest.ProtoReflect.Descriptor instead.
func (*BulkCreateGoodsReturnListRequest) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{2}
}

func (x *BulkCreateGoodsReturnListRequest) GetResults() []*BulkCreateGoodsReturnRequest {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *BulkCreateGoodsReturnListRequest) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type BulkCreateGoodsReturnRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Filters      string  `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
	CanEdit      bool    `protobuf:"varint,3,opt,name=can_edit,json=canEdit,proto3" json:"can_edit,omitempty"`
	GoodsId      *string `protobuf:"bytes,4,opt,name=goods_id,json=goodsId,proto3,oneof" json:"goods_id,omitempty"`
	GoodsName    *string `protobuf:"bytes,5,opt,name=goods_name,json=goodsName,proto3,oneof" json:"goods_name,omitempty"`
	GoodsSpu     *string `protobuf:"bytes,6,opt,name=goods_spu,json=goodsSpu,proto3,oneof" json:"goods_spu,omitempty"`
	GoodsNo      *string `protobuf:"bytes,7,opt,name=goods_no,json=goodsNo,proto3,oneof" json:"goods_no,omitempty"`
	SpecNo       *string `protobuf:"bytes,8,opt,name=spec_no,json=specNo,proto3,oneof" json:"spec_no,omitempty"`
	SpecName     *string `protobuf:"bytes,9,opt,name=spec_name,json=specName,proto3,oneof" json:"spec_name,omitempty"`
	RfidCode     *string `protobuf:"bytes,10,opt,name=rfid_code,json=rfidCode,proto3,oneof" json:"rfid_code,omitempty"`
	SecurityCode *string `protobuf:"bytes,11,opt,name=security_code,json=securityCode,proto3,oneof" json:"security_code,omitempty"`
	Num          int32   `protobuf:"varint,12,opt,name=num,proto3" json:"num,omitempty"`
	Price        float64 `protobuf:"fixed64,13,opt,name=price,proto3" json:"price,omitempty"`
	CtmService   int64   `protobuf:"varint,14,opt,name=ctm_service,json=ctmService,proto3" json:"ctm_service,omitempty"`
}

func (x *BulkCreateGoodsReturnRequest) Reset() {
	*x = BulkCreateGoodsReturnRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkCreateGoodsReturnRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkCreateGoodsReturnRequest) ProtoMessage() {}

func (x *BulkCreateGoodsReturnRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkCreateGoodsReturnRequest.ProtoReflect.Descriptor instead.
func (*BulkCreateGoodsReturnRequest) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{3}
}

func (x *BulkCreateGoodsReturnRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BulkCreateGoodsReturnRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *BulkCreateGoodsReturnRequest) GetCanEdit() bool {
	if x != nil {
		return x.CanEdit
	}
	return false
}

func (x *BulkCreateGoodsReturnRequest) GetGoodsId() string {
	if x != nil && x.GoodsId != nil {
		return *x.GoodsId
	}
	return ""
}

func (x *BulkCreateGoodsReturnRequest) GetGoodsName() string {
	if x != nil && x.GoodsName != nil {
		return *x.GoodsName
	}
	return ""
}

func (x *BulkCreateGoodsReturnRequest) GetGoodsSpu() string {
	if x != nil && x.GoodsSpu != nil {
		return *x.GoodsSpu
	}
	return ""
}

func (x *BulkCreateGoodsReturnRequest) GetGoodsNo() string {
	if x != nil && x.GoodsNo != nil {
		return *x.GoodsNo
	}
	return ""
}

func (x *BulkCreateGoodsReturnRequest) GetSpecNo() string {
	if x != nil && x.SpecNo != nil {
		return *x.SpecNo
	}
	return ""
}

func (x *BulkCreateGoodsReturnRequest) GetSpecName() string {
	if x != nil && x.SpecName != nil {
		return *x.SpecName
	}
	return ""
}

func (x *BulkCreateGoodsReturnRequest) GetRfidCode() string {
	if x != nil && x.RfidCode != nil {
		return *x.RfidCode
	}
	return ""
}

func (x *BulkCreateGoodsReturnRequest) GetSecurityCode() string {
	if x != nil && x.SecurityCode != nil {
		return *x.SecurityCode
	}
	return ""
}

func (x *BulkCreateGoodsReturnRequest) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *BulkCreateGoodsReturnRequest) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *BulkCreateGoodsReturnRequest) GetCtmService() int64 {
	if x != nil {
		return x.CtmService
	}
	return 0
}

type CreateGoodsDeliverRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Filters       string   `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
	CtmOrder      *int64   `protobuf:"varint,3,opt,name=ctm_order,json=ctmOrder,proto3,oneof" json:"ctm_order,omitempty"`
	CanEdit       bool     `protobuf:"varint,4,opt,name=can_edit,json=canEdit,proto3" json:"can_edit,omitempty"`
	Num           int32    `protobuf:"varint,5,opt,name=num,proto3" json:"num,omitempty"`
	Price         float64  `protobuf:"fixed64,6,opt,name=price,proto3" json:"price,omitempty"`
	AdjustAmount  float64  `protobuf:"fixed64,7,opt,name=adjust_amount,json=adjustAmount,proto3" json:"adjust_amount,omitempty"`
	Discount      float64  `protobuf:"fixed64,8,opt,name=discount,proto3" json:"discount,omitempty"`
	ShareDiscount float64  `protobuf:"fixed64,9,opt,name=share_discount,json=shareDiscount,proto3" json:"share_discount,omitempty"`
	ShareAmount   float64  `protobuf:"fixed64,10,opt,name=share_amount,json=shareAmount,proto3" json:"share_amount,omitempty"`
	DebitAmount   *float64 `protobuf:"fixed64,11,opt,name=debit_amount,json=debitAmount,proto3,oneof" json:"debit_amount,omitempty"`
	PriceScore    *int32   `protobuf:"varint,12,opt,name=price_score,json=priceScore,proto3,oneof" json:"price_score,omitempty"`
	PriceBadge    *int32   `protobuf:"varint,13,opt,name=price_badge,json=priceBadge,proto3,oneof" json:"price_badge,omitempty"`
	PriceNut      *int32   `protobuf:"varint,14,opt,name=price_nut,json=priceNut,proto3,oneof" json:"price_nut,omitempty"`
	Status        *int32   `protobuf:"varint,15,opt,name=status,proto3,oneof" json:"status,omitempty"`
	RefundStatus  *int32   `protobuf:"varint,16,opt,name=refund_status,json=refundStatus,proto3,oneof" json:"refund_status,omitempty"`
	GoodsId       *string  `protobuf:"bytes,17,opt,name=goods_id,json=goodsId,proto3,oneof" json:"goods_id,omitempty"`
	GoodsName     *string  `protobuf:"bytes,18,opt,name=goods_name,json=goodsName,proto3,oneof" json:"goods_name,omitempty"`
	GoodsSpu      *string  `protobuf:"bytes,19,opt,name=goods_spu,json=goodsSpu,proto3,oneof" json:"goods_spu,omitempty"`
	SpecNo        string   `protobuf:"bytes,20,opt,name=spec_no,json=specNo,proto3" json:"spec_no,omitempty"`
	CtmRefund     *int64   `protobuf:"varint,21,opt,name=ctm_refund,json=ctmRefund,proto3,oneof" json:"ctm_refund,omitempty"`
	CtmService    *int64   `protobuf:"varint,22,opt,name=ctm_service,json=ctmService,proto3,oneof" json:"ctm_service,omitempty"`
	RefundOrders  *int64   `protobuf:"varint,23,opt,name=refund_orders,json=refundOrders,proto3,oneof" json:"refund_orders,omitempty"`
	SpecName      *string  `protobuf:"bytes,24,opt,name=spec_name,json=specName,proto3,oneof" json:"spec_name,omitempty"`
	RfidCode      *string  `protobuf:"bytes,25,opt,name=rfid_code,json=rfidCode,proto3,oneof" json:"rfid_code,omitempty"`
	SecurityCode  *string  `protobuf:"bytes,26,opt,name=security_code,json=securityCode,proto3,oneof" json:"security_code,omitempty"`
	GoodsNo       *string  `protobuf:"bytes,27,opt,name=goods_no,json=goodsNo,proto3,oneof" json:"goods_no,omitempty"`
}

func (x *CreateGoodsDeliverRequest) Reset() {
	*x = CreateGoodsDeliverRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGoodsDeliverRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGoodsDeliverRequest) ProtoMessage() {}

func (x *CreateGoodsDeliverRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGoodsDeliverRequest.ProtoReflect.Descriptor instead.
func (*CreateGoodsDeliverRequest) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{4}
}

func (x *CreateGoodsDeliverRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CreateGoodsDeliverRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *CreateGoodsDeliverRequest) GetCtmOrder() int64 {
	if x != nil && x.CtmOrder != nil {
		return *x.CtmOrder
	}
	return 0
}

func (x *CreateGoodsDeliverRequest) GetCanEdit() bool {
	if x != nil {
		return x.CanEdit
	}
	return false
}

func (x *CreateGoodsDeliverRequest) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *CreateGoodsDeliverRequest) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *CreateGoodsDeliverRequest) GetAdjustAmount() float64 {
	if x != nil {
		return x.AdjustAmount
	}
	return 0
}

func (x *CreateGoodsDeliverRequest) GetDiscount() float64 {
	if x != nil {
		return x.Discount
	}
	return 0
}

func (x *CreateGoodsDeliverRequest) GetShareDiscount() float64 {
	if x != nil {
		return x.ShareDiscount
	}
	return 0
}

func (x *CreateGoodsDeliverRequest) GetShareAmount() float64 {
	if x != nil {
		return x.ShareAmount
	}
	return 0
}

func (x *CreateGoodsDeliverRequest) GetDebitAmount() float64 {
	if x != nil && x.DebitAmount != nil {
		return *x.DebitAmount
	}
	return 0
}

func (x *CreateGoodsDeliverRequest) GetPriceScore() int32 {
	if x != nil && x.PriceScore != nil {
		return *x.PriceScore
	}
	return 0
}

func (x *CreateGoodsDeliverRequest) GetPriceBadge() int32 {
	if x != nil && x.PriceBadge != nil {
		return *x.PriceBadge
	}
	return 0
}

func (x *CreateGoodsDeliverRequest) GetPriceNut() int32 {
	if x != nil && x.PriceNut != nil {
		return *x.PriceNut
	}
	return 0
}

func (x *CreateGoodsDeliverRequest) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *CreateGoodsDeliverRequest) GetRefundStatus() int32 {
	if x != nil && x.RefundStatus != nil {
		return *x.RefundStatus
	}
	return 0
}

func (x *CreateGoodsDeliverRequest) GetGoodsId() string {
	if x != nil && x.GoodsId != nil {
		return *x.GoodsId
	}
	return ""
}

func (x *CreateGoodsDeliverRequest) GetGoodsName() string {
	if x != nil && x.GoodsName != nil {
		return *x.GoodsName
	}
	return ""
}

func (x *CreateGoodsDeliverRequest) GetGoodsSpu() string {
	if x != nil && x.GoodsSpu != nil {
		return *x.GoodsSpu
	}
	return ""
}

func (x *CreateGoodsDeliverRequest) GetSpecNo() string {
	if x != nil {
		return x.SpecNo
	}
	return ""
}

func (x *CreateGoodsDeliverRequest) GetCtmRefund() int64 {
	if x != nil && x.CtmRefund != nil {
		return *x.CtmRefund
	}
	return 0
}

func (x *CreateGoodsDeliverRequest) GetCtmService() int64 {
	if x != nil && x.CtmService != nil {
		return *x.CtmService
	}
	return 0
}

func (x *CreateGoodsDeliverRequest) GetRefundOrders() int64 {
	if x != nil && x.RefundOrders != nil {
		return *x.RefundOrders
	}
	return 0
}

func (x *CreateGoodsDeliverRequest) GetSpecName() string {
	if x != nil && x.SpecName != nil {
		return *x.SpecName
	}
	return ""
}

func (x *CreateGoodsDeliverRequest) GetRfidCode() string {
	if x != nil && x.RfidCode != nil {
		return *x.RfidCode
	}
	return ""
}

func (x *CreateGoodsDeliverRequest) GetSecurityCode() string {
	if x != nil && x.SecurityCode != nil {
		return *x.SecurityCode
	}
	return ""
}

func (x *CreateGoodsDeliverRequest) GetGoodsNo() string {
	if x != nil && x.GoodsNo != nil {
		return *x.GoodsNo
	}
	return ""
}

type CreateGoodsInvoiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Filters         string   `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
	CtmOrder        *int64   `protobuf:"varint,31,opt,name=ctm_order,json=ctmOrder,proto3,oneof" json:"ctm_order,omitempty"`
	CtmService      *int64   `protobuf:"varint,33,opt,name=ctm_service,json=ctmService,proto3,oneof" json:"ctm_service,omitempty"`
	InvoiceType     int32    `protobuf:"varint,34,opt,name=invoice_type,json=invoiceType,proto3" json:"invoice_type,omitempty"`
	PayerType       int32    `protobuf:"varint,35,opt,name=payer_type,json=payerType,proto3" json:"payer_type,omitempty"`
	PayerName       *string  `protobuf:"bytes,36,opt,name=payer_name,json=payerName,proto3,oneof" json:"payer_name,omitempty"`
	PayerRegisterNo *string  `protobuf:"bytes,37,opt,name=payer_register_no,json=payerRegisterNo,proto3,oneof" json:"payer_register_no,omitempty"`
	PayerPhone      *string  `protobuf:"bytes,38,opt,name=payer_phone,json=payerPhone,proto3,oneof" json:"payer_phone,omitempty"`
	PayerEmail      *string  `protobuf:"bytes,39,opt,name=payer_email,json=payerEmail,proto3,oneof" json:"payer_email,omitempty"`
	PayerAddress    *string  `protobuf:"bytes,40,opt,name=payer_address,json=payerAddress,proto3,oneof" json:"payer_address,omitempty"`
	PayerBank       *string  `protobuf:"bytes,41,opt,name=payer_bank,json=payerBank,proto3,oneof" json:"payer_bank,omitempty"`
	PayerAccount    *string  `protobuf:"bytes,42,opt,name=payer_account,json=payerAccount,proto3,oneof" json:"payer_account,omitempty"`
	InvoiceAmount   *float64 `protobuf:"fixed64,43,opt,name=invoice_amount,json=invoiceAmount,proto3,oneof" json:"invoice_amount,omitempty"`
	InvoiceRemark   *string  `protobuf:"bytes,44,opt,name=invoice_remark,json=invoiceRemark,proto3,oneof" json:"invoice_remark,omitempty"`
	ReasonType      int32    `protobuf:"varint,45,opt,name=reason_type,json=reasonType,proto3" json:"reason_type,omitempty"`
	InvoiceNo       *string  `protobuf:"bytes,46,opt,name=invoice_no,json=invoiceNo,proto3,oneof" json:"invoice_no,omitempty"`
	InvoiceCode     *string  `protobuf:"bytes,47,opt,name=invoice_code,json=invoiceCode,proto3,oneof" json:"invoice_code,omitempty"`
	ParentInvoice   *int64   `protobuf:"varint,48,opt,name=parent_invoice,json=parentInvoice,proto3,oneof" json:"parent_invoice,omitempty"`
}

func (x *CreateGoodsInvoiceRequest) Reset() {
	*x = CreateGoodsInvoiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGoodsInvoiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGoodsInvoiceRequest) ProtoMessage() {}

func (x *CreateGoodsInvoiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGoodsInvoiceRequest.ProtoReflect.Descriptor instead.
func (*CreateGoodsInvoiceRequest) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{5}
}

func (x *CreateGoodsInvoiceRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CreateGoodsInvoiceRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *CreateGoodsInvoiceRequest) GetCtmOrder() int64 {
	if x != nil && x.CtmOrder != nil {
		return *x.CtmOrder
	}
	return 0
}

func (x *CreateGoodsInvoiceRequest) GetCtmService() int64 {
	if x != nil && x.CtmService != nil {
		return *x.CtmService
	}
	return 0
}

func (x *CreateGoodsInvoiceRequest) GetInvoiceType() int32 {
	if x != nil {
		return x.InvoiceType
	}
	return 0
}

func (x *CreateGoodsInvoiceRequest) GetPayerType() int32 {
	if x != nil {
		return x.PayerType
	}
	return 0
}

func (x *CreateGoodsInvoiceRequest) GetPayerName() string {
	if x != nil && x.PayerName != nil {
		return *x.PayerName
	}
	return ""
}

func (x *CreateGoodsInvoiceRequest) GetPayerRegisterNo() string {
	if x != nil && x.PayerRegisterNo != nil {
		return *x.PayerRegisterNo
	}
	return ""
}

func (x *CreateGoodsInvoiceRequest) GetPayerPhone() string {
	if x != nil && x.PayerPhone != nil {
		return *x.PayerPhone
	}
	return ""
}

func (x *CreateGoodsInvoiceRequest) GetPayerEmail() string {
	if x != nil && x.PayerEmail != nil {
		return *x.PayerEmail
	}
	return ""
}

func (x *CreateGoodsInvoiceRequest) GetPayerAddress() string {
	if x != nil && x.PayerAddress != nil {
		return *x.PayerAddress
	}
	return ""
}

func (x *CreateGoodsInvoiceRequest) GetPayerBank() string {
	if x != nil && x.PayerBank != nil {
		return *x.PayerBank
	}
	return ""
}

func (x *CreateGoodsInvoiceRequest) GetPayerAccount() string {
	if x != nil && x.PayerAccount != nil {
		return *x.PayerAccount
	}
	return ""
}

func (x *CreateGoodsInvoiceRequest) GetInvoiceAmount() float64 {
	if x != nil && x.InvoiceAmount != nil {
		return *x.InvoiceAmount
	}
	return 0
}

func (x *CreateGoodsInvoiceRequest) GetInvoiceRemark() string {
	if x != nil && x.InvoiceRemark != nil {
		return *x.InvoiceRemark
	}
	return ""
}

func (x *CreateGoodsInvoiceRequest) GetReasonType() int32 {
	if x != nil {
		return x.ReasonType
	}
	return 0
}

func (x *CreateGoodsInvoiceRequest) GetInvoiceNo() string {
	if x != nil && x.InvoiceNo != nil {
		return *x.InvoiceNo
	}
	return ""
}

func (x *CreateGoodsInvoiceRequest) GetInvoiceCode() string {
	if x != nil && x.InvoiceCode != nil {
		return *x.InvoiceCode
	}
	return ""
}

func (x *CreateGoodsInvoiceRequest) GetParentInvoice() int64 {
	if x != nil && x.ParentInvoice != nil {
		return *x.ParentInvoice
	}
	return 0
}

type CreateGoodsPayRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Filters             string  `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
	PrepayId            *string `protobuf:"bytes,3,opt,name=prepay_id,json=prepayId,proto3,oneof" json:"prepay_id,omitempty"`
	PrepayExpired       *string `protobuf:"bytes,4,opt,name=prepay_expired,json=prepayExpired,proto3,oneof" json:"prepay_expired,omitempty"`
	TradeType           *string `protobuf:"bytes,5,opt,name=trade_type,json=tradeType,proto3,oneof" json:"trade_type,omitempty"`
	TradeState          *string `protobuf:"bytes,6,opt,name=trade_state,json=tradeState,proto3,oneof" json:"trade_state,omitempty"`
	TradeStateDesc      *string `protobuf:"bytes,7,opt,name=trade_state_desc,json=tradeStateDesc,proto3,oneof" json:"trade_state_desc,omitempty"`
	TransactionId       *string `protobuf:"bytes,8,opt,name=transaction_id,json=transactionId,proto3,oneof" json:"transaction_id,omitempty"`
	AppId               *string `protobuf:"bytes,9,opt,name=app_id,json=appId,proto3,oneof" json:"app_id,omitempty"`
	MchId               *string `protobuf:"bytes,10,opt,name=mch_id,json=mchId,proto3,oneof" json:"mch_id,omitempty"`
	OpenId              string  `protobuf:"bytes,11,opt,name=open_id,json=openId,proto3" json:"open_id,omitempty"`
	OutTradeNo          *string `protobuf:"bytes,12,opt,name=out_trade_no,json=outTradeNo,proto3,oneof" json:"out_trade_no,omitempty"`
	Attach              *string `protobuf:"bytes,13,opt,name=attach,proto3,oneof" json:"attach,omitempty"`
	Total               *int32  `protobuf:"varint,14,opt,name=total,proto3,oneof" json:"total,omitempty"`
	PayerTotal          *int32  `protobuf:"varint,15,opt,name=payer_total,json=payerTotal,proto3,oneof" json:"payer_total,omitempty"`
	Currency            *string `protobuf:"bytes,16,opt,name=currency,proto3,oneof" json:"currency,omitempty"`
	BankType            *string `protobuf:"bytes,17,opt,name=bank_type,json=bankType,proto3,oneof" json:"bank_type,omitempty"`
	SuccessTime         *string `protobuf:"bytes,18,opt,name=success_time,json=successTime,proto3,oneof" json:"success_time,omitempty"`
	OutRefundNo         *string `protobuf:"bytes,19,opt,name=out_refund_no,json=outRefundNo,proto3,oneof" json:"out_refund_no,omitempty"`
	Reason              *string `protobuf:"bytes,20,opt,name=reason,proto3,oneof" json:"reason,omitempty"`
	Refund              *int32  `protobuf:"varint,21,opt,name=refund,proto3,oneof" json:"refund,omitempty"`
	PayerRefund         *int32  `protobuf:"varint,22,opt,name=payer_refund,json=payerRefund,proto3,oneof" json:"payer_refund,omitempty"`
	SettlementRefund    *int32  `protobuf:"varint,23,opt,name=settlement_refund,json=settlementRefund,proto3,oneof" json:"settlement_refund,omitempty"`
	SettlementTotal     *int32  `protobuf:"varint,24,opt,name=settlement_total,json=settlementTotal,proto3,oneof" json:"settlement_total,omitempty"`
	DiscountRefund      *int32  `protobuf:"varint,25,opt,name=discount_refund,json=discountRefund,proto3,oneof" json:"discount_refund,omitempty"`
	RefundFee           *int32  `protobuf:"varint,26,opt,name=refund_fee,json=refundFee,proto3,oneof" json:"refund_fee,omitempty"`
	RefundId            *string `protobuf:"bytes,27,opt,name=refund_id,json=refundId,proto3,oneof" json:"refund_id,omitempty"`
	Channel             *string `protobuf:"bytes,28,opt,name=channel,proto3,oneof" json:"channel,omitempty"`
	UserReceivedAccount *string `protobuf:"bytes,29,opt,name=user_received_account,json=userReceivedAccount,proto3,oneof" json:"user_received_account,omitempty"`
	Status              *string `protobuf:"bytes,30,opt,name=status,proto3,oneof" json:"status,omitempty"`
	CtmOrder            *int64  `protobuf:"varint,31,opt,name=ctm_order,json=ctmOrder,proto3,oneof" json:"ctm_order,omitempty"`
	CtmRefund           *int64  `protobuf:"varint,32,opt,name=ctm_refund,json=ctmRefund,proto3,oneof" json:"ctm_refund,omitempty"`
	CtmService          *int64  `protobuf:"varint,33,opt,name=ctm_service,json=ctmService,proto3,oneof" json:"ctm_service,omitempty"`
}

func (x *CreateGoodsPayRequest) Reset() {
	*x = CreateGoodsPayRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGoodsPayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGoodsPayRequest) ProtoMessage() {}

func (x *CreateGoodsPayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGoodsPayRequest.ProtoReflect.Descriptor instead.
func (*CreateGoodsPayRequest) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{6}
}

func (x *CreateGoodsPayRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CreateGoodsPayRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *CreateGoodsPayRequest) GetPrepayId() string {
	if x != nil && x.PrepayId != nil {
		return *x.PrepayId
	}
	return ""
}

func (x *CreateGoodsPayRequest) GetPrepayExpired() string {
	if x != nil && x.PrepayExpired != nil {
		return *x.PrepayExpired
	}
	return ""
}

func (x *CreateGoodsPayRequest) GetTradeType() string {
	if x != nil && x.TradeType != nil {
		return *x.TradeType
	}
	return ""
}

func (x *CreateGoodsPayRequest) GetTradeState() string {
	if x != nil && x.TradeState != nil {
		return *x.TradeState
	}
	return ""
}

func (x *CreateGoodsPayRequest) GetTradeStateDesc() string {
	if x != nil && x.TradeStateDesc != nil {
		return *x.TradeStateDesc
	}
	return ""
}

func (x *CreateGoodsPayRequest) GetTransactionId() string {
	if x != nil && x.TransactionId != nil {
		return *x.TransactionId
	}
	return ""
}

func (x *CreateGoodsPayRequest) GetAppId() string {
	if x != nil && x.AppId != nil {
		return *x.AppId
	}
	return ""
}

func (x *CreateGoodsPayRequest) GetMchId() string {
	if x != nil && x.MchId != nil {
		return *x.MchId
	}
	return ""
}

func (x *CreateGoodsPayRequest) GetOpenId() string {
	if x != nil {
		return x.OpenId
	}
	return ""
}

func (x *CreateGoodsPayRequest) GetOutTradeNo() string {
	if x != nil && x.OutTradeNo != nil {
		return *x.OutTradeNo
	}
	return ""
}

func (x *CreateGoodsPayRequest) GetAttach() string {
	if x != nil && x.Attach != nil {
		return *x.Attach
	}
	return ""
}

func (x *CreateGoodsPayRequest) GetTotal() int32 {
	if x != nil && x.Total != nil {
		return *x.Total
	}
	return 0
}

func (x *CreateGoodsPayRequest) GetPayerTotal() int32 {
	if x != nil && x.PayerTotal != nil {
		return *x.PayerTotal
	}
	return 0
}

func (x *CreateGoodsPayRequest) GetCurrency() string {
	if x != nil && x.Currency != nil {
		return *x.Currency
	}
	return ""
}

func (x *CreateGoodsPayRequest) GetBankType() string {
	if x != nil && x.BankType != nil {
		return *x.BankType
	}
	return ""
}

func (x *CreateGoodsPayRequest) GetSuccessTime() string {
	if x != nil && x.SuccessTime != nil {
		return *x.SuccessTime
	}
	return ""
}

func (x *CreateGoodsPayRequest) GetOutRefundNo() string {
	if x != nil && x.OutRefundNo != nil {
		return *x.OutRefundNo
	}
	return ""
}

func (x *CreateGoodsPayRequest) GetReason() string {
	if x != nil && x.Reason != nil {
		return *x.Reason
	}
	return ""
}

func (x *CreateGoodsPayRequest) GetRefund() int32 {
	if x != nil && x.Refund != nil {
		return *x.Refund
	}
	return 0
}

func (x *CreateGoodsPayRequest) GetPayerRefund() int32 {
	if x != nil && x.PayerRefund != nil {
		return *x.PayerRefund
	}
	return 0
}

func (x *CreateGoodsPayRequest) GetSettlementRefund() int32 {
	if x != nil && x.SettlementRefund != nil {
		return *x.SettlementRefund
	}
	return 0
}

func (x *CreateGoodsPayRequest) GetSettlementTotal() int32 {
	if x != nil && x.SettlementTotal != nil {
		return *x.SettlementTotal
	}
	return 0
}

func (x *CreateGoodsPayRequest) GetDiscountRefund() int32 {
	if x != nil && x.DiscountRefund != nil {
		return *x.DiscountRefund
	}
	return 0
}

func (x *CreateGoodsPayRequest) GetRefundFee() int32 {
	if x != nil && x.RefundFee != nil {
		return *x.RefundFee
	}
	return 0
}

func (x *CreateGoodsPayRequest) GetRefundId() string {
	if x != nil && x.RefundId != nil {
		return *x.RefundId
	}
	return ""
}

func (x *CreateGoodsPayRequest) GetChannel() string {
	if x != nil && x.Channel != nil {
		return *x.Channel
	}
	return ""
}

func (x *CreateGoodsPayRequest) GetUserReceivedAccount() string {
	if x != nil && x.UserReceivedAccount != nil {
		return *x.UserReceivedAccount
	}
	return ""
}

func (x *CreateGoodsPayRequest) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

func (x *CreateGoodsPayRequest) GetCtmOrder() int64 {
	if x != nil && x.CtmOrder != nil {
		return *x.CtmOrder
	}
	return 0
}

func (x *CreateGoodsPayRequest) GetCtmRefund() int64 {
	if x != nil && x.CtmRefund != nil {
		return *x.CtmRefund
	}
	return 0
}

func (x *CreateGoodsPayRequest) GetCtmService() int64 {
	if x != nil && x.CtmService != nil {
		return *x.CtmService
	}
	return 0
}

type CreateGoodsReturnRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Filters      string  `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
	SpecNo       *string `protobuf:"bytes,3,opt,name=spec_no,json=specNo,proto3,oneof" json:"spec_no,omitempty"`
	Num          int32   `protobuf:"varint,4,opt,name=num,proto3" json:"num,omitempty"`
	Price        float64 `protobuf:"fixed64,5,opt,name=price,proto3" json:"price,omitempty"`
	CtmService   int64   `protobuf:"varint,6,opt,name=ctm_service,json=ctmService,proto3" json:"ctm_service,omitempty"`
	CanEdit      bool    `protobuf:"varint,7,opt,name=can_edit,json=canEdit,proto3" json:"can_edit,omitempty"`
	GoodsId      *string `protobuf:"bytes,8,opt,name=goods_id,json=goodsId,proto3,oneof" json:"goods_id,omitempty"`
	GoodsName    *string `protobuf:"bytes,9,opt,name=goods_name,json=goodsName,proto3,oneof" json:"goods_name,omitempty"`
	GoodsSpu     *string `protobuf:"bytes,10,opt,name=goods_spu,json=goodsSpu,proto3,oneof" json:"goods_spu,omitempty"`
	SpecName     *string `protobuf:"bytes,11,opt,name=spec_name,json=specName,proto3,oneof" json:"spec_name,omitempty"`
	RfidCode     *string `protobuf:"bytes,12,opt,name=rfid_code,json=rfidCode,proto3,oneof" json:"rfid_code,omitempty"`
	SecurityCode *string `protobuf:"bytes,13,opt,name=security_code,json=securityCode,proto3,oneof" json:"security_code,omitempty"`
	GoodsNo      *string `protobuf:"bytes,14,opt,name=goods_no,json=goodsNo,proto3,oneof" json:"goods_no,omitempty"`
}

func (x *CreateGoodsReturnRequest) Reset() {
	*x = CreateGoodsReturnRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGoodsReturnRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGoodsReturnRequest) ProtoMessage() {}

func (x *CreateGoodsReturnRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGoodsReturnRequest.ProtoReflect.Descriptor instead.
func (*CreateGoodsReturnRequest) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{7}
}

func (x *CreateGoodsReturnRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CreateGoodsReturnRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *CreateGoodsReturnRequest) GetSpecNo() string {
	if x != nil && x.SpecNo != nil {
		return *x.SpecNo
	}
	return ""
}

func (x *CreateGoodsReturnRequest) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *CreateGoodsReturnRequest) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *CreateGoodsReturnRequest) GetCtmService() int64 {
	if x != nil {
		return x.CtmService
	}
	return 0
}

func (x *CreateGoodsReturnRequest) GetCanEdit() bool {
	if x != nil {
		return x.CanEdit
	}
	return false
}

func (x *CreateGoodsReturnRequest) GetGoodsId() string {
	if x != nil && x.GoodsId != nil {
		return *x.GoodsId
	}
	return ""
}

func (x *CreateGoodsReturnRequest) GetGoodsName() string {
	if x != nil && x.GoodsName != nil {
		return *x.GoodsName
	}
	return ""
}

func (x *CreateGoodsReturnRequest) GetGoodsSpu() string {
	if x != nil && x.GoodsSpu != nil {
		return *x.GoodsSpu
	}
	return ""
}

func (x *CreateGoodsReturnRequest) GetSpecName() string {
	if x != nil && x.SpecName != nil {
		return *x.SpecName
	}
	return ""
}

func (x *CreateGoodsReturnRequest) GetRfidCode() string {
	if x != nil && x.RfidCode != nil {
		return *x.RfidCode
	}
	return ""
}

func (x *CreateGoodsReturnRequest) GetSecurityCode() string {
	if x != nil && x.SecurityCode != nil {
		return *x.SecurityCode
	}
	return ""
}

func (x *CreateGoodsReturnRequest) GetGoodsNo() string {
	if x != nil && x.GoodsNo != nil {
		return *x.GoodsNo
	}
	return ""
}

type CreateObjectComplainRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Filters         string  `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
	GoodsSpu        *string `protobuf:"bytes,3,opt,name=goods_spu,json=goodsSpu,proto3,oneof" json:"goods_spu,omitempty"`
	SpecNo          *string `protobuf:"bytes,4,opt,name=spec_no,json=specNo,proto3,oneof" json:"spec_no,omitempty"`
	RfidCode        *string `protobuf:"bytes,5,opt,name=rfid_code,json=rfidCode,proto3,oneof" json:"rfid_code,omitempty"`
	SecurityCode    *string `protobuf:"bytes,6,opt,name=security_code,json=securityCode,proto3,oneof" json:"security_code,omitempty"`
	PlatformOrder   *string `protobuf:"bytes,7,opt,name=platform_order,json=platformOrder,proto3,oneof" json:"platform_order,omitempty"`
	OmsOrder        *string `protobuf:"bytes,8,opt,name=oms_order,json=omsOrder,proto3,oneof" json:"oms_order,omitempty"`
	PlatformRefund  *string `protobuf:"bytes,9,opt,name=platform_refund,json=platformRefund,proto3,oneof" json:"platform_refund,omitempty"`
	OmsRefund       *string `protobuf:"bytes,10,opt,name=oms_refund,json=omsRefund,proto3,oneof" json:"oms_refund,omitempty"`
	ComplainDesc    *string `protobuf:"bytes,11,opt,name=complain_desc,json=complainDesc,proto3,oneof" json:"complain_desc,omitempty"`
	ServiceObject   *int64  `protobuf:"varint,12,opt,name=service_object,json=serviceObject,proto3,oneof" json:"service_object,omitempty"`
	GoodsId         *string `protobuf:"bytes,13,opt,name=goods_id,json=goodsId,proto3,oneof" json:"goods_id,omitempty"`
	GoodsName       *string `protobuf:"bytes,14,opt,name=goods_name,json=goodsName,proto3,oneof" json:"goods_name,omitempty"`
	PartsCode       *string `protobuf:"bytes,16,opt,name=parts_code,json=partsCode,proto3,oneof" json:"parts_code,omitempty"`
	PartsName       *string `protobuf:"bytes,17,opt,name=parts_name,json=partsName,proto3,oneof" json:"parts_name,omitempty"`
	MediaPath       *string `protobuf:"bytes,18,opt,name=media_path,json=mediaPath,proto3,oneof" json:"media_path,omitempty"`
	ComplainReasons *string `protobuf:"bytes,19,opt,name=complain_reasons,json=complainReasons,proto3,oneof" json:"complain_reasons,omitempty"`
	SpecName        *string `protobuf:"bytes,20,opt,name=spec_name,json=specName,proto3,oneof" json:"spec_name,omitempty"`
	GoodsNo         *string `protobuf:"bytes,21,opt,name=goods_no,json=goodsNo,proto3,oneof" json:"goods_no,omitempty"`
}

func (x *CreateObjectComplainRequest) Reset() {
	*x = CreateObjectComplainRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateObjectComplainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateObjectComplainRequest) ProtoMessage() {}

func (x *CreateObjectComplainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateObjectComplainRequest.ProtoReflect.Descriptor instead.
func (*CreateObjectComplainRequest) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{8}
}

func (x *CreateObjectComplainRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CreateObjectComplainRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *CreateObjectComplainRequest) GetGoodsSpu() string {
	if x != nil && x.GoodsSpu != nil {
		return *x.GoodsSpu
	}
	return ""
}

func (x *CreateObjectComplainRequest) GetSpecNo() string {
	if x != nil && x.SpecNo != nil {
		return *x.SpecNo
	}
	return ""
}

func (x *CreateObjectComplainRequest) GetRfidCode() string {
	if x != nil && x.RfidCode != nil {
		return *x.RfidCode
	}
	return ""
}

func (x *CreateObjectComplainRequest) GetSecurityCode() string {
	if x != nil && x.SecurityCode != nil {
		return *x.SecurityCode
	}
	return ""
}

func (x *CreateObjectComplainRequest) GetPlatformOrder() string {
	if x != nil && x.PlatformOrder != nil {
		return *x.PlatformOrder
	}
	return ""
}

func (x *CreateObjectComplainRequest) GetOmsOrder() string {
	if x != nil && x.OmsOrder != nil {
		return *x.OmsOrder
	}
	return ""
}

func (x *CreateObjectComplainRequest) GetPlatformRefund() string {
	if x != nil && x.PlatformRefund != nil {
		return *x.PlatformRefund
	}
	return ""
}

func (x *CreateObjectComplainRequest) GetOmsRefund() string {
	if x != nil && x.OmsRefund != nil {
		return *x.OmsRefund
	}
	return ""
}

func (x *CreateObjectComplainRequest) GetComplainDesc() string {
	if x != nil && x.ComplainDesc != nil {
		return *x.ComplainDesc
	}
	return ""
}

func (x *CreateObjectComplainRequest) GetServiceObject() int64 {
	if x != nil && x.ServiceObject != nil {
		return *x.ServiceObject
	}
	return 0
}

func (x *CreateObjectComplainRequest) GetGoodsId() string {
	if x != nil && x.GoodsId != nil {
		return *x.GoodsId
	}
	return ""
}

func (x *CreateObjectComplainRequest) GetGoodsName() string {
	if x != nil && x.GoodsName != nil {
		return *x.GoodsName
	}
	return ""
}

func (x *CreateObjectComplainRequest) GetPartsCode() string {
	if x != nil && x.PartsCode != nil {
		return *x.PartsCode
	}
	return ""
}

func (x *CreateObjectComplainRequest) GetPartsName() string {
	if x != nil && x.PartsName != nil {
		return *x.PartsName
	}
	return ""
}

func (x *CreateObjectComplainRequest) GetMediaPath() string {
	if x != nil && x.MediaPath != nil {
		return *x.MediaPath
	}
	return ""
}

func (x *CreateObjectComplainRequest) GetComplainReasons() string {
	if x != nil && x.ComplainReasons != nil {
		return *x.ComplainReasons
	}
	return ""
}

func (x *CreateObjectComplainRequest) GetSpecName() string {
	if x != nil && x.SpecName != nil {
		return *x.SpecName
	}
	return ""
}

func (x *CreateObjectComplainRequest) GetGoodsNo() string {
	if x != nil && x.GoodsNo != nil {
		return *x.GoodsNo
	}
	return ""
}

type CreateObjectFeedbackRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Filters         string  `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
	GoodsSpu        *string `protobuf:"bytes,3,opt,name=goods_spu,json=goodsSpu,proto3,oneof" json:"goods_spu,omitempty"`
	SpecNo          *string `protobuf:"bytes,4,opt,name=spec_no,json=specNo,proto3,oneof" json:"spec_no,omitempty"`
	RfidCode        *string `protobuf:"bytes,5,opt,name=rfid_code,json=rfidCode,proto3,oneof" json:"rfid_code,omitempty"`
	SecurityCode    *string `protobuf:"bytes,6,opt,name=security_code,json=securityCode,proto3,oneof" json:"security_code,omitempty"`
	FeedbackDesc    *string `protobuf:"bytes,7,opt,name=feedback_desc,json=feedbackDesc,proto3,oneof" json:"feedback_desc,omitempty"`
	ServiceObject   *int64  `protobuf:"varint,8,opt,name=service_object,json=serviceObject,proto3,oneof" json:"service_object,omitempty"`
	GoodsId         *string `protobuf:"bytes,9,opt,name=goods_id,json=goodsId,proto3,oneof" json:"goods_id,omitempty"`
	GoodsName       *string `protobuf:"bytes,10,opt,name=goods_name,json=goodsName,proto3,oneof" json:"goods_name,omitempty"`
	PartsCode       *string `protobuf:"bytes,12,opt,name=parts_code,json=partsCode,proto3,oneof" json:"parts_code,omitempty"`
	PartsName       *string `protobuf:"bytes,13,opt,name=parts_name,json=partsName,proto3,oneof" json:"parts_name,omitempty"`
	MediaPath       *string `protobuf:"bytes,14,opt,name=media_path,json=mediaPath,proto3,oneof" json:"media_path,omitempty"`
	FeedbackReasons *string `protobuf:"bytes,15,opt,name=feedback_reasons,json=feedbackReasons,proto3,oneof" json:"feedback_reasons,omitempty"`
	SpecName        *string `protobuf:"bytes,16,opt,name=spec_name,json=specName,proto3,oneof" json:"spec_name,omitempty"`
	GoodsNo         *string `protobuf:"bytes,17,opt,name=goods_no,json=goodsNo,proto3,oneof" json:"goods_no,omitempty"`
}

func (x *CreateObjectFeedbackRequest) Reset() {
	*x = CreateObjectFeedbackRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateObjectFeedbackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateObjectFeedbackRequest) ProtoMessage() {}

func (x *CreateObjectFeedbackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateObjectFeedbackRequest.ProtoReflect.Descriptor instead.
func (*CreateObjectFeedbackRequest) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{9}
}

func (x *CreateObjectFeedbackRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CreateObjectFeedbackRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *CreateObjectFeedbackRequest) GetGoodsSpu() string {
	if x != nil && x.GoodsSpu != nil {
		return *x.GoodsSpu
	}
	return ""
}

func (x *CreateObjectFeedbackRequest) GetSpecNo() string {
	if x != nil && x.SpecNo != nil {
		return *x.SpecNo
	}
	return ""
}

func (x *CreateObjectFeedbackRequest) GetRfidCode() string {
	if x != nil && x.RfidCode != nil {
		return *x.RfidCode
	}
	return ""
}

func (x *CreateObjectFeedbackRequest) GetSecurityCode() string {
	if x != nil && x.SecurityCode != nil {
		return *x.SecurityCode
	}
	return ""
}

func (x *CreateObjectFeedbackRequest) GetFeedbackDesc() string {
	if x != nil && x.FeedbackDesc != nil {
		return *x.FeedbackDesc
	}
	return ""
}

func (x *CreateObjectFeedbackRequest) GetServiceObject() int64 {
	if x != nil && x.ServiceObject != nil {
		return *x.ServiceObject
	}
	return 0
}

func (x *CreateObjectFeedbackRequest) GetGoodsId() string {
	if x != nil && x.GoodsId != nil {
		return *x.GoodsId
	}
	return ""
}

func (x *CreateObjectFeedbackRequest) GetGoodsName() string {
	if x != nil && x.GoodsName != nil {
		return *x.GoodsName
	}
	return ""
}

func (x *CreateObjectFeedbackRequest) GetPartsCode() string {
	if x != nil && x.PartsCode != nil {
		return *x.PartsCode
	}
	return ""
}

func (x *CreateObjectFeedbackRequest) GetPartsName() string {
	if x != nil && x.PartsName != nil {
		return *x.PartsName
	}
	return ""
}

func (x *CreateObjectFeedbackRequest) GetMediaPath() string {
	if x != nil && x.MediaPath != nil {
		return *x.MediaPath
	}
	return ""
}

func (x *CreateObjectFeedbackRequest) GetFeedbackReasons() string {
	if x != nil && x.FeedbackReasons != nil {
		return *x.FeedbackReasons
	}
	return ""
}

func (x *CreateObjectFeedbackRequest) GetSpecName() string {
	if x != nil && x.SpecName != nil {
		return *x.SpecName
	}
	return ""
}

func (x *CreateObjectFeedbackRequest) GetGoodsNo() string {
	if x != nil && x.GoodsNo != nil {
		return *x.GoodsNo
	}
	return ""
}

type CreateObjectRepairRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Filters         string   `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
	GoodsSpu        *string  `protobuf:"bytes,3,opt,name=goods_spu,json=goodsSpu,proto3,oneof" json:"goods_spu,omitempty"`
	SpecNo          *string  `protobuf:"bytes,4,opt,name=spec_no,json=specNo,proto3,oneof" json:"spec_no,omitempty"`
	RfidCode        *string  `protobuf:"bytes,5,opt,name=rfid_code,json=rfidCode,proto3,oneof" json:"rfid_code,omitempty"`
	SecurityCode    *string  `protobuf:"bytes,6,opt,name=security_code,json=securityCode,proto3,oneof" json:"security_code,omitempty"`
	RepairPartsCode *string  `protobuf:"bytes,7,opt,name=repair_parts_code,json=repairPartsCode,proto3,oneof" json:"repair_parts_code,omitempty"`
	RepairPartsName *string  `protobuf:"bytes,8,opt,name=repair_parts_name,json=repairPartsName,proto3,oneof" json:"repair_parts_name,omitempty"`
	RepairDesc      *string  `protobuf:"bytes,9,opt,name=repair_desc,json=repairDesc,proto3,oneof" json:"repair_desc,omitempty"`
	MediaPath       *string  `protobuf:"bytes,10,opt,name=media_path,json=mediaPath,proto3,oneof" json:"media_path,omitempty"`
	ServiceObject   *int64   `protobuf:"varint,11,opt,name=service_object,json=serviceObject,proto3,oneof" json:"service_object,omitempty"`
	GoodsId         *string  `protobuf:"bytes,12,opt,name=goods_id,json=goodsId,proto3,oneof" json:"goods_id,omitempty"`
	GoodsName       *string  `protobuf:"bytes,13,opt,name=goods_name,json=goodsName,proto3,oneof" json:"goods_name,omitempty"`
	RepairReasons   *string  `protobuf:"bytes,15,opt,name=repair_reasons,json=repairReasons,proto3,oneof" json:"repair_reasons,omitempty"`
	SpecName        *string  `protobuf:"bytes,16,opt,name=spec_name,json=specName,proto3,oneof" json:"spec_name,omitempty"`
	PlatformOrder   *string  `protobuf:"bytes,17,opt,name=platform_order,json=platformOrder,proto3,oneof" json:"platform_order,omitempty"`
	OmsOrder        *string  `protobuf:"bytes,18,opt,name=oms_order,json=omsOrder,proto3,oneof" json:"oms_order,omitempty"`
	OutPrice        *float64 `protobuf:"fixed64,19,opt,name=out_price,json=outPrice,proto3,oneof" json:"out_price,omitempty"`
	RetailPrice     *float64 `protobuf:"fixed64,20,opt,name=retail_price,json=retailPrice,proto3,oneof" json:"retail_price,omitempty"`
	GoodsNo         *string  `protobuf:"bytes,21,opt,name=goods_no,json=goodsNo,proto3,oneof" json:"goods_no,omitempty"`
	RepairExpired   *string  `protobuf:"bytes,22,opt,name=repair_expired,json=repairExpired,proto3,oneof" json:"repair_expired,omitempty"`
	SwapExpired     *string  `protobuf:"bytes,23,opt,name=swap_expired,json=swapExpired,proto3,oneof" json:"swap_expired,omitempty"`
}

func (x *CreateObjectRepairRequest) Reset() {
	*x = CreateObjectRepairRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateObjectRepairRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateObjectRepairRequest) ProtoMessage() {}

func (x *CreateObjectRepairRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateObjectRepairRequest.ProtoReflect.Descriptor instead.
func (*CreateObjectRepairRequest) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{10}
}

func (x *CreateObjectRepairRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CreateObjectRepairRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *CreateObjectRepairRequest) GetGoodsSpu() string {
	if x != nil && x.GoodsSpu != nil {
		return *x.GoodsSpu
	}
	return ""
}

func (x *CreateObjectRepairRequest) GetSpecNo() string {
	if x != nil && x.SpecNo != nil {
		return *x.SpecNo
	}
	return ""
}

func (x *CreateObjectRepairRequest) GetRfidCode() string {
	if x != nil && x.RfidCode != nil {
		return *x.RfidCode
	}
	return ""
}

func (x *CreateObjectRepairRequest) GetSecurityCode() string {
	if x != nil && x.SecurityCode != nil {
		return *x.SecurityCode
	}
	return ""
}

func (x *CreateObjectRepairRequest) GetRepairPartsCode() string {
	if x != nil && x.RepairPartsCode != nil {
		return *x.RepairPartsCode
	}
	return ""
}

func (x *CreateObjectRepairRequest) GetRepairPartsName() string {
	if x != nil && x.RepairPartsName != nil {
		return *x.RepairPartsName
	}
	return ""
}

func (x *CreateObjectRepairRequest) GetRepairDesc() string {
	if x != nil && x.RepairDesc != nil {
		return *x.RepairDesc
	}
	return ""
}

func (x *CreateObjectRepairRequest) GetMediaPath() string {
	if x != nil && x.MediaPath != nil {
		return *x.MediaPath
	}
	return ""
}

func (x *CreateObjectRepairRequest) GetServiceObject() int64 {
	if x != nil && x.ServiceObject != nil {
		return *x.ServiceObject
	}
	return 0
}

func (x *CreateObjectRepairRequest) GetGoodsId() string {
	if x != nil && x.GoodsId != nil {
		return *x.GoodsId
	}
	return ""
}

func (x *CreateObjectRepairRequest) GetGoodsName() string {
	if x != nil && x.GoodsName != nil {
		return *x.GoodsName
	}
	return ""
}

func (x *CreateObjectRepairRequest) GetRepairReasons() string {
	if x != nil && x.RepairReasons != nil {
		return *x.RepairReasons
	}
	return ""
}

func (x *CreateObjectRepairRequest) GetSpecName() string {
	if x != nil && x.SpecName != nil {
		return *x.SpecName
	}
	return ""
}

func (x *CreateObjectRepairRequest) GetPlatformOrder() string {
	if x != nil && x.PlatformOrder != nil {
		return *x.PlatformOrder
	}
	return ""
}

func (x *CreateObjectRepairRequest) GetOmsOrder() string {
	if x != nil && x.OmsOrder != nil {
		return *x.OmsOrder
	}
	return ""
}

func (x *CreateObjectRepairRequest) GetOutPrice() float64 {
	if x != nil && x.OutPrice != nil {
		return *x.OutPrice
	}
	return 0
}

func (x *CreateObjectRepairRequest) GetRetailPrice() float64 {
	if x != nil && x.RetailPrice != nil {
		return *x.RetailPrice
	}
	return 0
}

func (x *CreateObjectRepairRequest) GetGoodsNo() string {
	if x != nil && x.GoodsNo != nil {
		return *x.GoodsNo
	}
	return ""
}

func (x *CreateObjectRepairRequest) GetRepairExpired() string {
	if x != nil && x.RepairExpired != nil {
		return *x.RepairExpired
	}
	return ""
}

func (x *CreateObjectRepairRequest) GetSwapExpired() string {
	if x != nil && x.SwapExpired != nil {
		return *x.SwapExpired
	}
	return ""
}

type CreateObjectSwapRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Filters         string   `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
	GoodsSpu        *string  `protobuf:"bytes,3,opt,name=goods_spu,json=goodsSpu,proto3,oneof" json:"goods_spu,omitempty"`
	SpecNo          *string  `protobuf:"bytes,4,opt,name=spec_no,json=specNo,proto3,oneof" json:"spec_no,omitempty"`
	RfidCode        *string  `protobuf:"bytes,5,opt,name=rfid_code,json=rfidCode,proto3,oneof" json:"rfid_code,omitempty"`
	SecurityCode    *string  `protobuf:"bytes,6,opt,name=security_code,json=securityCode,proto3,oneof" json:"security_code,omitempty"`
	DamagePartsCode *string  `protobuf:"bytes,7,opt,name=damage_parts_code,json=damagePartsCode,proto3,oneof" json:"damage_parts_code,omitempty"`
	DamagePartsName *string  `protobuf:"bytes,8,opt,name=damage_parts_name,json=damagePartsName,proto3,oneof" json:"damage_parts_name,omitempty"`
	DamageDesc      *string  `protobuf:"bytes,9,opt,name=damage_desc,json=damageDesc,proto3,oneof" json:"damage_desc,omitempty"`
	MediaPath       *string  `protobuf:"bytes,10,opt,name=media_path,json=mediaPath,proto3,oneof" json:"media_path,omitempty"`
	ServiceObject   *int64   `protobuf:"varint,11,opt,name=service_object,json=serviceObject,proto3,oneof" json:"service_object,omitempty"`
	GoodsId         *string  `protobuf:"bytes,12,opt,name=goods_id,json=goodsId,proto3,oneof" json:"goods_id,omitempty"`
	GoodsName       *string  `protobuf:"bytes,13,opt,name=goods_name,json=goodsName,proto3,oneof" json:"goods_name,omitempty"`
	DamageReasons   *string  `protobuf:"bytes,15,opt,name=damage_reasons,json=damageReasons,proto3,oneof" json:"damage_reasons,omitempty"`
	SpecName        *string  `protobuf:"bytes,16,opt,name=spec_name,json=specName,proto3,oneof" json:"spec_name,omitempty"`
	PlatformOrder   *string  `protobuf:"bytes,17,opt,name=platform_order,json=platformOrder,proto3,oneof" json:"platform_order,omitempty"`
	OmsOrder        *string  `protobuf:"bytes,18,opt,name=oms_order,json=omsOrder,proto3,oneof" json:"oms_order,omitempty"`
	OutPrice        *float64 `protobuf:"fixed64,19,opt,name=out_price,json=outPrice,proto3,oneof" json:"out_price,omitempty"`
	RetailPrice     *float64 `protobuf:"fixed64,20,opt,name=retail_price,json=retailPrice,proto3,oneof" json:"retail_price,omitempty"`
	GoodsNo         *string  `protobuf:"bytes,21,opt,name=goods_no,json=goodsNo,proto3,oneof" json:"goods_no,omitempty"`
	RepairExpired   *string  `protobuf:"bytes,22,opt,name=repair_expired,json=repairExpired,proto3,oneof" json:"repair_expired,omitempty"`
	SwapExpired     *string  `protobuf:"bytes,23,opt,name=swap_expired,json=swapExpired,proto3,oneof" json:"swap_expired,omitempty"`
}

func (x *CreateObjectSwapRequest) Reset() {
	*x = CreateObjectSwapRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateObjectSwapRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateObjectSwapRequest) ProtoMessage() {}

func (x *CreateObjectSwapRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateObjectSwapRequest.ProtoReflect.Descriptor instead.
func (*CreateObjectSwapRequest) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{11}
}

func (x *CreateObjectSwapRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CreateObjectSwapRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *CreateObjectSwapRequest) GetGoodsSpu() string {
	if x != nil && x.GoodsSpu != nil {
		return *x.GoodsSpu
	}
	return ""
}

func (x *CreateObjectSwapRequest) GetSpecNo() string {
	if x != nil && x.SpecNo != nil {
		return *x.SpecNo
	}
	return ""
}

func (x *CreateObjectSwapRequest) GetRfidCode() string {
	if x != nil && x.RfidCode != nil {
		return *x.RfidCode
	}
	return ""
}

func (x *CreateObjectSwapRequest) GetSecurityCode() string {
	if x != nil && x.SecurityCode != nil {
		return *x.SecurityCode
	}
	return ""
}

func (x *CreateObjectSwapRequest) GetDamagePartsCode() string {
	if x != nil && x.DamagePartsCode != nil {
		return *x.DamagePartsCode
	}
	return ""
}

func (x *CreateObjectSwapRequest) GetDamagePartsName() string {
	if x != nil && x.DamagePartsName != nil {
		return *x.DamagePartsName
	}
	return ""
}

func (x *CreateObjectSwapRequest) GetDamageDesc() string {
	if x != nil && x.DamageDesc != nil {
		return *x.DamageDesc
	}
	return ""
}

func (x *CreateObjectSwapRequest) GetMediaPath() string {
	if x != nil && x.MediaPath != nil {
		return *x.MediaPath
	}
	return ""
}

func (x *CreateObjectSwapRequest) GetServiceObject() int64 {
	if x != nil && x.ServiceObject != nil {
		return *x.ServiceObject
	}
	return 0
}

func (x *CreateObjectSwapRequest) GetGoodsId() string {
	if x != nil && x.GoodsId != nil {
		return *x.GoodsId
	}
	return ""
}

func (x *CreateObjectSwapRequest) GetGoodsName() string {
	if x != nil && x.GoodsName != nil {
		return *x.GoodsName
	}
	return ""
}

func (x *CreateObjectSwapRequest) GetDamageReasons() string {
	if x != nil && x.DamageReasons != nil {
		return *x.DamageReasons
	}
	return ""
}

func (x *CreateObjectSwapRequest) GetSpecName() string {
	if x != nil && x.SpecName != nil {
		return *x.SpecName
	}
	return ""
}

func (x *CreateObjectSwapRequest) GetPlatformOrder() string {
	if x != nil && x.PlatformOrder != nil {
		return *x.PlatformOrder
	}
	return ""
}

func (x *CreateObjectSwapRequest) GetOmsOrder() string {
	if x != nil && x.OmsOrder != nil {
		return *x.OmsOrder
	}
	return ""
}

func (x *CreateObjectSwapRequest) GetOutPrice() float64 {
	if x != nil && x.OutPrice != nil {
		return *x.OutPrice
	}
	return 0
}

func (x *CreateObjectSwapRequest) GetRetailPrice() float64 {
	if x != nil && x.RetailPrice != nil {
		return *x.RetailPrice
	}
	return 0
}

func (x *CreateObjectSwapRequest) GetGoodsNo() string {
	if x != nil && x.GoodsNo != nil {
		return *x.GoodsNo
	}
	return ""
}

func (x *CreateObjectSwapRequest) GetRepairExpired() string {
	if x != nil && x.RepairExpired != nil {
		return *x.RepairExpired
	}
	return ""
}

func (x *CreateObjectSwapRequest) GetSwapExpired() string {
	if x != nil && x.SwapExpired != nil {
		return *x.SwapExpired
	}
	return ""
}

type CreateObjectTailorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Filters       string   `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
	GoodsSpu      *string  `protobuf:"bytes,3,opt,name=goods_spu,json=goodsSpu,proto3,oneof" json:"goods_spu,omitempty"`
	SpecNo        *string  `protobuf:"bytes,4,opt,name=spec_no,json=specNo,proto3,oneof" json:"spec_no,omitempty"`
	RfidCode      *string  `protobuf:"bytes,5,opt,name=rfid_code,json=rfidCode,proto3,oneof" json:"rfid_code,omitempty"`
	SecurityCode  *string  `protobuf:"bytes,6,opt,name=security_code,json=securityCode,proto3,oneof" json:"security_code,omitempty"`
	PlatformOrder *string  `protobuf:"bytes,7,opt,name=platform_order,json=platformOrder,proto3,oneof" json:"platform_order,omitempty"`
	OmsOrder      *string  `protobuf:"bytes,8,opt,name=oms_order,json=omsOrder,proto3,oneof" json:"oms_order,omitempty"`
	PartId        *string  `protobuf:"bytes,9,opt,name=part_id,json=partId,proto3,oneof" json:"part_id,omitempty"`
	PartName      *string  `protobuf:"bytes,10,opt,name=part_name,json=partName,proto3,oneof" json:"part_name,omitempty"`
	Remark        *string  `protobuf:"bytes,11,opt,name=remark,proto3,oneof" json:"remark,omitempty"`
	Text          *string  `protobuf:"bytes,12,opt,name=text,proto3,oneof" json:"text,omitempty"`
	TextColor     *string  `protobuf:"bytes,13,opt,name=text_color,json=textColor,proto3,oneof" json:"text_color,omitempty"`
	TextFont      *string  `protobuf:"bytes,14,opt,name=text_font,json=textFont,proto3,oneof" json:"text_font,omitempty"`
	TifPath       *string  `protobuf:"bytes,15,opt,name=tif_path,json=tifPath,proto3,oneof" json:"tif_path,omitempty"`
	ImgPath       *string  `protobuf:"bytes,16,opt,name=img_path,json=imgPath,proto3,oneof" json:"img_path,omitempty"`
	Deletable     *bool    `protobuf:"varint,17,opt,name=deletable,proto3,oneof" json:"deletable,omitempty"`
	ServiceObject *int64   `protobuf:"varint,18,opt,name=service_object,json=serviceObject,proto3,oneof" json:"service_object,omitempty"`
	GoodsId       *string  `protobuf:"bytes,19,opt,name=goods_id,json=goodsId,proto3,oneof" json:"goods_id,omitempty"`
	GoodsName     *string  `protobuf:"bytes,20,opt,name=goods_name,json=goodsName,proto3,oneof" json:"goods_name,omitempty"`
	SpecName      *string  `protobuf:"bytes,21,opt,name=spec_name,json=specName,proto3,oneof" json:"spec_name,omitempty"`
	OutPrice      *float64 `protobuf:"fixed64,22,opt,name=out_price,json=outPrice,proto3,oneof" json:"out_price,omitempty"`
	RetailPrice   *float64 `protobuf:"fixed64,23,opt,name=retail_price,json=retailPrice,proto3,oneof" json:"retail_price,omitempty"`
	GoodsNo       *string  `protobuf:"bytes,24,opt,name=goods_no,json=goodsNo,proto3,oneof" json:"goods_no,omitempty"`
}

func (x *CreateObjectTailorRequest) Reset() {
	*x = CreateObjectTailorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateObjectTailorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateObjectTailorRequest) ProtoMessage() {}

func (x *CreateObjectTailorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateObjectTailorRequest.ProtoReflect.Descriptor instead.
func (*CreateObjectTailorRequest) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{12}
}

func (x *CreateObjectTailorRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CreateObjectTailorRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *CreateObjectTailorRequest) GetGoodsSpu() string {
	if x != nil && x.GoodsSpu != nil {
		return *x.GoodsSpu
	}
	return ""
}

func (x *CreateObjectTailorRequest) GetSpecNo() string {
	if x != nil && x.SpecNo != nil {
		return *x.SpecNo
	}
	return ""
}

func (x *CreateObjectTailorRequest) GetRfidCode() string {
	if x != nil && x.RfidCode != nil {
		return *x.RfidCode
	}
	return ""
}

func (x *CreateObjectTailorRequest) GetSecurityCode() string {
	if x != nil && x.SecurityCode != nil {
		return *x.SecurityCode
	}
	return ""
}

func (x *CreateObjectTailorRequest) GetPlatformOrder() string {
	if x != nil && x.PlatformOrder != nil {
		return *x.PlatformOrder
	}
	return ""
}

func (x *CreateObjectTailorRequest) GetOmsOrder() string {
	if x != nil && x.OmsOrder != nil {
		return *x.OmsOrder
	}
	return ""
}

func (x *CreateObjectTailorRequest) GetPartId() string {
	if x != nil && x.PartId != nil {
		return *x.PartId
	}
	return ""
}

func (x *CreateObjectTailorRequest) GetPartName() string {
	if x != nil && x.PartName != nil {
		return *x.PartName
	}
	return ""
}

func (x *CreateObjectTailorRequest) GetRemark() string {
	if x != nil && x.Remark != nil {
		return *x.Remark
	}
	return ""
}

func (x *CreateObjectTailorRequest) GetText() string {
	if x != nil && x.Text != nil {
		return *x.Text
	}
	return ""
}

func (x *CreateObjectTailorRequest) GetTextColor() string {
	if x != nil && x.TextColor != nil {
		return *x.TextColor
	}
	return ""
}

func (x *CreateObjectTailorRequest) GetTextFont() string {
	if x != nil && x.TextFont != nil {
		return *x.TextFont
	}
	return ""
}

func (x *CreateObjectTailorRequest) GetTifPath() string {
	if x != nil && x.TifPath != nil {
		return *x.TifPath
	}
	return ""
}

func (x *CreateObjectTailorRequest) GetImgPath() string {
	if x != nil && x.ImgPath != nil {
		return *x.ImgPath
	}
	return ""
}

func (x *CreateObjectTailorRequest) GetDeletable() bool {
	if x != nil && x.Deletable != nil {
		return *x.Deletable
	}
	return false
}

func (x *CreateObjectTailorRequest) GetServiceObject() int64 {
	if x != nil && x.ServiceObject != nil {
		return *x.ServiceObject
	}
	return 0
}

func (x *CreateObjectTailorRequest) GetGoodsId() string {
	if x != nil && x.GoodsId != nil {
		return *x.GoodsId
	}
	return ""
}

func (x *CreateObjectTailorRequest) GetGoodsName() string {
	if x != nil && x.GoodsName != nil {
		return *x.GoodsName
	}
	return ""
}

func (x *CreateObjectTailorRequest) GetSpecName() string {
	if x != nil && x.SpecName != nil {
		return *x.SpecName
	}
	return ""
}

func (x *CreateObjectTailorRequest) GetOutPrice() float64 {
	if x != nil && x.OutPrice != nil {
		return *x.OutPrice
	}
	return 0
}

func (x *CreateObjectTailorRequest) GetRetailPrice() float64 {
	if x != nil && x.RetailPrice != nil {
		return *x.RetailPrice
	}
	return 0
}

func (x *CreateObjectTailorRequest) GetGoodsNo() string {
	if x != nil && x.GoodsNo != nil {
		return *x.GoodsNo
	}
	return ""
}

type CreateObjectTradeInRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Filters        string   `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
	CtmId          *int32   `protobuf:"varint,3,opt,name=ctm_id,json=ctmId,proto3,oneof" json:"ctm_id,omitempty"`
	CtmOpenId      *string  `protobuf:"bytes,4,opt,name=ctm_openId,json=ctmOpenId,proto3,oneof" json:"ctm_openId,omitempty"`
	CtmNickname    *string  `protobuf:"bytes,5,opt,name=ctm_nickname,json=ctmNickname,proto3,oneof" json:"ctm_nickname,omitempty"`
	CtmMobile      *string  `protobuf:"bytes,6,opt,name=ctm_mobile,json=ctmMobile,proto3,oneof" json:"ctm_mobile,omitempty"`
	CtmCardNo      *string  `protobuf:"bytes,7,opt,name=ctm_card_no,json=ctmCardNo,proto3,oneof" json:"ctm_card_no,omitempty"`
	CtmLevel       *int32   `protobuf:"varint,8,opt,name=ctm_level,json=ctmLevel,proto3,oneof" json:"ctm_level,omitempty"`
	TradeInBrand   *string  `protobuf:"bytes,9,opt,name=trade_in_brand,json=tradeInBrand,proto3,oneof" json:"trade_in_brand,omitempty"`
	TradeInModel   *string  `protobuf:"bytes,10,opt,name=trade_in_model,json=tradeInModel,proto3,oneof" json:"trade_in_model,omitempty"`
	TradeInDesc    *string  `protobuf:"bytes,11,opt,name=trade_in_desc,json=tradeInDesc,proto3,oneof" json:"trade_in_desc,omitempty"`
	TradeInPrice   *float64 `protobuf:"fixed64,12,opt,name=trade_in_price,json=tradeInPrice,proto3,oneof" json:"trade_in_price,omitempty"`
	ServiceObject  *int64   `protobuf:"varint,13,opt,name=service_object,json=serviceObject,proto3,oneof" json:"service_object,omitempty"`
	MediaPath      *string  `protobuf:"bytes,14,opt,name=media_path,json=mediaPath,proto3,oneof" json:"media_path,omitempty"`
	TradeInReasons *string  `protobuf:"bytes,15,opt,name=trade_in_reasons,json=tradeInReasons,proto3,oneof" json:"trade_in_reasons,omitempty"`
}

func (x *CreateObjectTradeInRequest) Reset() {
	*x = CreateObjectTradeInRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateObjectTradeInRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateObjectTradeInRequest) ProtoMessage() {}

func (x *CreateObjectTradeInRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateObjectTradeInRequest.ProtoReflect.Descriptor instead.
func (*CreateObjectTradeInRequest) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{13}
}

func (x *CreateObjectTradeInRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CreateObjectTradeInRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *CreateObjectTradeInRequest) GetCtmId() int32 {
	if x != nil && x.CtmId != nil {
		return *x.CtmId
	}
	return 0
}

func (x *CreateObjectTradeInRequest) GetCtmOpenId() string {
	if x != nil && x.CtmOpenId != nil {
		return *x.CtmOpenId
	}
	return ""
}

func (x *CreateObjectTradeInRequest) GetCtmNickname() string {
	if x != nil && x.CtmNickname != nil {
		return *x.CtmNickname
	}
	return ""
}

func (x *CreateObjectTradeInRequest) GetCtmMobile() string {
	if x != nil && x.CtmMobile != nil {
		return *x.CtmMobile
	}
	return ""
}

func (x *CreateObjectTradeInRequest) GetCtmCardNo() string {
	if x != nil && x.CtmCardNo != nil {
		return *x.CtmCardNo
	}
	return ""
}

func (x *CreateObjectTradeInRequest) GetCtmLevel() int32 {
	if x != nil && x.CtmLevel != nil {
		return *x.CtmLevel
	}
	return 0
}

func (x *CreateObjectTradeInRequest) GetTradeInBrand() string {
	if x != nil && x.TradeInBrand != nil {
		return *x.TradeInBrand
	}
	return ""
}

func (x *CreateObjectTradeInRequest) GetTradeInModel() string {
	if x != nil && x.TradeInModel != nil {
		return *x.TradeInModel
	}
	return ""
}

func (x *CreateObjectTradeInRequest) GetTradeInDesc() string {
	if x != nil && x.TradeInDesc != nil {
		return *x.TradeInDesc
	}
	return ""
}

func (x *CreateObjectTradeInRequest) GetTradeInPrice() float64 {
	if x != nil && x.TradeInPrice != nil {
		return *x.TradeInPrice
	}
	return 0
}

func (x *CreateObjectTradeInRequest) GetServiceObject() int64 {
	if x != nil && x.ServiceObject != nil {
		return *x.ServiceObject
	}
	return 0
}

func (x *CreateObjectTradeInRequest) GetMediaPath() string {
	if x != nil && x.MediaPath != nil {
		return *x.MediaPath
	}
	return ""
}

func (x *CreateObjectTradeInRequest) GetTradeInReasons() string {
	if x != nil && x.TradeInReasons != nil {
		return *x.TradeInReasons
	}
	return ""
}

type CtmServiceDestroyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CtmServiceDestroyRequest) Reset() {
	*x = CtmServiceDestroyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmServiceDestroyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmServiceDestroyRequest) ProtoMessage() {}

func (x *CtmServiceDestroyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmServiceDestroyRequest.ProtoReflect.Descriptor instead.
func (*CtmServiceDestroyRequest) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{14}
}

func (x *CtmServiceDestroyRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CtmServiceListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int32                         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Filters          string                        `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
	RepairContent    *ObjectRepairRequest          `protobuf:"bytes,3,opt,name=repair_content,json=repairContent,proto3,oneof" json:"repair_content,omitempty"`
	SwapContent      *ObjectSwapRequest            `protobuf:"bytes,4,opt,name=swap_content,json=swapContent,proto3,oneof" json:"swap_content,omitempty"`
	TailorContent    *ObjectTailorRequest          `protobuf:"bytes,5,opt,name=tailor_content,json=tailorContent,proto3,oneof" json:"tailor_content,omitempty"`
	ComplainContent  *ObjectComplainRequest        `protobuf:"bytes,6,opt,name=complain_content,json=complainContent,proto3,oneof" json:"complain_content,omitempty"`
	FeedbackContent  *ObjectFeedbackRequest        `protobuf:"bytes,7,opt,name=feedback_content,json=feedbackContent,proto3,oneof" json:"feedback_content,omitempty"`
	TradeInContent   *ObjectTradeInRequest         `protobuf:"bytes,8,opt,name=trade_in_content,json=tradeInContent,proto3,oneof" json:"trade_in_content,omitempty"`
	ReturnList       []*ServiceGoodsReturnRequest  `protobuf:"bytes,9,rep,name=return_list,json=returnList,proto3" json:"return_list,omitempty"`
	SwapList         []*ServiceGoodsDeliverRequest `protobuf:"bytes,10,rep,name=swap_list,json=swapList,proto3" json:"swap_list,omitempty"`
	PayContent       *ServiceGoodsPayRequest       `protobuf:"bytes,11,opt,name=pay_content,json=payContent,proto3,oneof" json:"pay_content,omitempty"`
	CreateName       *string                       `protobuf:"bytes,12,opt,name=create_name,json=createName,proto3,oneof" json:"create_name,omitempty"`
	ApproveTime      *string                       `protobuf:"bytes,13,opt,name=approve_time,json=approveTime,proto3,oneof" json:"approve_time,omitempty"`
	ApproveName      *string                       `protobuf:"bytes,14,opt,name=approve_name,json=approveName,proto3,oneof" json:"approve_name,omitempty"`
	Sid              string                        `protobuf:"bytes,15,opt,name=sid,proto3" json:"sid,omitempty"`
	TradeType        *int32                        `protobuf:"varint,16,opt,name=trade_type,json=tradeType,proto3,oneof" json:"trade_type,omitempty"`
	Type             *int32                        `protobuf:"varint,17,opt,name=type,proto3,oneof" json:"type,omitempty"`
	CreateType       *int32                        `protobuf:"varint,18,opt,name=create_type,json=createType,proto3,oneof" json:"create_type,omitempty"`
	ServiceStatus    *int32                        `protobuf:"varint,19,opt,name=service_status,json=serviceStatus,proto3,oneof" json:"service_status,omitempty"`
	TradeStatus      *int32                        `protobuf:"varint,20,opt,name=trade_status,json=tradeStatus,proto3,oneof" json:"trade_status,omitempty"`
	PayStatus        *int32                        `protobuf:"varint,21,opt,name=pay_status,json=payStatus,proto3,oneof" json:"pay_status,omitempty"`
	PayTime          *string                       `protobuf:"bytes,22,opt,name=pay_time,json=payTime,proto3,oneof" json:"pay_time,omitempty"`
	DeliveryTerm     *int32                        `protobuf:"varint,23,opt,name=delivery_term,json=deliveryTerm,proto3,oneof" json:"delivery_term,omitempty"`
	BuyerNick        *string                       `protobuf:"bytes,24,opt,name=buyer_nick,json=buyerNick,proto3,oneof" json:"buyer_nick,omitempty"`
	BuyerMobile      *string                       `protobuf:"bytes,25,opt,name=buyer_mobile,json=buyerMobile,proto3,oneof" json:"buyer_mobile,omitempty"`
	BuyerMessage     *string                       `protobuf:"bytes,26,opt,name=buyer_message,json=buyerMessage,proto3,oneof" json:"buyer_message,omitempty"`
	SellerName       *string                       `protobuf:"bytes,27,opt,name=seller_name,json=sellerName,proto3,oneof" json:"seller_name,omitempty"`
	SellerMemo       *string                       `protobuf:"bytes,28,opt,name=seller_memo,json=sellerMemo,proto3,oneof" json:"seller_memo,omitempty"`
	ShopNo           *string                       `protobuf:"bytes,29,opt,name=shop_no,json=shopNo,proto3,oneof" json:"shop_no,omitempty"`
	ShopName         *string                       `protobuf:"bytes,30,opt,name=shop_name,json=shopName,proto3,oneof" json:"shop_name,omitempty"`
	WarehouseNo      *string                       `protobuf:"bytes,31,opt,name=warehouse_no,json=warehouseNo,proto3,oneof" json:"warehouse_no,omitempty"`
	WarehouseName    *string                       `protobuf:"bytes,32,opt,name=warehouse_name,json=warehouseName,proto3,oneof" json:"warehouse_name,omitempty"`
	ReceiverName     *string                       `protobuf:"bytes,33,opt,name=receiver_name,json=receiverName,proto3,oneof" json:"receiver_name,omitempty"`
	ReceiverProvince *string                       `protobuf:"bytes,34,opt,name=receiver_province,json=receiverProvince,proto3,oneof" json:"receiver_province,omitempty"`
	ReceiverCity     *string                       `protobuf:"bytes,35,opt,name=receiver_city,json=receiverCity,proto3,oneof" json:"receiver_city,omitempty"`
	ReceiverDistrict *string                       `protobuf:"bytes,36,opt,name=receiver_district,json=receiverDistrict,proto3,oneof" json:"receiver_district,omitempty"`
	ReceiverAddress  *string                       `protobuf:"bytes,37,opt,name=receiver_address,json=receiverAddress,proto3,oneof" json:"receiver_address,omitempty"`
	ReceiverMobile   *string                       `protobuf:"bytes,38,opt,name=receiver_mobile,json=receiverMobile,proto3,oneof" json:"receiver_mobile,omitempty"`
	PostAmount       *float64                      `protobuf:"fixed64,39,opt,name=post_amount,json=postAmount,proto3,oneof" json:"post_amount,omitempty"`
	OtherAmount      *float64                      `protobuf:"fixed64,40,opt,name=other_amount,json=otherAmount,proto3,oneof" json:"other_amount,omitempty"`
	ExtCodFee        *float64                      `protobuf:"fixed64,41,opt,name=ext_cod_fee,json=extCodFee,proto3,oneof" json:"ext_cod_fee,omitempty"`
	Paid             *float64                      `protobuf:"fixed64,42,opt,name=paid,proto3,oneof" json:"paid,omitempty"`
	CodAmount        *float64                      `protobuf:"fixed64,43,opt,name=cod_amount,json=codAmount,proto3,oneof" json:"cod_amount,omitempty"`
	Receivable       *float64                      `protobuf:"fixed64,44,opt,name=receivable,proto3,oneof" json:"receivable,omitempty"`
	Discount         *float64                      `protobuf:"fixed64,45,opt,name=discount,proto3,oneof" json:"discount,omitempty"`
	InvoiceStatus    *int32                        `protobuf:"varint,46,opt,name=invoice_status,json=invoiceStatus,proto3,oneof" json:"invoice_status,omitempty"`
	LogisticsInName  *string                       `protobuf:"bytes,49,opt,name=logistics_in_name,json=logisticsInName,proto3,oneof" json:"logistics_in_name,omitempty"`
	LogisticsInCode  *string                       `protobuf:"bytes,50,opt,name=logistics_in_code,json=logisticsInCode,proto3,oneof" json:"logistics_in_code,omitempty"`
	LogisticsInNo    *string                       `protobuf:"bytes,51,opt,name=logistics_in_no,json=logisticsInNo,proto3,oneof" json:"logistics_in_no,omitempty"`
	WarehouseInNo    *string                       `protobuf:"bytes,52,opt,name=warehouse_in_no,json=warehouseInNo,proto3,oneof" json:"warehouse_in_no,omitempty"`
	WarehouseInName  *string                       `protobuf:"bytes,53,opt,name=warehouse_in_name,json=warehouseInName,proto3,oneof" json:"warehouse_in_name,omitempty"`
	Ctm              *int64                        `protobuf:"varint,54,opt,name=ctm,proto3,oneof" json:"ctm,omitempty"`
	InvoiceContent   *ServiceGoodsInvoiceRequest   `protobuf:"bytes,55,opt,name=invoice_content,json=invoiceContent,proto3,oneof" json:"invoice_content,omitempty"`
	ApproveReasons   *string                       `protobuf:"bytes,56,opt,name=approve_reasons,json=approveReasons,proto3,oneof" json:"approve_reasons,omitempty"`
	RejectReasons    *string                       `protobuf:"bytes,57,opt,name=reject_reasons,json=rejectReasons,proto3,oneof" json:"reject_reasons,omitempty"`
	CancelReasons    *string                       `protobuf:"bytes,58,opt,name=cancel_reasons,json=cancelReasons,proto3,oneof" json:"cancel_reasons,omitempty"`
}

func (x *CtmServiceListRequest) Reset() {
	*x = CtmServiceListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmServiceListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmServiceListRequest) ProtoMessage() {}

func (x *CtmServiceListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmServiceListRequest.ProtoReflect.Descriptor instead.
func (*CtmServiceListRequest) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{15}
}

func (x *CtmServiceListRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CtmServiceListRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *CtmServiceListRequest) GetRepairContent() *ObjectRepairRequest {
	if x != nil {
		return x.RepairContent
	}
	return nil
}

func (x *CtmServiceListRequest) GetSwapContent() *ObjectSwapRequest {
	if x != nil {
		return x.SwapContent
	}
	return nil
}

func (x *CtmServiceListRequest) GetTailorContent() *ObjectTailorRequest {
	if x != nil {
		return x.TailorContent
	}
	return nil
}

func (x *CtmServiceListRequest) GetComplainContent() *ObjectComplainRequest {
	if x != nil {
		return x.ComplainContent
	}
	return nil
}

func (x *CtmServiceListRequest) GetFeedbackContent() *ObjectFeedbackRequest {
	if x != nil {
		return x.FeedbackContent
	}
	return nil
}

func (x *CtmServiceListRequest) GetTradeInContent() *ObjectTradeInRequest {
	if x != nil {
		return x.TradeInContent
	}
	return nil
}

func (x *CtmServiceListRequest) GetReturnList() []*ServiceGoodsReturnRequest {
	if x != nil {
		return x.ReturnList
	}
	return nil
}

func (x *CtmServiceListRequest) GetSwapList() []*ServiceGoodsDeliverRequest {
	if x != nil {
		return x.SwapList
	}
	return nil
}

func (x *CtmServiceListRequest) GetPayContent() *ServiceGoodsPayRequest {
	if x != nil {
		return x.PayContent
	}
	return nil
}

func (x *CtmServiceListRequest) GetCreateName() string {
	if x != nil && x.CreateName != nil {
		return *x.CreateName
	}
	return ""
}

func (x *CtmServiceListRequest) GetApproveTime() string {
	if x != nil && x.ApproveTime != nil {
		return *x.ApproveTime
	}
	return ""
}

func (x *CtmServiceListRequest) GetApproveName() string {
	if x != nil && x.ApproveName != nil {
		return *x.ApproveName
	}
	return ""
}

func (x *CtmServiceListRequest) GetSid() string {
	if x != nil {
		return x.Sid
	}
	return ""
}

func (x *CtmServiceListRequest) GetTradeType() int32 {
	if x != nil && x.TradeType != nil {
		return *x.TradeType
	}
	return 0
}

func (x *CtmServiceListRequest) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *CtmServiceListRequest) GetCreateType() int32 {
	if x != nil && x.CreateType != nil {
		return *x.CreateType
	}
	return 0
}

func (x *CtmServiceListRequest) GetServiceStatus() int32 {
	if x != nil && x.ServiceStatus != nil {
		return *x.ServiceStatus
	}
	return 0
}

func (x *CtmServiceListRequest) GetTradeStatus() int32 {
	if x != nil && x.TradeStatus != nil {
		return *x.TradeStatus
	}
	return 0
}

func (x *CtmServiceListRequest) GetPayStatus() int32 {
	if x != nil && x.PayStatus != nil {
		return *x.PayStatus
	}
	return 0
}

func (x *CtmServiceListRequest) GetPayTime() string {
	if x != nil && x.PayTime != nil {
		return *x.PayTime
	}
	return ""
}

func (x *CtmServiceListRequest) GetDeliveryTerm() int32 {
	if x != nil && x.DeliveryTerm != nil {
		return *x.DeliveryTerm
	}
	return 0
}

func (x *CtmServiceListRequest) GetBuyerNick() string {
	if x != nil && x.BuyerNick != nil {
		return *x.BuyerNick
	}
	return ""
}

func (x *CtmServiceListRequest) GetBuyerMobile() string {
	if x != nil && x.BuyerMobile != nil {
		return *x.BuyerMobile
	}
	return ""
}

func (x *CtmServiceListRequest) GetBuyerMessage() string {
	if x != nil && x.BuyerMessage != nil {
		return *x.BuyerMessage
	}
	return ""
}

func (x *CtmServiceListRequest) GetSellerName() string {
	if x != nil && x.SellerName != nil {
		return *x.SellerName
	}
	return ""
}

func (x *CtmServiceListRequest) GetSellerMemo() string {
	if x != nil && x.SellerMemo != nil {
		return *x.SellerMemo
	}
	return ""
}

func (x *CtmServiceListRequest) GetShopNo() string {
	if x != nil && x.ShopNo != nil {
		return *x.ShopNo
	}
	return ""
}

func (x *CtmServiceListRequest) GetShopName() string {
	if x != nil && x.ShopName != nil {
		return *x.ShopName
	}
	return ""
}

func (x *CtmServiceListRequest) GetWarehouseNo() string {
	if x != nil && x.WarehouseNo != nil {
		return *x.WarehouseNo
	}
	return ""
}

func (x *CtmServiceListRequest) GetWarehouseName() string {
	if x != nil && x.WarehouseName != nil {
		return *x.WarehouseName
	}
	return ""
}

func (x *CtmServiceListRequest) GetReceiverName() string {
	if x != nil && x.ReceiverName != nil {
		return *x.ReceiverName
	}
	return ""
}

func (x *CtmServiceListRequest) GetReceiverProvince() string {
	if x != nil && x.ReceiverProvince != nil {
		return *x.ReceiverProvince
	}
	return ""
}

func (x *CtmServiceListRequest) GetReceiverCity() string {
	if x != nil && x.ReceiverCity != nil {
		return *x.ReceiverCity
	}
	return ""
}

func (x *CtmServiceListRequest) GetReceiverDistrict() string {
	if x != nil && x.ReceiverDistrict != nil {
		return *x.ReceiverDistrict
	}
	return ""
}

func (x *CtmServiceListRequest) GetReceiverAddress() string {
	if x != nil && x.ReceiverAddress != nil {
		return *x.ReceiverAddress
	}
	return ""
}

func (x *CtmServiceListRequest) GetReceiverMobile() string {
	if x != nil && x.ReceiverMobile != nil {
		return *x.ReceiverMobile
	}
	return ""
}

func (x *CtmServiceListRequest) GetPostAmount() float64 {
	if x != nil && x.PostAmount != nil {
		return *x.PostAmount
	}
	return 0
}

func (x *CtmServiceListRequest) GetOtherAmount() float64 {
	if x != nil && x.OtherAmount != nil {
		return *x.OtherAmount
	}
	return 0
}

func (x *CtmServiceListRequest) GetExtCodFee() float64 {
	if x != nil && x.ExtCodFee != nil {
		return *x.ExtCodFee
	}
	return 0
}

func (x *CtmServiceListRequest) GetPaid() float64 {
	if x != nil && x.Paid != nil {
		return *x.Paid
	}
	return 0
}

func (x *CtmServiceListRequest) GetCodAmount() float64 {
	if x != nil && x.CodAmount != nil {
		return *x.CodAmount
	}
	return 0
}

func (x *CtmServiceListRequest) GetReceivable() float64 {
	if x != nil && x.Receivable != nil {
		return *x.Receivable
	}
	return 0
}

func (x *CtmServiceListRequest) GetDiscount() float64 {
	if x != nil && x.Discount != nil {
		return *x.Discount
	}
	return 0
}

func (x *CtmServiceListRequest) GetInvoiceStatus() int32 {
	if x != nil && x.InvoiceStatus != nil {
		return *x.InvoiceStatus
	}
	return 0
}

func (x *CtmServiceListRequest) GetLogisticsInName() string {
	if x != nil && x.LogisticsInName != nil {
		return *x.LogisticsInName
	}
	return ""
}

func (x *CtmServiceListRequest) GetLogisticsInCode() string {
	if x != nil && x.LogisticsInCode != nil {
		return *x.LogisticsInCode
	}
	return ""
}

func (x *CtmServiceListRequest) GetLogisticsInNo() string {
	if x != nil && x.LogisticsInNo != nil {
		return *x.LogisticsInNo
	}
	return ""
}

func (x *CtmServiceListRequest) GetWarehouseInNo() string {
	if x != nil && x.WarehouseInNo != nil {
		return *x.WarehouseInNo
	}
	return ""
}

func (x *CtmServiceListRequest) GetWarehouseInName() string {
	if x != nil && x.WarehouseInName != nil {
		return *x.WarehouseInName
	}
	return ""
}

func (x *CtmServiceListRequest) GetCtm() int64 {
	if x != nil && x.Ctm != nil {
		return *x.Ctm
	}
	return 0
}

func (x *CtmServiceListRequest) GetInvoiceContent() *ServiceGoodsInvoiceRequest {
	if x != nil {
		return x.InvoiceContent
	}
	return nil
}

func (x *CtmServiceListRequest) GetApproveReasons() string {
	if x != nil && x.ApproveReasons != nil {
		return *x.ApproveReasons
	}
	return ""
}

func (x *CtmServiceListRequest) GetRejectReasons() string {
	if x != nil && x.RejectReasons != nil {
		return *x.RejectReasons
	}
	return ""
}

func (x *CtmServiceListRequest) GetCancelReasons() string {
	if x != nil && x.CancelReasons != nil {
		return *x.CancelReasons
	}
	return ""
}

type CtmServiceListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*CtmServiceResponse `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Count   int32                 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *CtmServiceListResponse) Reset() {
	*x = CtmServiceListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmServiceListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmServiceListResponse) ProtoMessage() {}

func (x *CtmServiceListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmServiceListResponse.ProtoReflect.Descriptor instead.
func (*CtmServiceListResponse) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{16}
}

func (x *CtmServiceListResponse) GetResults() []*CtmServiceResponse {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *CtmServiceListResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type CtmServicePartialUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   int32                         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Filters              string                        `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
	RepairContent        *ObjectRepairRequest          `protobuf:"bytes,3,opt,name=repair_content,json=repairContent,proto3,oneof" json:"repair_content,omitempty"`
	SwapContent          *ObjectSwapRequest            `protobuf:"bytes,4,opt,name=swap_content,json=swapContent,proto3,oneof" json:"swap_content,omitempty"`
	TailorContent        *ObjectTailorRequest          `protobuf:"bytes,5,opt,name=tailor_content,json=tailorContent,proto3,oneof" json:"tailor_content,omitempty"`
	ComplainContent      *ObjectComplainRequest        `protobuf:"bytes,6,opt,name=complain_content,json=complainContent,proto3,oneof" json:"complain_content,omitempty"`
	FeedbackContent      *ObjectFeedbackRequest        `protobuf:"bytes,7,opt,name=feedback_content,json=feedbackContent,proto3,oneof" json:"feedback_content,omitempty"`
	TradeInContent       *ObjectTradeInRequest         `protobuf:"bytes,8,opt,name=trade_in_content,json=tradeInContent,proto3,oneof" json:"trade_in_content,omitempty"`
	ReturnList           []*ServiceGoodsReturnRequest  `protobuf:"bytes,9,rep,name=return_list,json=returnList,proto3" json:"return_list,omitempty"`
	SwapList             []*ServiceGoodsDeliverRequest `protobuf:"bytes,10,rep,name=swap_list,json=swapList,proto3" json:"swap_list,omitempty"`
	PayContent           *ServiceGoodsPayRequest       `protobuf:"bytes,11,opt,name=pay_content,json=payContent,proto3,oneof" json:"pay_content,omitempty"`
	XPartialUpdateFields []string                      `protobuf:"bytes,12,rep,name=_partial_update_fields,json=PartialUpdateFields,proto3" json:"_partial_update_fields,omitempty"`
	CreateName           *string                       `protobuf:"bytes,13,opt,name=create_name,json=createName,proto3,oneof" json:"create_name,omitempty"`
	ApproveTime          *string                       `protobuf:"bytes,14,opt,name=approve_time,json=approveTime,proto3,oneof" json:"approve_time,omitempty"`
	ApproveName          *string                       `protobuf:"bytes,15,opt,name=approve_name,json=approveName,proto3,oneof" json:"approve_name,omitempty"`
	Sid                  string                        `protobuf:"bytes,16,opt,name=sid,proto3" json:"sid,omitempty"`
	TradeType            *int32                        `protobuf:"varint,17,opt,name=trade_type,json=tradeType,proto3,oneof" json:"trade_type,omitempty"`
	Type                 *int32                        `protobuf:"varint,18,opt,name=type,proto3,oneof" json:"type,omitempty"`
	CreateType           *int32                        `protobuf:"varint,19,opt,name=create_type,json=createType,proto3,oneof" json:"create_type,omitempty"`
	ServiceStatus        *int32                        `protobuf:"varint,20,opt,name=service_status,json=serviceStatus,proto3,oneof" json:"service_status,omitempty"`
	TradeStatus          *int32                        `protobuf:"varint,21,opt,name=trade_status,json=tradeStatus,proto3,oneof" json:"trade_status,omitempty"`
	PayStatus            *int32                        `protobuf:"varint,22,opt,name=pay_status,json=payStatus,proto3,oneof" json:"pay_status,omitempty"`
	PayTime              *string                       `protobuf:"bytes,23,opt,name=pay_time,json=payTime,proto3,oneof" json:"pay_time,omitempty"`
	DeliveryTerm         *int32                        `protobuf:"varint,24,opt,name=delivery_term,json=deliveryTerm,proto3,oneof" json:"delivery_term,omitempty"`
	BuyerNick            *string                       `protobuf:"bytes,25,opt,name=buyer_nick,json=buyerNick,proto3,oneof" json:"buyer_nick,omitempty"`
	BuyerMobile          *string                       `protobuf:"bytes,26,opt,name=buyer_mobile,json=buyerMobile,proto3,oneof" json:"buyer_mobile,omitempty"`
	BuyerMessage         *string                       `protobuf:"bytes,27,opt,name=buyer_message,json=buyerMessage,proto3,oneof" json:"buyer_message,omitempty"`
	SellerName           *string                       `protobuf:"bytes,28,opt,name=seller_name,json=sellerName,proto3,oneof" json:"seller_name,omitempty"`
	SellerMemo           *string                       `protobuf:"bytes,29,opt,name=seller_memo,json=sellerMemo,proto3,oneof" json:"seller_memo,omitempty"`
	ShopNo               *string                       `protobuf:"bytes,30,opt,name=shop_no,json=shopNo,proto3,oneof" json:"shop_no,omitempty"`
	ShopName             *string                       `protobuf:"bytes,31,opt,name=shop_name,json=shopName,proto3,oneof" json:"shop_name,omitempty"`
	WarehouseNo          *string                       `protobuf:"bytes,32,opt,name=warehouse_no,json=warehouseNo,proto3,oneof" json:"warehouse_no,omitempty"`
	WarehouseName        *string                       `protobuf:"bytes,33,opt,name=warehouse_name,json=warehouseName,proto3,oneof" json:"warehouse_name,omitempty"`
	ReceiverName         *string                       `protobuf:"bytes,34,opt,name=receiver_name,json=receiverName,proto3,oneof" json:"receiver_name,omitempty"`
	ReceiverProvince     *string                       `protobuf:"bytes,35,opt,name=receiver_province,json=receiverProvince,proto3,oneof" json:"receiver_province,omitempty"`
	ReceiverCity         *string                       `protobuf:"bytes,36,opt,name=receiver_city,json=receiverCity,proto3,oneof" json:"receiver_city,omitempty"`
	ReceiverDistrict     *string                       `protobuf:"bytes,37,opt,name=receiver_district,json=receiverDistrict,proto3,oneof" json:"receiver_district,omitempty"`
	ReceiverAddress      *string                       `protobuf:"bytes,38,opt,name=receiver_address,json=receiverAddress,proto3,oneof" json:"receiver_address,omitempty"`
	ReceiverMobile       *string                       `protobuf:"bytes,39,opt,name=receiver_mobile,json=receiverMobile,proto3,oneof" json:"receiver_mobile,omitempty"`
	PostAmount           *float64                      `protobuf:"fixed64,40,opt,name=post_amount,json=postAmount,proto3,oneof" json:"post_amount,omitempty"`
	OtherAmount          *float64                      `protobuf:"fixed64,41,opt,name=other_amount,json=otherAmount,proto3,oneof" json:"other_amount,omitempty"`
	ExtCodFee            *float64                      `protobuf:"fixed64,42,opt,name=ext_cod_fee,json=extCodFee,proto3,oneof" json:"ext_cod_fee,omitempty"`
	Paid                 *float64                      `protobuf:"fixed64,43,opt,name=paid,proto3,oneof" json:"paid,omitempty"`
	CodAmount            *float64                      `protobuf:"fixed64,44,opt,name=cod_amount,json=codAmount,proto3,oneof" json:"cod_amount,omitempty"`
	Receivable           *float64                      `protobuf:"fixed64,45,opt,name=receivable,proto3,oneof" json:"receivable,omitempty"`
	Discount             *float64                      `protobuf:"fixed64,46,opt,name=discount,proto3,oneof" json:"discount,omitempty"`
	InvoiceStatus        *int32                        `protobuf:"varint,47,opt,name=invoice_status,json=invoiceStatus,proto3,oneof" json:"invoice_status,omitempty"`
	LogisticsInName      *string                       `protobuf:"bytes,50,opt,name=logistics_in_name,json=logisticsInName,proto3,oneof" json:"logistics_in_name,omitempty"`
	LogisticsInCode      *string                       `protobuf:"bytes,51,opt,name=logistics_in_code,json=logisticsInCode,proto3,oneof" json:"logistics_in_code,omitempty"`
	LogisticsInNo        *string                       `protobuf:"bytes,52,opt,name=logistics_in_no,json=logisticsInNo,proto3,oneof" json:"logistics_in_no,omitempty"`
	WarehouseInNo        *string                       `protobuf:"bytes,53,opt,name=warehouse_in_no,json=warehouseInNo,proto3,oneof" json:"warehouse_in_no,omitempty"`
	WarehouseInName      *string                       `protobuf:"bytes,54,opt,name=warehouse_in_name,json=warehouseInName,proto3,oneof" json:"warehouse_in_name,omitempty"`
	Ctm                  *int64                        `protobuf:"varint,55,opt,name=ctm,proto3,oneof" json:"ctm,omitempty"`
	InvoiceContent       *ServiceGoodsInvoiceRequest   `protobuf:"bytes,56,opt,name=invoice_content,json=invoiceContent,proto3,oneof" json:"invoice_content,omitempty"`
	ApproveReasons       *string                       `protobuf:"bytes,57,opt,name=approve_reasons,json=approveReasons,proto3,oneof" json:"approve_reasons,omitempty"`
	RejectReasons        *string                       `protobuf:"bytes,58,opt,name=reject_reasons,json=rejectReasons,proto3,oneof" json:"reject_reasons,omitempty"`
	CancelReasons        *string                       `protobuf:"bytes,59,opt,name=cancel_reasons,json=cancelReasons,proto3,oneof" json:"cancel_reasons,omitempty"`
}

func (x *CtmServicePartialUpdateRequest) Reset() {
	*x = CtmServicePartialUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmServicePartialUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmServicePartialUpdateRequest) ProtoMessage() {}

func (x *CtmServicePartialUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmServicePartialUpdateRequest.ProtoReflect.Descriptor instead.
func (*CtmServicePartialUpdateRequest) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{17}
}

func (x *CtmServicePartialUpdateRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CtmServicePartialUpdateRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *CtmServicePartialUpdateRequest) GetRepairContent() *ObjectRepairRequest {
	if x != nil {
		return x.RepairContent
	}
	return nil
}

func (x *CtmServicePartialUpdateRequest) GetSwapContent() *ObjectSwapRequest {
	if x != nil {
		return x.SwapContent
	}
	return nil
}

func (x *CtmServicePartialUpdateRequest) GetTailorContent() *ObjectTailorRequest {
	if x != nil {
		return x.TailorContent
	}
	return nil
}

func (x *CtmServicePartialUpdateRequest) GetComplainContent() *ObjectComplainRequest {
	if x != nil {
		return x.ComplainContent
	}
	return nil
}

func (x *CtmServicePartialUpdateRequest) GetFeedbackContent() *ObjectFeedbackRequest {
	if x != nil {
		return x.FeedbackContent
	}
	return nil
}

func (x *CtmServicePartialUpdateRequest) GetTradeInContent() *ObjectTradeInRequest {
	if x != nil {
		return x.TradeInContent
	}
	return nil
}

func (x *CtmServicePartialUpdateRequest) GetReturnList() []*ServiceGoodsReturnRequest {
	if x != nil {
		return x.ReturnList
	}
	return nil
}

func (x *CtmServicePartialUpdateRequest) GetSwapList() []*ServiceGoodsDeliverRequest {
	if x != nil {
		return x.SwapList
	}
	return nil
}

func (x *CtmServicePartialUpdateRequest) GetPayContent() *ServiceGoodsPayRequest {
	if x != nil {
		return x.PayContent
	}
	return nil
}

func (x *CtmServicePartialUpdateRequest) GetXPartialUpdateFields() []string {
	if x != nil {
		return x.XPartialUpdateFields
	}
	return nil
}

func (x *CtmServicePartialUpdateRequest) GetCreateName() string {
	if x != nil && x.CreateName != nil {
		return *x.CreateName
	}
	return ""
}

func (x *CtmServicePartialUpdateRequest) GetApproveTime() string {
	if x != nil && x.ApproveTime != nil {
		return *x.ApproveTime
	}
	return ""
}

func (x *CtmServicePartialUpdateRequest) GetApproveName() string {
	if x != nil && x.ApproveName != nil {
		return *x.ApproveName
	}
	return ""
}

func (x *CtmServicePartialUpdateRequest) GetSid() string {
	if x != nil {
		return x.Sid
	}
	return ""
}

func (x *CtmServicePartialUpdateRequest) GetTradeType() int32 {
	if x != nil && x.TradeType != nil {
		return *x.TradeType
	}
	return 0
}

func (x *CtmServicePartialUpdateRequest) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *CtmServicePartialUpdateRequest) GetCreateType() int32 {
	if x != nil && x.CreateType != nil {
		return *x.CreateType
	}
	return 0
}

func (x *CtmServicePartialUpdateRequest) GetServiceStatus() int32 {
	if x != nil && x.ServiceStatus != nil {
		return *x.ServiceStatus
	}
	return 0
}

func (x *CtmServicePartialUpdateRequest) GetTradeStatus() int32 {
	if x != nil && x.TradeStatus != nil {
		return *x.TradeStatus
	}
	return 0
}

func (x *CtmServicePartialUpdateRequest) GetPayStatus() int32 {
	if x != nil && x.PayStatus != nil {
		return *x.PayStatus
	}
	return 0
}

func (x *CtmServicePartialUpdateRequest) GetPayTime() string {
	if x != nil && x.PayTime != nil {
		return *x.PayTime
	}
	return ""
}

func (x *CtmServicePartialUpdateRequest) GetDeliveryTerm() int32 {
	if x != nil && x.DeliveryTerm != nil {
		return *x.DeliveryTerm
	}
	return 0
}

func (x *CtmServicePartialUpdateRequest) GetBuyerNick() string {
	if x != nil && x.BuyerNick != nil {
		return *x.BuyerNick
	}
	return ""
}

func (x *CtmServicePartialUpdateRequest) GetBuyerMobile() string {
	if x != nil && x.BuyerMobile != nil {
		return *x.BuyerMobile
	}
	return ""
}

func (x *CtmServicePartialUpdateRequest) GetBuyerMessage() string {
	if x != nil && x.BuyerMessage != nil {
		return *x.BuyerMessage
	}
	return ""
}

func (x *CtmServicePartialUpdateRequest) GetSellerName() string {
	if x != nil && x.SellerName != nil {
		return *x.SellerName
	}
	return ""
}

func (x *CtmServicePartialUpdateRequest) GetSellerMemo() string {
	if x != nil && x.SellerMemo != nil {
		return *x.SellerMemo
	}
	return ""
}

func (x *CtmServicePartialUpdateRequest) GetShopNo() string {
	if x != nil && x.ShopNo != nil {
		return *x.ShopNo
	}
	return ""
}

func (x *CtmServicePartialUpdateRequest) GetShopName() string {
	if x != nil && x.ShopName != nil {
		return *x.ShopName
	}
	return ""
}

func (x *CtmServicePartialUpdateRequest) GetWarehouseNo() string {
	if x != nil && x.WarehouseNo != nil {
		return *x.WarehouseNo
	}
	return ""
}

func (x *CtmServicePartialUpdateRequest) GetWarehouseName() string {
	if x != nil && x.WarehouseName != nil {
		return *x.WarehouseName
	}
	return ""
}

func (x *CtmServicePartialUpdateRequest) GetReceiverName() string {
	if x != nil && x.ReceiverName != nil {
		return *x.ReceiverName
	}
	return ""
}

func (x *CtmServicePartialUpdateRequest) GetReceiverProvince() string {
	if x != nil && x.ReceiverProvince != nil {
		return *x.ReceiverProvince
	}
	return ""
}

func (x *CtmServicePartialUpdateRequest) GetReceiverCity() string {
	if x != nil && x.ReceiverCity != nil {
		return *x.ReceiverCity
	}
	return ""
}

func (x *CtmServicePartialUpdateRequest) GetReceiverDistrict() string {
	if x != nil && x.ReceiverDistrict != nil {
		return *x.ReceiverDistrict
	}
	return ""
}

func (x *CtmServicePartialUpdateRequest) GetReceiverAddress() string {
	if x != nil && x.ReceiverAddress != nil {
		return *x.ReceiverAddress
	}
	return ""
}

func (x *CtmServicePartialUpdateRequest) GetReceiverMobile() string {
	if x != nil && x.ReceiverMobile != nil {
		return *x.ReceiverMobile
	}
	return ""
}

func (x *CtmServicePartialUpdateRequest) GetPostAmount() float64 {
	if x != nil && x.PostAmount != nil {
		return *x.PostAmount
	}
	return 0
}

func (x *CtmServicePartialUpdateRequest) GetOtherAmount() float64 {
	if x != nil && x.OtherAmount != nil {
		return *x.OtherAmount
	}
	return 0
}

func (x *CtmServicePartialUpdateRequest) GetExtCodFee() float64 {
	if x != nil && x.ExtCodFee != nil {
		return *x.ExtCodFee
	}
	return 0
}

func (x *CtmServicePartialUpdateRequest) GetPaid() float64 {
	if x != nil && x.Paid != nil {
		return *x.Paid
	}
	return 0
}

func (x *CtmServicePartialUpdateRequest) GetCodAmount() float64 {
	if x != nil && x.CodAmount != nil {
		return *x.CodAmount
	}
	return 0
}

func (x *CtmServicePartialUpdateRequest) GetReceivable() float64 {
	if x != nil && x.Receivable != nil {
		return *x.Receivable
	}
	return 0
}

func (x *CtmServicePartialUpdateRequest) GetDiscount() float64 {
	if x != nil && x.Discount != nil {
		return *x.Discount
	}
	return 0
}

func (x *CtmServicePartialUpdateRequest) GetInvoiceStatus() int32 {
	if x != nil && x.InvoiceStatus != nil {
		return *x.InvoiceStatus
	}
	return 0
}

func (x *CtmServicePartialUpdateRequest) GetLogisticsInName() string {
	if x != nil && x.LogisticsInName != nil {
		return *x.LogisticsInName
	}
	return ""
}

func (x *CtmServicePartialUpdateRequest) GetLogisticsInCode() string {
	if x != nil && x.LogisticsInCode != nil {
		return *x.LogisticsInCode
	}
	return ""
}

func (x *CtmServicePartialUpdateRequest) GetLogisticsInNo() string {
	if x != nil && x.LogisticsInNo != nil {
		return *x.LogisticsInNo
	}
	return ""
}

func (x *CtmServicePartialUpdateRequest) GetWarehouseInNo() string {
	if x != nil && x.WarehouseInNo != nil {
		return *x.WarehouseInNo
	}
	return ""
}

func (x *CtmServicePartialUpdateRequest) GetWarehouseInName() string {
	if x != nil && x.WarehouseInName != nil {
		return *x.WarehouseInName
	}
	return ""
}

func (x *CtmServicePartialUpdateRequest) GetCtm() int64 {
	if x != nil && x.Ctm != nil {
		return *x.Ctm
	}
	return 0
}

func (x *CtmServicePartialUpdateRequest) GetInvoiceContent() *ServiceGoodsInvoiceRequest {
	if x != nil {
		return x.InvoiceContent
	}
	return nil
}

func (x *CtmServicePartialUpdateRequest) GetApproveReasons() string {
	if x != nil && x.ApproveReasons != nil {
		return *x.ApproveReasons
	}
	return ""
}

func (x *CtmServicePartialUpdateRequest) GetRejectReasons() string {
	if x != nil && x.RejectReasons != nil {
		return *x.RejectReasons
	}
	return ""
}

func (x *CtmServicePartialUpdateRequest) GetCancelReasons() string {
	if x != nil && x.CancelReasons != nil {
		return *x.CancelReasons
	}
	return ""
}

type CtmServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int32                         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Filters          string                        `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
	RepairContent    *ObjectRepairRequest          `protobuf:"bytes,3,opt,name=repair_content,json=repairContent,proto3,oneof" json:"repair_content,omitempty"`
	SwapContent      *ObjectSwapRequest            `protobuf:"bytes,4,opt,name=swap_content,json=swapContent,proto3,oneof" json:"swap_content,omitempty"`
	TailorContent    *ObjectTailorRequest          `protobuf:"bytes,5,opt,name=tailor_content,json=tailorContent,proto3,oneof" json:"tailor_content,omitempty"`
	ComplainContent  *ObjectComplainRequest        `protobuf:"bytes,6,opt,name=complain_content,json=complainContent,proto3,oneof" json:"complain_content,omitempty"`
	FeedbackContent  *ObjectFeedbackRequest        `protobuf:"bytes,7,opt,name=feedback_content,json=feedbackContent,proto3,oneof" json:"feedback_content,omitempty"`
	TradeInContent   *ObjectTradeInRequest         `protobuf:"bytes,8,opt,name=trade_in_content,json=tradeInContent,proto3,oneof" json:"trade_in_content,omitempty"`
	ReturnList       []*ServiceGoodsReturnRequest  `protobuf:"bytes,9,rep,name=return_list,json=returnList,proto3" json:"return_list,omitempty"`
	SwapList         []*ServiceGoodsDeliverRequest `protobuf:"bytes,10,rep,name=swap_list,json=swapList,proto3" json:"swap_list,omitempty"`
	PayContent       *ServiceGoodsPayRequest       `protobuf:"bytes,11,opt,name=pay_content,json=payContent,proto3,oneof" json:"pay_content,omitempty"`
	CreateName       *string                       `protobuf:"bytes,12,opt,name=create_name,json=createName,proto3,oneof" json:"create_name,omitempty"`
	ApproveTime      *string                       `protobuf:"bytes,13,opt,name=approve_time,json=approveTime,proto3,oneof" json:"approve_time,omitempty"`
	ApproveName      *string                       `protobuf:"bytes,14,opt,name=approve_name,json=approveName,proto3,oneof" json:"approve_name,omitempty"`
	Sid              string                        `protobuf:"bytes,15,opt,name=sid,proto3" json:"sid,omitempty"`
	TradeType        *int32                        `protobuf:"varint,16,opt,name=trade_type,json=tradeType,proto3,oneof" json:"trade_type,omitempty"`
	Type             *int32                        `protobuf:"varint,17,opt,name=type,proto3,oneof" json:"type,omitempty"`
	CreateType       *int32                        `protobuf:"varint,18,opt,name=create_type,json=createType,proto3,oneof" json:"create_type,omitempty"`
	ServiceStatus    *int32                        `protobuf:"varint,19,opt,name=service_status,json=serviceStatus,proto3,oneof" json:"service_status,omitempty"`
	TradeStatus      *int32                        `protobuf:"varint,20,opt,name=trade_status,json=tradeStatus,proto3,oneof" json:"trade_status,omitempty"`
	PayStatus        *int32                        `protobuf:"varint,21,opt,name=pay_status,json=payStatus,proto3,oneof" json:"pay_status,omitempty"`
	PayTime          *string                       `protobuf:"bytes,22,opt,name=pay_time,json=payTime,proto3,oneof" json:"pay_time,omitempty"`
	DeliveryTerm     *int32                        `protobuf:"varint,23,opt,name=delivery_term,json=deliveryTerm,proto3,oneof" json:"delivery_term,omitempty"`
	BuyerNick        *string                       `protobuf:"bytes,24,opt,name=buyer_nick,json=buyerNick,proto3,oneof" json:"buyer_nick,omitempty"`
	BuyerMobile      *string                       `protobuf:"bytes,25,opt,name=buyer_mobile,json=buyerMobile,proto3,oneof" json:"buyer_mobile,omitempty"`
	BuyerMessage     *string                       `protobuf:"bytes,26,opt,name=buyer_message,json=buyerMessage,proto3,oneof" json:"buyer_message,omitempty"`
	SellerName       *string                       `protobuf:"bytes,27,opt,name=seller_name,json=sellerName,proto3,oneof" json:"seller_name,omitempty"`
	SellerMemo       *string                       `protobuf:"bytes,28,opt,name=seller_memo,json=sellerMemo,proto3,oneof" json:"seller_memo,omitempty"`
	ShopNo           *string                       `protobuf:"bytes,29,opt,name=shop_no,json=shopNo,proto3,oneof" json:"shop_no,omitempty"`
	ShopName         *string                       `protobuf:"bytes,30,opt,name=shop_name,json=shopName,proto3,oneof" json:"shop_name,omitempty"`
	WarehouseNo      *string                       `protobuf:"bytes,31,opt,name=warehouse_no,json=warehouseNo,proto3,oneof" json:"warehouse_no,omitempty"`
	WarehouseName    *string                       `protobuf:"bytes,32,opt,name=warehouse_name,json=warehouseName,proto3,oneof" json:"warehouse_name,omitempty"`
	ReceiverName     *string                       `protobuf:"bytes,33,opt,name=receiver_name,json=receiverName,proto3,oneof" json:"receiver_name,omitempty"`
	ReceiverProvince *string                       `protobuf:"bytes,34,opt,name=receiver_province,json=receiverProvince,proto3,oneof" json:"receiver_province,omitempty"`
	ReceiverCity     *string                       `protobuf:"bytes,35,opt,name=receiver_city,json=receiverCity,proto3,oneof" json:"receiver_city,omitempty"`
	ReceiverDistrict *string                       `protobuf:"bytes,36,opt,name=receiver_district,json=receiverDistrict,proto3,oneof" json:"receiver_district,omitempty"`
	ReceiverAddress  *string                       `protobuf:"bytes,37,opt,name=receiver_address,json=receiverAddress,proto3,oneof" json:"receiver_address,omitempty"`
	ReceiverMobile   *string                       `protobuf:"bytes,38,opt,name=receiver_mobile,json=receiverMobile,proto3,oneof" json:"receiver_mobile,omitempty"`
	PostAmount       *float64                      `protobuf:"fixed64,39,opt,name=post_amount,json=postAmount,proto3,oneof" json:"post_amount,omitempty"`
	OtherAmount      *float64                      `protobuf:"fixed64,40,opt,name=other_amount,json=otherAmount,proto3,oneof" json:"other_amount,omitempty"`
	ExtCodFee        *float64                      `protobuf:"fixed64,41,opt,name=ext_cod_fee,json=extCodFee,proto3,oneof" json:"ext_cod_fee,omitempty"`
	Paid             *float64                      `protobuf:"fixed64,42,opt,name=paid,proto3,oneof" json:"paid,omitempty"`
	CodAmount        *float64                      `protobuf:"fixed64,43,opt,name=cod_amount,json=codAmount,proto3,oneof" json:"cod_amount,omitempty"`
	Receivable       *float64                      `protobuf:"fixed64,44,opt,name=receivable,proto3,oneof" json:"receivable,omitempty"`
	Discount         *float64                      `protobuf:"fixed64,45,opt,name=discount,proto3,oneof" json:"discount,omitempty"`
	InvoiceStatus    *int32                        `protobuf:"varint,46,opt,name=invoice_status,json=invoiceStatus,proto3,oneof" json:"invoice_status,omitempty"`
	LogisticsInName  *string                       `protobuf:"bytes,49,opt,name=logistics_in_name,json=logisticsInName,proto3,oneof" json:"logistics_in_name,omitempty"`
	LogisticsInCode  *string                       `protobuf:"bytes,50,opt,name=logistics_in_code,json=logisticsInCode,proto3,oneof" json:"logistics_in_code,omitempty"`
	LogisticsInNo    *string                       `protobuf:"bytes,51,opt,name=logistics_in_no,json=logisticsInNo,proto3,oneof" json:"logistics_in_no,omitempty"`
	WarehouseInNo    *string                       `protobuf:"bytes,52,opt,name=warehouse_in_no,json=warehouseInNo,proto3,oneof" json:"warehouse_in_no,omitempty"`
	WarehouseInName  *string                       `protobuf:"bytes,53,opt,name=warehouse_in_name,json=warehouseInName,proto3,oneof" json:"warehouse_in_name,omitempty"`
	Ctm              *int64                        `protobuf:"varint,54,opt,name=ctm,proto3,oneof" json:"ctm,omitempty"`
	InvoiceContent   *ServiceGoodsInvoiceRequest   `protobuf:"bytes,55,opt,name=invoice_content,json=invoiceContent,proto3,oneof" json:"invoice_content,omitempty"`
	ApproveReasons   *string                       `protobuf:"bytes,56,opt,name=approve_reasons,json=approveReasons,proto3,oneof" json:"approve_reasons,omitempty"`
	RejectReasons    *string                       `protobuf:"bytes,57,opt,name=reject_reasons,json=rejectReasons,proto3,oneof" json:"reject_reasons,omitempty"`
	CancelReasons    *string                       `protobuf:"bytes,58,opt,name=cancel_reasons,json=cancelReasons,proto3,oneof" json:"cancel_reasons,omitempty"`
}

func (x *CtmServiceRequest) Reset() {
	*x = CtmServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmServiceRequest) ProtoMessage() {}

func (x *CtmServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmServiceRequest.ProtoReflect.Descriptor instead.
func (*CtmServiceRequest) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{18}
}

func (x *CtmServiceRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CtmServiceRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *CtmServiceRequest) GetRepairContent() *ObjectRepairRequest {
	if x != nil {
		return x.RepairContent
	}
	return nil
}

func (x *CtmServiceRequest) GetSwapContent() *ObjectSwapRequest {
	if x != nil {
		return x.SwapContent
	}
	return nil
}

func (x *CtmServiceRequest) GetTailorContent() *ObjectTailorRequest {
	if x != nil {
		return x.TailorContent
	}
	return nil
}

func (x *CtmServiceRequest) GetComplainContent() *ObjectComplainRequest {
	if x != nil {
		return x.ComplainContent
	}
	return nil
}

func (x *CtmServiceRequest) GetFeedbackContent() *ObjectFeedbackRequest {
	if x != nil {
		return x.FeedbackContent
	}
	return nil
}

func (x *CtmServiceRequest) GetTradeInContent() *ObjectTradeInRequest {
	if x != nil {
		return x.TradeInContent
	}
	return nil
}

func (x *CtmServiceRequest) GetReturnList() []*ServiceGoodsReturnRequest {
	if x != nil {
		return x.ReturnList
	}
	return nil
}

func (x *CtmServiceRequest) GetSwapList() []*ServiceGoodsDeliverRequest {
	if x != nil {
		return x.SwapList
	}
	return nil
}

func (x *CtmServiceRequest) GetPayContent() *ServiceGoodsPayRequest {
	if x != nil {
		return x.PayContent
	}
	return nil
}

func (x *CtmServiceRequest) GetCreateName() string {
	if x != nil && x.CreateName != nil {
		return *x.CreateName
	}
	return ""
}

func (x *CtmServiceRequest) GetApproveTime() string {
	if x != nil && x.ApproveTime != nil {
		return *x.ApproveTime
	}
	return ""
}

func (x *CtmServiceRequest) GetApproveName() string {
	if x != nil && x.ApproveName != nil {
		return *x.ApproveName
	}
	return ""
}

func (x *CtmServiceRequest) GetSid() string {
	if x != nil {
		return x.Sid
	}
	return ""
}

func (x *CtmServiceRequest) GetTradeType() int32 {
	if x != nil && x.TradeType != nil {
		return *x.TradeType
	}
	return 0
}

func (x *CtmServiceRequest) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *CtmServiceRequest) GetCreateType() int32 {
	if x != nil && x.CreateType != nil {
		return *x.CreateType
	}
	return 0
}

func (x *CtmServiceRequest) GetServiceStatus() int32 {
	if x != nil && x.ServiceStatus != nil {
		return *x.ServiceStatus
	}
	return 0
}

func (x *CtmServiceRequest) GetTradeStatus() int32 {
	if x != nil && x.TradeStatus != nil {
		return *x.TradeStatus
	}
	return 0
}

func (x *CtmServiceRequest) GetPayStatus() int32 {
	if x != nil && x.PayStatus != nil {
		return *x.PayStatus
	}
	return 0
}

func (x *CtmServiceRequest) GetPayTime() string {
	if x != nil && x.PayTime != nil {
		return *x.PayTime
	}
	return ""
}

func (x *CtmServiceRequest) GetDeliveryTerm() int32 {
	if x != nil && x.DeliveryTerm != nil {
		return *x.DeliveryTerm
	}
	return 0
}

func (x *CtmServiceRequest) GetBuyerNick() string {
	if x != nil && x.BuyerNick != nil {
		return *x.BuyerNick
	}
	return ""
}

func (x *CtmServiceRequest) GetBuyerMobile() string {
	if x != nil && x.BuyerMobile != nil {
		return *x.BuyerMobile
	}
	return ""
}

func (x *CtmServiceRequest) GetBuyerMessage() string {
	if x != nil && x.BuyerMessage != nil {
		return *x.BuyerMessage
	}
	return ""
}

func (x *CtmServiceRequest) GetSellerName() string {
	if x != nil && x.SellerName != nil {
		return *x.SellerName
	}
	return ""
}

func (x *CtmServiceRequest) GetSellerMemo() string {
	if x != nil && x.SellerMemo != nil {
		return *x.SellerMemo
	}
	return ""
}

func (x *CtmServiceRequest) GetShopNo() string {
	if x != nil && x.ShopNo != nil {
		return *x.ShopNo
	}
	return ""
}

func (x *CtmServiceRequest) GetShopName() string {
	if x != nil && x.ShopName != nil {
		return *x.ShopName
	}
	return ""
}

func (x *CtmServiceRequest) GetWarehouseNo() string {
	if x != nil && x.WarehouseNo != nil {
		return *x.WarehouseNo
	}
	return ""
}

func (x *CtmServiceRequest) GetWarehouseName() string {
	if x != nil && x.WarehouseName != nil {
		return *x.WarehouseName
	}
	return ""
}

func (x *CtmServiceRequest) GetReceiverName() string {
	if x != nil && x.ReceiverName != nil {
		return *x.ReceiverName
	}
	return ""
}

func (x *CtmServiceRequest) GetReceiverProvince() string {
	if x != nil && x.ReceiverProvince != nil {
		return *x.ReceiverProvince
	}
	return ""
}

func (x *CtmServiceRequest) GetReceiverCity() string {
	if x != nil && x.ReceiverCity != nil {
		return *x.ReceiverCity
	}
	return ""
}

func (x *CtmServiceRequest) GetReceiverDistrict() string {
	if x != nil && x.ReceiverDistrict != nil {
		return *x.ReceiverDistrict
	}
	return ""
}

func (x *CtmServiceRequest) GetReceiverAddress() string {
	if x != nil && x.ReceiverAddress != nil {
		return *x.ReceiverAddress
	}
	return ""
}

func (x *CtmServiceRequest) GetReceiverMobile() string {
	if x != nil && x.ReceiverMobile != nil {
		return *x.ReceiverMobile
	}
	return ""
}

func (x *CtmServiceRequest) GetPostAmount() float64 {
	if x != nil && x.PostAmount != nil {
		return *x.PostAmount
	}
	return 0
}

func (x *CtmServiceRequest) GetOtherAmount() float64 {
	if x != nil && x.OtherAmount != nil {
		return *x.OtherAmount
	}
	return 0
}

func (x *CtmServiceRequest) GetExtCodFee() float64 {
	if x != nil && x.ExtCodFee != nil {
		return *x.ExtCodFee
	}
	return 0
}

func (x *CtmServiceRequest) GetPaid() float64 {
	if x != nil && x.Paid != nil {
		return *x.Paid
	}
	return 0
}

func (x *CtmServiceRequest) GetCodAmount() float64 {
	if x != nil && x.CodAmount != nil {
		return *x.CodAmount
	}
	return 0
}

func (x *CtmServiceRequest) GetReceivable() float64 {
	if x != nil && x.Receivable != nil {
		return *x.Receivable
	}
	return 0
}

func (x *CtmServiceRequest) GetDiscount() float64 {
	if x != nil && x.Discount != nil {
		return *x.Discount
	}
	return 0
}

func (x *CtmServiceRequest) GetInvoiceStatus() int32 {
	if x != nil && x.InvoiceStatus != nil {
		return *x.InvoiceStatus
	}
	return 0
}

func (x *CtmServiceRequest) GetLogisticsInName() string {
	if x != nil && x.LogisticsInName != nil {
		return *x.LogisticsInName
	}
	return ""
}

func (x *CtmServiceRequest) GetLogisticsInCode() string {
	if x != nil && x.LogisticsInCode != nil {
		return *x.LogisticsInCode
	}
	return ""
}

func (x *CtmServiceRequest) GetLogisticsInNo() string {
	if x != nil && x.LogisticsInNo != nil {
		return *x.LogisticsInNo
	}
	return ""
}

func (x *CtmServiceRequest) GetWarehouseInNo() string {
	if x != nil && x.WarehouseInNo != nil {
		return *x.WarehouseInNo
	}
	return ""
}

func (x *CtmServiceRequest) GetWarehouseInName() string {
	if x != nil && x.WarehouseInName != nil {
		return *x.WarehouseInName
	}
	return ""
}

func (x *CtmServiceRequest) GetCtm() int64 {
	if x != nil && x.Ctm != nil {
		return *x.Ctm
	}
	return 0
}

func (x *CtmServiceRequest) GetInvoiceContent() *ServiceGoodsInvoiceRequest {
	if x != nil {
		return x.InvoiceContent
	}
	return nil
}

func (x *CtmServiceRequest) GetApproveReasons() string {
	if x != nil && x.ApproveReasons != nil {
		return *x.ApproveReasons
	}
	return ""
}

func (x *CtmServiceRequest) GetRejectReasons() string {
	if x != nil && x.RejectReasons != nil {
		return *x.RejectReasons
	}
	return ""
}

func (x *CtmServiceRequest) GetCancelReasons() string {
	if x != nil && x.CancelReasons != nil {
		return *x.CancelReasons
	}
	return ""
}

type CtmServiceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  int32                          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TradeTypeName       string                         `protobuf:"bytes,2,opt,name=trade_type_name,json=tradeTypeName,proto3" json:"trade_type_name,omitempty"`
	TypeName            string                         `protobuf:"bytes,3,opt,name=type_name,json=typeName,proto3" json:"type_name,omitempty"`
	CreateTypeName      string                         `protobuf:"bytes,4,opt,name=create_type_name,json=createTypeName,proto3" json:"create_type_name,omitempty"`
	ServiceStatusName   string                         `protobuf:"bytes,5,opt,name=service_status_name,json=serviceStatusName,proto3" json:"service_status_name,omitempty"`
	InvoiceStatusName   string                         `protobuf:"bytes,6,opt,name=invoice_status_name,json=invoiceStatusName,proto3" json:"invoice_status_name,omitempty"`
	CtmNickname         string                         `protobuf:"bytes,7,opt,name=ctm_nickname,json=ctmNickname,proto3" json:"ctm_nickname,omitempty"`
	CtmMobile           string                         `protobuf:"bytes,8,opt,name=ctm_mobile,json=ctmMobile,proto3" json:"ctm_mobile,omitempty"`
	CtmOpenId           string                         `protobuf:"bytes,9,opt,name=ctm_openId,json=ctmOpenId,proto3" json:"ctm_openId,omitempty"`
	RepairDetails       []*ObjectRepairResponse        `protobuf:"bytes,10,rep,name=repair_details,json=repairDetails,proto3" json:"repair_details,omitempty"`
	SwapDetails         []*ObjectSwapResponse          `protobuf:"bytes,11,rep,name=swap_details,json=swapDetails,proto3" json:"swap_details,omitempty"`
	TailorDetails       []*ObjectTailorResponse        `protobuf:"bytes,12,rep,name=tailor_details,json=tailorDetails,proto3" json:"tailor_details,omitempty"`
	ComplainDetails     []*ObjectComplainResponse      `protobuf:"bytes,13,rep,name=complain_details,json=complainDetails,proto3" json:"complain_details,omitempty"`
	FeedbackDetails     []*ObjectFeedbackResponse      `protobuf:"bytes,14,rep,name=feedback_details,json=feedbackDetails,proto3" json:"feedback_details,omitempty"`
	TradeInDetails      []*ObjectTradeInResponse       `protobuf:"bytes,15,rep,name=trade_in_details,json=tradeInDetails,proto3" json:"trade_in_details,omitempty"`
	SwapGoodsDetails    []*ServiceGoodsDeliverResponse `protobuf:"bytes,16,rep,name=swap_goods_details,json=swapGoodsDetails,proto3" json:"swap_goods_details,omitempty"`
	ReturnGoodsDetails  []*ServiceGoodsReturnResponse  `protobuf:"bytes,17,rep,name=return_goods_details,json=returnGoodsDetails,proto3" json:"return_goods_details,omitempty"`
	OrderPayDetails     []*ServiceGoodsPayResponse     `protobuf:"bytes,18,rep,name=order_pay_details,json=orderPayDetails,proto3" json:"order_pay_details,omitempty"`
	CreateTime          string                         `protobuf:"bytes,19,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime          string                         `protobuf:"bytes,20,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	CreateName          *string                        `protobuf:"bytes,21,opt,name=create_name,json=createName,proto3,oneof" json:"create_name,omitempty"`
	ApproveTime         *string                        `protobuf:"bytes,22,opt,name=approve_time,json=approveTime,proto3,oneof" json:"approve_time,omitempty"`
	ApproveName         *string                        `protobuf:"bytes,23,opt,name=approve_name,json=approveName,proto3,oneof" json:"approve_name,omitempty"`
	Sid                 string                         `protobuf:"bytes,24,opt,name=sid,proto3" json:"sid,omitempty"`
	TradeType           *int32                         `protobuf:"varint,25,opt,name=trade_type,json=tradeType,proto3,oneof" json:"trade_type,omitempty"`
	Type                *int32                         `protobuf:"varint,26,opt,name=type,proto3,oneof" json:"type,omitempty"`
	CreateType          *int32                         `protobuf:"varint,27,opt,name=create_type,json=createType,proto3,oneof" json:"create_type,omitempty"`
	ServiceStatus       *int32                         `protobuf:"varint,28,opt,name=service_status,json=serviceStatus,proto3,oneof" json:"service_status,omitempty"`
	TradeStatus         *int32                         `protobuf:"varint,29,opt,name=trade_status,json=tradeStatus,proto3,oneof" json:"trade_status,omitempty"`
	PayStatus           *int32                         `protobuf:"varint,30,opt,name=pay_status,json=payStatus,proto3,oneof" json:"pay_status,omitempty"`
	PayTime             *string                        `protobuf:"bytes,31,opt,name=pay_time,json=payTime,proto3,oneof" json:"pay_time,omitempty"`
	DeliveryTerm        *int32                         `protobuf:"varint,32,opt,name=delivery_term,json=deliveryTerm,proto3,oneof" json:"delivery_term,omitempty"`
	BuyerNick           *string                        `protobuf:"bytes,33,opt,name=buyer_nick,json=buyerNick,proto3,oneof" json:"buyer_nick,omitempty"`
	BuyerMobile         *string                        `protobuf:"bytes,34,opt,name=buyer_mobile,json=buyerMobile,proto3,oneof" json:"buyer_mobile,omitempty"`
	BuyerMessage        *string                        `protobuf:"bytes,35,opt,name=buyer_message,json=buyerMessage,proto3,oneof" json:"buyer_message,omitempty"`
	SellerName          *string                        `protobuf:"bytes,36,opt,name=seller_name,json=sellerName,proto3,oneof" json:"seller_name,omitempty"`
	SellerMemo          *string                        `protobuf:"bytes,37,opt,name=seller_memo,json=sellerMemo,proto3,oneof" json:"seller_memo,omitempty"`
	ShopNo              *string                        `protobuf:"bytes,38,opt,name=shop_no,json=shopNo,proto3,oneof" json:"shop_no,omitempty"`
	ShopName            *string                        `protobuf:"bytes,39,opt,name=shop_name,json=shopName,proto3,oneof" json:"shop_name,omitempty"`
	WarehouseNo         *string                        `protobuf:"bytes,40,opt,name=warehouse_no,json=warehouseNo,proto3,oneof" json:"warehouse_no,omitempty"`
	WarehouseName       *string                        `protobuf:"bytes,41,opt,name=warehouse_name,json=warehouseName,proto3,oneof" json:"warehouse_name,omitempty"`
	ReceiverName        *string                        `protobuf:"bytes,42,opt,name=receiver_name,json=receiverName,proto3,oneof" json:"receiver_name,omitempty"`
	ReceiverProvince    *string                        `protobuf:"bytes,43,opt,name=receiver_province,json=receiverProvince,proto3,oneof" json:"receiver_province,omitempty"`
	ReceiverCity        *string                        `protobuf:"bytes,44,opt,name=receiver_city,json=receiverCity,proto3,oneof" json:"receiver_city,omitempty"`
	ReceiverDistrict    *string                        `protobuf:"bytes,45,opt,name=receiver_district,json=receiverDistrict,proto3,oneof" json:"receiver_district,omitempty"`
	ReceiverAddress     *string                        `protobuf:"bytes,46,opt,name=receiver_address,json=receiverAddress,proto3,oneof" json:"receiver_address,omitempty"`
	ReceiverMobile      *string                        `protobuf:"bytes,47,opt,name=receiver_mobile,json=receiverMobile,proto3,oneof" json:"receiver_mobile,omitempty"`
	PostAmount          *float64                       `protobuf:"fixed64,48,opt,name=post_amount,json=postAmount,proto3,oneof" json:"post_amount,omitempty"`
	OtherAmount         *float64                       `protobuf:"fixed64,49,opt,name=other_amount,json=otherAmount,proto3,oneof" json:"other_amount,omitempty"`
	ExtCodFee           *float64                       `protobuf:"fixed64,50,opt,name=ext_cod_fee,json=extCodFee,proto3,oneof" json:"ext_cod_fee,omitempty"`
	Paid                *float64                       `protobuf:"fixed64,51,opt,name=paid,proto3,oneof" json:"paid,omitempty"`
	CodAmount           *float64                       `protobuf:"fixed64,52,opt,name=cod_amount,json=codAmount,proto3,oneof" json:"cod_amount,omitempty"`
	Receivable          *float64                       `protobuf:"fixed64,53,opt,name=receivable,proto3,oneof" json:"receivable,omitempty"`
	Discount            *float64                       `protobuf:"fixed64,54,opt,name=discount,proto3,oneof" json:"discount,omitempty"`
	InvoiceStatus       *int32                         `protobuf:"varint,55,opt,name=invoice_status,json=invoiceStatus,proto3,oneof" json:"invoice_status,omitempty"`
	LogisticsInName     *string                        `protobuf:"bytes,58,opt,name=logistics_in_name,json=logisticsInName,proto3,oneof" json:"logistics_in_name,omitempty"`
	LogisticsInCode     *string                        `protobuf:"bytes,59,opt,name=logistics_in_code,json=logisticsInCode,proto3,oneof" json:"logistics_in_code,omitempty"`
	LogisticsInNo       *string                        `protobuf:"bytes,60,opt,name=logistics_in_no,json=logisticsInNo,proto3,oneof" json:"logistics_in_no,omitempty"`
	WarehouseInNo       *string                        `protobuf:"bytes,61,opt,name=warehouse_in_no,json=warehouseInNo,proto3,oneof" json:"warehouse_in_no,omitempty"`
	WarehouseInName     *string                        `protobuf:"bytes,62,opt,name=warehouse_in_name,json=warehouseInName,proto3,oneof" json:"warehouse_in_name,omitempty"`
	Ctm                 *int64                         `protobuf:"varint,63,opt,name=ctm,proto3,oneof" json:"ctm,omitempty"`
	PayStatusName       string                         `protobuf:"bytes,64,opt,name=pay_status_name,json=payStatusName,proto3" json:"pay_status_name,omitempty"`
	DeliveryTermName    string                         `protobuf:"bytes,65,opt,name=delivery_term_name,json=deliveryTermName,proto3" json:"delivery_term_name,omitempty"`
	OrderInvoiceDetails []*ServiceGoodsInvoiceResponse `protobuf:"bytes,66,rep,name=order_invoice_details,json=orderInvoiceDetails,proto3" json:"order_invoice_details,omitempty"`
	TradeStatusName     string                         `protobuf:"bytes,67,opt,name=trade_status_name,json=tradeStatusName,proto3" json:"trade_status_name,omitempty"`
	ApproveReasons      *string                        `protobuf:"bytes,68,opt,name=approve_reasons,json=approveReasons,proto3,oneof" json:"approve_reasons,omitempty"`
	RejectReasons       *string                        `protobuf:"bytes,69,opt,name=reject_reasons,json=rejectReasons,proto3,oneof" json:"reject_reasons,omitempty"`
	CancelReasons       *string                        `protobuf:"bytes,70,opt,name=cancel_reasons,json=cancelReasons,proto3,oneof" json:"cancel_reasons,omitempty"`
}

func (x *CtmServiceResponse) Reset() {
	*x = CtmServiceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmServiceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmServiceResponse) ProtoMessage() {}

func (x *CtmServiceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmServiceResponse.ProtoReflect.Descriptor instead.
func (*CtmServiceResponse) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{19}
}

func (x *CtmServiceResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CtmServiceResponse) GetTradeTypeName() string {
	if x != nil {
		return x.TradeTypeName
	}
	return ""
}

func (x *CtmServiceResponse) GetTypeName() string {
	if x != nil {
		return x.TypeName
	}
	return ""
}

func (x *CtmServiceResponse) GetCreateTypeName() string {
	if x != nil {
		return x.CreateTypeName
	}
	return ""
}

func (x *CtmServiceResponse) GetServiceStatusName() string {
	if x != nil {
		return x.ServiceStatusName
	}
	return ""
}

func (x *CtmServiceResponse) GetInvoiceStatusName() string {
	if x != nil {
		return x.InvoiceStatusName
	}
	return ""
}

func (x *CtmServiceResponse) GetCtmNickname() string {
	if x != nil {
		return x.CtmNickname
	}
	return ""
}

func (x *CtmServiceResponse) GetCtmMobile() string {
	if x != nil {
		return x.CtmMobile
	}
	return ""
}

func (x *CtmServiceResponse) GetCtmOpenId() string {
	if x != nil {
		return x.CtmOpenId
	}
	return ""
}

func (x *CtmServiceResponse) GetRepairDetails() []*ObjectRepairResponse {
	if x != nil {
		return x.RepairDetails
	}
	return nil
}

func (x *CtmServiceResponse) GetSwapDetails() []*ObjectSwapResponse {
	if x != nil {
		return x.SwapDetails
	}
	return nil
}

func (x *CtmServiceResponse) GetTailorDetails() []*ObjectTailorResponse {
	if x != nil {
		return x.TailorDetails
	}
	return nil
}

func (x *CtmServiceResponse) GetComplainDetails() []*ObjectComplainResponse {
	if x != nil {
		return x.ComplainDetails
	}
	return nil
}

func (x *CtmServiceResponse) GetFeedbackDetails() []*ObjectFeedbackResponse {
	if x != nil {
		return x.FeedbackDetails
	}
	return nil
}

func (x *CtmServiceResponse) GetTradeInDetails() []*ObjectTradeInResponse {
	if x != nil {
		return x.TradeInDetails
	}
	return nil
}

func (x *CtmServiceResponse) GetSwapGoodsDetails() []*ServiceGoodsDeliverResponse {
	if x != nil {
		return x.SwapGoodsDetails
	}
	return nil
}

func (x *CtmServiceResponse) GetReturnGoodsDetails() []*ServiceGoodsReturnResponse {
	if x != nil {
		return x.ReturnGoodsDetails
	}
	return nil
}

func (x *CtmServiceResponse) GetOrderPayDetails() []*ServiceGoodsPayResponse {
	if x != nil {
		return x.OrderPayDetails
	}
	return nil
}

func (x *CtmServiceResponse) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *CtmServiceResponse) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *CtmServiceResponse) GetCreateName() string {
	if x != nil && x.CreateName != nil {
		return *x.CreateName
	}
	return ""
}

func (x *CtmServiceResponse) GetApproveTime() string {
	if x != nil && x.ApproveTime != nil {
		return *x.ApproveTime
	}
	return ""
}

func (x *CtmServiceResponse) GetApproveName() string {
	if x != nil && x.ApproveName != nil {
		return *x.ApproveName
	}
	return ""
}

func (x *CtmServiceResponse) GetSid() string {
	if x != nil {
		return x.Sid
	}
	return ""
}

func (x *CtmServiceResponse) GetTradeType() int32 {
	if x != nil && x.TradeType != nil {
		return *x.TradeType
	}
	return 0
}

func (x *CtmServiceResponse) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *CtmServiceResponse) GetCreateType() int32 {
	if x != nil && x.CreateType != nil {
		return *x.CreateType
	}
	return 0
}

func (x *CtmServiceResponse) GetServiceStatus() int32 {
	if x != nil && x.ServiceStatus != nil {
		return *x.ServiceStatus
	}
	return 0
}

func (x *CtmServiceResponse) GetTradeStatus() int32 {
	if x != nil && x.TradeStatus != nil {
		return *x.TradeStatus
	}
	return 0
}

func (x *CtmServiceResponse) GetPayStatus() int32 {
	if x != nil && x.PayStatus != nil {
		return *x.PayStatus
	}
	return 0
}

func (x *CtmServiceResponse) GetPayTime() string {
	if x != nil && x.PayTime != nil {
		return *x.PayTime
	}
	return ""
}

func (x *CtmServiceResponse) GetDeliveryTerm() int32 {
	if x != nil && x.DeliveryTerm != nil {
		return *x.DeliveryTerm
	}
	return 0
}

func (x *CtmServiceResponse) GetBuyerNick() string {
	if x != nil && x.BuyerNick != nil {
		return *x.BuyerNick
	}
	return ""
}

func (x *CtmServiceResponse) GetBuyerMobile() string {
	if x != nil && x.BuyerMobile != nil {
		return *x.BuyerMobile
	}
	return ""
}

func (x *CtmServiceResponse) GetBuyerMessage() string {
	if x != nil && x.BuyerMessage != nil {
		return *x.BuyerMessage
	}
	return ""
}

func (x *CtmServiceResponse) GetSellerName() string {
	if x != nil && x.SellerName != nil {
		return *x.SellerName
	}
	return ""
}

func (x *CtmServiceResponse) GetSellerMemo() string {
	if x != nil && x.SellerMemo != nil {
		return *x.SellerMemo
	}
	return ""
}

func (x *CtmServiceResponse) GetShopNo() string {
	if x != nil && x.ShopNo != nil {
		return *x.ShopNo
	}
	return ""
}

func (x *CtmServiceResponse) GetShopName() string {
	if x != nil && x.ShopName != nil {
		return *x.ShopName
	}
	return ""
}

func (x *CtmServiceResponse) GetWarehouseNo() string {
	if x != nil && x.WarehouseNo != nil {
		return *x.WarehouseNo
	}
	return ""
}

func (x *CtmServiceResponse) GetWarehouseName() string {
	if x != nil && x.WarehouseName != nil {
		return *x.WarehouseName
	}
	return ""
}

func (x *CtmServiceResponse) GetReceiverName() string {
	if x != nil && x.ReceiverName != nil {
		return *x.ReceiverName
	}
	return ""
}

func (x *CtmServiceResponse) GetReceiverProvince() string {
	if x != nil && x.ReceiverProvince != nil {
		return *x.ReceiverProvince
	}
	return ""
}

func (x *CtmServiceResponse) GetReceiverCity() string {
	if x != nil && x.ReceiverCity != nil {
		return *x.ReceiverCity
	}
	return ""
}

func (x *CtmServiceResponse) GetReceiverDistrict() string {
	if x != nil && x.ReceiverDistrict != nil {
		return *x.ReceiverDistrict
	}
	return ""
}

func (x *CtmServiceResponse) GetReceiverAddress() string {
	if x != nil && x.ReceiverAddress != nil {
		return *x.ReceiverAddress
	}
	return ""
}

func (x *CtmServiceResponse) GetReceiverMobile() string {
	if x != nil && x.ReceiverMobile != nil {
		return *x.ReceiverMobile
	}
	return ""
}

func (x *CtmServiceResponse) GetPostAmount() float64 {
	if x != nil && x.PostAmount != nil {
		return *x.PostAmount
	}
	return 0
}

func (x *CtmServiceResponse) GetOtherAmount() float64 {
	if x != nil && x.OtherAmount != nil {
		return *x.OtherAmount
	}
	return 0
}

func (x *CtmServiceResponse) GetExtCodFee() float64 {
	if x != nil && x.ExtCodFee != nil {
		return *x.ExtCodFee
	}
	return 0
}

func (x *CtmServiceResponse) GetPaid() float64 {
	if x != nil && x.Paid != nil {
		return *x.Paid
	}
	return 0
}

func (x *CtmServiceResponse) GetCodAmount() float64 {
	if x != nil && x.CodAmount != nil {
		return *x.CodAmount
	}
	return 0
}

func (x *CtmServiceResponse) GetReceivable() float64 {
	if x != nil && x.Receivable != nil {
		return *x.Receivable
	}
	return 0
}

func (x *CtmServiceResponse) GetDiscount() float64 {
	if x != nil && x.Discount != nil {
		return *x.Discount
	}
	return 0
}

func (x *CtmServiceResponse) GetInvoiceStatus() int32 {
	if x != nil && x.InvoiceStatus != nil {
		return *x.InvoiceStatus
	}
	return 0
}

func (x *CtmServiceResponse) GetLogisticsInName() string {
	if x != nil && x.LogisticsInName != nil {
		return *x.LogisticsInName
	}
	return ""
}

func (x *CtmServiceResponse) GetLogisticsInCode() string {
	if x != nil && x.LogisticsInCode != nil {
		return *x.LogisticsInCode
	}
	return ""
}

func (x *CtmServiceResponse) GetLogisticsInNo() string {
	if x != nil && x.LogisticsInNo != nil {
		return *x.LogisticsInNo
	}
	return ""
}

func (x *CtmServiceResponse) GetWarehouseInNo() string {
	if x != nil && x.WarehouseInNo != nil {
		return *x.WarehouseInNo
	}
	return ""
}

func (x *CtmServiceResponse) GetWarehouseInName() string {
	if x != nil && x.WarehouseInName != nil {
		return *x.WarehouseInName
	}
	return ""
}

func (x *CtmServiceResponse) GetCtm() int64 {
	if x != nil && x.Ctm != nil {
		return *x.Ctm
	}
	return 0
}

func (x *CtmServiceResponse) GetPayStatusName() string {
	if x != nil {
		return x.PayStatusName
	}
	return ""
}

func (x *CtmServiceResponse) GetDeliveryTermName() string {
	if x != nil {
		return x.DeliveryTermName
	}
	return ""
}

func (x *CtmServiceResponse) GetOrderInvoiceDetails() []*ServiceGoodsInvoiceResponse {
	if x != nil {
		return x.OrderInvoiceDetails
	}
	return nil
}

func (x *CtmServiceResponse) GetTradeStatusName() string {
	if x != nil {
		return x.TradeStatusName
	}
	return ""
}

func (x *CtmServiceResponse) GetApproveReasons() string {
	if x != nil && x.ApproveReasons != nil {
		return *x.ApproveReasons
	}
	return ""
}

func (x *CtmServiceResponse) GetRejectReasons() string {
	if x != nil && x.RejectReasons != nil {
		return *x.RejectReasons
	}
	return ""
}

func (x *CtmServiceResponse) GetCancelReasons() string {
	if x != nil && x.CancelReasons != nil {
		return *x.CancelReasons
	}
	return ""
}

type CtmServiceRetrieveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CtmServiceRetrieveRequest) Reset() {
	*x = CtmServiceRetrieveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CtmServiceRetrieveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CtmServiceRetrieveRequest) ProtoMessage() {}

func (x *CtmServiceRetrieveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CtmServiceRetrieveRequest.ProtoReflect.Descriptor instead.
func (*CtmServiceRetrieveRequest) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{20}
}

func (x *CtmServiceRetrieveRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DestroyGoodsDeliverRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DestroyGoodsDeliverRequest) Reset() {
	*x = DestroyGoodsDeliverRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DestroyGoodsDeliverRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DestroyGoodsDeliverRequest) ProtoMessage() {}

func (x *DestroyGoodsDeliverRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DestroyGoodsDeliverRequest.ProtoReflect.Descriptor instead.
func (*DestroyGoodsDeliverRequest) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{21}
}

func (x *DestroyGoodsDeliverRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DestroyGoodsInvoiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DestroyGoodsInvoiceRequest) Reset() {
	*x = DestroyGoodsInvoiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DestroyGoodsInvoiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DestroyGoodsInvoiceRequest) ProtoMessage() {}

func (x *DestroyGoodsInvoiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DestroyGoodsInvoiceRequest.ProtoReflect.Descriptor instead.
func (*DestroyGoodsInvoiceRequest) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{22}
}

func (x *DestroyGoodsInvoiceRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DestroyGoodsPayRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DestroyGoodsPayRequest) Reset() {
	*x = DestroyGoodsPayRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DestroyGoodsPayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DestroyGoodsPayRequest) ProtoMessage() {}

func (x *DestroyGoodsPayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DestroyGoodsPayRequest.ProtoReflect.Descriptor instead.
func (*DestroyGoodsPayRequest) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{23}
}

func (x *DestroyGoodsPayRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DestroyGoodsReturnRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DestroyGoodsReturnRequest) Reset() {
	*x = DestroyGoodsReturnRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DestroyGoodsReturnRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DestroyGoodsReturnRequest) ProtoMessage() {}

func (x *DestroyGoodsReturnRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DestroyGoodsReturnRequest.ProtoReflect.Descriptor instead.
func (*DestroyGoodsReturnRequest) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{24}
}

func (x *DestroyGoodsReturnRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DestroyObjectComplainRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DestroyObjectComplainRequest) Reset() {
	*x = DestroyObjectComplainRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DestroyObjectComplainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DestroyObjectComplainRequest) ProtoMessage() {}

func (x *DestroyObjectComplainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DestroyObjectComplainRequest.ProtoReflect.Descriptor instead.
func (*DestroyObjectComplainRequest) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{25}
}

func (x *DestroyObjectComplainRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DestroyObjectFeedbackRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DestroyObjectFeedbackRequest) Reset() {
	*x = DestroyObjectFeedbackRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DestroyObjectFeedbackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DestroyObjectFeedbackRequest) ProtoMessage() {}

func (x *DestroyObjectFeedbackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DestroyObjectFeedbackRequest.ProtoReflect.Descriptor instead.
func (*DestroyObjectFeedbackRequest) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{26}
}

func (x *DestroyObjectFeedbackRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DestroyObjectRepairRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DestroyObjectRepairRequest) Reset() {
	*x = DestroyObjectRepairRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DestroyObjectRepairRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DestroyObjectRepairRequest) ProtoMessage() {}

func (x *DestroyObjectRepairRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DestroyObjectRepairRequest.ProtoReflect.Descriptor instead.
func (*DestroyObjectRepairRequest) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{27}
}

func (x *DestroyObjectRepairRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DestroyObjectSwapRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DestroyObjectSwapRequest) Reset() {
	*x = DestroyObjectSwapRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DestroyObjectSwapRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DestroyObjectSwapRequest) ProtoMessage() {}

func (x *DestroyObjectSwapRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DestroyObjectSwapRequest.ProtoReflect.Descriptor instead.
func (*DestroyObjectSwapRequest) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{28}
}

func (x *DestroyObjectSwapRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DestroyObjectTailorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DestroyObjectTailorRequest) Reset() {
	*x = DestroyObjectTailorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DestroyObjectTailorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DestroyObjectTailorRequest) ProtoMessage() {}

func (x *DestroyObjectTailorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DestroyObjectTailorRequest.ProtoReflect.Descriptor instead.
func (*DestroyObjectTailorRequest) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{29}
}

func (x *DestroyObjectTailorRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DestroyObjectTradeInRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DestroyObjectTradeInRequest) Reset() {
	*x = DestroyObjectTradeInRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DestroyObjectTradeInRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DestroyObjectTradeInRequest) ProtoMessage() {}

func (x *DestroyObjectTradeInRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DestroyObjectTradeInRequest.ProtoReflect.Descriptor instead.
func (*DestroyObjectTradeInRequest) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{30}
}

func (x *DestroyObjectTradeInRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ListGoodsDeliverRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters string `protobuf:"bytes,1,opt,name=filters,proto3" json:"filters,omitempty"`
}

func (x *ListGoodsDeliverRequest) Reset() {
	*x = ListGoodsDeliverRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGoodsDeliverRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGoodsDeliverRequest) ProtoMessage() {}

func (x *ListGoodsDeliverRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGoodsDeliverRequest.ProtoReflect.Descriptor instead.
func (*ListGoodsDeliverRequest) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{31}
}

func (x *ListGoodsDeliverRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

type ListGoodsInvoiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters string `protobuf:"bytes,1,opt,name=filters,proto3" json:"filters,omitempty"`
}

func (x *ListGoodsInvoiceRequest) Reset() {
	*x = ListGoodsInvoiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGoodsInvoiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGoodsInvoiceRequest) ProtoMessage() {}

func (x *ListGoodsInvoiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGoodsInvoiceRequest.ProtoReflect.Descriptor instead.
func (*ListGoodsInvoiceRequest) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{32}
}

func (x *ListGoodsInvoiceRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

type ListGoodsPayRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters string `protobuf:"bytes,1,opt,name=filters,proto3" json:"filters,omitempty"`
}

func (x *ListGoodsPayRequest) Reset() {
	*x = ListGoodsPayRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGoodsPayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGoodsPayRequest) ProtoMessage() {}

func (x *ListGoodsPayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGoodsPayRequest.ProtoReflect.Descriptor instead.
func (*ListGoodsPayRequest) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{33}
}

func (x *ListGoodsPayRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

type ListGoodsReturnRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters string `protobuf:"bytes,1,opt,name=filters,proto3" json:"filters,omitempty"`
}

func (x *ListGoodsReturnRequest) Reset() {
	*x = ListGoodsReturnRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGoodsReturnRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGoodsReturnRequest) ProtoMessage() {}

func (x *ListGoodsReturnRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGoodsReturnRequest.ProtoReflect.Descriptor instead.
func (*ListGoodsReturnRequest) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{34}
}

func (x *ListGoodsReturnRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

type ListObjectComplainRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters string `protobuf:"bytes,1,opt,name=filters,proto3" json:"filters,omitempty"`
}

func (x *ListObjectComplainRequest) Reset() {
	*x = ListObjectComplainRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListObjectComplainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListObjectComplainRequest) ProtoMessage() {}

func (x *ListObjectComplainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListObjectComplainRequest.ProtoReflect.Descriptor instead.
func (*ListObjectComplainRequest) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{35}
}

func (x *ListObjectComplainRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

type ListObjectFeedbackRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters string `protobuf:"bytes,1,opt,name=filters,proto3" json:"filters,omitempty"`
}

func (x *ListObjectFeedbackRequest) Reset() {
	*x = ListObjectFeedbackRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListObjectFeedbackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListObjectFeedbackRequest) ProtoMessage() {}

func (x *ListObjectFeedbackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListObjectFeedbackRequest.ProtoReflect.Descriptor instead.
func (*ListObjectFeedbackRequest) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{36}
}

func (x *ListObjectFeedbackRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

type ListObjectRepairRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters string `protobuf:"bytes,1,opt,name=filters,proto3" json:"filters,omitempty"`
}

func (x *ListObjectRepairRequest) Reset() {
	*x = ListObjectRepairRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListObjectRepairRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListObjectRepairRequest) ProtoMessage() {}

func (x *ListObjectRepairRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListObjectRepairRequest.ProtoReflect.Descriptor instead.
func (*ListObjectRepairRequest) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{37}
}

func (x *ListObjectRepairRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

type ListObjectSwapRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters string `protobuf:"bytes,1,opt,name=filters,proto3" json:"filters,omitempty"`
}

func (x *ListObjectSwapRequest) Reset() {
	*x = ListObjectSwapRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListObjectSwapRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListObjectSwapRequest) ProtoMessage() {}

func (x *ListObjectSwapRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListObjectSwapRequest.ProtoReflect.Descriptor instead.
func (*ListObjectSwapRequest) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{38}
}

func (x *ListObjectSwapRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

type ListObjectTailorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters string `protobuf:"bytes,1,opt,name=filters,proto3" json:"filters,omitempty"`
}

func (x *ListObjectTailorRequest) Reset() {
	*x = ListObjectTailorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListObjectTailorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListObjectTailorRequest) ProtoMessage() {}

func (x *ListObjectTailorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListObjectTailorRequest.ProtoReflect.Descriptor instead.
func (*ListObjectTailorRequest) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{39}
}

func (x *ListObjectTailorRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

type ListObjectTradeInRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters string `protobuf:"bytes,1,opt,name=filters,proto3" json:"filters,omitempty"`
}

func (x *ListObjectTradeInRequest) Reset() {
	*x = ListObjectTradeInRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListObjectTradeInRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListObjectTradeInRequest) ProtoMessage() {}

func (x *ListObjectTradeInRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListObjectTradeInRequest.ProtoReflect.Descriptor instead.
func (*ListObjectTradeInRequest) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{40}
}

func (x *ListObjectTradeInRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

type ObjectComplainListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*ObjectComplainResponse `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Count   int32                     `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *ObjectComplainListResponse) Reset() {
	*x = ObjectComplainListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectComplainListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectComplainListResponse) ProtoMessage() {}

func (x *ObjectComplainListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectComplainListResponse.ProtoReflect.Descriptor instead.
func (*ObjectComplainListResponse) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{41}
}

func (x *ObjectComplainListResponse) GetResults() []*ObjectComplainResponse {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *ObjectComplainListResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ObjectComplainRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Filters         string  `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
	GoodsSpu        *string `protobuf:"bytes,3,opt,name=goods_spu,json=goodsSpu,proto3,oneof" json:"goods_spu,omitempty"`
	SpecNo          *string `protobuf:"bytes,4,opt,name=spec_no,json=specNo,proto3,oneof" json:"spec_no,omitempty"`
	RfidCode        *string `protobuf:"bytes,5,opt,name=rfid_code,json=rfidCode,proto3,oneof" json:"rfid_code,omitempty"`
	SecurityCode    *string `protobuf:"bytes,6,opt,name=security_code,json=securityCode,proto3,oneof" json:"security_code,omitempty"`
	PlatformOrder   *string `protobuf:"bytes,7,opt,name=platform_order,json=platformOrder,proto3,oneof" json:"platform_order,omitempty"`
	OmsOrder        *string `protobuf:"bytes,8,opt,name=oms_order,json=omsOrder,proto3,oneof" json:"oms_order,omitempty"`
	PlatformRefund  *string `protobuf:"bytes,9,opt,name=platform_refund,json=platformRefund,proto3,oneof" json:"platform_refund,omitempty"`
	OmsRefund       *string `protobuf:"bytes,10,opt,name=oms_refund,json=omsRefund,proto3,oneof" json:"oms_refund,omitempty"`
	ComplainDesc    *string `protobuf:"bytes,11,opt,name=complain_desc,json=complainDesc,proto3,oneof" json:"complain_desc,omitempty"`
	ServiceObject   *int64  `protobuf:"varint,12,opt,name=service_object,json=serviceObject,proto3,oneof" json:"service_object,omitempty"`
	GoodsId         *string `protobuf:"bytes,13,opt,name=goods_id,json=goodsId,proto3,oneof" json:"goods_id,omitempty"`
	GoodsName       *string `protobuf:"bytes,14,opt,name=goods_name,json=goodsName,proto3,oneof" json:"goods_name,omitempty"`
	PartsCode       *string `protobuf:"bytes,16,opt,name=parts_code,json=partsCode,proto3,oneof" json:"parts_code,omitempty"`
	PartsName       *string `protobuf:"bytes,17,opt,name=parts_name,json=partsName,proto3,oneof" json:"parts_name,omitempty"`
	MediaPath       *string `protobuf:"bytes,18,opt,name=media_path,json=mediaPath,proto3,oneof" json:"media_path,omitempty"`
	ComplainReasons *string `protobuf:"bytes,19,opt,name=complain_reasons,json=complainReasons,proto3,oneof" json:"complain_reasons,omitempty"`
	SpecName        *string `protobuf:"bytes,20,opt,name=spec_name,json=specName,proto3,oneof" json:"spec_name,omitempty"`
	GoodsNo         *string `protobuf:"bytes,21,opt,name=goods_no,json=goodsNo,proto3,oneof" json:"goods_no,omitempty"`
}

func (x *ObjectComplainRequest) Reset() {
	*x = ObjectComplainRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectComplainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectComplainRequest) ProtoMessage() {}

func (x *ObjectComplainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectComplainRequest.ProtoReflect.Descriptor instead.
func (*ObjectComplainRequest) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{42}
}

func (x *ObjectComplainRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ObjectComplainRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *ObjectComplainRequest) GetGoodsSpu() string {
	if x != nil && x.GoodsSpu != nil {
		return *x.GoodsSpu
	}
	return ""
}

func (x *ObjectComplainRequest) GetSpecNo() string {
	if x != nil && x.SpecNo != nil {
		return *x.SpecNo
	}
	return ""
}

func (x *ObjectComplainRequest) GetRfidCode() string {
	if x != nil && x.RfidCode != nil {
		return *x.RfidCode
	}
	return ""
}

func (x *ObjectComplainRequest) GetSecurityCode() string {
	if x != nil && x.SecurityCode != nil {
		return *x.SecurityCode
	}
	return ""
}

func (x *ObjectComplainRequest) GetPlatformOrder() string {
	if x != nil && x.PlatformOrder != nil {
		return *x.PlatformOrder
	}
	return ""
}

func (x *ObjectComplainRequest) GetOmsOrder() string {
	if x != nil && x.OmsOrder != nil {
		return *x.OmsOrder
	}
	return ""
}

func (x *ObjectComplainRequest) GetPlatformRefund() string {
	if x != nil && x.PlatformRefund != nil {
		return *x.PlatformRefund
	}
	return ""
}

func (x *ObjectComplainRequest) GetOmsRefund() string {
	if x != nil && x.OmsRefund != nil {
		return *x.OmsRefund
	}
	return ""
}

func (x *ObjectComplainRequest) GetComplainDesc() string {
	if x != nil && x.ComplainDesc != nil {
		return *x.ComplainDesc
	}
	return ""
}

func (x *ObjectComplainRequest) GetServiceObject() int64 {
	if x != nil && x.ServiceObject != nil {
		return *x.ServiceObject
	}
	return 0
}

func (x *ObjectComplainRequest) GetGoodsId() string {
	if x != nil && x.GoodsId != nil {
		return *x.GoodsId
	}
	return ""
}

func (x *ObjectComplainRequest) GetGoodsName() string {
	if x != nil && x.GoodsName != nil {
		return *x.GoodsName
	}
	return ""
}

func (x *ObjectComplainRequest) GetPartsCode() string {
	if x != nil && x.PartsCode != nil {
		return *x.PartsCode
	}
	return ""
}

func (x *ObjectComplainRequest) GetPartsName() string {
	if x != nil && x.PartsName != nil {
		return *x.PartsName
	}
	return ""
}

func (x *ObjectComplainRequest) GetMediaPath() string {
	if x != nil && x.MediaPath != nil {
		return *x.MediaPath
	}
	return ""
}

func (x *ObjectComplainRequest) GetComplainReasons() string {
	if x != nil && x.ComplainReasons != nil {
		return *x.ComplainReasons
	}
	return ""
}

func (x *ObjectComplainRequest) GetSpecName() string {
	if x != nil && x.SpecName != nil {
		return *x.SpecName
	}
	return ""
}

func (x *ObjectComplainRequest) GetGoodsNo() string {
	if x != nil && x.GoodsNo != nil {
		return *x.GoodsNo
	}
	return ""
}

type ObjectComplainResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreateTime      string  `protobuf:"bytes,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime      string  `protobuf:"bytes,3,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	GoodsSpu        *string `protobuf:"bytes,4,opt,name=goods_spu,json=goodsSpu,proto3,oneof" json:"goods_spu,omitempty"`
	SpecNo          *string `protobuf:"bytes,5,opt,name=spec_no,json=specNo,proto3,oneof" json:"spec_no,omitempty"`
	RfidCode        *string `protobuf:"bytes,6,opt,name=rfid_code,json=rfidCode,proto3,oneof" json:"rfid_code,omitempty"`
	SecurityCode    *string `protobuf:"bytes,7,opt,name=security_code,json=securityCode,proto3,oneof" json:"security_code,omitempty"`
	PlatformOrder   *string `protobuf:"bytes,8,opt,name=platform_order,json=platformOrder,proto3,oneof" json:"platform_order,omitempty"`
	OmsOrder        *string `protobuf:"bytes,9,opt,name=oms_order,json=omsOrder,proto3,oneof" json:"oms_order,omitempty"`
	PlatformRefund  *string `protobuf:"bytes,10,opt,name=platform_refund,json=platformRefund,proto3,oneof" json:"platform_refund,omitempty"`
	OmsRefund       *string `protobuf:"bytes,11,opt,name=oms_refund,json=omsRefund,proto3,oneof" json:"oms_refund,omitempty"`
	ComplainDesc    *string `protobuf:"bytes,12,opt,name=complain_desc,json=complainDesc,proto3,oneof" json:"complain_desc,omitempty"`
	ServiceObject   *int64  `protobuf:"varint,13,opt,name=service_object,json=serviceObject,proto3,oneof" json:"service_object,omitempty"`
	GoodsId         *string `protobuf:"bytes,14,opt,name=goods_id,json=goodsId,proto3,oneof" json:"goods_id,omitempty"`
	GoodsName       *string `protobuf:"bytes,15,opt,name=goods_name,json=goodsName,proto3,oneof" json:"goods_name,omitempty"`
	PartsCode       *string `protobuf:"bytes,17,opt,name=parts_code,json=partsCode,proto3,oneof" json:"parts_code,omitempty"`
	PartsName       *string `protobuf:"bytes,18,opt,name=parts_name,json=partsName,proto3,oneof" json:"parts_name,omitempty"`
	MediaPath       *string `protobuf:"bytes,19,opt,name=media_path,json=mediaPath,proto3,oneof" json:"media_path,omitempty"`
	ComplainReasons *string `protobuf:"bytes,20,opt,name=complain_reasons,json=complainReasons,proto3,oneof" json:"complain_reasons,omitempty"`
	SpecName        *string `protobuf:"bytes,21,opt,name=spec_name,json=specName,proto3,oneof" json:"spec_name,omitempty"`
	GoodsNo         *string `protobuf:"bytes,22,opt,name=goods_no,json=goodsNo,proto3,oneof" json:"goods_no,omitempty"`
}

func (x *ObjectComplainResponse) Reset() {
	*x = ObjectComplainResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectComplainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectComplainResponse) ProtoMessage() {}

func (x *ObjectComplainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectComplainResponse.ProtoReflect.Descriptor instead.
func (*ObjectComplainResponse) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{43}
}

func (x *ObjectComplainResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ObjectComplainResponse) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *ObjectComplainResponse) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *ObjectComplainResponse) GetGoodsSpu() string {
	if x != nil && x.GoodsSpu != nil {
		return *x.GoodsSpu
	}
	return ""
}

func (x *ObjectComplainResponse) GetSpecNo() string {
	if x != nil && x.SpecNo != nil {
		return *x.SpecNo
	}
	return ""
}

func (x *ObjectComplainResponse) GetRfidCode() string {
	if x != nil && x.RfidCode != nil {
		return *x.RfidCode
	}
	return ""
}

func (x *ObjectComplainResponse) GetSecurityCode() string {
	if x != nil && x.SecurityCode != nil {
		return *x.SecurityCode
	}
	return ""
}

func (x *ObjectComplainResponse) GetPlatformOrder() string {
	if x != nil && x.PlatformOrder != nil {
		return *x.PlatformOrder
	}
	return ""
}

func (x *ObjectComplainResponse) GetOmsOrder() string {
	if x != nil && x.OmsOrder != nil {
		return *x.OmsOrder
	}
	return ""
}

func (x *ObjectComplainResponse) GetPlatformRefund() string {
	if x != nil && x.PlatformRefund != nil {
		return *x.PlatformRefund
	}
	return ""
}

func (x *ObjectComplainResponse) GetOmsRefund() string {
	if x != nil && x.OmsRefund != nil {
		return *x.OmsRefund
	}
	return ""
}

func (x *ObjectComplainResponse) GetComplainDesc() string {
	if x != nil && x.ComplainDesc != nil {
		return *x.ComplainDesc
	}
	return ""
}

func (x *ObjectComplainResponse) GetServiceObject() int64 {
	if x != nil && x.ServiceObject != nil {
		return *x.ServiceObject
	}
	return 0
}

func (x *ObjectComplainResponse) GetGoodsId() string {
	if x != nil && x.GoodsId != nil {
		return *x.GoodsId
	}
	return ""
}

func (x *ObjectComplainResponse) GetGoodsName() string {
	if x != nil && x.GoodsName != nil {
		return *x.GoodsName
	}
	return ""
}

func (x *ObjectComplainResponse) GetPartsCode() string {
	if x != nil && x.PartsCode != nil {
		return *x.PartsCode
	}
	return ""
}

func (x *ObjectComplainResponse) GetPartsName() string {
	if x != nil && x.PartsName != nil {
		return *x.PartsName
	}
	return ""
}

func (x *ObjectComplainResponse) GetMediaPath() string {
	if x != nil && x.MediaPath != nil {
		return *x.MediaPath
	}
	return ""
}

func (x *ObjectComplainResponse) GetComplainReasons() string {
	if x != nil && x.ComplainReasons != nil {
		return *x.ComplainReasons
	}
	return ""
}

func (x *ObjectComplainResponse) GetSpecName() string {
	if x != nil && x.SpecName != nil {
		return *x.SpecName
	}
	return ""
}

func (x *ObjectComplainResponse) GetGoodsNo() string {
	if x != nil && x.GoodsNo != nil {
		return *x.GoodsNo
	}
	return ""
}

type ObjectFeedbackListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*ObjectFeedbackResponse `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Count   int32                     `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *ObjectFeedbackListResponse) Reset() {
	*x = ObjectFeedbackListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectFeedbackListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectFeedbackListResponse) ProtoMessage() {}

func (x *ObjectFeedbackListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectFeedbackListResponse.ProtoReflect.Descriptor instead.
func (*ObjectFeedbackListResponse) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{44}
}

func (x *ObjectFeedbackListResponse) GetResults() []*ObjectFeedbackResponse {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *ObjectFeedbackListResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ObjectFeedbackRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Filters         string  `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
	GoodsSpu        *string `protobuf:"bytes,3,opt,name=goods_spu,json=goodsSpu,proto3,oneof" json:"goods_spu,omitempty"`
	SpecNo          *string `protobuf:"bytes,4,opt,name=spec_no,json=specNo,proto3,oneof" json:"spec_no,omitempty"`
	RfidCode        *string `protobuf:"bytes,5,opt,name=rfid_code,json=rfidCode,proto3,oneof" json:"rfid_code,omitempty"`
	SecurityCode    *string `protobuf:"bytes,6,opt,name=security_code,json=securityCode,proto3,oneof" json:"security_code,omitempty"`
	FeedbackDesc    *string `protobuf:"bytes,7,opt,name=feedback_desc,json=feedbackDesc,proto3,oneof" json:"feedback_desc,omitempty"`
	ServiceObject   *int64  `protobuf:"varint,8,opt,name=service_object,json=serviceObject,proto3,oneof" json:"service_object,omitempty"`
	GoodsId         *string `protobuf:"bytes,9,opt,name=goods_id,json=goodsId,proto3,oneof" json:"goods_id,omitempty"`
	GoodsName       *string `protobuf:"bytes,10,opt,name=goods_name,json=goodsName,proto3,oneof" json:"goods_name,omitempty"`
	PartsCode       *string `protobuf:"bytes,12,opt,name=parts_code,json=partsCode,proto3,oneof" json:"parts_code,omitempty"`
	PartsName       *string `protobuf:"bytes,13,opt,name=parts_name,json=partsName,proto3,oneof" json:"parts_name,omitempty"`
	MediaPath       *string `protobuf:"bytes,14,opt,name=media_path,json=mediaPath,proto3,oneof" json:"media_path,omitempty"`
	FeedbackReasons *string `protobuf:"bytes,15,opt,name=feedback_reasons,json=feedbackReasons,proto3,oneof" json:"feedback_reasons,omitempty"`
	SpecName        *string `protobuf:"bytes,16,opt,name=spec_name,json=specName,proto3,oneof" json:"spec_name,omitempty"`
	GoodsNo         *string `protobuf:"bytes,17,opt,name=goods_no,json=goodsNo,proto3,oneof" json:"goods_no,omitempty"`
}

func (x *ObjectFeedbackRequest) Reset() {
	*x = ObjectFeedbackRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectFeedbackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectFeedbackRequest) ProtoMessage() {}

func (x *ObjectFeedbackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectFeedbackRequest.ProtoReflect.Descriptor instead.
func (*ObjectFeedbackRequest) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{45}
}

func (x *ObjectFeedbackRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ObjectFeedbackRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *ObjectFeedbackRequest) GetGoodsSpu() string {
	if x != nil && x.GoodsSpu != nil {
		return *x.GoodsSpu
	}
	return ""
}

func (x *ObjectFeedbackRequest) GetSpecNo() string {
	if x != nil && x.SpecNo != nil {
		return *x.SpecNo
	}
	return ""
}

func (x *ObjectFeedbackRequest) GetRfidCode() string {
	if x != nil && x.RfidCode != nil {
		return *x.RfidCode
	}
	return ""
}

func (x *ObjectFeedbackRequest) GetSecurityCode() string {
	if x != nil && x.SecurityCode != nil {
		return *x.SecurityCode
	}
	return ""
}

func (x *ObjectFeedbackRequest) GetFeedbackDesc() string {
	if x != nil && x.FeedbackDesc != nil {
		return *x.FeedbackDesc
	}
	return ""
}

func (x *ObjectFeedbackRequest) GetServiceObject() int64 {
	if x != nil && x.ServiceObject != nil {
		return *x.ServiceObject
	}
	return 0
}

func (x *ObjectFeedbackRequest) GetGoodsId() string {
	if x != nil && x.GoodsId != nil {
		return *x.GoodsId
	}
	return ""
}

func (x *ObjectFeedbackRequest) GetGoodsName() string {
	if x != nil && x.GoodsName != nil {
		return *x.GoodsName
	}
	return ""
}

func (x *ObjectFeedbackRequest) GetPartsCode() string {
	if x != nil && x.PartsCode != nil {
		return *x.PartsCode
	}
	return ""
}

func (x *ObjectFeedbackRequest) GetPartsName() string {
	if x != nil && x.PartsName != nil {
		return *x.PartsName
	}
	return ""
}

func (x *ObjectFeedbackRequest) GetMediaPath() string {
	if x != nil && x.MediaPath != nil {
		return *x.MediaPath
	}
	return ""
}

func (x *ObjectFeedbackRequest) GetFeedbackReasons() string {
	if x != nil && x.FeedbackReasons != nil {
		return *x.FeedbackReasons
	}
	return ""
}

func (x *ObjectFeedbackRequest) GetSpecName() string {
	if x != nil && x.SpecName != nil {
		return *x.SpecName
	}
	return ""
}

func (x *ObjectFeedbackRequest) GetGoodsNo() string {
	if x != nil && x.GoodsNo != nil {
		return *x.GoodsNo
	}
	return ""
}

type ObjectFeedbackResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreateTime      string  `protobuf:"bytes,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime      string  `protobuf:"bytes,3,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	GoodsSpu        *string `protobuf:"bytes,4,opt,name=goods_spu,json=goodsSpu,proto3,oneof" json:"goods_spu,omitempty"`
	SpecNo          *string `protobuf:"bytes,5,opt,name=spec_no,json=specNo,proto3,oneof" json:"spec_no,omitempty"`
	RfidCode        *string `protobuf:"bytes,6,opt,name=rfid_code,json=rfidCode,proto3,oneof" json:"rfid_code,omitempty"`
	SecurityCode    *string `protobuf:"bytes,7,opt,name=security_code,json=securityCode,proto3,oneof" json:"security_code,omitempty"`
	FeedbackDesc    *string `protobuf:"bytes,8,opt,name=feedback_desc,json=feedbackDesc,proto3,oneof" json:"feedback_desc,omitempty"`
	ServiceObject   *int64  `protobuf:"varint,9,opt,name=service_object,json=serviceObject,proto3,oneof" json:"service_object,omitempty"`
	GoodsId         *string `protobuf:"bytes,10,opt,name=goods_id,json=goodsId,proto3,oneof" json:"goods_id,omitempty"`
	GoodsName       *string `protobuf:"bytes,11,opt,name=goods_name,json=goodsName,proto3,oneof" json:"goods_name,omitempty"`
	PartsCode       *string `protobuf:"bytes,13,opt,name=parts_code,json=partsCode,proto3,oneof" json:"parts_code,omitempty"`
	PartsName       *string `protobuf:"bytes,14,opt,name=parts_name,json=partsName,proto3,oneof" json:"parts_name,omitempty"`
	MediaPath       *string `protobuf:"bytes,15,opt,name=media_path,json=mediaPath,proto3,oneof" json:"media_path,omitempty"`
	FeedbackReasons *string `protobuf:"bytes,16,opt,name=feedback_reasons,json=feedbackReasons,proto3,oneof" json:"feedback_reasons,omitempty"`
	SpecName        *string `protobuf:"bytes,17,opt,name=spec_name,json=specName,proto3,oneof" json:"spec_name,omitempty"`
	GoodsNo         *string `protobuf:"bytes,18,opt,name=goods_no,json=goodsNo,proto3,oneof" json:"goods_no,omitempty"`
}

func (x *ObjectFeedbackResponse) Reset() {
	*x = ObjectFeedbackResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectFeedbackResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectFeedbackResponse) ProtoMessage() {}

func (x *ObjectFeedbackResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectFeedbackResponse.ProtoReflect.Descriptor instead.
func (*ObjectFeedbackResponse) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{46}
}

func (x *ObjectFeedbackResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ObjectFeedbackResponse) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *ObjectFeedbackResponse) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *ObjectFeedbackResponse) GetGoodsSpu() string {
	if x != nil && x.GoodsSpu != nil {
		return *x.GoodsSpu
	}
	return ""
}

func (x *ObjectFeedbackResponse) GetSpecNo() string {
	if x != nil && x.SpecNo != nil {
		return *x.SpecNo
	}
	return ""
}

func (x *ObjectFeedbackResponse) GetRfidCode() string {
	if x != nil && x.RfidCode != nil {
		return *x.RfidCode
	}
	return ""
}

func (x *ObjectFeedbackResponse) GetSecurityCode() string {
	if x != nil && x.SecurityCode != nil {
		return *x.SecurityCode
	}
	return ""
}

func (x *ObjectFeedbackResponse) GetFeedbackDesc() string {
	if x != nil && x.FeedbackDesc != nil {
		return *x.FeedbackDesc
	}
	return ""
}

func (x *ObjectFeedbackResponse) GetServiceObject() int64 {
	if x != nil && x.ServiceObject != nil {
		return *x.ServiceObject
	}
	return 0
}

func (x *ObjectFeedbackResponse) GetGoodsId() string {
	if x != nil && x.GoodsId != nil {
		return *x.GoodsId
	}
	return ""
}

func (x *ObjectFeedbackResponse) GetGoodsName() string {
	if x != nil && x.GoodsName != nil {
		return *x.GoodsName
	}
	return ""
}

func (x *ObjectFeedbackResponse) GetPartsCode() string {
	if x != nil && x.PartsCode != nil {
		return *x.PartsCode
	}
	return ""
}

func (x *ObjectFeedbackResponse) GetPartsName() string {
	if x != nil && x.PartsName != nil {
		return *x.PartsName
	}
	return ""
}

func (x *ObjectFeedbackResponse) GetMediaPath() string {
	if x != nil && x.MediaPath != nil {
		return *x.MediaPath
	}
	return ""
}

func (x *ObjectFeedbackResponse) GetFeedbackReasons() string {
	if x != nil && x.FeedbackReasons != nil {
		return *x.FeedbackReasons
	}
	return ""
}

func (x *ObjectFeedbackResponse) GetSpecName() string {
	if x != nil && x.SpecName != nil {
		return *x.SpecName
	}
	return ""
}

func (x *ObjectFeedbackResponse) GetGoodsNo() string {
	if x != nil && x.GoodsNo != nil {
		return *x.GoodsNo
	}
	return ""
}

type ObjectRepairListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*ObjectRepairResponse `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Count   int32                   `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *ObjectRepairListResponse) Reset() {
	*x = ObjectRepairListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectRepairListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectRepairListResponse) ProtoMessage() {}

func (x *ObjectRepairListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectRepairListResponse.ProtoReflect.Descriptor instead.
func (*ObjectRepairListResponse) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{47}
}

func (x *ObjectRepairListResponse) GetResults() []*ObjectRepairResponse {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *ObjectRepairListResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ObjectRepairRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Filters         string   `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
	GoodsSpu        *string  `protobuf:"bytes,3,opt,name=goods_spu,json=goodsSpu,proto3,oneof" json:"goods_spu,omitempty"`
	SpecNo          *string  `protobuf:"bytes,4,opt,name=spec_no,json=specNo,proto3,oneof" json:"spec_no,omitempty"`
	RfidCode        *string  `protobuf:"bytes,5,opt,name=rfid_code,json=rfidCode,proto3,oneof" json:"rfid_code,omitempty"`
	SecurityCode    *string  `protobuf:"bytes,6,opt,name=security_code,json=securityCode,proto3,oneof" json:"security_code,omitempty"`
	RepairPartsCode *string  `protobuf:"bytes,7,opt,name=repair_parts_code,json=repairPartsCode,proto3,oneof" json:"repair_parts_code,omitempty"`
	RepairPartsName *string  `protobuf:"bytes,8,opt,name=repair_parts_name,json=repairPartsName,proto3,oneof" json:"repair_parts_name,omitempty"`
	RepairDesc      *string  `protobuf:"bytes,9,opt,name=repair_desc,json=repairDesc,proto3,oneof" json:"repair_desc,omitempty"`
	MediaPath       *string  `protobuf:"bytes,10,opt,name=media_path,json=mediaPath,proto3,oneof" json:"media_path,omitempty"`
	ServiceObject   *int64   `protobuf:"varint,11,opt,name=service_object,json=serviceObject,proto3,oneof" json:"service_object,omitempty"`
	GoodsId         *string  `protobuf:"bytes,12,opt,name=goods_id,json=goodsId,proto3,oneof" json:"goods_id,omitempty"`
	GoodsName       *string  `protobuf:"bytes,13,opt,name=goods_name,json=goodsName,proto3,oneof" json:"goods_name,omitempty"`
	RepairReasons   *string  `protobuf:"bytes,15,opt,name=repair_reasons,json=repairReasons,proto3,oneof" json:"repair_reasons,omitempty"`
	SpecName        *string  `protobuf:"bytes,16,opt,name=spec_name,json=specName,proto3,oneof" json:"spec_name,omitempty"`
	PlatformOrder   *string  `protobuf:"bytes,17,opt,name=platform_order,json=platformOrder,proto3,oneof" json:"platform_order,omitempty"`
	OmsOrder        *string  `protobuf:"bytes,18,opt,name=oms_order,json=omsOrder,proto3,oneof" json:"oms_order,omitempty"`
	OutPrice        *float64 `protobuf:"fixed64,19,opt,name=out_price,json=outPrice,proto3,oneof" json:"out_price,omitempty"`
	RetailPrice     *float64 `protobuf:"fixed64,20,opt,name=retail_price,json=retailPrice,proto3,oneof" json:"retail_price,omitempty"`
	GoodsNo         *string  `protobuf:"bytes,21,opt,name=goods_no,json=goodsNo,proto3,oneof" json:"goods_no,omitempty"`
	RepairExpired   *string  `protobuf:"bytes,22,opt,name=repair_expired,json=repairExpired,proto3,oneof" json:"repair_expired,omitempty"`
	SwapExpired     *string  `protobuf:"bytes,23,opt,name=swap_expired,json=swapExpired,proto3,oneof" json:"swap_expired,omitempty"`
}

func (x *ObjectRepairRequest) Reset() {
	*x = ObjectRepairRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectRepairRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectRepairRequest) ProtoMessage() {}

func (x *ObjectRepairRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectRepairRequest.ProtoReflect.Descriptor instead.
func (*ObjectRepairRequest) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{48}
}

func (x *ObjectRepairRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ObjectRepairRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *ObjectRepairRequest) GetGoodsSpu() string {
	if x != nil && x.GoodsSpu != nil {
		return *x.GoodsSpu
	}
	return ""
}

func (x *ObjectRepairRequest) GetSpecNo() string {
	if x != nil && x.SpecNo != nil {
		return *x.SpecNo
	}
	return ""
}

func (x *ObjectRepairRequest) GetRfidCode() string {
	if x != nil && x.RfidCode != nil {
		return *x.RfidCode
	}
	return ""
}

func (x *ObjectRepairRequest) GetSecurityCode() string {
	if x != nil && x.SecurityCode != nil {
		return *x.SecurityCode
	}
	return ""
}

func (x *ObjectRepairRequest) GetRepairPartsCode() string {
	if x != nil && x.RepairPartsCode != nil {
		return *x.RepairPartsCode
	}
	return ""
}

func (x *ObjectRepairRequest) GetRepairPartsName() string {
	if x != nil && x.RepairPartsName != nil {
		return *x.RepairPartsName
	}
	return ""
}

func (x *ObjectRepairRequest) GetRepairDesc() string {
	if x != nil && x.RepairDesc != nil {
		return *x.RepairDesc
	}
	return ""
}

func (x *ObjectRepairRequest) GetMediaPath() string {
	if x != nil && x.MediaPath != nil {
		return *x.MediaPath
	}
	return ""
}

func (x *ObjectRepairRequest) GetServiceObject() int64 {
	if x != nil && x.ServiceObject != nil {
		return *x.ServiceObject
	}
	return 0
}

func (x *ObjectRepairRequest) GetGoodsId() string {
	if x != nil && x.GoodsId != nil {
		return *x.GoodsId
	}
	return ""
}

func (x *ObjectRepairRequest) GetGoodsName() string {
	if x != nil && x.GoodsName != nil {
		return *x.GoodsName
	}
	return ""
}

func (x *ObjectRepairRequest) GetRepairReasons() string {
	if x != nil && x.RepairReasons != nil {
		return *x.RepairReasons
	}
	return ""
}

func (x *ObjectRepairRequest) GetSpecName() string {
	if x != nil && x.SpecName != nil {
		return *x.SpecName
	}
	return ""
}

func (x *ObjectRepairRequest) GetPlatformOrder() string {
	if x != nil && x.PlatformOrder != nil {
		return *x.PlatformOrder
	}
	return ""
}

func (x *ObjectRepairRequest) GetOmsOrder() string {
	if x != nil && x.OmsOrder != nil {
		return *x.OmsOrder
	}
	return ""
}

func (x *ObjectRepairRequest) GetOutPrice() float64 {
	if x != nil && x.OutPrice != nil {
		return *x.OutPrice
	}
	return 0
}

func (x *ObjectRepairRequest) GetRetailPrice() float64 {
	if x != nil && x.RetailPrice != nil {
		return *x.RetailPrice
	}
	return 0
}

func (x *ObjectRepairRequest) GetGoodsNo() string {
	if x != nil && x.GoodsNo != nil {
		return *x.GoodsNo
	}
	return ""
}

func (x *ObjectRepairRequest) GetRepairExpired() string {
	if x != nil && x.RepairExpired != nil {
		return *x.RepairExpired
	}
	return ""
}

func (x *ObjectRepairRequest) GetSwapExpired() string {
	if x != nil && x.SwapExpired != nil {
		return *x.SwapExpired
	}
	return ""
}

type ObjectRepairResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreateTime      string   `protobuf:"bytes,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime      string   `protobuf:"bytes,3,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	GoodsSpu        *string  `protobuf:"bytes,4,opt,name=goods_spu,json=goodsSpu,proto3,oneof" json:"goods_spu,omitempty"`
	SpecNo          *string  `protobuf:"bytes,5,opt,name=spec_no,json=specNo,proto3,oneof" json:"spec_no,omitempty"`
	RfidCode        *string  `protobuf:"bytes,6,opt,name=rfid_code,json=rfidCode,proto3,oneof" json:"rfid_code,omitempty"`
	SecurityCode    *string  `protobuf:"bytes,7,opt,name=security_code,json=securityCode,proto3,oneof" json:"security_code,omitempty"`
	RepairPartsCode *string  `protobuf:"bytes,8,opt,name=repair_parts_code,json=repairPartsCode,proto3,oneof" json:"repair_parts_code,omitempty"`
	RepairPartsName *string  `protobuf:"bytes,9,opt,name=repair_parts_name,json=repairPartsName,proto3,oneof" json:"repair_parts_name,omitempty"`
	RepairDesc      *string  `protobuf:"bytes,10,opt,name=repair_desc,json=repairDesc,proto3,oneof" json:"repair_desc,omitempty"`
	MediaPath       *string  `protobuf:"bytes,11,opt,name=media_path,json=mediaPath,proto3,oneof" json:"media_path,omitempty"`
	ServiceObject   *int64   `protobuf:"varint,12,opt,name=service_object,json=serviceObject,proto3,oneof" json:"service_object,omitempty"`
	GoodsId         *string  `protobuf:"bytes,13,opt,name=goods_id,json=goodsId,proto3,oneof" json:"goods_id,omitempty"`
	GoodsName       *string  `protobuf:"bytes,14,opt,name=goods_name,json=goodsName,proto3,oneof" json:"goods_name,omitempty"`
	RepairReasons   *string  `protobuf:"bytes,16,opt,name=repair_reasons,json=repairReasons,proto3,oneof" json:"repair_reasons,omitempty"`
	SpecName        *string  `protobuf:"bytes,17,opt,name=spec_name,json=specName,proto3,oneof" json:"spec_name,omitempty"`
	PlatformOrder   *string  `protobuf:"bytes,18,opt,name=platform_order,json=platformOrder,proto3,oneof" json:"platform_order,omitempty"`
	OmsOrder        *string  `protobuf:"bytes,19,opt,name=oms_order,json=omsOrder,proto3,oneof" json:"oms_order,omitempty"`
	OutPrice        *float64 `protobuf:"fixed64,20,opt,name=out_price,json=outPrice,proto3,oneof" json:"out_price,omitempty"`
	RetailPrice     *float64 `protobuf:"fixed64,21,opt,name=retail_price,json=retailPrice,proto3,oneof" json:"retail_price,omitempty"`
	GoodsNo         *string  `protobuf:"bytes,22,opt,name=goods_no,json=goodsNo,proto3,oneof" json:"goods_no,omitempty"`
	RepairExpired   *string  `protobuf:"bytes,23,opt,name=repair_expired,json=repairExpired,proto3,oneof" json:"repair_expired,omitempty"`
	SwapExpired     *string  `protobuf:"bytes,24,opt,name=swap_expired,json=swapExpired,proto3,oneof" json:"swap_expired,omitempty"`
}

func (x *ObjectRepairResponse) Reset() {
	*x = ObjectRepairResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectRepairResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectRepairResponse) ProtoMessage() {}

func (x *ObjectRepairResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectRepairResponse.ProtoReflect.Descriptor instead.
func (*ObjectRepairResponse) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{49}
}

func (x *ObjectRepairResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ObjectRepairResponse) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *ObjectRepairResponse) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *ObjectRepairResponse) GetGoodsSpu() string {
	if x != nil && x.GoodsSpu != nil {
		return *x.GoodsSpu
	}
	return ""
}

func (x *ObjectRepairResponse) GetSpecNo() string {
	if x != nil && x.SpecNo != nil {
		return *x.SpecNo
	}
	return ""
}

func (x *ObjectRepairResponse) GetRfidCode() string {
	if x != nil && x.RfidCode != nil {
		return *x.RfidCode
	}
	return ""
}

func (x *ObjectRepairResponse) GetSecurityCode() string {
	if x != nil && x.SecurityCode != nil {
		return *x.SecurityCode
	}
	return ""
}

func (x *ObjectRepairResponse) GetRepairPartsCode() string {
	if x != nil && x.RepairPartsCode != nil {
		return *x.RepairPartsCode
	}
	return ""
}

func (x *ObjectRepairResponse) GetRepairPartsName() string {
	if x != nil && x.RepairPartsName != nil {
		return *x.RepairPartsName
	}
	return ""
}

func (x *ObjectRepairResponse) GetRepairDesc() string {
	if x != nil && x.RepairDesc != nil {
		return *x.RepairDesc
	}
	return ""
}

func (x *ObjectRepairResponse) GetMediaPath() string {
	if x != nil && x.MediaPath != nil {
		return *x.MediaPath
	}
	return ""
}

func (x *ObjectRepairResponse) GetServiceObject() int64 {
	if x != nil && x.ServiceObject != nil {
		return *x.ServiceObject
	}
	return 0
}

func (x *ObjectRepairResponse) GetGoodsId() string {
	if x != nil && x.GoodsId != nil {
		return *x.GoodsId
	}
	return ""
}

func (x *ObjectRepairResponse) GetGoodsName() string {
	if x != nil && x.GoodsName != nil {
		return *x.GoodsName
	}
	return ""
}

func (x *ObjectRepairResponse) GetRepairReasons() string {
	if x != nil && x.RepairReasons != nil {
		return *x.RepairReasons
	}
	return ""
}

func (x *ObjectRepairResponse) GetSpecName() string {
	if x != nil && x.SpecName != nil {
		return *x.SpecName
	}
	return ""
}

func (x *ObjectRepairResponse) GetPlatformOrder() string {
	if x != nil && x.PlatformOrder != nil {
		return *x.PlatformOrder
	}
	return ""
}

func (x *ObjectRepairResponse) GetOmsOrder() string {
	if x != nil && x.OmsOrder != nil {
		return *x.OmsOrder
	}
	return ""
}

func (x *ObjectRepairResponse) GetOutPrice() float64 {
	if x != nil && x.OutPrice != nil {
		return *x.OutPrice
	}
	return 0
}

func (x *ObjectRepairResponse) GetRetailPrice() float64 {
	if x != nil && x.RetailPrice != nil {
		return *x.RetailPrice
	}
	return 0
}

func (x *ObjectRepairResponse) GetGoodsNo() string {
	if x != nil && x.GoodsNo != nil {
		return *x.GoodsNo
	}
	return ""
}

func (x *ObjectRepairResponse) GetRepairExpired() string {
	if x != nil && x.RepairExpired != nil {
		return *x.RepairExpired
	}
	return ""
}

func (x *ObjectRepairResponse) GetSwapExpired() string {
	if x != nil && x.SwapExpired != nil {
		return *x.SwapExpired
	}
	return ""
}

type ObjectSwapListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*ObjectSwapResponse `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Count   int32                 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *ObjectSwapListResponse) Reset() {
	*x = ObjectSwapListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectSwapListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectSwapListResponse) ProtoMessage() {}

func (x *ObjectSwapListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectSwapListResponse.ProtoReflect.Descriptor instead.
func (*ObjectSwapListResponse) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{50}
}

func (x *ObjectSwapListResponse) GetResults() []*ObjectSwapResponse {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *ObjectSwapListResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ObjectSwapRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Filters         string   `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
	GoodsSpu        *string  `protobuf:"bytes,3,opt,name=goods_spu,json=goodsSpu,proto3,oneof" json:"goods_spu,omitempty"`
	SpecNo          *string  `protobuf:"bytes,4,opt,name=spec_no,json=specNo,proto3,oneof" json:"spec_no,omitempty"`
	RfidCode        *string  `protobuf:"bytes,5,opt,name=rfid_code,json=rfidCode,proto3,oneof" json:"rfid_code,omitempty"`
	SecurityCode    *string  `protobuf:"bytes,6,opt,name=security_code,json=securityCode,proto3,oneof" json:"security_code,omitempty"`
	DamagePartsCode *string  `protobuf:"bytes,7,opt,name=damage_parts_code,json=damagePartsCode,proto3,oneof" json:"damage_parts_code,omitempty"`
	DamagePartsName *string  `protobuf:"bytes,8,opt,name=damage_parts_name,json=damagePartsName,proto3,oneof" json:"damage_parts_name,omitempty"`
	DamageDesc      *string  `protobuf:"bytes,9,opt,name=damage_desc,json=damageDesc,proto3,oneof" json:"damage_desc,omitempty"`
	MediaPath       *string  `protobuf:"bytes,10,opt,name=media_path,json=mediaPath,proto3,oneof" json:"media_path,omitempty"`
	ServiceObject   *int64   `protobuf:"varint,11,opt,name=service_object,json=serviceObject,proto3,oneof" json:"service_object,omitempty"`
	GoodsId         *string  `protobuf:"bytes,12,opt,name=goods_id,json=goodsId,proto3,oneof" json:"goods_id,omitempty"`
	GoodsName       *string  `protobuf:"bytes,13,opt,name=goods_name,json=goodsName,proto3,oneof" json:"goods_name,omitempty"`
	DamageReasons   *string  `protobuf:"bytes,15,opt,name=damage_reasons,json=damageReasons,proto3,oneof" json:"damage_reasons,omitempty"`
	SpecName        *string  `protobuf:"bytes,16,opt,name=spec_name,json=specName,proto3,oneof" json:"spec_name,omitempty"`
	PlatformOrder   *string  `protobuf:"bytes,17,opt,name=platform_order,json=platformOrder,proto3,oneof" json:"platform_order,omitempty"`
	OmsOrder        *string  `protobuf:"bytes,18,opt,name=oms_order,json=omsOrder,proto3,oneof" json:"oms_order,omitempty"`
	OutPrice        *float64 `protobuf:"fixed64,19,opt,name=out_price,json=outPrice,proto3,oneof" json:"out_price,omitempty"`
	RetailPrice     *float64 `protobuf:"fixed64,20,opt,name=retail_price,json=retailPrice,proto3,oneof" json:"retail_price,omitempty"`
	GoodsNo         *string  `protobuf:"bytes,21,opt,name=goods_no,json=goodsNo,proto3,oneof" json:"goods_no,omitempty"`
	RepairExpired   *string  `protobuf:"bytes,22,opt,name=repair_expired,json=repairExpired,proto3,oneof" json:"repair_expired,omitempty"`
	SwapExpired     *string  `protobuf:"bytes,23,opt,name=swap_expired,json=swapExpired,proto3,oneof" json:"swap_expired,omitempty"`
}

func (x *ObjectSwapRequest) Reset() {
	*x = ObjectSwapRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectSwapRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectSwapRequest) ProtoMessage() {}

func (x *ObjectSwapRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectSwapRequest.ProtoReflect.Descriptor instead.
func (*ObjectSwapRequest) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{51}
}

func (x *ObjectSwapRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ObjectSwapRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *ObjectSwapRequest) GetGoodsSpu() string {
	if x != nil && x.GoodsSpu != nil {
		return *x.GoodsSpu
	}
	return ""
}

func (x *ObjectSwapRequest) GetSpecNo() string {
	if x != nil && x.SpecNo != nil {
		return *x.SpecNo
	}
	return ""
}

func (x *ObjectSwapRequest) GetRfidCode() string {
	if x != nil && x.RfidCode != nil {
		return *x.RfidCode
	}
	return ""
}

func (x *ObjectSwapRequest) GetSecurityCode() string {
	if x != nil && x.SecurityCode != nil {
		return *x.SecurityCode
	}
	return ""
}

func (x *ObjectSwapRequest) GetDamagePartsCode() string {
	if x != nil && x.DamagePartsCode != nil {
		return *x.DamagePartsCode
	}
	return ""
}

func (x *ObjectSwapRequest) GetDamagePartsName() string {
	if x != nil && x.DamagePartsName != nil {
		return *x.DamagePartsName
	}
	return ""
}

func (x *ObjectSwapRequest) GetDamageDesc() string {
	if x != nil && x.DamageDesc != nil {
		return *x.DamageDesc
	}
	return ""
}

func (x *ObjectSwapRequest) GetMediaPath() string {
	if x != nil && x.MediaPath != nil {
		return *x.MediaPath
	}
	return ""
}

func (x *ObjectSwapRequest) GetServiceObject() int64 {
	if x != nil && x.ServiceObject != nil {
		return *x.ServiceObject
	}
	return 0
}

func (x *ObjectSwapRequest) GetGoodsId() string {
	if x != nil && x.GoodsId != nil {
		return *x.GoodsId
	}
	return ""
}

func (x *ObjectSwapRequest) GetGoodsName() string {
	if x != nil && x.GoodsName != nil {
		return *x.GoodsName
	}
	return ""
}

func (x *ObjectSwapRequest) GetDamageReasons() string {
	if x != nil && x.DamageReasons != nil {
		return *x.DamageReasons
	}
	return ""
}

func (x *ObjectSwapRequest) GetSpecName() string {
	if x != nil && x.SpecName != nil {
		return *x.SpecName
	}
	return ""
}

func (x *ObjectSwapRequest) GetPlatformOrder() string {
	if x != nil && x.PlatformOrder != nil {
		return *x.PlatformOrder
	}
	return ""
}

func (x *ObjectSwapRequest) GetOmsOrder() string {
	if x != nil && x.OmsOrder != nil {
		return *x.OmsOrder
	}
	return ""
}

func (x *ObjectSwapRequest) GetOutPrice() float64 {
	if x != nil && x.OutPrice != nil {
		return *x.OutPrice
	}
	return 0
}

func (x *ObjectSwapRequest) GetRetailPrice() float64 {
	if x != nil && x.RetailPrice != nil {
		return *x.RetailPrice
	}
	return 0
}

func (x *ObjectSwapRequest) GetGoodsNo() string {
	if x != nil && x.GoodsNo != nil {
		return *x.GoodsNo
	}
	return ""
}

func (x *ObjectSwapRequest) GetRepairExpired() string {
	if x != nil && x.RepairExpired != nil {
		return *x.RepairExpired
	}
	return ""
}

func (x *ObjectSwapRequest) GetSwapExpired() string {
	if x != nil && x.SwapExpired != nil {
		return *x.SwapExpired
	}
	return ""
}

type ObjectSwapResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreateTime      string   `protobuf:"bytes,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime      string   `protobuf:"bytes,3,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	GoodsSpu        *string  `protobuf:"bytes,4,opt,name=goods_spu,json=goodsSpu,proto3,oneof" json:"goods_spu,omitempty"`
	SpecNo          *string  `protobuf:"bytes,5,opt,name=spec_no,json=specNo,proto3,oneof" json:"spec_no,omitempty"`
	RfidCode        *string  `protobuf:"bytes,6,opt,name=rfid_code,json=rfidCode,proto3,oneof" json:"rfid_code,omitempty"`
	SecurityCode    *string  `protobuf:"bytes,7,opt,name=security_code,json=securityCode,proto3,oneof" json:"security_code,omitempty"`
	DamagePartsCode *string  `protobuf:"bytes,8,opt,name=damage_parts_code,json=damagePartsCode,proto3,oneof" json:"damage_parts_code,omitempty"`
	DamagePartsName *string  `protobuf:"bytes,9,opt,name=damage_parts_name,json=damagePartsName,proto3,oneof" json:"damage_parts_name,omitempty"`
	DamageDesc      *string  `protobuf:"bytes,10,opt,name=damage_desc,json=damageDesc,proto3,oneof" json:"damage_desc,omitempty"`
	MediaPath       *string  `protobuf:"bytes,11,opt,name=media_path,json=mediaPath,proto3,oneof" json:"media_path,omitempty"`
	ServiceObject   *int64   `protobuf:"varint,12,opt,name=service_object,json=serviceObject,proto3,oneof" json:"service_object,omitempty"`
	GoodsId         *string  `protobuf:"bytes,13,opt,name=goods_id,json=goodsId,proto3,oneof" json:"goods_id,omitempty"`
	GoodsName       *string  `protobuf:"bytes,14,opt,name=goods_name,json=goodsName,proto3,oneof" json:"goods_name,omitempty"`
	DamageReasons   *string  `protobuf:"bytes,16,opt,name=damage_reasons,json=damageReasons,proto3,oneof" json:"damage_reasons,omitempty"`
	SpecName        *string  `protobuf:"bytes,17,opt,name=spec_name,json=specName,proto3,oneof" json:"spec_name,omitempty"`
	PlatformOrder   *string  `protobuf:"bytes,18,opt,name=platform_order,json=platformOrder,proto3,oneof" json:"platform_order,omitempty"`
	OmsOrder        *string  `protobuf:"bytes,19,opt,name=oms_order,json=omsOrder,proto3,oneof" json:"oms_order,omitempty"`
	OutPrice        *float64 `protobuf:"fixed64,20,opt,name=out_price,json=outPrice,proto3,oneof" json:"out_price,omitempty"`
	RetailPrice     *float64 `protobuf:"fixed64,21,opt,name=retail_price,json=retailPrice,proto3,oneof" json:"retail_price,omitempty"`
	GoodsNo         *string  `protobuf:"bytes,22,opt,name=goods_no,json=goodsNo,proto3,oneof" json:"goods_no,omitempty"`
	RepairExpired   *string  `protobuf:"bytes,23,opt,name=repair_expired,json=repairExpired,proto3,oneof" json:"repair_expired,omitempty"`
	SwapExpired     *string  `protobuf:"bytes,24,opt,name=swap_expired,json=swapExpired,proto3,oneof" json:"swap_expired,omitempty"`
}

func (x *ObjectSwapResponse) Reset() {
	*x = ObjectSwapResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectSwapResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectSwapResponse) ProtoMessage() {}

func (x *ObjectSwapResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectSwapResponse.ProtoReflect.Descriptor instead.
func (*ObjectSwapResponse) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{52}
}

func (x *ObjectSwapResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ObjectSwapResponse) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *ObjectSwapResponse) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *ObjectSwapResponse) GetGoodsSpu() string {
	if x != nil && x.GoodsSpu != nil {
		return *x.GoodsSpu
	}
	return ""
}

func (x *ObjectSwapResponse) GetSpecNo() string {
	if x != nil && x.SpecNo != nil {
		return *x.SpecNo
	}
	return ""
}

func (x *ObjectSwapResponse) GetRfidCode() string {
	if x != nil && x.RfidCode != nil {
		return *x.RfidCode
	}
	return ""
}

func (x *ObjectSwapResponse) GetSecurityCode() string {
	if x != nil && x.SecurityCode != nil {
		return *x.SecurityCode
	}
	return ""
}

func (x *ObjectSwapResponse) GetDamagePartsCode() string {
	if x != nil && x.DamagePartsCode != nil {
		return *x.DamagePartsCode
	}
	return ""
}

func (x *ObjectSwapResponse) GetDamagePartsName() string {
	if x != nil && x.DamagePartsName != nil {
		return *x.DamagePartsName
	}
	return ""
}

func (x *ObjectSwapResponse) GetDamageDesc() string {
	if x != nil && x.DamageDesc != nil {
		return *x.DamageDesc
	}
	return ""
}

func (x *ObjectSwapResponse) GetMediaPath() string {
	if x != nil && x.MediaPath != nil {
		return *x.MediaPath
	}
	return ""
}

func (x *ObjectSwapResponse) GetServiceObject() int64 {
	if x != nil && x.ServiceObject != nil {
		return *x.ServiceObject
	}
	return 0
}

func (x *ObjectSwapResponse) GetGoodsId() string {
	if x != nil && x.GoodsId != nil {
		return *x.GoodsId
	}
	return ""
}

func (x *ObjectSwapResponse) GetGoodsName() string {
	if x != nil && x.GoodsName != nil {
		return *x.GoodsName
	}
	return ""
}

func (x *ObjectSwapResponse) GetDamageReasons() string {
	if x != nil && x.DamageReasons != nil {
		return *x.DamageReasons
	}
	return ""
}

func (x *ObjectSwapResponse) GetSpecName() string {
	if x != nil && x.SpecName != nil {
		return *x.SpecName
	}
	return ""
}

func (x *ObjectSwapResponse) GetPlatformOrder() string {
	if x != nil && x.PlatformOrder != nil {
		return *x.PlatformOrder
	}
	return ""
}

func (x *ObjectSwapResponse) GetOmsOrder() string {
	if x != nil && x.OmsOrder != nil {
		return *x.OmsOrder
	}
	return ""
}

func (x *ObjectSwapResponse) GetOutPrice() float64 {
	if x != nil && x.OutPrice != nil {
		return *x.OutPrice
	}
	return 0
}

func (x *ObjectSwapResponse) GetRetailPrice() float64 {
	if x != nil && x.RetailPrice != nil {
		return *x.RetailPrice
	}
	return 0
}

func (x *ObjectSwapResponse) GetGoodsNo() string {
	if x != nil && x.GoodsNo != nil {
		return *x.GoodsNo
	}
	return ""
}

func (x *ObjectSwapResponse) GetRepairExpired() string {
	if x != nil && x.RepairExpired != nil {
		return *x.RepairExpired
	}
	return ""
}

func (x *ObjectSwapResponse) GetSwapExpired() string {
	if x != nil && x.SwapExpired != nil {
		return *x.SwapExpired
	}
	return ""
}

type ObjectTailorListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*ObjectTailorResponse `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Count   int32                   `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *ObjectTailorListResponse) Reset() {
	*x = ObjectTailorListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectTailorListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectTailorListResponse) ProtoMessage() {}

func (x *ObjectTailorListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectTailorListResponse.ProtoReflect.Descriptor instead.
func (*ObjectTailorListResponse) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{53}
}

func (x *ObjectTailorListResponse) GetResults() []*ObjectTailorResponse {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *ObjectTailorListResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ObjectTailorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Filters       string   `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
	GoodsSpu      *string  `protobuf:"bytes,3,opt,name=goods_spu,json=goodsSpu,proto3,oneof" json:"goods_spu,omitempty"`
	SpecNo        *string  `protobuf:"bytes,4,opt,name=spec_no,json=specNo,proto3,oneof" json:"spec_no,omitempty"`
	RfidCode      *string  `protobuf:"bytes,5,opt,name=rfid_code,json=rfidCode,proto3,oneof" json:"rfid_code,omitempty"`
	SecurityCode  *string  `protobuf:"bytes,6,opt,name=security_code,json=securityCode,proto3,oneof" json:"security_code,omitempty"`
	PlatformOrder *string  `protobuf:"bytes,7,opt,name=platform_order,json=platformOrder,proto3,oneof" json:"platform_order,omitempty"`
	OmsOrder      *string  `protobuf:"bytes,8,opt,name=oms_order,json=omsOrder,proto3,oneof" json:"oms_order,omitempty"`
	PartId        *string  `protobuf:"bytes,9,opt,name=part_id,json=partId,proto3,oneof" json:"part_id,omitempty"`
	PartName      *string  `protobuf:"bytes,10,opt,name=part_name,json=partName,proto3,oneof" json:"part_name,omitempty"`
	Remark        *string  `protobuf:"bytes,11,opt,name=remark,proto3,oneof" json:"remark,omitempty"`
	Text          *string  `protobuf:"bytes,12,opt,name=text,proto3,oneof" json:"text,omitempty"`
	TextColor     *string  `protobuf:"bytes,13,opt,name=text_color,json=textColor,proto3,oneof" json:"text_color,omitempty"`
	TextFont      *string  `protobuf:"bytes,14,opt,name=text_font,json=textFont,proto3,oneof" json:"text_font,omitempty"`
	TifPath       *string  `protobuf:"bytes,15,opt,name=tif_path,json=tifPath,proto3,oneof" json:"tif_path,omitempty"`
	ImgPath       *string  `protobuf:"bytes,16,opt,name=img_path,json=imgPath,proto3,oneof" json:"img_path,omitempty"`
	Deletable     *bool    `protobuf:"varint,17,opt,name=deletable,proto3,oneof" json:"deletable,omitempty"`
	ServiceObject *int64   `protobuf:"varint,18,opt,name=service_object,json=serviceObject,proto3,oneof" json:"service_object,omitempty"`
	GoodsId       *string  `protobuf:"bytes,19,opt,name=goods_id,json=goodsId,proto3,oneof" json:"goods_id,omitempty"`
	GoodsName     *string  `protobuf:"bytes,20,opt,name=goods_name,json=goodsName,proto3,oneof" json:"goods_name,omitempty"`
	SpecName      *string  `protobuf:"bytes,21,opt,name=spec_name,json=specName,proto3,oneof" json:"spec_name,omitempty"`
	OutPrice      *float64 `protobuf:"fixed64,22,opt,name=out_price,json=outPrice,proto3,oneof" json:"out_price,omitempty"`
	RetailPrice   *float64 `protobuf:"fixed64,23,opt,name=retail_price,json=retailPrice,proto3,oneof" json:"retail_price,omitempty"`
	GoodsNo       *string  `protobuf:"bytes,24,opt,name=goods_no,json=goodsNo,proto3,oneof" json:"goods_no,omitempty"`
}

func (x *ObjectTailorRequest) Reset() {
	*x = ObjectTailorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectTailorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectTailorRequest) ProtoMessage() {}

func (x *ObjectTailorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectTailorRequest.ProtoReflect.Descriptor instead.
func (*ObjectTailorRequest) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{54}
}

func (x *ObjectTailorRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ObjectTailorRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *ObjectTailorRequest) GetGoodsSpu() string {
	if x != nil && x.GoodsSpu != nil {
		return *x.GoodsSpu
	}
	return ""
}

func (x *ObjectTailorRequest) GetSpecNo() string {
	if x != nil && x.SpecNo != nil {
		return *x.SpecNo
	}
	return ""
}

func (x *ObjectTailorRequest) GetRfidCode() string {
	if x != nil && x.RfidCode != nil {
		return *x.RfidCode
	}
	return ""
}

func (x *ObjectTailorRequest) GetSecurityCode() string {
	if x != nil && x.SecurityCode != nil {
		return *x.SecurityCode
	}
	return ""
}

func (x *ObjectTailorRequest) GetPlatformOrder() string {
	if x != nil && x.PlatformOrder != nil {
		return *x.PlatformOrder
	}
	return ""
}

func (x *ObjectTailorRequest) GetOmsOrder() string {
	if x != nil && x.OmsOrder != nil {
		return *x.OmsOrder
	}
	return ""
}

func (x *ObjectTailorRequest) GetPartId() string {
	if x != nil && x.PartId != nil {
		return *x.PartId
	}
	return ""
}

func (x *ObjectTailorRequest) GetPartName() string {
	if x != nil && x.PartName != nil {
		return *x.PartName
	}
	return ""
}

func (x *ObjectTailorRequest) GetRemark() string {
	if x != nil && x.Remark != nil {
		return *x.Remark
	}
	return ""
}

func (x *ObjectTailorRequest) GetText() string {
	if x != nil && x.Text != nil {
		return *x.Text
	}
	return ""
}

func (x *ObjectTailorRequest) GetTextColor() string {
	if x != nil && x.TextColor != nil {
		return *x.TextColor
	}
	return ""
}

func (x *ObjectTailorRequest) GetTextFont() string {
	if x != nil && x.TextFont != nil {
		return *x.TextFont
	}
	return ""
}

func (x *ObjectTailorRequest) GetTifPath() string {
	if x != nil && x.TifPath != nil {
		return *x.TifPath
	}
	return ""
}

func (x *ObjectTailorRequest) GetImgPath() string {
	if x != nil && x.ImgPath != nil {
		return *x.ImgPath
	}
	return ""
}

func (x *ObjectTailorRequest) GetDeletable() bool {
	if x != nil && x.Deletable != nil {
		return *x.Deletable
	}
	return false
}

func (x *ObjectTailorRequest) GetServiceObject() int64 {
	if x != nil && x.ServiceObject != nil {
		return *x.ServiceObject
	}
	return 0
}

func (x *ObjectTailorRequest) GetGoodsId() string {
	if x != nil && x.GoodsId != nil {
		return *x.GoodsId
	}
	return ""
}

func (x *ObjectTailorRequest) GetGoodsName() string {
	if x != nil && x.GoodsName != nil {
		return *x.GoodsName
	}
	return ""
}

func (x *ObjectTailorRequest) GetSpecName() string {
	if x != nil && x.SpecName != nil {
		return *x.SpecName
	}
	return ""
}

func (x *ObjectTailorRequest) GetOutPrice() float64 {
	if x != nil && x.OutPrice != nil {
		return *x.OutPrice
	}
	return 0
}

func (x *ObjectTailorRequest) GetRetailPrice() float64 {
	if x != nil && x.RetailPrice != nil {
		return *x.RetailPrice
	}
	return 0
}

func (x *ObjectTailorRequest) GetGoodsNo() string {
	if x != nil && x.GoodsNo != nil {
		return *x.GoodsNo
	}
	return ""
}

type ObjectTailorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreateTime    string   `protobuf:"bytes,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime    string   `protobuf:"bytes,3,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	GoodsSpu      *string  `protobuf:"bytes,4,opt,name=goods_spu,json=goodsSpu,proto3,oneof" json:"goods_spu,omitempty"`
	SpecNo        *string  `protobuf:"bytes,5,opt,name=spec_no,json=specNo,proto3,oneof" json:"spec_no,omitempty"`
	RfidCode      *string  `protobuf:"bytes,6,opt,name=rfid_code,json=rfidCode,proto3,oneof" json:"rfid_code,omitempty"`
	SecurityCode  *string  `protobuf:"bytes,7,opt,name=security_code,json=securityCode,proto3,oneof" json:"security_code,omitempty"`
	PlatformOrder *string  `protobuf:"bytes,8,opt,name=platform_order,json=platformOrder,proto3,oneof" json:"platform_order,omitempty"`
	OmsOrder      *string  `protobuf:"bytes,9,opt,name=oms_order,json=omsOrder,proto3,oneof" json:"oms_order,omitempty"`
	PartId        *string  `protobuf:"bytes,10,opt,name=part_id,json=partId,proto3,oneof" json:"part_id,omitempty"`
	PartName      *string  `protobuf:"bytes,11,opt,name=part_name,json=partName,proto3,oneof" json:"part_name,omitempty"`
	Remark        *string  `protobuf:"bytes,12,opt,name=remark,proto3,oneof" json:"remark,omitempty"`
	Text          *string  `protobuf:"bytes,13,opt,name=text,proto3,oneof" json:"text,omitempty"`
	TextColor     *string  `protobuf:"bytes,14,opt,name=text_color,json=textColor,proto3,oneof" json:"text_color,omitempty"`
	TextFont      *string  `protobuf:"bytes,15,opt,name=text_font,json=textFont,proto3,oneof" json:"text_font,omitempty"`
	TifPath       *string  `protobuf:"bytes,16,opt,name=tif_path,json=tifPath,proto3,oneof" json:"tif_path,omitempty"`
	ImgPath       *string  `protobuf:"bytes,17,opt,name=img_path,json=imgPath,proto3,oneof" json:"img_path,omitempty"`
	Deletable     *bool    `protobuf:"varint,18,opt,name=deletable,proto3,oneof" json:"deletable,omitempty"`
	ServiceObject *int64   `protobuf:"varint,19,opt,name=service_object,json=serviceObject,proto3,oneof" json:"service_object,omitempty"`
	GoodsId       *string  `protobuf:"bytes,20,opt,name=goods_id,json=goodsId,proto3,oneof" json:"goods_id,omitempty"`
	GoodsName     *string  `protobuf:"bytes,21,opt,name=goods_name,json=goodsName,proto3,oneof" json:"goods_name,omitempty"`
	SpecName      *string  `protobuf:"bytes,22,opt,name=spec_name,json=specName,proto3,oneof" json:"spec_name,omitempty"`
	OutPrice      *float64 `protobuf:"fixed64,23,opt,name=out_price,json=outPrice,proto3,oneof" json:"out_price,omitempty"`
	RetailPrice   *float64 `protobuf:"fixed64,24,opt,name=retail_price,json=retailPrice,proto3,oneof" json:"retail_price,omitempty"`
	GoodsNo       *string  `protobuf:"bytes,25,opt,name=goods_no,json=goodsNo,proto3,oneof" json:"goods_no,omitempty"`
}

func (x *ObjectTailorResponse) Reset() {
	*x = ObjectTailorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectTailorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectTailorResponse) ProtoMessage() {}

func (x *ObjectTailorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectTailorResponse.ProtoReflect.Descriptor instead.
func (*ObjectTailorResponse) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{55}
}

func (x *ObjectTailorResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ObjectTailorResponse) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *ObjectTailorResponse) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *ObjectTailorResponse) GetGoodsSpu() string {
	if x != nil && x.GoodsSpu != nil {
		return *x.GoodsSpu
	}
	return ""
}

func (x *ObjectTailorResponse) GetSpecNo() string {
	if x != nil && x.SpecNo != nil {
		return *x.SpecNo
	}
	return ""
}

func (x *ObjectTailorResponse) GetRfidCode() string {
	if x != nil && x.RfidCode != nil {
		return *x.RfidCode
	}
	return ""
}

func (x *ObjectTailorResponse) GetSecurityCode() string {
	if x != nil && x.SecurityCode != nil {
		return *x.SecurityCode
	}
	return ""
}

func (x *ObjectTailorResponse) GetPlatformOrder() string {
	if x != nil && x.PlatformOrder != nil {
		return *x.PlatformOrder
	}
	return ""
}

func (x *ObjectTailorResponse) GetOmsOrder() string {
	if x != nil && x.OmsOrder != nil {
		return *x.OmsOrder
	}
	return ""
}

func (x *ObjectTailorResponse) GetPartId() string {
	if x != nil && x.PartId != nil {
		return *x.PartId
	}
	return ""
}

func (x *ObjectTailorResponse) GetPartName() string {
	if x != nil && x.PartName != nil {
		return *x.PartName
	}
	return ""
}

func (x *ObjectTailorResponse) GetRemark() string {
	if x != nil && x.Remark != nil {
		return *x.Remark
	}
	return ""
}

func (x *ObjectTailorResponse) GetText() string {
	if x != nil && x.Text != nil {
		return *x.Text
	}
	return ""
}

func (x *ObjectTailorResponse) GetTextColor() string {
	if x != nil && x.TextColor != nil {
		return *x.TextColor
	}
	return ""
}

func (x *ObjectTailorResponse) GetTextFont() string {
	if x != nil && x.TextFont != nil {
		return *x.TextFont
	}
	return ""
}

func (x *ObjectTailorResponse) GetTifPath() string {
	if x != nil && x.TifPath != nil {
		return *x.TifPath
	}
	return ""
}

func (x *ObjectTailorResponse) GetImgPath() string {
	if x != nil && x.ImgPath != nil {
		return *x.ImgPath
	}
	return ""
}

func (x *ObjectTailorResponse) GetDeletable() bool {
	if x != nil && x.Deletable != nil {
		return *x.Deletable
	}
	return false
}

func (x *ObjectTailorResponse) GetServiceObject() int64 {
	if x != nil && x.ServiceObject != nil {
		return *x.ServiceObject
	}
	return 0
}

func (x *ObjectTailorResponse) GetGoodsId() string {
	if x != nil && x.GoodsId != nil {
		return *x.GoodsId
	}
	return ""
}

func (x *ObjectTailorResponse) GetGoodsName() string {
	if x != nil && x.GoodsName != nil {
		return *x.GoodsName
	}
	return ""
}

func (x *ObjectTailorResponse) GetSpecName() string {
	if x != nil && x.SpecName != nil {
		return *x.SpecName
	}
	return ""
}

func (x *ObjectTailorResponse) GetOutPrice() float64 {
	if x != nil && x.OutPrice != nil {
		return *x.OutPrice
	}
	return 0
}

func (x *ObjectTailorResponse) GetRetailPrice() float64 {
	if x != nil && x.RetailPrice != nil {
		return *x.RetailPrice
	}
	return 0
}

func (x *ObjectTailorResponse) GetGoodsNo() string {
	if x != nil && x.GoodsNo != nil {
		return *x.GoodsNo
	}
	return ""
}

type ObjectTradeInListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*ObjectTradeInResponse `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Count   int32                    `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *ObjectTradeInListResponse) Reset() {
	*x = ObjectTradeInListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectTradeInListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectTradeInListResponse) ProtoMessage() {}

func (x *ObjectTradeInListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectTradeInListResponse.ProtoReflect.Descriptor instead.
func (*ObjectTradeInListResponse) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{56}
}

func (x *ObjectTradeInListResponse) GetResults() []*ObjectTradeInResponse {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *ObjectTradeInListResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ObjectTradeInRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Filters        string   `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
	CtmId          *int32   `protobuf:"varint,3,opt,name=ctm_id,json=ctmId,proto3,oneof" json:"ctm_id,omitempty"`
	CtmOpenId      *string  `protobuf:"bytes,4,opt,name=ctm_openId,json=ctmOpenId,proto3,oneof" json:"ctm_openId,omitempty"`
	CtmNickname    *string  `protobuf:"bytes,5,opt,name=ctm_nickname,json=ctmNickname,proto3,oneof" json:"ctm_nickname,omitempty"`
	CtmMobile      *string  `protobuf:"bytes,6,opt,name=ctm_mobile,json=ctmMobile,proto3,oneof" json:"ctm_mobile,omitempty"`
	CtmCardNo      *string  `protobuf:"bytes,7,opt,name=ctm_card_no,json=ctmCardNo,proto3,oneof" json:"ctm_card_no,omitempty"`
	CtmLevel       *int32   `protobuf:"varint,8,opt,name=ctm_level,json=ctmLevel,proto3,oneof" json:"ctm_level,omitempty"`
	TradeInBrand   *string  `protobuf:"bytes,9,opt,name=trade_in_brand,json=tradeInBrand,proto3,oneof" json:"trade_in_brand,omitempty"`
	TradeInModel   *string  `protobuf:"bytes,10,opt,name=trade_in_model,json=tradeInModel,proto3,oneof" json:"trade_in_model,omitempty"`
	TradeInDesc    *string  `protobuf:"bytes,11,opt,name=trade_in_desc,json=tradeInDesc,proto3,oneof" json:"trade_in_desc,omitempty"`
	TradeInPrice   *float64 `protobuf:"fixed64,12,opt,name=trade_in_price,json=tradeInPrice,proto3,oneof" json:"trade_in_price,omitempty"`
	ServiceObject  *int64   `protobuf:"varint,13,opt,name=service_object,json=serviceObject,proto3,oneof" json:"service_object,omitempty"`
	MediaPath      *string  `protobuf:"bytes,14,opt,name=media_path,json=mediaPath,proto3,oneof" json:"media_path,omitempty"`
	TradeInReasons *string  `protobuf:"bytes,15,opt,name=trade_in_reasons,json=tradeInReasons,proto3,oneof" json:"trade_in_reasons,omitempty"`
}

func (x *ObjectTradeInRequest) Reset() {
	*x = ObjectTradeInRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectTradeInRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectTradeInRequest) ProtoMessage() {}

func (x *ObjectTradeInRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectTradeInRequest.ProtoReflect.Descriptor instead.
func (*ObjectTradeInRequest) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{57}
}

func (x *ObjectTradeInRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ObjectTradeInRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *ObjectTradeInRequest) GetCtmId() int32 {
	if x != nil && x.CtmId != nil {
		return *x.CtmId
	}
	return 0
}

func (x *ObjectTradeInRequest) GetCtmOpenId() string {
	if x != nil && x.CtmOpenId != nil {
		return *x.CtmOpenId
	}
	return ""
}

func (x *ObjectTradeInRequest) GetCtmNickname() string {
	if x != nil && x.CtmNickname != nil {
		return *x.CtmNickname
	}
	return ""
}

func (x *ObjectTradeInRequest) GetCtmMobile() string {
	if x != nil && x.CtmMobile != nil {
		return *x.CtmMobile
	}
	return ""
}

func (x *ObjectTradeInRequest) GetCtmCardNo() string {
	if x != nil && x.CtmCardNo != nil {
		return *x.CtmCardNo
	}
	return ""
}

func (x *ObjectTradeInRequest) GetCtmLevel() int32 {
	if x != nil && x.CtmLevel != nil {
		return *x.CtmLevel
	}
	return 0
}

func (x *ObjectTradeInRequest) GetTradeInBrand() string {
	if x != nil && x.TradeInBrand != nil {
		return *x.TradeInBrand
	}
	return ""
}

func (x *ObjectTradeInRequest) GetTradeInModel() string {
	if x != nil && x.TradeInModel != nil {
		return *x.TradeInModel
	}
	return ""
}

func (x *ObjectTradeInRequest) GetTradeInDesc() string {
	if x != nil && x.TradeInDesc != nil {
		return *x.TradeInDesc
	}
	return ""
}

func (x *ObjectTradeInRequest) GetTradeInPrice() float64 {
	if x != nil && x.TradeInPrice != nil {
		return *x.TradeInPrice
	}
	return 0
}

func (x *ObjectTradeInRequest) GetServiceObject() int64 {
	if x != nil && x.ServiceObject != nil {
		return *x.ServiceObject
	}
	return 0
}

func (x *ObjectTradeInRequest) GetMediaPath() string {
	if x != nil && x.MediaPath != nil {
		return *x.MediaPath
	}
	return ""
}

func (x *ObjectTradeInRequest) GetTradeInReasons() string {
	if x != nil && x.TradeInReasons != nil {
		return *x.TradeInReasons
	}
	return ""
}

type ObjectTradeInResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreateTime     string   `protobuf:"bytes,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime     string   `protobuf:"bytes,3,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	CtmId          *int32   `protobuf:"varint,4,opt,name=ctm_id,json=ctmId,proto3,oneof" json:"ctm_id,omitempty"`
	CtmOpenId      *string  `protobuf:"bytes,5,opt,name=ctm_openId,json=ctmOpenId,proto3,oneof" json:"ctm_openId,omitempty"`
	CtmNickname    *string  `protobuf:"bytes,6,opt,name=ctm_nickname,json=ctmNickname,proto3,oneof" json:"ctm_nickname,omitempty"`
	CtmMobile      *string  `protobuf:"bytes,7,opt,name=ctm_mobile,json=ctmMobile,proto3,oneof" json:"ctm_mobile,omitempty"`
	CtmCardNo      *string  `protobuf:"bytes,8,opt,name=ctm_card_no,json=ctmCardNo,proto3,oneof" json:"ctm_card_no,omitempty"`
	CtmLevel       *int32   `protobuf:"varint,9,opt,name=ctm_level,json=ctmLevel,proto3,oneof" json:"ctm_level,omitempty"`
	TradeInBrand   *string  `protobuf:"bytes,10,opt,name=trade_in_brand,json=tradeInBrand,proto3,oneof" json:"trade_in_brand,omitempty"`
	TradeInModel   *string  `protobuf:"bytes,11,opt,name=trade_in_model,json=tradeInModel,proto3,oneof" json:"trade_in_model,omitempty"`
	TradeInDesc    *string  `protobuf:"bytes,12,opt,name=trade_in_desc,json=tradeInDesc,proto3,oneof" json:"trade_in_desc,omitempty"`
	TradeInPrice   *float64 `protobuf:"fixed64,13,opt,name=trade_in_price,json=tradeInPrice,proto3,oneof" json:"trade_in_price,omitempty"`
	ServiceObject  *int64   `protobuf:"varint,14,opt,name=service_object,json=serviceObject,proto3,oneof" json:"service_object,omitempty"`
	MediaPath      *string  `protobuf:"bytes,15,opt,name=media_path,json=mediaPath,proto3,oneof" json:"media_path,omitempty"`
	TradeInReasons *string  `protobuf:"bytes,16,opt,name=trade_in_reasons,json=tradeInReasons,proto3,oneof" json:"trade_in_reasons,omitempty"`
}

func (x *ObjectTradeInResponse) Reset() {
	*x = ObjectTradeInResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectTradeInResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectTradeInResponse) ProtoMessage() {}

func (x *ObjectTradeInResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectTradeInResponse.ProtoReflect.Descriptor instead.
func (*ObjectTradeInResponse) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{58}
}

func (x *ObjectTradeInResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ObjectTradeInResponse) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *ObjectTradeInResponse) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *ObjectTradeInResponse) GetCtmId() int32 {
	if x != nil && x.CtmId != nil {
		return *x.CtmId
	}
	return 0
}

func (x *ObjectTradeInResponse) GetCtmOpenId() string {
	if x != nil && x.CtmOpenId != nil {
		return *x.CtmOpenId
	}
	return ""
}

func (x *ObjectTradeInResponse) GetCtmNickname() string {
	if x != nil && x.CtmNickname != nil {
		return *x.CtmNickname
	}
	return ""
}

func (x *ObjectTradeInResponse) GetCtmMobile() string {
	if x != nil && x.CtmMobile != nil {
		return *x.CtmMobile
	}
	return ""
}

func (x *ObjectTradeInResponse) GetCtmCardNo() string {
	if x != nil && x.CtmCardNo != nil {
		return *x.CtmCardNo
	}
	return ""
}

func (x *ObjectTradeInResponse) GetCtmLevel() int32 {
	if x != nil && x.CtmLevel != nil {
		return *x.CtmLevel
	}
	return 0
}

func (x *ObjectTradeInResponse) GetTradeInBrand() string {
	if x != nil && x.TradeInBrand != nil {
		return *x.TradeInBrand
	}
	return ""
}

func (x *ObjectTradeInResponse) GetTradeInModel() string {
	if x != nil && x.TradeInModel != nil {
		return *x.TradeInModel
	}
	return ""
}

func (x *ObjectTradeInResponse) GetTradeInDesc() string {
	if x != nil && x.TradeInDesc != nil {
		return *x.TradeInDesc
	}
	return ""
}

func (x *ObjectTradeInResponse) GetTradeInPrice() float64 {
	if x != nil && x.TradeInPrice != nil {
		return *x.TradeInPrice
	}
	return 0
}

func (x *ObjectTradeInResponse) GetServiceObject() int64 {
	if x != nil && x.ServiceObject != nil {
		return *x.ServiceObject
	}
	return 0
}

func (x *ObjectTradeInResponse) GetMediaPath() string {
	if x != nil && x.MediaPath != nil {
		return *x.MediaPath
	}
	return ""
}

func (x *ObjectTradeInResponse) GetTradeInReasons() string {
	if x != nil && x.TradeInReasons != nil {
		return *x.TradeInReasons
	}
	return ""
}

type OptionItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int32  `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	Label string `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
}

func (x *OptionItemResponse) Reset() {
	*x = OptionItemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OptionItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OptionItemResponse) ProtoMessage() {}

func (x *OptionItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OptionItemResponse.ProtoReflect.Descriptor instead.
func (*OptionItemResponse) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{59}
}

func (x *OptionItemResponse) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *OptionItemResponse) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

type RetrieveGoodsDeliverRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RetrieveGoodsDeliverRequest) Reset() {
	*x = RetrieveGoodsDeliverRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveGoodsDeliverRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveGoodsDeliverRequest) ProtoMessage() {}

func (x *RetrieveGoodsDeliverRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveGoodsDeliverRequest.ProtoReflect.Descriptor instead.
func (*RetrieveGoodsDeliverRequest) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{60}
}

func (x *RetrieveGoodsDeliverRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type RetrieveGoodsInvoiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RetrieveGoodsInvoiceRequest) Reset() {
	*x = RetrieveGoodsInvoiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveGoodsInvoiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveGoodsInvoiceRequest) ProtoMessage() {}

func (x *RetrieveGoodsInvoiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveGoodsInvoiceRequest.ProtoReflect.Descriptor instead.
func (*RetrieveGoodsInvoiceRequest) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{61}
}

func (x *RetrieveGoodsInvoiceRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type RetrieveGoodsPayRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RetrieveGoodsPayRequest) Reset() {
	*x = RetrieveGoodsPayRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveGoodsPayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveGoodsPayRequest) ProtoMessage() {}

func (x *RetrieveGoodsPayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveGoodsPayRequest.ProtoReflect.Descriptor instead.
func (*RetrieveGoodsPayRequest) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{62}
}

func (x *RetrieveGoodsPayRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type RetrieveGoodsReturnRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RetrieveGoodsReturnRequest) Reset() {
	*x = RetrieveGoodsReturnRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveGoodsReturnRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveGoodsReturnRequest) ProtoMessage() {}

func (x *RetrieveGoodsReturnRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveGoodsReturnRequest.ProtoReflect.Descriptor instead.
func (*RetrieveGoodsReturnRequest) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{63}
}

func (x *RetrieveGoodsReturnRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type RetrieveObjectComplainRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RetrieveObjectComplainRequest) Reset() {
	*x = RetrieveObjectComplainRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveObjectComplainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveObjectComplainRequest) ProtoMessage() {}

func (x *RetrieveObjectComplainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveObjectComplainRequest.ProtoReflect.Descriptor instead.
func (*RetrieveObjectComplainRequest) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{64}
}

func (x *RetrieveObjectComplainRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type RetrieveObjectFeedbackRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RetrieveObjectFeedbackRequest) Reset() {
	*x = RetrieveObjectFeedbackRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveObjectFeedbackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveObjectFeedbackRequest) ProtoMessage() {}

func (x *RetrieveObjectFeedbackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveObjectFeedbackRequest.ProtoReflect.Descriptor instead.
func (*RetrieveObjectFeedbackRequest) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{65}
}

func (x *RetrieveObjectFeedbackRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type RetrieveObjectRepairRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RetrieveObjectRepairRequest) Reset() {
	*x = RetrieveObjectRepairRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveObjectRepairRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveObjectRepairRequest) ProtoMessage() {}

func (x *RetrieveObjectRepairRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveObjectRepairRequest.ProtoReflect.Descriptor instead.
func (*RetrieveObjectRepairRequest) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{66}
}

func (x *RetrieveObjectRepairRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type RetrieveObjectSwapRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RetrieveObjectSwapRequest) Reset() {
	*x = RetrieveObjectSwapRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveObjectSwapRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveObjectSwapRequest) ProtoMessage() {}

func (x *RetrieveObjectSwapRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveObjectSwapRequest.ProtoReflect.Descriptor instead.
func (*RetrieveObjectSwapRequest) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{67}
}

func (x *RetrieveObjectSwapRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type RetrieveObjectTailorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RetrieveObjectTailorRequest) Reset() {
	*x = RetrieveObjectTailorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveObjectTailorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveObjectTailorRequest) ProtoMessage() {}

func (x *RetrieveObjectTailorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveObjectTailorRequest.ProtoReflect.Descriptor instead.
func (*RetrieveObjectTailorRequest) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{68}
}

func (x *RetrieveObjectTailorRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type RetrieveObjectTradeInRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RetrieveObjectTradeInRequest) Reset() {
	*x = RetrieveObjectTradeInRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveObjectTradeInRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveObjectTradeInRequest) ProtoMessage() {}

func (x *RetrieveObjectTradeInRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveObjectTradeInRequest.ProtoReflect.Descriptor instead.
func (*RetrieveObjectTradeInRequest) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{69}
}

func (x *RetrieveObjectTradeInRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ServiceGoodsDeliverListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*ServiceGoodsDeliverResponse `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Count   int32                          `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *ServiceGoodsDeliverListResponse) Reset() {
	*x = ServiceGoodsDeliverListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceGoodsDeliverListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceGoodsDeliverListResponse) ProtoMessage() {}

func (x *ServiceGoodsDeliverListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceGoodsDeliverListResponse.ProtoReflect.Descriptor instead.
func (*ServiceGoodsDeliverListResponse) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{70}
}

func (x *ServiceGoodsDeliverListResponse) GetResults() []*ServiceGoodsDeliverResponse {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *ServiceGoodsDeliverListResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ServiceGoodsDeliverRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Filters       string   `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
	CtmOrder      *int64   `protobuf:"varint,3,opt,name=ctm_order,json=ctmOrder,proto3,oneof" json:"ctm_order,omitempty"`
	CanEdit       bool     `protobuf:"varint,4,opt,name=can_edit,json=canEdit,proto3" json:"can_edit,omitempty"`
	Num           int32    `protobuf:"varint,5,opt,name=num,proto3" json:"num,omitempty"`
	Price         float64  `protobuf:"fixed64,6,opt,name=price,proto3" json:"price,omitempty"`
	AdjustAmount  float64  `protobuf:"fixed64,7,opt,name=adjust_amount,json=adjustAmount,proto3" json:"adjust_amount,omitempty"`
	Discount      float64  `protobuf:"fixed64,8,opt,name=discount,proto3" json:"discount,omitempty"`
	ShareDiscount float64  `protobuf:"fixed64,9,opt,name=share_discount,json=shareDiscount,proto3" json:"share_discount,omitempty"`
	ShareAmount   float64  `protobuf:"fixed64,10,opt,name=share_amount,json=shareAmount,proto3" json:"share_amount,omitempty"`
	DebitAmount   *float64 `protobuf:"fixed64,11,opt,name=debit_amount,json=debitAmount,proto3,oneof" json:"debit_amount,omitempty"`
	PriceScore    *int32   `protobuf:"varint,12,opt,name=price_score,json=priceScore,proto3,oneof" json:"price_score,omitempty"`
	PriceBadge    *int32   `protobuf:"varint,13,opt,name=price_badge,json=priceBadge,proto3,oneof" json:"price_badge,omitempty"`
	PriceNut      *int32   `protobuf:"varint,14,opt,name=price_nut,json=priceNut,proto3,oneof" json:"price_nut,omitempty"`
	Status        *int32   `protobuf:"varint,15,opt,name=status,proto3,oneof" json:"status,omitempty"`
	RefundStatus  *int32   `protobuf:"varint,16,opt,name=refund_status,json=refundStatus,proto3,oneof" json:"refund_status,omitempty"`
	GoodsId       *string  `protobuf:"bytes,17,opt,name=goods_id,json=goodsId,proto3,oneof" json:"goods_id,omitempty"`
	GoodsName     *string  `protobuf:"bytes,18,opt,name=goods_name,json=goodsName,proto3,oneof" json:"goods_name,omitempty"`
	GoodsSpu      *string  `protobuf:"bytes,19,opt,name=goods_spu,json=goodsSpu,proto3,oneof" json:"goods_spu,omitempty"`
	SpecNo        string   `protobuf:"bytes,20,opt,name=spec_no,json=specNo,proto3" json:"spec_no,omitempty"`
	CtmRefund     *int64   `protobuf:"varint,21,opt,name=ctm_refund,json=ctmRefund,proto3,oneof" json:"ctm_refund,omitempty"`
	CtmService    *int64   `protobuf:"varint,22,opt,name=ctm_service,json=ctmService,proto3,oneof" json:"ctm_service,omitempty"`
	RefundOrders  *int64   `protobuf:"varint,23,opt,name=refund_orders,json=refundOrders,proto3,oneof" json:"refund_orders,omitempty"`
	SpecName      *string  `protobuf:"bytes,24,opt,name=spec_name,json=specName,proto3,oneof" json:"spec_name,omitempty"`
	RfidCode      *string  `protobuf:"bytes,25,opt,name=rfid_code,json=rfidCode,proto3,oneof" json:"rfid_code,omitempty"`
	SecurityCode  *string  `protobuf:"bytes,26,opt,name=security_code,json=securityCode,proto3,oneof" json:"security_code,omitempty"`
	GoodsNo       *string  `protobuf:"bytes,27,opt,name=goods_no,json=goodsNo,proto3,oneof" json:"goods_no,omitempty"`
}

func (x *ServiceGoodsDeliverRequest) Reset() {
	*x = ServiceGoodsDeliverRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceGoodsDeliverRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceGoodsDeliverRequest) ProtoMessage() {}

func (x *ServiceGoodsDeliverRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceGoodsDeliverRequest.ProtoReflect.Descriptor instead.
func (*ServiceGoodsDeliverRequest) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{71}
}

func (x *ServiceGoodsDeliverRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ServiceGoodsDeliverRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *ServiceGoodsDeliverRequest) GetCtmOrder() int64 {
	if x != nil && x.CtmOrder != nil {
		return *x.CtmOrder
	}
	return 0
}

func (x *ServiceGoodsDeliverRequest) GetCanEdit() bool {
	if x != nil {
		return x.CanEdit
	}
	return false
}

func (x *ServiceGoodsDeliverRequest) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *ServiceGoodsDeliverRequest) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *ServiceGoodsDeliverRequest) GetAdjustAmount() float64 {
	if x != nil {
		return x.AdjustAmount
	}
	return 0
}

func (x *ServiceGoodsDeliverRequest) GetDiscount() float64 {
	if x != nil {
		return x.Discount
	}
	return 0
}

func (x *ServiceGoodsDeliverRequest) GetShareDiscount() float64 {
	if x != nil {
		return x.ShareDiscount
	}
	return 0
}

func (x *ServiceGoodsDeliverRequest) GetShareAmount() float64 {
	if x != nil {
		return x.ShareAmount
	}
	return 0
}

func (x *ServiceGoodsDeliverRequest) GetDebitAmount() float64 {
	if x != nil && x.DebitAmount != nil {
		return *x.DebitAmount
	}
	return 0
}

func (x *ServiceGoodsDeliverRequest) GetPriceScore() int32 {
	if x != nil && x.PriceScore != nil {
		return *x.PriceScore
	}
	return 0
}

func (x *ServiceGoodsDeliverRequest) GetPriceBadge() int32 {
	if x != nil && x.PriceBadge != nil {
		return *x.PriceBadge
	}
	return 0
}

func (x *ServiceGoodsDeliverRequest) GetPriceNut() int32 {
	if x != nil && x.PriceNut != nil {
		return *x.PriceNut
	}
	return 0
}

func (x *ServiceGoodsDeliverRequest) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *ServiceGoodsDeliverRequest) GetRefundStatus() int32 {
	if x != nil && x.RefundStatus != nil {
		return *x.RefundStatus
	}
	return 0
}

func (x *ServiceGoodsDeliverRequest) GetGoodsId() string {
	if x != nil && x.GoodsId != nil {
		return *x.GoodsId
	}
	return ""
}

func (x *ServiceGoodsDeliverRequest) GetGoodsName() string {
	if x != nil && x.GoodsName != nil {
		return *x.GoodsName
	}
	return ""
}

func (x *ServiceGoodsDeliverRequest) GetGoodsSpu() string {
	if x != nil && x.GoodsSpu != nil {
		return *x.GoodsSpu
	}
	return ""
}

func (x *ServiceGoodsDeliverRequest) GetSpecNo() string {
	if x != nil {
		return x.SpecNo
	}
	return ""
}

func (x *ServiceGoodsDeliverRequest) GetCtmRefund() int64 {
	if x != nil && x.CtmRefund != nil {
		return *x.CtmRefund
	}
	return 0
}

func (x *ServiceGoodsDeliverRequest) GetCtmService() int64 {
	if x != nil && x.CtmService != nil {
		return *x.CtmService
	}
	return 0
}

func (x *ServiceGoodsDeliverRequest) GetRefundOrders() int64 {
	if x != nil && x.RefundOrders != nil {
		return *x.RefundOrders
	}
	return 0
}

func (x *ServiceGoodsDeliverRequest) GetSpecName() string {
	if x != nil && x.SpecName != nil {
		return *x.SpecName
	}
	return ""
}

func (x *ServiceGoodsDeliverRequest) GetRfidCode() string {
	if x != nil && x.RfidCode != nil {
		return *x.RfidCode
	}
	return ""
}

func (x *ServiceGoodsDeliverRequest) GetSecurityCode() string {
	if x != nil && x.SecurityCode != nil {
		return *x.SecurityCode
	}
	return ""
}

func (x *ServiceGoodsDeliverRequest) GetGoodsNo() string {
	if x != nil && x.GoodsNo != nil {
		return *x.GoodsNo
	}
	return ""
}

type ServiceGoodsDeliverResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	StatusName       string   `protobuf:"bytes,2,opt,name=status_name,json=statusName,proto3" json:"status_name,omitempty"`
	RefundStatusName string   `protobuf:"bytes,3,opt,name=refund_status_name,json=refundStatusName,proto3" json:"refund_status_name,omitempty"`
	CtmOrder         *int64   `protobuf:"varint,4,opt,name=ctm_order,json=ctmOrder,proto3,oneof" json:"ctm_order,omitempty"`
	CreateTime       string   `protobuf:"bytes,5,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime       string   `protobuf:"bytes,6,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	CanEdit          bool     `protobuf:"varint,7,opt,name=can_edit,json=canEdit,proto3" json:"can_edit,omitempty"`
	Num              int32    `protobuf:"varint,8,opt,name=num,proto3" json:"num,omitempty"`
	Price            float64  `protobuf:"fixed64,9,opt,name=price,proto3" json:"price,omitempty"`
	AdjustAmount     float64  `protobuf:"fixed64,10,opt,name=adjust_amount,json=adjustAmount,proto3" json:"adjust_amount,omitempty"`
	Discount         float64  `protobuf:"fixed64,11,opt,name=discount,proto3" json:"discount,omitempty"`
	ShareDiscount    float64  `protobuf:"fixed64,12,opt,name=share_discount,json=shareDiscount,proto3" json:"share_discount,omitempty"`
	ShareAmount      float64  `protobuf:"fixed64,13,opt,name=share_amount,json=shareAmount,proto3" json:"share_amount,omitempty"`
	DebitAmount      *float64 `protobuf:"fixed64,14,opt,name=debit_amount,json=debitAmount,proto3,oneof" json:"debit_amount,omitempty"`
	PriceScore       *int32   `protobuf:"varint,15,opt,name=price_score,json=priceScore,proto3,oneof" json:"price_score,omitempty"`
	PriceBadge       *int32   `protobuf:"varint,16,opt,name=price_badge,json=priceBadge,proto3,oneof" json:"price_badge,omitempty"`
	PriceNut         *int32   `protobuf:"varint,17,opt,name=price_nut,json=priceNut,proto3,oneof" json:"price_nut,omitempty"`
	Status           *int32   `protobuf:"varint,18,opt,name=status,proto3,oneof" json:"status,omitempty"`
	RefundStatus     *int32   `protobuf:"varint,19,opt,name=refund_status,json=refundStatus,proto3,oneof" json:"refund_status,omitempty"`
	GoodsId          *string  `protobuf:"bytes,20,opt,name=goods_id,json=goodsId,proto3,oneof" json:"goods_id,omitempty"`
	GoodsName        *string  `protobuf:"bytes,21,opt,name=goods_name,json=goodsName,proto3,oneof" json:"goods_name,omitempty"`
	GoodsSpu         *string  `protobuf:"bytes,22,opt,name=goods_spu,json=goodsSpu,proto3,oneof" json:"goods_spu,omitempty"`
	SpecNo           string   `protobuf:"bytes,23,opt,name=spec_no,json=specNo,proto3" json:"spec_no,omitempty"`
	CtmRefund        *int64   `protobuf:"varint,24,opt,name=ctm_refund,json=ctmRefund,proto3,oneof" json:"ctm_refund,omitempty"`
	CtmService       *int64   `protobuf:"varint,25,opt,name=ctm_service,json=ctmService,proto3,oneof" json:"ctm_service,omitempty"`
	RefundOrders     *int64   `protobuf:"varint,26,opt,name=refund_orders,json=refundOrders,proto3,oneof" json:"refund_orders,omitempty"`
	SpecName         *string  `protobuf:"bytes,27,opt,name=spec_name,json=specName,proto3,oneof" json:"spec_name,omitempty"`
	RfidCode         *string  `protobuf:"bytes,28,opt,name=rfid_code,json=rfidCode,proto3,oneof" json:"rfid_code,omitempty"`
	SecurityCode     *string  `protobuf:"bytes,29,opt,name=security_code,json=securityCode,proto3,oneof" json:"security_code,omitempty"`
	GoodsNo          *string  `protobuf:"bytes,30,opt,name=goods_no,json=goodsNo,proto3,oneof" json:"goods_no,omitempty"`
}

func (x *ServiceGoodsDeliverResponse) Reset() {
	*x = ServiceGoodsDeliverResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceGoodsDeliverResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceGoodsDeliverResponse) ProtoMessage() {}

func (x *ServiceGoodsDeliverResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceGoodsDeliverResponse.ProtoReflect.Descriptor instead.
func (*ServiceGoodsDeliverResponse) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{72}
}

func (x *ServiceGoodsDeliverResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ServiceGoodsDeliverResponse) GetStatusName() string {
	if x != nil {
		return x.StatusName
	}
	return ""
}

func (x *ServiceGoodsDeliverResponse) GetRefundStatusName() string {
	if x != nil {
		return x.RefundStatusName
	}
	return ""
}

func (x *ServiceGoodsDeliverResponse) GetCtmOrder() int64 {
	if x != nil && x.CtmOrder != nil {
		return *x.CtmOrder
	}
	return 0
}

func (x *ServiceGoodsDeliverResponse) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *ServiceGoodsDeliverResponse) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *ServiceGoodsDeliverResponse) GetCanEdit() bool {
	if x != nil {
		return x.CanEdit
	}
	return false
}

func (x *ServiceGoodsDeliverResponse) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *ServiceGoodsDeliverResponse) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *ServiceGoodsDeliverResponse) GetAdjustAmount() float64 {
	if x != nil {
		return x.AdjustAmount
	}
	return 0
}

func (x *ServiceGoodsDeliverResponse) GetDiscount() float64 {
	if x != nil {
		return x.Discount
	}
	return 0
}

func (x *ServiceGoodsDeliverResponse) GetShareDiscount() float64 {
	if x != nil {
		return x.ShareDiscount
	}
	return 0
}

func (x *ServiceGoodsDeliverResponse) GetShareAmount() float64 {
	if x != nil {
		return x.ShareAmount
	}
	return 0
}

func (x *ServiceGoodsDeliverResponse) GetDebitAmount() float64 {
	if x != nil && x.DebitAmount != nil {
		return *x.DebitAmount
	}
	return 0
}

func (x *ServiceGoodsDeliverResponse) GetPriceScore() int32 {
	if x != nil && x.PriceScore != nil {
		return *x.PriceScore
	}
	return 0
}

func (x *ServiceGoodsDeliverResponse) GetPriceBadge() int32 {
	if x != nil && x.PriceBadge != nil {
		return *x.PriceBadge
	}
	return 0
}

func (x *ServiceGoodsDeliverResponse) GetPriceNut() int32 {
	if x != nil && x.PriceNut != nil {
		return *x.PriceNut
	}
	return 0
}

func (x *ServiceGoodsDeliverResponse) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *ServiceGoodsDeliverResponse) GetRefundStatus() int32 {
	if x != nil && x.RefundStatus != nil {
		return *x.RefundStatus
	}
	return 0
}

func (x *ServiceGoodsDeliverResponse) GetGoodsId() string {
	if x != nil && x.GoodsId != nil {
		return *x.GoodsId
	}
	return ""
}

func (x *ServiceGoodsDeliverResponse) GetGoodsName() string {
	if x != nil && x.GoodsName != nil {
		return *x.GoodsName
	}
	return ""
}

func (x *ServiceGoodsDeliverResponse) GetGoodsSpu() string {
	if x != nil && x.GoodsSpu != nil {
		return *x.GoodsSpu
	}
	return ""
}

func (x *ServiceGoodsDeliverResponse) GetSpecNo() string {
	if x != nil {
		return x.SpecNo
	}
	return ""
}

func (x *ServiceGoodsDeliverResponse) GetCtmRefund() int64 {
	if x != nil && x.CtmRefund != nil {
		return *x.CtmRefund
	}
	return 0
}

func (x *ServiceGoodsDeliverResponse) GetCtmService() int64 {
	if x != nil && x.CtmService != nil {
		return *x.CtmService
	}
	return 0
}

func (x *ServiceGoodsDeliverResponse) GetRefundOrders() int64 {
	if x != nil && x.RefundOrders != nil {
		return *x.RefundOrders
	}
	return 0
}

func (x *ServiceGoodsDeliverResponse) GetSpecName() string {
	if x != nil && x.SpecName != nil {
		return *x.SpecName
	}
	return ""
}

func (x *ServiceGoodsDeliverResponse) GetRfidCode() string {
	if x != nil && x.RfidCode != nil {
		return *x.RfidCode
	}
	return ""
}

func (x *ServiceGoodsDeliverResponse) GetSecurityCode() string {
	if x != nil && x.SecurityCode != nil {
		return *x.SecurityCode
	}
	return ""
}

func (x *ServiceGoodsDeliverResponse) GetGoodsNo() string {
	if x != nil && x.GoodsNo != nil {
		return *x.GoodsNo
	}
	return ""
}

type ServiceGoodsInvoiceChildrenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	InvoiceTypeName string   `protobuf:"bytes,2,opt,name=invoice_type_name,json=invoiceTypeName,proto3" json:"invoice_type_name,omitempty"`
	PayerTypeName   string   `protobuf:"bytes,3,opt,name=payer_type_name,json=payerTypeName,proto3" json:"payer_type_name,omitempty"`
	ReasonTypeName  string   `protobuf:"bytes,4,opt,name=reason_type_name,json=reasonTypeName,proto3" json:"reason_type_name,omitempty"`
	CreateTime      string   `protobuf:"bytes,5,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime      string   `protobuf:"bytes,6,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	InvoiceType     int32    `protobuf:"varint,7,opt,name=invoice_type,json=invoiceType,proto3" json:"invoice_type,omitempty"`
	PayerType       int32    `protobuf:"varint,8,opt,name=payer_type,json=payerType,proto3" json:"payer_type,omitempty"`
	PayerName       *string  `protobuf:"bytes,9,opt,name=payer_name,json=payerName,proto3,oneof" json:"payer_name,omitempty"`
	PayerRegisterNo *string  `protobuf:"bytes,10,opt,name=payer_register_no,json=payerRegisterNo,proto3,oneof" json:"payer_register_no,omitempty"`
	PayerPhone      *string  `protobuf:"bytes,11,opt,name=payer_phone,json=payerPhone,proto3,oneof" json:"payer_phone,omitempty"`
	PayerEmail      *string  `protobuf:"bytes,12,opt,name=payer_email,json=payerEmail,proto3,oneof" json:"payer_email,omitempty"`
	PayerAddress    *string  `protobuf:"bytes,13,opt,name=payer_address,json=payerAddress,proto3,oneof" json:"payer_address,omitempty"`
	PayerBank       *string  `protobuf:"bytes,14,opt,name=payer_bank,json=payerBank,proto3,oneof" json:"payer_bank,omitempty"`
	PayerAccount    *string  `protobuf:"bytes,15,opt,name=payer_account,json=payerAccount,proto3,oneof" json:"payer_account,omitempty"`
	InvoiceAmount   *float64 `protobuf:"fixed64,16,opt,name=invoice_amount,json=invoiceAmount,proto3,oneof" json:"invoice_amount,omitempty"`
	InvoiceRemark   *string  `protobuf:"bytes,17,opt,name=invoice_remark,json=invoiceRemark,proto3,oneof" json:"invoice_remark,omitempty"`
	ReasonType      int32    `protobuf:"varint,18,opt,name=reason_type,json=reasonType,proto3" json:"reason_type,omitempty"`
	InvoiceNo       *string  `protobuf:"bytes,19,opt,name=invoice_no,json=invoiceNo,proto3,oneof" json:"invoice_no,omitempty"`
	InvoiceCode     *string  `protobuf:"bytes,20,opt,name=invoice_code,json=invoiceCode,proto3,oneof" json:"invoice_code,omitempty"`
	CtmOrder        *int64   `protobuf:"varint,21,opt,name=ctm_order,json=ctmOrder,proto3,oneof" json:"ctm_order,omitempty"`
	CtmService      *int64   `protobuf:"varint,22,opt,name=ctm_service,json=ctmService,proto3,oneof" json:"ctm_service,omitempty"`
	ParentInvoice   *int64   `protobuf:"varint,23,opt,name=parent_invoice,json=parentInvoice,proto3,oneof" json:"parent_invoice,omitempty"`
}

func (x *ServiceGoodsInvoiceChildrenResponse) Reset() {
	*x = ServiceGoodsInvoiceChildrenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceGoodsInvoiceChildrenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceGoodsInvoiceChildrenResponse) ProtoMessage() {}

func (x *ServiceGoodsInvoiceChildrenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceGoodsInvoiceChildrenResponse.ProtoReflect.Descriptor instead.
func (*ServiceGoodsInvoiceChildrenResponse) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{73}
}

func (x *ServiceGoodsInvoiceChildrenResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ServiceGoodsInvoiceChildrenResponse) GetInvoiceTypeName() string {
	if x != nil {
		return x.InvoiceTypeName
	}
	return ""
}

func (x *ServiceGoodsInvoiceChildrenResponse) GetPayerTypeName() string {
	if x != nil {
		return x.PayerTypeName
	}
	return ""
}

func (x *ServiceGoodsInvoiceChildrenResponse) GetReasonTypeName() string {
	if x != nil {
		return x.ReasonTypeName
	}
	return ""
}

func (x *ServiceGoodsInvoiceChildrenResponse) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *ServiceGoodsInvoiceChildrenResponse) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *ServiceGoodsInvoiceChildrenResponse) GetInvoiceType() int32 {
	if x != nil {
		return x.InvoiceType
	}
	return 0
}

func (x *ServiceGoodsInvoiceChildrenResponse) GetPayerType() int32 {
	if x != nil {
		return x.PayerType
	}
	return 0
}

func (x *ServiceGoodsInvoiceChildrenResponse) GetPayerName() string {
	if x != nil && x.PayerName != nil {
		return *x.PayerName
	}
	return ""
}

func (x *ServiceGoodsInvoiceChildrenResponse) GetPayerRegisterNo() string {
	if x != nil && x.PayerRegisterNo != nil {
		return *x.PayerRegisterNo
	}
	return ""
}

func (x *ServiceGoodsInvoiceChildrenResponse) GetPayerPhone() string {
	if x != nil && x.PayerPhone != nil {
		return *x.PayerPhone
	}
	return ""
}

func (x *ServiceGoodsInvoiceChildrenResponse) GetPayerEmail() string {
	if x != nil && x.PayerEmail != nil {
		return *x.PayerEmail
	}
	return ""
}

func (x *ServiceGoodsInvoiceChildrenResponse) GetPayerAddress() string {
	if x != nil && x.PayerAddress != nil {
		return *x.PayerAddress
	}
	return ""
}

func (x *ServiceGoodsInvoiceChildrenResponse) GetPayerBank() string {
	if x != nil && x.PayerBank != nil {
		return *x.PayerBank
	}
	return ""
}

func (x *ServiceGoodsInvoiceChildrenResponse) GetPayerAccount() string {
	if x != nil && x.PayerAccount != nil {
		return *x.PayerAccount
	}
	return ""
}

func (x *ServiceGoodsInvoiceChildrenResponse) GetInvoiceAmount() float64 {
	if x != nil && x.InvoiceAmount != nil {
		return *x.InvoiceAmount
	}
	return 0
}

func (x *ServiceGoodsInvoiceChildrenResponse) GetInvoiceRemark() string {
	if x != nil && x.InvoiceRemark != nil {
		return *x.InvoiceRemark
	}
	return ""
}

func (x *ServiceGoodsInvoiceChildrenResponse) GetReasonType() int32 {
	if x != nil {
		return x.ReasonType
	}
	return 0
}

func (x *ServiceGoodsInvoiceChildrenResponse) GetInvoiceNo() string {
	if x != nil && x.InvoiceNo != nil {
		return *x.InvoiceNo
	}
	return ""
}

func (x *ServiceGoodsInvoiceChildrenResponse) GetInvoiceCode() string {
	if x != nil && x.InvoiceCode != nil {
		return *x.InvoiceCode
	}
	return ""
}

func (x *ServiceGoodsInvoiceChildrenResponse) GetCtmOrder() int64 {
	if x != nil && x.CtmOrder != nil {
		return *x.CtmOrder
	}
	return 0
}

func (x *ServiceGoodsInvoiceChildrenResponse) GetCtmService() int64 {
	if x != nil && x.CtmService != nil {
		return *x.CtmService
	}
	return 0
}

func (x *ServiceGoodsInvoiceChildrenResponse) GetParentInvoice() int64 {
	if x != nil && x.ParentInvoice != nil {
		return *x.ParentInvoice
	}
	return 0
}

type ServiceGoodsInvoiceListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*ServiceGoodsInvoiceResponse `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Count   int32                          `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *ServiceGoodsInvoiceListResponse) Reset() {
	*x = ServiceGoodsInvoiceListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceGoodsInvoiceListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceGoodsInvoiceListResponse) ProtoMessage() {}

func (x *ServiceGoodsInvoiceListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceGoodsInvoiceListResponse.ProtoReflect.Descriptor instead.
func (*ServiceGoodsInvoiceListResponse) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{74}
}

func (x *ServiceGoodsInvoiceListResponse) GetResults() []*ServiceGoodsInvoiceResponse {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *ServiceGoodsInvoiceListResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ServiceGoodsInvoiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Filters         string   `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
	CtmOrder        *int64   `protobuf:"varint,31,opt,name=ctm_order,json=ctmOrder,proto3,oneof" json:"ctm_order,omitempty"`
	CtmService      *int64   `protobuf:"varint,33,opt,name=ctm_service,json=ctmService,proto3,oneof" json:"ctm_service,omitempty"`
	InvoiceType     int32    `protobuf:"varint,34,opt,name=invoice_type,json=invoiceType,proto3" json:"invoice_type,omitempty"`
	PayerType       int32    `protobuf:"varint,35,opt,name=payer_type,json=payerType,proto3" json:"payer_type,omitempty"`
	PayerName       *string  `protobuf:"bytes,36,opt,name=payer_name,json=payerName,proto3,oneof" json:"payer_name,omitempty"`
	PayerRegisterNo *string  `protobuf:"bytes,37,opt,name=payer_register_no,json=payerRegisterNo,proto3,oneof" json:"payer_register_no,omitempty"`
	PayerPhone      *string  `protobuf:"bytes,38,opt,name=payer_phone,json=payerPhone,proto3,oneof" json:"payer_phone,omitempty"`
	PayerEmail      *string  `protobuf:"bytes,39,opt,name=payer_email,json=payerEmail,proto3,oneof" json:"payer_email,omitempty"`
	PayerAddress    *string  `protobuf:"bytes,40,opt,name=payer_address,json=payerAddress,proto3,oneof" json:"payer_address,omitempty"`
	PayerBank       *string  `protobuf:"bytes,41,opt,name=payer_bank,json=payerBank,proto3,oneof" json:"payer_bank,omitempty"`
	PayerAccount    *string  `protobuf:"bytes,42,opt,name=payer_account,json=payerAccount,proto3,oneof" json:"payer_account,omitempty"`
	InvoiceAmount   *float64 `protobuf:"fixed64,43,opt,name=invoice_amount,json=invoiceAmount,proto3,oneof" json:"invoice_amount,omitempty"`
	InvoiceRemark   *string  `protobuf:"bytes,44,opt,name=invoice_remark,json=invoiceRemark,proto3,oneof" json:"invoice_remark,omitempty"`
	ReasonType      int32    `protobuf:"varint,45,opt,name=reason_type,json=reasonType,proto3" json:"reason_type,omitempty"`
	InvoiceNo       *string  `protobuf:"bytes,46,opt,name=invoice_no,json=invoiceNo,proto3,oneof" json:"invoice_no,omitempty"`
	InvoiceCode     *string  `protobuf:"bytes,47,opt,name=invoice_code,json=invoiceCode,proto3,oneof" json:"invoice_code,omitempty"`
	ParentInvoice   *int64   `protobuf:"varint,48,opt,name=parent_invoice,json=parentInvoice,proto3,oneof" json:"parent_invoice,omitempty"`
}

func (x *ServiceGoodsInvoiceRequest) Reset() {
	*x = ServiceGoodsInvoiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceGoodsInvoiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceGoodsInvoiceRequest) ProtoMessage() {}

func (x *ServiceGoodsInvoiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceGoodsInvoiceRequest.ProtoReflect.Descriptor instead.
func (*ServiceGoodsInvoiceRequest) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{75}
}

func (x *ServiceGoodsInvoiceRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ServiceGoodsInvoiceRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *ServiceGoodsInvoiceRequest) GetCtmOrder() int64 {
	if x != nil && x.CtmOrder != nil {
		return *x.CtmOrder
	}
	return 0
}

func (x *ServiceGoodsInvoiceRequest) GetCtmService() int64 {
	if x != nil && x.CtmService != nil {
		return *x.CtmService
	}
	return 0
}

func (x *ServiceGoodsInvoiceRequest) GetInvoiceType() int32 {
	if x != nil {
		return x.InvoiceType
	}
	return 0
}

func (x *ServiceGoodsInvoiceRequest) GetPayerType() int32 {
	if x != nil {
		return x.PayerType
	}
	return 0
}

func (x *ServiceGoodsInvoiceRequest) GetPayerName() string {
	if x != nil && x.PayerName != nil {
		return *x.PayerName
	}
	return ""
}

func (x *ServiceGoodsInvoiceRequest) GetPayerRegisterNo() string {
	if x != nil && x.PayerRegisterNo != nil {
		return *x.PayerRegisterNo
	}
	return ""
}

func (x *ServiceGoodsInvoiceRequest) GetPayerPhone() string {
	if x != nil && x.PayerPhone != nil {
		return *x.PayerPhone
	}
	return ""
}

func (x *ServiceGoodsInvoiceRequest) GetPayerEmail() string {
	if x != nil && x.PayerEmail != nil {
		return *x.PayerEmail
	}
	return ""
}

func (x *ServiceGoodsInvoiceRequest) GetPayerAddress() string {
	if x != nil && x.PayerAddress != nil {
		return *x.PayerAddress
	}
	return ""
}

func (x *ServiceGoodsInvoiceRequest) GetPayerBank() string {
	if x != nil && x.PayerBank != nil {
		return *x.PayerBank
	}
	return ""
}

func (x *ServiceGoodsInvoiceRequest) GetPayerAccount() string {
	if x != nil && x.PayerAccount != nil {
		return *x.PayerAccount
	}
	return ""
}

func (x *ServiceGoodsInvoiceRequest) GetInvoiceAmount() float64 {
	if x != nil && x.InvoiceAmount != nil {
		return *x.InvoiceAmount
	}
	return 0
}

func (x *ServiceGoodsInvoiceRequest) GetInvoiceRemark() string {
	if x != nil && x.InvoiceRemark != nil {
		return *x.InvoiceRemark
	}
	return ""
}

func (x *ServiceGoodsInvoiceRequest) GetReasonType() int32 {
	if x != nil {
		return x.ReasonType
	}
	return 0
}

func (x *ServiceGoodsInvoiceRequest) GetInvoiceNo() string {
	if x != nil && x.InvoiceNo != nil {
		return *x.InvoiceNo
	}
	return ""
}

func (x *ServiceGoodsInvoiceRequest) GetInvoiceCode() string {
	if x != nil && x.InvoiceCode != nil {
		return *x.InvoiceCode
	}
	return ""
}

func (x *ServiceGoodsInvoiceRequest) GetParentInvoice() int64 {
	if x != nil && x.ParentInvoice != nil {
		return *x.ParentInvoice
	}
	return 0
}

type ServiceGoodsInvoiceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int32                                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreateTime      string                                 `protobuf:"bytes,4,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime      string                                 `protobuf:"bytes,5,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	CtmOrder        *int64                                 `protobuf:"varint,34,opt,name=ctm_order,json=ctmOrder,proto3,oneof" json:"ctm_order,omitempty"`
	CtmService      *int64                                 `protobuf:"varint,36,opt,name=ctm_service,json=ctmService,proto3,oneof" json:"ctm_service,omitempty"`
	InvoiceTypeName string                                 `protobuf:"bytes,37,opt,name=invoice_type_name,json=invoiceTypeName,proto3" json:"invoice_type_name,omitempty"`
	PayerTypeName   string                                 `protobuf:"bytes,38,opt,name=payer_type_name,json=payerTypeName,proto3" json:"payer_type_name,omitempty"`
	ReasonTypeName  string                                 `protobuf:"bytes,39,opt,name=reason_type_name,json=reasonTypeName,proto3" json:"reason_type_name,omitempty"`
	Children        []*ServiceGoodsInvoiceChildrenResponse `protobuf:"bytes,40,rep,name=children,proto3" json:"children,omitempty"`
	InvoiceType     int32                                  `protobuf:"varint,41,opt,name=invoice_type,json=invoiceType,proto3" json:"invoice_type,omitempty"`
	PayerType       int32                                  `protobuf:"varint,42,opt,name=payer_type,json=payerType,proto3" json:"payer_type,omitempty"`
	PayerName       *string                                `protobuf:"bytes,43,opt,name=payer_name,json=payerName,proto3,oneof" json:"payer_name,omitempty"`
	PayerRegisterNo *string                                `protobuf:"bytes,44,opt,name=payer_register_no,json=payerRegisterNo,proto3,oneof" json:"payer_register_no,omitempty"`
	PayerPhone      *string                                `protobuf:"bytes,45,opt,name=payer_phone,json=payerPhone,proto3,oneof" json:"payer_phone,omitempty"`
	PayerEmail      *string                                `protobuf:"bytes,46,opt,name=payer_email,json=payerEmail,proto3,oneof" json:"payer_email,omitempty"`
	PayerAddress    *string                                `protobuf:"bytes,47,opt,name=payer_address,json=payerAddress,proto3,oneof" json:"payer_address,omitempty"`
	PayerBank       *string                                `protobuf:"bytes,48,opt,name=payer_bank,json=payerBank,proto3,oneof" json:"payer_bank,omitempty"`
	PayerAccount    *string                                `protobuf:"bytes,49,opt,name=payer_account,json=payerAccount,proto3,oneof" json:"payer_account,omitempty"`
	InvoiceAmount   *float64                               `protobuf:"fixed64,50,opt,name=invoice_amount,json=invoiceAmount,proto3,oneof" json:"invoice_amount,omitempty"`
	InvoiceRemark   *string                                `protobuf:"bytes,51,opt,name=invoice_remark,json=invoiceRemark,proto3,oneof" json:"invoice_remark,omitempty"`
	ReasonType      int32                                  `protobuf:"varint,52,opt,name=reason_type,json=reasonType,proto3" json:"reason_type,omitempty"`
	InvoiceNo       *string                                `protobuf:"bytes,53,opt,name=invoice_no,json=invoiceNo,proto3,oneof" json:"invoice_no,omitempty"`
	InvoiceCode     *string                                `protobuf:"bytes,54,opt,name=invoice_code,json=invoiceCode,proto3,oneof" json:"invoice_code,omitempty"`
	ParentInvoice   *int64                                 `protobuf:"varint,55,opt,name=parent_invoice,json=parentInvoice,proto3,oneof" json:"parent_invoice,omitempty"`
}

func (x *ServiceGoodsInvoiceResponse) Reset() {
	*x = ServiceGoodsInvoiceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceGoodsInvoiceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceGoodsInvoiceResponse) ProtoMessage() {}

func (x *ServiceGoodsInvoiceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceGoodsInvoiceResponse.ProtoReflect.Descriptor instead.
func (*ServiceGoodsInvoiceResponse) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{76}
}

func (x *ServiceGoodsInvoiceResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ServiceGoodsInvoiceResponse) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *ServiceGoodsInvoiceResponse) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *ServiceGoodsInvoiceResponse) GetCtmOrder() int64 {
	if x != nil && x.CtmOrder != nil {
		return *x.CtmOrder
	}
	return 0
}

func (x *ServiceGoodsInvoiceResponse) GetCtmService() int64 {
	if x != nil && x.CtmService != nil {
		return *x.CtmService
	}
	return 0
}

func (x *ServiceGoodsInvoiceResponse) GetInvoiceTypeName() string {
	if x != nil {
		return x.InvoiceTypeName
	}
	return ""
}

func (x *ServiceGoodsInvoiceResponse) GetPayerTypeName() string {
	if x != nil {
		return x.PayerTypeName
	}
	return ""
}

func (x *ServiceGoodsInvoiceResponse) GetReasonTypeName() string {
	if x != nil {
		return x.ReasonTypeName
	}
	return ""
}

func (x *ServiceGoodsInvoiceResponse) GetChildren() []*ServiceGoodsInvoiceChildrenResponse {
	if x != nil {
		return x.Children
	}
	return nil
}

func (x *ServiceGoodsInvoiceResponse) GetInvoiceType() int32 {
	if x != nil {
		return x.InvoiceType
	}
	return 0
}

func (x *ServiceGoodsInvoiceResponse) GetPayerType() int32 {
	if x != nil {
		return x.PayerType
	}
	return 0
}

func (x *ServiceGoodsInvoiceResponse) GetPayerName() string {
	if x != nil && x.PayerName != nil {
		return *x.PayerName
	}
	return ""
}

func (x *ServiceGoodsInvoiceResponse) GetPayerRegisterNo() string {
	if x != nil && x.PayerRegisterNo != nil {
		return *x.PayerRegisterNo
	}
	return ""
}

func (x *ServiceGoodsInvoiceResponse) GetPayerPhone() string {
	if x != nil && x.PayerPhone != nil {
		return *x.PayerPhone
	}
	return ""
}

func (x *ServiceGoodsInvoiceResponse) GetPayerEmail() string {
	if x != nil && x.PayerEmail != nil {
		return *x.PayerEmail
	}
	return ""
}

func (x *ServiceGoodsInvoiceResponse) GetPayerAddress() string {
	if x != nil && x.PayerAddress != nil {
		return *x.PayerAddress
	}
	return ""
}

func (x *ServiceGoodsInvoiceResponse) GetPayerBank() string {
	if x != nil && x.PayerBank != nil {
		return *x.PayerBank
	}
	return ""
}

func (x *ServiceGoodsInvoiceResponse) GetPayerAccount() string {
	if x != nil && x.PayerAccount != nil {
		return *x.PayerAccount
	}
	return ""
}

func (x *ServiceGoodsInvoiceResponse) GetInvoiceAmount() float64 {
	if x != nil && x.InvoiceAmount != nil {
		return *x.InvoiceAmount
	}
	return 0
}

func (x *ServiceGoodsInvoiceResponse) GetInvoiceRemark() string {
	if x != nil && x.InvoiceRemark != nil {
		return *x.InvoiceRemark
	}
	return ""
}

func (x *ServiceGoodsInvoiceResponse) GetReasonType() int32 {
	if x != nil {
		return x.ReasonType
	}
	return 0
}

func (x *ServiceGoodsInvoiceResponse) GetInvoiceNo() string {
	if x != nil && x.InvoiceNo != nil {
		return *x.InvoiceNo
	}
	return ""
}

func (x *ServiceGoodsInvoiceResponse) GetInvoiceCode() string {
	if x != nil && x.InvoiceCode != nil {
		return *x.InvoiceCode
	}
	return ""
}

func (x *ServiceGoodsInvoiceResponse) GetParentInvoice() int64 {
	if x != nil && x.ParentInvoice != nil {
		return *x.ParentInvoice
	}
	return 0
}

type ServiceGoodsPayListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*ServiceGoodsPayResponse `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Count   int32                      `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *ServiceGoodsPayListResponse) Reset() {
	*x = ServiceGoodsPayListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceGoodsPayListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceGoodsPayListResponse) ProtoMessage() {}

func (x *ServiceGoodsPayListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceGoodsPayListResponse.ProtoReflect.Descriptor instead.
func (*ServiceGoodsPayListResponse) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{77}
}

func (x *ServiceGoodsPayListResponse) GetResults() []*ServiceGoodsPayResponse {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *ServiceGoodsPayListResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ServiceGoodsPayRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Filters             string  `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
	PrepayId            *string `protobuf:"bytes,3,opt,name=prepay_id,json=prepayId,proto3,oneof" json:"prepay_id,omitempty"`
	PrepayExpired       *string `protobuf:"bytes,4,opt,name=prepay_expired,json=prepayExpired,proto3,oneof" json:"prepay_expired,omitempty"`
	TradeType           *string `protobuf:"bytes,5,opt,name=trade_type,json=tradeType,proto3,oneof" json:"trade_type,omitempty"`
	TradeState          *string `protobuf:"bytes,6,opt,name=trade_state,json=tradeState,proto3,oneof" json:"trade_state,omitempty"`
	TradeStateDesc      *string `protobuf:"bytes,7,opt,name=trade_state_desc,json=tradeStateDesc,proto3,oneof" json:"trade_state_desc,omitempty"`
	TransactionId       *string `protobuf:"bytes,8,opt,name=transaction_id,json=transactionId,proto3,oneof" json:"transaction_id,omitempty"`
	AppId               *string `protobuf:"bytes,9,opt,name=app_id,json=appId,proto3,oneof" json:"app_id,omitempty"`
	MchId               *string `protobuf:"bytes,10,opt,name=mch_id,json=mchId,proto3,oneof" json:"mch_id,omitempty"`
	OpenId              string  `protobuf:"bytes,11,opt,name=open_id,json=openId,proto3" json:"open_id,omitempty"`
	OutTradeNo          *string `protobuf:"bytes,12,opt,name=out_trade_no,json=outTradeNo,proto3,oneof" json:"out_trade_no,omitempty"`
	Attach              *string `protobuf:"bytes,13,opt,name=attach,proto3,oneof" json:"attach,omitempty"`
	Total               *int32  `protobuf:"varint,14,opt,name=total,proto3,oneof" json:"total,omitempty"`
	PayerTotal          *int32  `protobuf:"varint,15,opt,name=payer_total,json=payerTotal,proto3,oneof" json:"payer_total,omitempty"`
	Currency            *string `protobuf:"bytes,16,opt,name=currency,proto3,oneof" json:"currency,omitempty"`
	BankType            *string `protobuf:"bytes,17,opt,name=bank_type,json=bankType,proto3,oneof" json:"bank_type,omitempty"`
	SuccessTime         *string `protobuf:"bytes,18,opt,name=success_time,json=successTime,proto3,oneof" json:"success_time,omitempty"`
	OutRefundNo         *string `protobuf:"bytes,19,opt,name=out_refund_no,json=outRefundNo,proto3,oneof" json:"out_refund_no,omitempty"`
	Reason              *string `protobuf:"bytes,20,opt,name=reason,proto3,oneof" json:"reason,omitempty"`
	Refund              *int32  `protobuf:"varint,21,opt,name=refund,proto3,oneof" json:"refund,omitempty"`
	PayerRefund         *int32  `protobuf:"varint,22,opt,name=payer_refund,json=payerRefund,proto3,oneof" json:"payer_refund,omitempty"`
	SettlementRefund    *int32  `protobuf:"varint,23,opt,name=settlement_refund,json=settlementRefund,proto3,oneof" json:"settlement_refund,omitempty"`
	SettlementTotal     *int32  `protobuf:"varint,24,opt,name=settlement_total,json=settlementTotal,proto3,oneof" json:"settlement_total,omitempty"`
	DiscountRefund      *int32  `protobuf:"varint,25,opt,name=discount_refund,json=discountRefund,proto3,oneof" json:"discount_refund,omitempty"`
	RefundFee           *int32  `protobuf:"varint,26,opt,name=refund_fee,json=refundFee,proto3,oneof" json:"refund_fee,omitempty"`
	RefundId            *string `protobuf:"bytes,27,opt,name=refund_id,json=refundId,proto3,oneof" json:"refund_id,omitempty"`
	Channel             *string `protobuf:"bytes,28,opt,name=channel,proto3,oneof" json:"channel,omitempty"`
	UserReceivedAccount *string `protobuf:"bytes,29,opt,name=user_received_account,json=userReceivedAccount,proto3,oneof" json:"user_received_account,omitempty"`
	Status              *string `protobuf:"bytes,30,opt,name=status,proto3,oneof" json:"status,omitempty"`
	CtmOrder            *int64  `protobuf:"varint,31,opt,name=ctm_order,json=ctmOrder,proto3,oneof" json:"ctm_order,omitempty"`
	CtmRefund           *int64  `protobuf:"varint,32,opt,name=ctm_refund,json=ctmRefund,proto3,oneof" json:"ctm_refund,omitempty"`
	CtmService          *int64  `protobuf:"varint,33,opt,name=ctm_service,json=ctmService,proto3,oneof" json:"ctm_service,omitempty"`
}

func (x *ServiceGoodsPayRequest) Reset() {
	*x = ServiceGoodsPayRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceGoodsPayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceGoodsPayRequest) ProtoMessage() {}

func (x *ServiceGoodsPayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceGoodsPayRequest.ProtoReflect.Descriptor instead.
func (*ServiceGoodsPayRequest) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{78}
}

func (x *ServiceGoodsPayRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ServiceGoodsPayRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *ServiceGoodsPayRequest) GetPrepayId() string {
	if x != nil && x.PrepayId != nil {
		return *x.PrepayId
	}
	return ""
}

func (x *ServiceGoodsPayRequest) GetPrepayExpired() string {
	if x != nil && x.PrepayExpired != nil {
		return *x.PrepayExpired
	}
	return ""
}

func (x *ServiceGoodsPayRequest) GetTradeType() string {
	if x != nil && x.TradeType != nil {
		return *x.TradeType
	}
	return ""
}

func (x *ServiceGoodsPayRequest) GetTradeState() string {
	if x != nil && x.TradeState != nil {
		return *x.TradeState
	}
	return ""
}

func (x *ServiceGoodsPayRequest) GetTradeStateDesc() string {
	if x != nil && x.TradeStateDesc != nil {
		return *x.TradeStateDesc
	}
	return ""
}

func (x *ServiceGoodsPayRequest) GetTransactionId() string {
	if x != nil && x.TransactionId != nil {
		return *x.TransactionId
	}
	return ""
}

func (x *ServiceGoodsPayRequest) GetAppId() string {
	if x != nil && x.AppId != nil {
		return *x.AppId
	}
	return ""
}

func (x *ServiceGoodsPayRequest) GetMchId() string {
	if x != nil && x.MchId != nil {
		return *x.MchId
	}
	return ""
}

func (x *ServiceGoodsPayRequest) GetOpenId() string {
	if x != nil {
		return x.OpenId
	}
	return ""
}

func (x *ServiceGoodsPayRequest) GetOutTradeNo() string {
	if x != nil && x.OutTradeNo != nil {
		return *x.OutTradeNo
	}
	return ""
}

func (x *ServiceGoodsPayRequest) GetAttach() string {
	if x != nil && x.Attach != nil {
		return *x.Attach
	}
	return ""
}

func (x *ServiceGoodsPayRequest) GetTotal() int32 {
	if x != nil && x.Total != nil {
		return *x.Total
	}
	return 0
}

func (x *ServiceGoodsPayRequest) GetPayerTotal() int32 {
	if x != nil && x.PayerTotal != nil {
		return *x.PayerTotal
	}
	return 0
}

func (x *ServiceGoodsPayRequest) GetCurrency() string {
	if x != nil && x.Currency != nil {
		return *x.Currency
	}
	return ""
}

func (x *ServiceGoodsPayRequest) GetBankType() string {
	if x != nil && x.BankType != nil {
		return *x.BankType
	}
	return ""
}

func (x *ServiceGoodsPayRequest) GetSuccessTime() string {
	if x != nil && x.SuccessTime != nil {
		return *x.SuccessTime
	}
	return ""
}

func (x *ServiceGoodsPayRequest) GetOutRefundNo() string {
	if x != nil && x.OutRefundNo != nil {
		return *x.OutRefundNo
	}
	return ""
}

func (x *ServiceGoodsPayRequest) GetReason() string {
	if x != nil && x.Reason != nil {
		return *x.Reason
	}
	return ""
}

func (x *ServiceGoodsPayRequest) GetRefund() int32 {
	if x != nil && x.Refund != nil {
		return *x.Refund
	}
	return 0
}

func (x *ServiceGoodsPayRequest) GetPayerRefund() int32 {
	if x != nil && x.PayerRefund != nil {
		return *x.PayerRefund
	}
	return 0
}

func (x *ServiceGoodsPayRequest) GetSettlementRefund() int32 {
	if x != nil && x.SettlementRefund != nil {
		return *x.SettlementRefund
	}
	return 0
}

func (x *ServiceGoodsPayRequest) GetSettlementTotal() int32 {
	if x != nil && x.SettlementTotal != nil {
		return *x.SettlementTotal
	}
	return 0
}

func (x *ServiceGoodsPayRequest) GetDiscountRefund() int32 {
	if x != nil && x.DiscountRefund != nil {
		return *x.DiscountRefund
	}
	return 0
}

func (x *ServiceGoodsPayRequest) GetRefundFee() int32 {
	if x != nil && x.RefundFee != nil {
		return *x.RefundFee
	}
	return 0
}

func (x *ServiceGoodsPayRequest) GetRefundId() string {
	if x != nil && x.RefundId != nil {
		return *x.RefundId
	}
	return ""
}

func (x *ServiceGoodsPayRequest) GetChannel() string {
	if x != nil && x.Channel != nil {
		return *x.Channel
	}
	return ""
}

func (x *ServiceGoodsPayRequest) GetUserReceivedAccount() string {
	if x != nil && x.UserReceivedAccount != nil {
		return *x.UserReceivedAccount
	}
	return ""
}

func (x *ServiceGoodsPayRequest) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

func (x *ServiceGoodsPayRequest) GetCtmOrder() int64 {
	if x != nil && x.CtmOrder != nil {
		return *x.CtmOrder
	}
	return 0
}

func (x *ServiceGoodsPayRequest) GetCtmRefund() int64 {
	if x != nil && x.CtmRefund != nil {
		return *x.CtmRefund
	}
	return 0
}

func (x *ServiceGoodsPayRequest) GetCtmService() int64 {
	if x != nil && x.CtmService != nil {
		return *x.CtmService
	}
	return 0
}

type ServiceGoodsPayResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TradeTypeName       string  `protobuf:"bytes,2,opt,name=trade_type_name,json=tradeTypeName,proto3" json:"trade_type_name,omitempty"`
	TradeStatusName     string  `protobuf:"bytes,3,opt,name=trade_status_name,json=tradeStatusName,proto3" json:"trade_status_name,omitempty"`
	CreateTime          string  `protobuf:"bytes,4,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime          string  `protobuf:"bytes,5,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	PrepayId            *string `protobuf:"bytes,6,opt,name=prepay_id,json=prepayId,proto3,oneof" json:"prepay_id,omitempty"`
	PrepayExpired       *string `protobuf:"bytes,7,opt,name=prepay_expired,json=prepayExpired,proto3,oneof" json:"prepay_expired,omitempty"`
	TradeType           *string `protobuf:"bytes,8,opt,name=trade_type,json=tradeType,proto3,oneof" json:"trade_type,omitempty"`
	TradeState          *string `protobuf:"bytes,9,opt,name=trade_state,json=tradeState,proto3,oneof" json:"trade_state,omitempty"`
	TradeStateDesc      *string `protobuf:"bytes,10,opt,name=trade_state_desc,json=tradeStateDesc,proto3,oneof" json:"trade_state_desc,omitempty"`
	TransactionId       *string `protobuf:"bytes,11,opt,name=transaction_id,json=transactionId,proto3,oneof" json:"transaction_id,omitempty"`
	AppId               *string `protobuf:"bytes,12,opt,name=app_id,json=appId,proto3,oneof" json:"app_id,omitempty"`
	MchId               *string `protobuf:"bytes,13,opt,name=mch_id,json=mchId,proto3,oneof" json:"mch_id,omitempty"`
	OpenId              string  `protobuf:"bytes,14,opt,name=open_id,json=openId,proto3" json:"open_id,omitempty"`
	OutTradeNo          *string `protobuf:"bytes,15,opt,name=out_trade_no,json=outTradeNo,proto3,oneof" json:"out_trade_no,omitempty"`
	Attach              *string `protobuf:"bytes,16,opt,name=attach,proto3,oneof" json:"attach,omitempty"`
	Total               *int32  `protobuf:"varint,17,opt,name=total,proto3,oneof" json:"total,omitempty"`
	PayerTotal          *int32  `protobuf:"varint,18,opt,name=payer_total,json=payerTotal,proto3,oneof" json:"payer_total,omitempty"`
	Currency            *string `protobuf:"bytes,19,opt,name=currency,proto3,oneof" json:"currency,omitempty"`
	BankType            *string `protobuf:"bytes,20,opt,name=bank_type,json=bankType,proto3,oneof" json:"bank_type,omitempty"`
	SuccessTime         *string `protobuf:"bytes,21,opt,name=success_time,json=successTime,proto3,oneof" json:"success_time,omitempty"`
	OutRefundNo         *string `protobuf:"bytes,22,opt,name=out_refund_no,json=outRefundNo,proto3,oneof" json:"out_refund_no,omitempty"`
	Reason              *string `protobuf:"bytes,23,opt,name=reason,proto3,oneof" json:"reason,omitempty"`
	Refund              *int32  `protobuf:"varint,24,opt,name=refund,proto3,oneof" json:"refund,omitempty"`
	PayerRefund         *int32  `protobuf:"varint,25,opt,name=payer_refund,json=payerRefund,proto3,oneof" json:"payer_refund,omitempty"`
	SettlementRefund    *int32  `protobuf:"varint,26,opt,name=settlement_refund,json=settlementRefund,proto3,oneof" json:"settlement_refund,omitempty"`
	SettlementTotal     *int32  `protobuf:"varint,27,opt,name=settlement_total,json=settlementTotal,proto3,oneof" json:"settlement_total,omitempty"`
	DiscountRefund      *int32  `protobuf:"varint,28,opt,name=discount_refund,json=discountRefund,proto3,oneof" json:"discount_refund,omitempty"`
	RefundFee           *int32  `protobuf:"varint,29,opt,name=refund_fee,json=refundFee,proto3,oneof" json:"refund_fee,omitempty"`
	RefundId            *string `protobuf:"bytes,30,opt,name=refund_id,json=refundId,proto3,oneof" json:"refund_id,omitempty"`
	Channel             *string `protobuf:"bytes,31,opt,name=channel,proto3,oneof" json:"channel,omitempty"`
	UserReceivedAccount *string `protobuf:"bytes,32,opt,name=user_received_account,json=userReceivedAccount,proto3,oneof" json:"user_received_account,omitempty"`
	Status              *string `protobuf:"bytes,33,opt,name=status,proto3,oneof" json:"status,omitempty"`
	CtmOrder            *int64  `protobuf:"varint,34,opt,name=ctm_order,json=ctmOrder,proto3,oneof" json:"ctm_order,omitempty"`
	CtmRefund           *int64  `protobuf:"varint,35,opt,name=ctm_refund,json=ctmRefund,proto3,oneof" json:"ctm_refund,omitempty"`
	CtmService          *int64  `protobuf:"varint,36,opt,name=ctm_service,json=ctmService,proto3,oneof" json:"ctm_service,omitempty"`
}

func (x *ServiceGoodsPayResponse) Reset() {
	*x = ServiceGoodsPayResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceGoodsPayResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceGoodsPayResponse) ProtoMessage() {}

func (x *ServiceGoodsPayResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceGoodsPayResponse.ProtoReflect.Descriptor instead.
func (*ServiceGoodsPayResponse) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{79}
}

func (x *ServiceGoodsPayResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ServiceGoodsPayResponse) GetTradeTypeName() string {
	if x != nil {
		return x.TradeTypeName
	}
	return ""
}

func (x *ServiceGoodsPayResponse) GetTradeStatusName() string {
	if x != nil {
		return x.TradeStatusName
	}
	return ""
}

func (x *ServiceGoodsPayResponse) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *ServiceGoodsPayResponse) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *ServiceGoodsPayResponse) GetPrepayId() string {
	if x != nil && x.PrepayId != nil {
		return *x.PrepayId
	}
	return ""
}

func (x *ServiceGoodsPayResponse) GetPrepayExpired() string {
	if x != nil && x.PrepayExpired != nil {
		return *x.PrepayExpired
	}
	return ""
}

func (x *ServiceGoodsPayResponse) GetTradeType() string {
	if x != nil && x.TradeType != nil {
		return *x.TradeType
	}
	return ""
}

func (x *ServiceGoodsPayResponse) GetTradeState() string {
	if x != nil && x.TradeState != nil {
		return *x.TradeState
	}
	return ""
}

func (x *ServiceGoodsPayResponse) GetTradeStateDesc() string {
	if x != nil && x.TradeStateDesc != nil {
		return *x.TradeStateDesc
	}
	return ""
}

func (x *ServiceGoodsPayResponse) GetTransactionId() string {
	if x != nil && x.TransactionId != nil {
		return *x.TransactionId
	}
	return ""
}

func (x *ServiceGoodsPayResponse) GetAppId() string {
	if x != nil && x.AppId != nil {
		return *x.AppId
	}
	return ""
}

func (x *ServiceGoodsPayResponse) GetMchId() string {
	if x != nil && x.MchId != nil {
		return *x.MchId
	}
	return ""
}

func (x *ServiceGoodsPayResponse) GetOpenId() string {
	if x != nil {
		return x.OpenId
	}
	return ""
}

func (x *ServiceGoodsPayResponse) GetOutTradeNo() string {
	if x != nil && x.OutTradeNo != nil {
		return *x.OutTradeNo
	}
	return ""
}

func (x *ServiceGoodsPayResponse) GetAttach() string {
	if x != nil && x.Attach != nil {
		return *x.Attach
	}
	return ""
}

func (x *ServiceGoodsPayResponse) GetTotal() int32 {
	if x != nil && x.Total != nil {
		return *x.Total
	}
	return 0
}

func (x *ServiceGoodsPayResponse) GetPayerTotal() int32 {
	if x != nil && x.PayerTotal != nil {
		return *x.PayerTotal
	}
	return 0
}

func (x *ServiceGoodsPayResponse) GetCurrency() string {
	if x != nil && x.Currency != nil {
		return *x.Currency
	}
	return ""
}

func (x *ServiceGoodsPayResponse) GetBankType() string {
	if x != nil && x.BankType != nil {
		return *x.BankType
	}
	return ""
}

func (x *ServiceGoodsPayResponse) GetSuccessTime() string {
	if x != nil && x.SuccessTime != nil {
		return *x.SuccessTime
	}
	return ""
}

func (x *ServiceGoodsPayResponse) GetOutRefundNo() string {
	if x != nil && x.OutRefundNo != nil {
		return *x.OutRefundNo
	}
	return ""
}

func (x *ServiceGoodsPayResponse) GetReason() string {
	if x != nil && x.Reason != nil {
		return *x.Reason
	}
	return ""
}

func (x *ServiceGoodsPayResponse) GetRefund() int32 {
	if x != nil && x.Refund != nil {
		return *x.Refund
	}
	return 0
}

func (x *ServiceGoodsPayResponse) GetPayerRefund() int32 {
	if x != nil && x.PayerRefund != nil {
		return *x.PayerRefund
	}
	return 0
}

func (x *ServiceGoodsPayResponse) GetSettlementRefund() int32 {
	if x != nil && x.SettlementRefund != nil {
		return *x.SettlementRefund
	}
	return 0
}

func (x *ServiceGoodsPayResponse) GetSettlementTotal() int32 {
	if x != nil && x.SettlementTotal != nil {
		return *x.SettlementTotal
	}
	return 0
}

func (x *ServiceGoodsPayResponse) GetDiscountRefund() int32 {
	if x != nil && x.DiscountRefund != nil {
		return *x.DiscountRefund
	}
	return 0
}

func (x *ServiceGoodsPayResponse) GetRefundFee() int32 {
	if x != nil && x.RefundFee != nil {
		return *x.RefundFee
	}
	return 0
}

func (x *ServiceGoodsPayResponse) GetRefundId() string {
	if x != nil && x.RefundId != nil {
		return *x.RefundId
	}
	return ""
}

func (x *ServiceGoodsPayResponse) GetChannel() string {
	if x != nil && x.Channel != nil {
		return *x.Channel
	}
	return ""
}

func (x *ServiceGoodsPayResponse) GetUserReceivedAccount() string {
	if x != nil && x.UserReceivedAccount != nil {
		return *x.UserReceivedAccount
	}
	return ""
}

func (x *ServiceGoodsPayResponse) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

func (x *ServiceGoodsPayResponse) GetCtmOrder() int64 {
	if x != nil && x.CtmOrder != nil {
		return *x.CtmOrder
	}
	return 0
}

func (x *ServiceGoodsPayResponse) GetCtmRefund() int64 {
	if x != nil && x.CtmRefund != nil {
		return *x.CtmRefund
	}
	return 0
}

func (x *ServiceGoodsPayResponse) GetCtmService() int64 {
	if x != nil && x.CtmService != nil {
		return *x.CtmService
	}
	return 0
}

type ServiceGoodsReturnListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*ServiceGoodsReturnResponse `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Count   int32                         `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *ServiceGoodsReturnListResponse) Reset() {
	*x = ServiceGoodsReturnListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceGoodsReturnListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceGoodsReturnListResponse) ProtoMessage() {}

func (x *ServiceGoodsReturnListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceGoodsReturnListResponse.ProtoReflect.Descriptor instead.
func (*ServiceGoodsReturnListResponse) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{80}
}

func (x *ServiceGoodsReturnListResponse) GetResults() []*ServiceGoodsReturnResponse {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *ServiceGoodsReturnListResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ServiceGoodsReturnRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Filters      string  `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
	SpecNo       *string `protobuf:"bytes,3,opt,name=spec_no,json=specNo,proto3,oneof" json:"spec_no,omitempty"`
	Num          int32   `protobuf:"varint,4,opt,name=num,proto3" json:"num,omitempty"`
	Price        float64 `protobuf:"fixed64,5,opt,name=price,proto3" json:"price,omitempty"`
	CtmService   int64   `protobuf:"varint,6,opt,name=ctm_service,json=ctmService,proto3" json:"ctm_service,omitempty"`
	CanEdit      bool    `protobuf:"varint,7,opt,name=can_edit,json=canEdit,proto3" json:"can_edit,omitempty"`
	GoodsId      *string `protobuf:"bytes,8,opt,name=goods_id,json=goodsId,proto3,oneof" json:"goods_id,omitempty"`
	GoodsName    *string `protobuf:"bytes,9,opt,name=goods_name,json=goodsName,proto3,oneof" json:"goods_name,omitempty"`
	GoodsSpu     *string `protobuf:"bytes,10,opt,name=goods_spu,json=goodsSpu,proto3,oneof" json:"goods_spu,omitempty"`
	SpecName     *string `protobuf:"bytes,11,opt,name=spec_name,json=specName,proto3,oneof" json:"spec_name,omitempty"`
	RfidCode     *string `protobuf:"bytes,12,opt,name=rfid_code,json=rfidCode,proto3,oneof" json:"rfid_code,omitempty"`
	SecurityCode *string `protobuf:"bytes,13,opt,name=security_code,json=securityCode,proto3,oneof" json:"security_code,omitempty"`
	GoodsNo      *string `protobuf:"bytes,14,opt,name=goods_no,json=goodsNo,proto3,oneof" json:"goods_no,omitempty"`
}

func (x *ServiceGoodsReturnRequest) Reset() {
	*x = ServiceGoodsReturnRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceGoodsReturnRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceGoodsReturnRequest) ProtoMessage() {}

func (x *ServiceGoodsReturnRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceGoodsReturnRequest.ProtoReflect.Descriptor instead.
func (*ServiceGoodsReturnRequest) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{81}
}

func (x *ServiceGoodsReturnRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ServiceGoodsReturnRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *ServiceGoodsReturnRequest) GetSpecNo() string {
	if x != nil && x.SpecNo != nil {
		return *x.SpecNo
	}
	return ""
}

func (x *ServiceGoodsReturnRequest) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *ServiceGoodsReturnRequest) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *ServiceGoodsReturnRequest) GetCtmService() int64 {
	if x != nil {
		return x.CtmService
	}
	return 0
}

func (x *ServiceGoodsReturnRequest) GetCanEdit() bool {
	if x != nil {
		return x.CanEdit
	}
	return false
}

func (x *ServiceGoodsReturnRequest) GetGoodsId() string {
	if x != nil && x.GoodsId != nil {
		return *x.GoodsId
	}
	return ""
}

func (x *ServiceGoodsReturnRequest) GetGoodsName() string {
	if x != nil && x.GoodsName != nil {
		return *x.GoodsName
	}
	return ""
}

func (x *ServiceGoodsReturnRequest) GetGoodsSpu() string {
	if x != nil && x.GoodsSpu != nil {
		return *x.GoodsSpu
	}
	return ""
}

func (x *ServiceGoodsReturnRequest) GetSpecName() string {
	if x != nil && x.SpecName != nil {
		return *x.SpecName
	}
	return ""
}

func (x *ServiceGoodsReturnRequest) GetRfidCode() string {
	if x != nil && x.RfidCode != nil {
		return *x.RfidCode
	}
	return ""
}

func (x *ServiceGoodsReturnRequest) GetSecurityCode() string {
	if x != nil && x.SecurityCode != nil {
		return *x.SecurityCode
	}
	return ""
}

func (x *ServiceGoodsReturnRequest) GetGoodsNo() string {
	if x != nil && x.GoodsNo != nil {
		return *x.GoodsNo
	}
	return ""
}

type ServiceGoodsReturnResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreateTime   string  `protobuf:"bytes,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime   string  `protobuf:"bytes,3,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	SpecNo       *string `protobuf:"bytes,4,opt,name=spec_no,json=specNo,proto3,oneof" json:"spec_no,omitempty"`
	Num          int32   `protobuf:"varint,5,opt,name=num,proto3" json:"num,omitempty"`
	Price        float64 `protobuf:"fixed64,6,opt,name=price,proto3" json:"price,omitempty"`
	CtmService   int64   `protobuf:"varint,7,opt,name=ctm_service,json=ctmService,proto3" json:"ctm_service,omitempty"`
	CanEdit      bool    `protobuf:"varint,8,opt,name=can_edit,json=canEdit,proto3" json:"can_edit,omitempty"`
	GoodsId      *string `protobuf:"bytes,9,opt,name=goods_id,json=goodsId,proto3,oneof" json:"goods_id,omitempty"`
	GoodsName    *string `protobuf:"bytes,10,opt,name=goods_name,json=goodsName,proto3,oneof" json:"goods_name,omitempty"`
	GoodsSpu     *string `protobuf:"bytes,11,opt,name=goods_spu,json=goodsSpu,proto3,oneof" json:"goods_spu,omitempty"`
	SpecName     *string `protobuf:"bytes,12,opt,name=spec_name,json=specName,proto3,oneof" json:"spec_name,omitempty"`
	RfidCode     *string `protobuf:"bytes,13,opt,name=rfid_code,json=rfidCode,proto3,oneof" json:"rfid_code,omitempty"`
	SecurityCode *string `protobuf:"bytes,14,opt,name=security_code,json=securityCode,proto3,oneof" json:"security_code,omitempty"`
	GoodsNo      *string `protobuf:"bytes,15,opt,name=goods_no,json=goodsNo,proto3,oneof" json:"goods_no,omitempty"`
}

func (x *ServiceGoodsReturnResponse) Reset() {
	*x = ServiceGoodsReturnResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceGoodsReturnResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceGoodsReturnResponse) ProtoMessage() {}

func (x *ServiceGoodsReturnResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceGoodsReturnResponse.ProtoReflect.Descriptor instead.
func (*ServiceGoodsReturnResponse) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{82}
}

func (x *ServiceGoodsReturnResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ServiceGoodsReturnResponse) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *ServiceGoodsReturnResponse) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *ServiceGoodsReturnResponse) GetSpecNo() string {
	if x != nil && x.SpecNo != nil {
		return *x.SpecNo
	}
	return ""
}

func (x *ServiceGoodsReturnResponse) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *ServiceGoodsReturnResponse) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *ServiceGoodsReturnResponse) GetCtmService() int64 {
	if x != nil {
		return x.CtmService
	}
	return 0
}

func (x *ServiceGoodsReturnResponse) GetCanEdit() bool {
	if x != nil {
		return x.CanEdit
	}
	return false
}

func (x *ServiceGoodsReturnResponse) GetGoodsId() string {
	if x != nil && x.GoodsId != nil {
		return *x.GoodsId
	}
	return ""
}

func (x *ServiceGoodsReturnResponse) GetGoodsName() string {
	if x != nil && x.GoodsName != nil {
		return *x.GoodsName
	}
	return ""
}

func (x *ServiceGoodsReturnResponse) GetGoodsSpu() string {
	if x != nil && x.GoodsSpu != nil {
		return *x.GoodsSpu
	}
	return ""
}

func (x *ServiceGoodsReturnResponse) GetSpecName() string {
	if x != nil && x.SpecName != nil {
		return *x.SpecName
	}
	return ""
}

func (x *ServiceGoodsReturnResponse) GetRfidCode() string {
	if x != nil && x.RfidCode != nil {
		return *x.RfidCode
	}
	return ""
}

func (x *ServiceGoodsReturnResponse) GetSecurityCode() string {
	if x != nil && x.SecurityCode != nil {
		return *x.SecurityCode
	}
	return ""
}

func (x *ServiceGoodsReturnResponse) GetGoodsNo() string {
	if x != nil && x.GoodsNo != nil {
		return *x.GoodsNo
	}
	return ""
}

type ServiceNextSidRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ServiceNextSidRequest) Reset() {
	*x = ServiceNextSidRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceNextSidRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceNextSidRequest) ProtoMessage() {}

func (x *ServiceNextSidRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceNextSidRequest.ProtoReflect.Descriptor instead.
func (*ServiceNextSidRequest) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{83}
}

type ServiceNextSidResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NextSid string `protobuf:"bytes,1,opt,name=next_sid,json=nextSid,proto3" json:"next_sid,omitempty"`
}

func (x *ServiceNextSidResponse) Reset() {
	*x = ServiceNextSidResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceNextSidResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceNextSidResponse) ProtoMessage() {}

func (x *ServiceNextSidResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceNextSidResponse.ProtoReflect.Descriptor instead.
func (*ServiceNextSidResponse) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{84}
}

func (x *ServiceNextSidResponse) GetNextSid() string {
	if x != nil {
		return x.NextSid
	}
	return ""
}

type ServiceOptionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ServiceOptionsRequest) Reset() {
	*x = ServiceOptionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceOptionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceOptionsRequest) ProtoMessage() {}

func (x *ServiceOptionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceOptionsRequest.ProtoReflect.Descriptor instead.
func (*ServiceOptionsRequest) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{85}
}

type ServiceOptionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TradeType     []*OptionItemResponse `protobuf:"bytes,1,rep,name=trade_type,json=tradeType,proto3" json:"trade_type,omitempty"`
	Type          []*OptionItemResponse `protobuf:"bytes,2,rep,name=type,proto3" json:"type,omitempty"`
	CreateType    []*OptionItemResponse `protobuf:"bytes,3,rep,name=create_type,json=createType,proto3" json:"create_type,omitempty"`
	ServiceStatus []*OptionItemResponse `protobuf:"bytes,4,rep,name=service_status,json=serviceStatus,proto3" json:"service_status,omitempty"`
	TradeStatus   []*OptionItemResponse `protobuf:"bytes,5,rep,name=trade_status,json=tradeStatus,proto3" json:"trade_status,omitempty"`
	PayStatus     []*OptionItemResponse `protobuf:"bytes,6,rep,name=pay_status,json=payStatus,proto3" json:"pay_status,omitempty"`
}

func (x *ServiceOptionsResponse) Reset() {
	*x = ServiceOptionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceOptionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceOptionsResponse) ProtoMessage() {}

func (x *ServiceOptionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceOptionsResponse.ProtoReflect.Descriptor instead.
func (*ServiceOptionsResponse) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{86}
}

func (x *ServiceOptionsResponse) GetTradeType() []*OptionItemResponse {
	if x != nil {
		return x.TradeType
	}
	return nil
}

func (x *ServiceOptionsResponse) GetType() []*OptionItemResponse {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *ServiceOptionsResponse) GetCreateType() []*OptionItemResponse {
	if x != nil {
		return x.CreateType
	}
	return nil
}

func (x *ServiceOptionsResponse) GetServiceStatus() []*OptionItemResponse {
	if x != nil {
		return x.ServiceStatus
	}
	return nil
}

func (x *ServiceOptionsResponse) GetTradeStatus() []*OptionItemResponse {
	if x != nil {
		return x.TradeStatus
	}
	return nil
}

func (x *ServiceOptionsResponse) GetPayStatus() []*OptionItemResponse {
	if x != nil {
		return x.PayStatus
	}
	return nil
}

type ServiceStatusCountListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*ServiceStatusCountResponse `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Count   int32                         `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *ServiceStatusCountListResponse) Reset() {
	*x = ServiceStatusCountListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceStatusCountListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceStatusCountListResponse) ProtoMessage() {}

func (x *ServiceStatusCountListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceStatusCountListResponse.ProtoReflect.Descriptor instead.
func (*ServiceStatusCountListResponse) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{87}
}

func (x *ServiceStatusCountListResponse) GetResults() []*ServiceStatusCountResponse {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *ServiceStatusCountListResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ServiceStatusCountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TradeType int32 `protobuf:"varint,1,opt,name=trade_type,json=tradeType,proto3" json:"trade_type,omitempty"`
}

func (x *ServiceStatusCountRequest) Reset() {
	*x = ServiceStatusCountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceStatusCountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceStatusCountRequest) ProtoMessage() {}

func (x *ServiceStatusCountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceStatusCountRequest.ProtoReflect.Descriptor instead.
func (*ServiceStatusCountRequest) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{88}
}

func (x *ServiceStatusCountRequest) GetTradeType() int32 {
	if x != nil {
		return x.TradeType
	}
	return 0
}

type ServiceStatusCountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceStatus int32 `protobuf:"varint,1,opt,name=service_status,json=serviceStatus,proto3" json:"service_status,omitempty"`
	Count         int32 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *ServiceStatusCountResponse) Reset() {
	*x = ServiceStatusCountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceStatusCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceStatusCountResponse) ProtoMessage() {}

func (x *ServiceStatusCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceStatusCountResponse.ProtoReflect.Descriptor instead.
func (*ServiceStatusCountResponse) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{89}
}

func (x *ServiceStatusCountResponse) GetServiceStatus() int32 {
	if x != nil {
		return x.ServiceStatus
	}
	return 0
}

func (x *ServiceStatusCountResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type UpdateGoodsDeliverRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Filters              string   `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
	CtmOrder             *int64   `protobuf:"varint,3,opt,name=ctm_order,json=ctmOrder,proto3,oneof" json:"ctm_order,omitempty"`
	XPartialUpdateFields []string `protobuf:"bytes,4,rep,name=_partial_update_fields,json=PartialUpdateFields,proto3" json:"_partial_update_fields,omitempty"`
	CanEdit              bool     `protobuf:"varint,5,opt,name=can_edit,json=canEdit,proto3" json:"can_edit,omitempty"`
	Num                  int32    `protobuf:"varint,6,opt,name=num,proto3" json:"num,omitempty"`
	Price                float64  `protobuf:"fixed64,7,opt,name=price,proto3" json:"price,omitempty"`
	AdjustAmount         float64  `protobuf:"fixed64,8,opt,name=adjust_amount,json=adjustAmount,proto3" json:"adjust_amount,omitempty"`
	Discount             float64  `protobuf:"fixed64,9,opt,name=discount,proto3" json:"discount,omitempty"`
	ShareDiscount        float64  `protobuf:"fixed64,10,opt,name=share_discount,json=shareDiscount,proto3" json:"share_discount,omitempty"`
	ShareAmount          float64  `protobuf:"fixed64,11,opt,name=share_amount,json=shareAmount,proto3" json:"share_amount,omitempty"`
	DebitAmount          *float64 `protobuf:"fixed64,12,opt,name=debit_amount,json=debitAmount,proto3,oneof" json:"debit_amount,omitempty"`
	PriceScore           *int32   `protobuf:"varint,13,opt,name=price_score,json=priceScore,proto3,oneof" json:"price_score,omitempty"`
	PriceBadge           *int32   `protobuf:"varint,14,opt,name=price_badge,json=priceBadge,proto3,oneof" json:"price_badge,omitempty"`
	PriceNut             *int32   `protobuf:"varint,15,opt,name=price_nut,json=priceNut,proto3,oneof" json:"price_nut,omitempty"`
	Status               *int32   `protobuf:"varint,16,opt,name=status,proto3,oneof" json:"status,omitempty"`
	RefundStatus         *int32   `protobuf:"varint,17,opt,name=refund_status,json=refundStatus,proto3,oneof" json:"refund_status,omitempty"`
	GoodsId              *string  `protobuf:"bytes,18,opt,name=goods_id,json=goodsId,proto3,oneof" json:"goods_id,omitempty"`
	GoodsName            *string  `protobuf:"bytes,19,opt,name=goods_name,json=goodsName,proto3,oneof" json:"goods_name,omitempty"`
	GoodsSpu             *string  `protobuf:"bytes,20,opt,name=goods_spu,json=goodsSpu,proto3,oneof" json:"goods_spu,omitempty"`
	SpecNo               string   `protobuf:"bytes,21,opt,name=spec_no,json=specNo,proto3" json:"spec_no,omitempty"`
	CtmRefund            *int64   `protobuf:"varint,22,opt,name=ctm_refund,json=ctmRefund,proto3,oneof" json:"ctm_refund,omitempty"`
	CtmService           *int64   `protobuf:"varint,23,opt,name=ctm_service,json=ctmService,proto3,oneof" json:"ctm_service,omitempty"`
	RefundOrders         *int64   `protobuf:"varint,24,opt,name=refund_orders,json=refundOrders,proto3,oneof" json:"refund_orders,omitempty"`
	SpecName             *string  `protobuf:"bytes,25,opt,name=spec_name,json=specName,proto3,oneof" json:"spec_name,omitempty"`
	RfidCode             *string  `protobuf:"bytes,26,opt,name=rfid_code,json=rfidCode,proto3,oneof" json:"rfid_code,omitempty"`
	SecurityCode         *string  `protobuf:"bytes,27,opt,name=security_code,json=securityCode,proto3,oneof" json:"security_code,omitempty"`
	GoodsNo              *string  `protobuf:"bytes,28,opt,name=goods_no,json=goodsNo,proto3,oneof" json:"goods_no,omitempty"`
}

func (x *UpdateGoodsDeliverRequest) Reset() {
	*x = UpdateGoodsDeliverRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGoodsDeliverRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGoodsDeliverRequest) ProtoMessage() {}

func (x *UpdateGoodsDeliverRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGoodsDeliverRequest.ProtoReflect.Descriptor instead.
func (*UpdateGoodsDeliverRequest) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{90}
}

func (x *UpdateGoodsDeliverRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateGoodsDeliverRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *UpdateGoodsDeliverRequest) GetCtmOrder() int64 {
	if x != nil && x.CtmOrder != nil {
		return *x.CtmOrder
	}
	return 0
}

func (x *UpdateGoodsDeliverRequest) GetXPartialUpdateFields() []string {
	if x != nil {
		return x.XPartialUpdateFields
	}
	return nil
}

func (x *UpdateGoodsDeliverRequest) GetCanEdit() bool {
	if x != nil {
		return x.CanEdit
	}
	return false
}

func (x *UpdateGoodsDeliverRequest) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *UpdateGoodsDeliverRequest) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *UpdateGoodsDeliverRequest) GetAdjustAmount() float64 {
	if x != nil {
		return x.AdjustAmount
	}
	return 0
}

func (x *UpdateGoodsDeliverRequest) GetDiscount() float64 {
	if x != nil {
		return x.Discount
	}
	return 0
}

func (x *UpdateGoodsDeliverRequest) GetShareDiscount() float64 {
	if x != nil {
		return x.ShareDiscount
	}
	return 0
}

func (x *UpdateGoodsDeliverRequest) GetShareAmount() float64 {
	if x != nil {
		return x.ShareAmount
	}
	return 0
}

func (x *UpdateGoodsDeliverRequest) GetDebitAmount() float64 {
	if x != nil && x.DebitAmount != nil {
		return *x.DebitAmount
	}
	return 0
}

func (x *UpdateGoodsDeliverRequest) GetPriceScore() int32 {
	if x != nil && x.PriceScore != nil {
		return *x.PriceScore
	}
	return 0
}

func (x *UpdateGoodsDeliverRequest) GetPriceBadge() int32 {
	if x != nil && x.PriceBadge != nil {
		return *x.PriceBadge
	}
	return 0
}

func (x *UpdateGoodsDeliverRequest) GetPriceNut() int32 {
	if x != nil && x.PriceNut != nil {
		return *x.PriceNut
	}
	return 0
}

func (x *UpdateGoodsDeliverRequest) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *UpdateGoodsDeliverRequest) GetRefundStatus() int32 {
	if x != nil && x.RefundStatus != nil {
		return *x.RefundStatus
	}
	return 0
}

func (x *UpdateGoodsDeliverRequest) GetGoodsId() string {
	if x != nil && x.GoodsId != nil {
		return *x.GoodsId
	}
	return ""
}

func (x *UpdateGoodsDeliverRequest) GetGoodsName() string {
	if x != nil && x.GoodsName != nil {
		return *x.GoodsName
	}
	return ""
}

func (x *UpdateGoodsDeliverRequest) GetGoodsSpu() string {
	if x != nil && x.GoodsSpu != nil {
		return *x.GoodsSpu
	}
	return ""
}

func (x *UpdateGoodsDeliverRequest) GetSpecNo() string {
	if x != nil {
		return x.SpecNo
	}
	return ""
}

func (x *UpdateGoodsDeliverRequest) GetCtmRefund() int64 {
	if x != nil && x.CtmRefund != nil {
		return *x.CtmRefund
	}
	return 0
}

func (x *UpdateGoodsDeliverRequest) GetCtmService() int64 {
	if x != nil && x.CtmService != nil {
		return *x.CtmService
	}
	return 0
}

func (x *UpdateGoodsDeliverRequest) GetRefundOrders() int64 {
	if x != nil && x.RefundOrders != nil {
		return *x.RefundOrders
	}
	return 0
}

func (x *UpdateGoodsDeliverRequest) GetSpecName() string {
	if x != nil && x.SpecName != nil {
		return *x.SpecName
	}
	return ""
}

func (x *UpdateGoodsDeliverRequest) GetRfidCode() string {
	if x != nil && x.RfidCode != nil {
		return *x.RfidCode
	}
	return ""
}

func (x *UpdateGoodsDeliverRequest) GetSecurityCode() string {
	if x != nil && x.SecurityCode != nil {
		return *x.SecurityCode
	}
	return ""
}

func (x *UpdateGoodsDeliverRequest) GetGoodsNo() string {
	if x != nil && x.GoodsNo != nil {
		return *x.GoodsNo
	}
	return ""
}

type UpdateGoodsInvoiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Filters              string   `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
	XPartialUpdateFields []string `protobuf:"bytes,13,rep,name=_partial_update_fields,json=PartialUpdateFields,proto3" json:"_partial_update_fields,omitempty"`
	InvoiceType          int32    `protobuf:"varint,14,opt,name=invoice_type,json=invoiceType,proto3" json:"invoice_type,omitempty"`
	PayerType            int32    `protobuf:"varint,15,opt,name=payer_type,json=payerType,proto3" json:"payer_type,omitempty"`
	PayerName            *string  `protobuf:"bytes,16,opt,name=payer_name,json=payerName,proto3,oneof" json:"payer_name,omitempty"`
	PayerRegisterNo      *string  `protobuf:"bytes,17,opt,name=payer_register_no,json=payerRegisterNo,proto3,oneof" json:"payer_register_no,omitempty"`
	PayerPhone           *string  `protobuf:"bytes,18,opt,name=payer_phone,json=payerPhone,proto3,oneof" json:"payer_phone,omitempty"`
	PayerEmail           *string  `protobuf:"bytes,19,opt,name=payer_email,json=payerEmail,proto3,oneof" json:"payer_email,omitempty"`
	PayerAddress         *string  `protobuf:"bytes,20,opt,name=payer_address,json=payerAddress,proto3,oneof" json:"payer_address,omitempty"`
	PayerBank            *string  `protobuf:"bytes,21,opt,name=payer_bank,json=payerBank,proto3,oneof" json:"payer_bank,omitempty"`
	PayerAccount         *string  `protobuf:"bytes,22,opt,name=payer_account,json=payerAccount,proto3,oneof" json:"payer_account,omitempty"`
	InvoiceAmount        *float64 `protobuf:"fixed64,23,opt,name=invoice_amount,json=invoiceAmount,proto3,oneof" json:"invoice_amount,omitempty"`
	InvoiceRemark        *string  `protobuf:"bytes,24,opt,name=invoice_remark,json=invoiceRemark,proto3,oneof" json:"invoice_remark,omitempty"`
	ReasonType           int32    `protobuf:"varint,25,opt,name=reason_type,json=reasonType,proto3" json:"reason_type,omitempty"`
	InvoiceNo            *string  `protobuf:"bytes,26,opt,name=invoice_no,json=invoiceNo,proto3,oneof" json:"invoice_no,omitempty"`
	InvoiceCode          *string  `protobuf:"bytes,27,opt,name=invoice_code,json=invoiceCode,proto3,oneof" json:"invoice_code,omitempty"`
	CtmOrder             *int64   `protobuf:"varint,28,opt,name=ctm_order,json=ctmOrder,proto3,oneof" json:"ctm_order,omitempty"`
	CtmService           *int64   `protobuf:"varint,29,opt,name=ctm_service,json=ctmService,proto3,oneof" json:"ctm_service,omitempty"`
	ParentInvoice        *int64   `protobuf:"varint,30,opt,name=parent_invoice,json=parentInvoice,proto3,oneof" json:"parent_invoice,omitempty"`
}

func (x *UpdateGoodsInvoiceRequest) Reset() {
	*x = UpdateGoodsInvoiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGoodsInvoiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGoodsInvoiceRequest) ProtoMessage() {}

func (x *UpdateGoodsInvoiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGoodsInvoiceRequest.ProtoReflect.Descriptor instead.
func (*UpdateGoodsInvoiceRequest) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{91}
}

func (x *UpdateGoodsInvoiceRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateGoodsInvoiceRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *UpdateGoodsInvoiceRequest) GetXPartialUpdateFields() []string {
	if x != nil {
		return x.XPartialUpdateFields
	}
	return nil
}

func (x *UpdateGoodsInvoiceRequest) GetInvoiceType() int32 {
	if x != nil {
		return x.InvoiceType
	}
	return 0
}

func (x *UpdateGoodsInvoiceRequest) GetPayerType() int32 {
	if x != nil {
		return x.PayerType
	}
	return 0
}

func (x *UpdateGoodsInvoiceRequest) GetPayerName() string {
	if x != nil && x.PayerName != nil {
		return *x.PayerName
	}
	return ""
}

func (x *UpdateGoodsInvoiceRequest) GetPayerRegisterNo() string {
	if x != nil && x.PayerRegisterNo != nil {
		return *x.PayerRegisterNo
	}
	return ""
}

func (x *UpdateGoodsInvoiceRequest) GetPayerPhone() string {
	if x != nil && x.PayerPhone != nil {
		return *x.PayerPhone
	}
	return ""
}

func (x *UpdateGoodsInvoiceRequest) GetPayerEmail() string {
	if x != nil && x.PayerEmail != nil {
		return *x.PayerEmail
	}
	return ""
}

func (x *UpdateGoodsInvoiceRequest) GetPayerAddress() string {
	if x != nil && x.PayerAddress != nil {
		return *x.PayerAddress
	}
	return ""
}

func (x *UpdateGoodsInvoiceRequest) GetPayerBank() string {
	if x != nil && x.PayerBank != nil {
		return *x.PayerBank
	}
	return ""
}

func (x *UpdateGoodsInvoiceRequest) GetPayerAccount() string {
	if x != nil && x.PayerAccount != nil {
		return *x.PayerAccount
	}
	return ""
}

func (x *UpdateGoodsInvoiceRequest) GetInvoiceAmount() float64 {
	if x != nil && x.InvoiceAmount != nil {
		return *x.InvoiceAmount
	}
	return 0
}

func (x *UpdateGoodsInvoiceRequest) GetInvoiceRemark() string {
	if x != nil && x.InvoiceRemark != nil {
		return *x.InvoiceRemark
	}
	return ""
}

func (x *UpdateGoodsInvoiceRequest) GetReasonType() int32 {
	if x != nil {
		return x.ReasonType
	}
	return 0
}

func (x *UpdateGoodsInvoiceRequest) GetInvoiceNo() string {
	if x != nil && x.InvoiceNo != nil {
		return *x.InvoiceNo
	}
	return ""
}

func (x *UpdateGoodsInvoiceRequest) GetInvoiceCode() string {
	if x != nil && x.InvoiceCode != nil {
		return *x.InvoiceCode
	}
	return ""
}

func (x *UpdateGoodsInvoiceRequest) GetCtmOrder() int64 {
	if x != nil && x.CtmOrder != nil {
		return *x.CtmOrder
	}
	return 0
}

func (x *UpdateGoodsInvoiceRequest) GetCtmService() int64 {
	if x != nil && x.CtmService != nil {
		return *x.CtmService
	}
	return 0
}

func (x *UpdateGoodsInvoiceRequest) GetParentInvoice() int64 {
	if x != nil && x.ParentInvoice != nil {
		return *x.ParentInvoice
	}
	return 0
}

type UpdateGoodsPayRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Filters              string   `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
	XPartialUpdateFields []string `protobuf:"bytes,3,rep,name=_partial_update_fields,json=PartialUpdateFields,proto3" json:"_partial_update_fields,omitempty"`
	PrepayId             *string  `protobuf:"bytes,4,opt,name=prepay_id,json=prepayId,proto3,oneof" json:"prepay_id,omitempty"`
	PrepayExpired        *string  `protobuf:"bytes,5,opt,name=prepay_expired,json=prepayExpired,proto3,oneof" json:"prepay_expired,omitempty"`
	TradeType            *string  `protobuf:"bytes,6,opt,name=trade_type,json=tradeType,proto3,oneof" json:"trade_type,omitempty"`
	TradeState           *string  `protobuf:"bytes,7,opt,name=trade_state,json=tradeState,proto3,oneof" json:"trade_state,omitempty"`
	TradeStateDesc       *string  `protobuf:"bytes,8,opt,name=trade_state_desc,json=tradeStateDesc,proto3,oneof" json:"trade_state_desc,omitempty"`
	TransactionId        *string  `protobuf:"bytes,9,opt,name=transaction_id,json=transactionId,proto3,oneof" json:"transaction_id,omitempty"`
	AppId                *string  `protobuf:"bytes,10,opt,name=app_id,json=appId,proto3,oneof" json:"app_id,omitempty"`
	MchId                *string  `protobuf:"bytes,11,opt,name=mch_id,json=mchId,proto3,oneof" json:"mch_id,omitempty"`
	OpenId               string   `protobuf:"bytes,12,opt,name=open_id,json=openId,proto3" json:"open_id,omitempty"`
	OutTradeNo           *string  `protobuf:"bytes,13,opt,name=out_trade_no,json=outTradeNo,proto3,oneof" json:"out_trade_no,omitempty"`
	Attach               *string  `protobuf:"bytes,14,opt,name=attach,proto3,oneof" json:"attach,omitempty"`
	Total                *int32   `protobuf:"varint,15,opt,name=total,proto3,oneof" json:"total,omitempty"`
	PayerTotal           *int32   `protobuf:"varint,16,opt,name=payer_total,json=payerTotal,proto3,oneof" json:"payer_total,omitempty"`
	Currency             *string  `protobuf:"bytes,17,opt,name=currency,proto3,oneof" json:"currency,omitempty"`
	BankType             *string  `protobuf:"bytes,18,opt,name=bank_type,json=bankType,proto3,oneof" json:"bank_type,omitempty"`
	SuccessTime          *string  `protobuf:"bytes,19,opt,name=success_time,json=successTime,proto3,oneof" json:"success_time,omitempty"`
	OutRefundNo          *string  `protobuf:"bytes,20,opt,name=out_refund_no,json=outRefundNo,proto3,oneof" json:"out_refund_no,omitempty"`
	Reason               *string  `protobuf:"bytes,21,opt,name=reason,proto3,oneof" json:"reason,omitempty"`
	Refund               *int32   `protobuf:"varint,22,opt,name=refund,proto3,oneof" json:"refund,omitempty"`
	PayerRefund          *int32   `protobuf:"varint,23,opt,name=payer_refund,json=payerRefund,proto3,oneof" json:"payer_refund,omitempty"`
	SettlementRefund     *int32   `protobuf:"varint,24,opt,name=settlement_refund,json=settlementRefund,proto3,oneof" json:"settlement_refund,omitempty"`
	SettlementTotal      *int32   `protobuf:"varint,25,opt,name=settlement_total,json=settlementTotal,proto3,oneof" json:"settlement_total,omitempty"`
	DiscountRefund       *int32   `protobuf:"varint,26,opt,name=discount_refund,json=discountRefund,proto3,oneof" json:"discount_refund,omitempty"`
	RefundFee            *int32   `protobuf:"varint,27,opt,name=refund_fee,json=refundFee,proto3,oneof" json:"refund_fee,omitempty"`
	RefundId             *string  `protobuf:"bytes,28,opt,name=refund_id,json=refundId,proto3,oneof" json:"refund_id,omitempty"`
	Channel              *string  `protobuf:"bytes,29,opt,name=channel,proto3,oneof" json:"channel,omitempty"`
	UserReceivedAccount  *string  `protobuf:"bytes,30,opt,name=user_received_account,json=userReceivedAccount,proto3,oneof" json:"user_received_account,omitempty"`
	Status               *string  `protobuf:"bytes,31,opt,name=status,proto3,oneof" json:"status,omitempty"`
	CtmOrder             *int64   `protobuf:"varint,32,opt,name=ctm_order,json=ctmOrder,proto3,oneof" json:"ctm_order,omitempty"`
	CtmRefund            *int64   `protobuf:"varint,33,opt,name=ctm_refund,json=ctmRefund,proto3,oneof" json:"ctm_refund,omitempty"`
	CtmService           *int64   `protobuf:"varint,34,opt,name=ctm_service,json=ctmService,proto3,oneof" json:"ctm_service,omitempty"`
}

func (x *UpdateGoodsPayRequest) Reset() {
	*x = UpdateGoodsPayRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGoodsPayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGoodsPayRequest) ProtoMessage() {}

func (x *UpdateGoodsPayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGoodsPayRequest.ProtoReflect.Descriptor instead.
func (*UpdateGoodsPayRequest) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{92}
}

func (x *UpdateGoodsPayRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateGoodsPayRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *UpdateGoodsPayRequest) GetXPartialUpdateFields() []string {
	if x != nil {
		return x.XPartialUpdateFields
	}
	return nil
}

func (x *UpdateGoodsPayRequest) GetPrepayId() string {
	if x != nil && x.PrepayId != nil {
		return *x.PrepayId
	}
	return ""
}

func (x *UpdateGoodsPayRequest) GetPrepayExpired() string {
	if x != nil && x.PrepayExpired != nil {
		return *x.PrepayExpired
	}
	return ""
}

func (x *UpdateGoodsPayRequest) GetTradeType() string {
	if x != nil && x.TradeType != nil {
		return *x.TradeType
	}
	return ""
}

func (x *UpdateGoodsPayRequest) GetTradeState() string {
	if x != nil && x.TradeState != nil {
		return *x.TradeState
	}
	return ""
}

func (x *UpdateGoodsPayRequest) GetTradeStateDesc() string {
	if x != nil && x.TradeStateDesc != nil {
		return *x.TradeStateDesc
	}
	return ""
}

func (x *UpdateGoodsPayRequest) GetTransactionId() string {
	if x != nil && x.TransactionId != nil {
		return *x.TransactionId
	}
	return ""
}

func (x *UpdateGoodsPayRequest) GetAppId() string {
	if x != nil && x.AppId != nil {
		return *x.AppId
	}
	return ""
}

func (x *UpdateGoodsPayRequest) GetMchId() string {
	if x != nil && x.MchId != nil {
		return *x.MchId
	}
	return ""
}

func (x *UpdateGoodsPayRequest) GetOpenId() string {
	if x != nil {
		return x.OpenId
	}
	return ""
}

func (x *UpdateGoodsPayRequest) GetOutTradeNo() string {
	if x != nil && x.OutTradeNo != nil {
		return *x.OutTradeNo
	}
	return ""
}

func (x *UpdateGoodsPayRequest) GetAttach() string {
	if x != nil && x.Attach != nil {
		return *x.Attach
	}
	return ""
}

func (x *UpdateGoodsPayRequest) GetTotal() int32 {
	if x != nil && x.Total != nil {
		return *x.Total
	}
	return 0
}

func (x *UpdateGoodsPayRequest) GetPayerTotal() int32 {
	if x != nil && x.PayerTotal != nil {
		return *x.PayerTotal
	}
	return 0
}

func (x *UpdateGoodsPayRequest) GetCurrency() string {
	if x != nil && x.Currency != nil {
		return *x.Currency
	}
	return ""
}

func (x *UpdateGoodsPayRequest) GetBankType() string {
	if x != nil && x.BankType != nil {
		return *x.BankType
	}
	return ""
}

func (x *UpdateGoodsPayRequest) GetSuccessTime() string {
	if x != nil && x.SuccessTime != nil {
		return *x.SuccessTime
	}
	return ""
}

func (x *UpdateGoodsPayRequest) GetOutRefundNo() string {
	if x != nil && x.OutRefundNo != nil {
		return *x.OutRefundNo
	}
	return ""
}

func (x *UpdateGoodsPayRequest) GetReason() string {
	if x != nil && x.Reason != nil {
		return *x.Reason
	}
	return ""
}

func (x *UpdateGoodsPayRequest) GetRefund() int32 {
	if x != nil && x.Refund != nil {
		return *x.Refund
	}
	return 0
}

func (x *UpdateGoodsPayRequest) GetPayerRefund() int32 {
	if x != nil && x.PayerRefund != nil {
		return *x.PayerRefund
	}
	return 0
}

func (x *UpdateGoodsPayRequest) GetSettlementRefund() int32 {
	if x != nil && x.SettlementRefund != nil {
		return *x.SettlementRefund
	}
	return 0
}

func (x *UpdateGoodsPayRequest) GetSettlementTotal() int32 {
	if x != nil && x.SettlementTotal != nil {
		return *x.SettlementTotal
	}
	return 0
}

func (x *UpdateGoodsPayRequest) GetDiscountRefund() int32 {
	if x != nil && x.DiscountRefund != nil {
		return *x.DiscountRefund
	}
	return 0
}

func (x *UpdateGoodsPayRequest) GetRefundFee() int32 {
	if x != nil && x.RefundFee != nil {
		return *x.RefundFee
	}
	return 0
}

func (x *UpdateGoodsPayRequest) GetRefundId() string {
	if x != nil && x.RefundId != nil {
		return *x.RefundId
	}
	return ""
}

func (x *UpdateGoodsPayRequest) GetChannel() string {
	if x != nil && x.Channel != nil {
		return *x.Channel
	}
	return ""
}

func (x *UpdateGoodsPayRequest) GetUserReceivedAccount() string {
	if x != nil && x.UserReceivedAccount != nil {
		return *x.UserReceivedAccount
	}
	return ""
}

func (x *UpdateGoodsPayRequest) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

func (x *UpdateGoodsPayRequest) GetCtmOrder() int64 {
	if x != nil && x.CtmOrder != nil {
		return *x.CtmOrder
	}
	return 0
}

func (x *UpdateGoodsPayRequest) GetCtmRefund() int64 {
	if x != nil && x.CtmRefund != nil {
		return *x.CtmRefund
	}
	return 0
}

func (x *UpdateGoodsPayRequest) GetCtmService() int64 {
	if x != nil && x.CtmService != nil {
		return *x.CtmService
	}
	return 0
}

type UpdateGoodsReturnRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Filters              string   `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
	XPartialUpdateFields []string `protobuf:"bytes,3,rep,name=_partial_update_fields,json=PartialUpdateFields,proto3" json:"_partial_update_fields,omitempty"`
	SpecNo               *string  `protobuf:"bytes,4,opt,name=spec_no,json=specNo,proto3,oneof" json:"spec_no,omitempty"`
	Num                  int32    `protobuf:"varint,5,opt,name=num,proto3" json:"num,omitempty"`
	Price                float64  `protobuf:"fixed64,6,opt,name=price,proto3" json:"price,omitempty"`
	CtmService           int64    `protobuf:"varint,7,opt,name=ctm_service,json=ctmService,proto3" json:"ctm_service,omitempty"`
	CanEdit              bool     `protobuf:"varint,8,opt,name=can_edit,json=canEdit,proto3" json:"can_edit,omitempty"`
	GoodsId              *string  `protobuf:"bytes,9,opt,name=goods_id,json=goodsId,proto3,oneof" json:"goods_id,omitempty"`
	GoodsName            *string  `protobuf:"bytes,10,opt,name=goods_name,json=goodsName,proto3,oneof" json:"goods_name,omitempty"`
	GoodsSpu             *string  `protobuf:"bytes,11,opt,name=goods_spu,json=goodsSpu,proto3,oneof" json:"goods_spu,omitempty"`
	SpecName             *string  `protobuf:"bytes,12,opt,name=spec_name,json=specName,proto3,oneof" json:"spec_name,omitempty"`
	RfidCode             *string  `protobuf:"bytes,13,opt,name=rfid_code,json=rfidCode,proto3,oneof" json:"rfid_code,omitempty"`
	SecurityCode         *string  `protobuf:"bytes,14,opt,name=security_code,json=securityCode,proto3,oneof" json:"security_code,omitempty"`
	GoodsNo              *string  `protobuf:"bytes,15,opt,name=goods_no,json=goodsNo,proto3,oneof" json:"goods_no,omitempty"`
}

func (x *UpdateGoodsReturnRequest) Reset() {
	*x = UpdateGoodsReturnRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGoodsReturnRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGoodsReturnRequest) ProtoMessage() {}

func (x *UpdateGoodsReturnRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGoodsReturnRequest.ProtoReflect.Descriptor instead.
func (*UpdateGoodsReturnRequest) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{93}
}

func (x *UpdateGoodsReturnRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateGoodsReturnRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *UpdateGoodsReturnRequest) GetXPartialUpdateFields() []string {
	if x != nil {
		return x.XPartialUpdateFields
	}
	return nil
}

func (x *UpdateGoodsReturnRequest) GetSpecNo() string {
	if x != nil && x.SpecNo != nil {
		return *x.SpecNo
	}
	return ""
}

func (x *UpdateGoodsReturnRequest) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *UpdateGoodsReturnRequest) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *UpdateGoodsReturnRequest) GetCtmService() int64 {
	if x != nil {
		return x.CtmService
	}
	return 0
}

func (x *UpdateGoodsReturnRequest) GetCanEdit() bool {
	if x != nil {
		return x.CanEdit
	}
	return false
}

func (x *UpdateGoodsReturnRequest) GetGoodsId() string {
	if x != nil && x.GoodsId != nil {
		return *x.GoodsId
	}
	return ""
}

func (x *UpdateGoodsReturnRequest) GetGoodsName() string {
	if x != nil && x.GoodsName != nil {
		return *x.GoodsName
	}
	return ""
}

func (x *UpdateGoodsReturnRequest) GetGoodsSpu() string {
	if x != nil && x.GoodsSpu != nil {
		return *x.GoodsSpu
	}
	return ""
}

func (x *UpdateGoodsReturnRequest) GetSpecName() string {
	if x != nil && x.SpecName != nil {
		return *x.SpecName
	}
	return ""
}

func (x *UpdateGoodsReturnRequest) GetRfidCode() string {
	if x != nil && x.RfidCode != nil {
		return *x.RfidCode
	}
	return ""
}

func (x *UpdateGoodsReturnRequest) GetSecurityCode() string {
	if x != nil && x.SecurityCode != nil {
		return *x.SecurityCode
	}
	return ""
}

func (x *UpdateGoodsReturnRequest) GetGoodsNo() string {
	if x != nil && x.GoodsNo != nil {
		return *x.GoodsNo
	}
	return ""
}

type UpdateObjectComplainRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Filters              string   `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
	XPartialUpdateFields []string `protobuf:"bytes,3,rep,name=_partial_update_fields,json=PartialUpdateFields,proto3" json:"_partial_update_fields,omitempty"`
	GoodsSpu             *string  `protobuf:"bytes,4,opt,name=goods_spu,json=goodsSpu,proto3,oneof" json:"goods_spu,omitempty"`
	SpecNo               *string  `protobuf:"bytes,5,opt,name=spec_no,json=specNo,proto3,oneof" json:"spec_no,omitempty"`
	RfidCode             *string  `protobuf:"bytes,6,opt,name=rfid_code,json=rfidCode,proto3,oneof" json:"rfid_code,omitempty"`
	SecurityCode         *string  `protobuf:"bytes,7,opt,name=security_code,json=securityCode,proto3,oneof" json:"security_code,omitempty"`
	PlatformOrder        *string  `protobuf:"bytes,8,opt,name=platform_order,json=platformOrder,proto3,oneof" json:"platform_order,omitempty"`
	OmsOrder             *string  `protobuf:"bytes,9,opt,name=oms_order,json=omsOrder,proto3,oneof" json:"oms_order,omitempty"`
	PlatformRefund       *string  `protobuf:"bytes,10,opt,name=platform_refund,json=platformRefund,proto3,oneof" json:"platform_refund,omitempty"`
	OmsRefund            *string  `protobuf:"bytes,11,opt,name=oms_refund,json=omsRefund,proto3,oneof" json:"oms_refund,omitempty"`
	ComplainDesc         *string  `protobuf:"bytes,12,opt,name=complain_desc,json=complainDesc,proto3,oneof" json:"complain_desc,omitempty"`
	ServiceObject        *int64   `protobuf:"varint,13,opt,name=service_object,json=serviceObject,proto3,oneof" json:"service_object,omitempty"`
	GoodsId              *string  `protobuf:"bytes,14,opt,name=goods_id,json=goodsId,proto3,oneof" json:"goods_id,omitempty"`
	GoodsName            *string  `protobuf:"bytes,15,opt,name=goods_name,json=goodsName,proto3,oneof" json:"goods_name,omitempty"`
	PartsCode            *string  `protobuf:"bytes,17,opt,name=parts_code,json=partsCode,proto3,oneof" json:"parts_code,omitempty"`
	PartsName            *string  `protobuf:"bytes,18,opt,name=parts_name,json=partsName,proto3,oneof" json:"parts_name,omitempty"`
	MediaPath            *string  `protobuf:"bytes,19,opt,name=media_path,json=mediaPath,proto3,oneof" json:"media_path,omitempty"`
	ComplainReasons      *string  `protobuf:"bytes,20,opt,name=complain_reasons,json=complainReasons,proto3,oneof" json:"complain_reasons,omitempty"`
	SpecName             *string  `protobuf:"bytes,21,opt,name=spec_name,json=specName,proto3,oneof" json:"spec_name,omitempty"`
	GoodsNo              *string  `protobuf:"bytes,22,opt,name=goods_no,json=goodsNo,proto3,oneof" json:"goods_no,omitempty"`
}

func (x *UpdateObjectComplainRequest) Reset() {
	*x = UpdateObjectComplainRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateObjectComplainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateObjectComplainRequest) ProtoMessage() {}

func (x *UpdateObjectComplainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateObjectComplainRequest.ProtoReflect.Descriptor instead.
func (*UpdateObjectComplainRequest) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{94}
}

func (x *UpdateObjectComplainRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateObjectComplainRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *UpdateObjectComplainRequest) GetXPartialUpdateFields() []string {
	if x != nil {
		return x.XPartialUpdateFields
	}
	return nil
}

func (x *UpdateObjectComplainRequest) GetGoodsSpu() string {
	if x != nil && x.GoodsSpu != nil {
		return *x.GoodsSpu
	}
	return ""
}

func (x *UpdateObjectComplainRequest) GetSpecNo() string {
	if x != nil && x.SpecNo != nil {
		return *x.SpecNo
	}
	return ""
}

func (x *UpdateObjectComplainRequest) GetRfidCode() string {
	if x != nil && x.RfidCode != nil {
		return *x.RfidCode
	}
	return ""
}

func (x *UpdateObjectComplainRequest) GetSecurityCode() string {
	if x != nil && x.SecurityCode != nil {
		return *x.SecurityCode
	}
	return ""
}

func (x *UpdateObjectComplainRequest) GetPlatformOrder() string {
	if x != nil && x.PlatformOrder != nil {
		return *x.PlatformOrder
	}
	return ""
}

func (x *UpdateObjectComplainRequest) GetOmsOrder() string {
	if x != nil && x.OmsOrder != nil {
		return *x.OmsOrder
	}
	return ""
}

func (x *UpdateObjectComplainRequest) GetPlatformRefund() string {
	if x != nil && x.PlatformRefund != nil {
		return *x.PlatformRefund
	}
	return ""
}

func (x *UpdateObjectComplainRequest) GetOmsRefund() string {
	if x != nil && x.OmsRefund != nil {
		return *x.OmsRefund
	}
	return ""
}

func (x *UpdateObjectComplainRequest) GetComplainDesc() string {
	if x != nil && x.ComplainDesc != nil {
		return *x.ComplainDesc
	}
	return ""
}

func (x *UpdateObjectComplainRequest) GetServiceObject() int64 {
	if x != nil && x.ServiceObject != nil {
		return *x.ServiceObject
	}
	return 0
}

func (x *UpdateObjectComplainRequest) GetGoodsId() string {
	if x != nil && x.GoodsId != nil {
		return *x.GoodsId
	}
	return ""
}

func (x *UpdateObjectComplainRequest) GetGoodsName() string {
	if x != nil && x.GoodsName != nil {
		return *x.GoodsName
	}
	return ""
}

func (x *UpdateObjectComplainRequest) GetPartsCode() string {
	if x != nil && x.PartsCode != nil {
		return *x.PartsCode
	}
	return ""
}

func (x *UpdateObjectComplainRequest) GetPartsName() string {
	if x != nil && x.PartsName != nil {
		return *x.PartsName
	}
	return ""
}

func (x *UpdateObjectComplainRequest) GetMediaPath() string {
	if x != nil && x.MediaPath != nil {
		return *x.MediaPath
	}
	return ""
}

func (x *UpdateObjectComplainRequest) GetComplainReasons() string {
	if x != nil && x.ComplainReasons != nil {
		return *x.ComplainReasons
	}
	return ""
}

func (x *UpdateObjectComplainRequest) GetSpecName() string {
	if x != nil && x.SpecName != nil {
		return *x.SpecName
	}
	return ""
}

func (x *UpdateObjectComplainRequest) GetGoodsNo() string {
	if x != nil && x.GoodsNo != nil {
		return *x.GoodsNo
	}
	return ""
}

type UpdateObjectFeedbackRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Filters              string   `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
	XPartialUpdateFields []string `protobuf:"bytes,3,rep,name=_partial_update_fields,json=PartialUpdateFields,proto3" json:"_partial_update_fields,omitempty"`
	GoodsSpu             *string  `protobuf:"bytes,4,opt,name=goods_spu,json=goodsSpu,proto3,oneof" json:"goods_spu,omitempty"`
	SpecNo               *string  `protobuf:"bytes,5,opt,name=spec_no,json=specNo,proto3,oneof" json:"spec_no,omitempty"`
	RfidCode             *string  `protobuf:"bytes,6,opt,name=rfid_code,json=rfidCode,proto3,oneof" json:"rfid_code,omitempty"`
	SecurityCode         *string  `protobuf:"bytes,7,opt,name=security_code,json=securityCode,proto3,oneof" json:"security_code,omitempty"`
	FeedbackDesc         *string  `protobuf:"bytes,8,opt,name=feedback_desc,json=feedbackDesc,proto3,oneof" json:"feedback_desc,omitempty"`
	ServiceObject        *int64   `protobuf:"varint,9,opt,name=service_object,json=serviceObject,proto3,oneof" json:"service_object,omitempty"`
	GoodsId              *string  `protobuf:"bytes,10,opt,name=goods_id,json=goodsId,proto3,oneof" json:"goods_id,omitempty"`
	GoodsName            *string  `protobuf:"bytes,11,opt,name=goods_name,json=goodsName,proto3,oneof" json:"goods_name,omitempty"`
	PartsCode            *string  `protobuf:"bytes,13,opt,name=parts_code,json=partsCode,proto3,oneof" json:"parts_code,omitempty"`
	PartsName            *string  `protobuf:"bytes,14,opt,name=parts_name,json=partsName,proto3,oneof" json:"parts_name,omitempty"`
	MediaPath            *string  `protobuf:"bytes,15,opt,name=media_path,json=mediaPath,proto3,oneof" json:"media_path,omitempty"`
	FeedbackReasons      *string  `protobuf:"bytes,16,opt,name=feedback_reasons,json=feedbackReasons,proto3,oneof" json:"feedback_reasons,omitempty"`
	SpecName             *string  `protobuf:"bytes,17,opt,name=spec_name,json=specName,proto3,oneof" json:"spec_name,omitempty"`
	GoodsNo              *string  `protobuf:"bytes,18,opt,name=goods_no,json=goodsNo,proto3,oneof" json:"goods_no,omitempty"`
}

func (x *UpdateObjectFeedbackRequest) Reset() {
	*x = UpdateObjectFeedbackRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateObjectFeedbackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateObjectFeedbackRequest) ProtoMessage() {}

func (x *UpdateObjectFeedbackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateObjectFeedbackRequest.ProtoReflect.Descriptor instead.
func (*UpdateObjectFeedbackRequest) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{95}
}

func (x *UpdateObjectFeedbackRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateObjectFeedbackRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *UpdateObjectFeedbackRequest) GetXPartialUpdateFields() []string {
	if x != nil {
		return x.XPartialUpdateFields
	}
	return nil
}

func (x *UpdateObjectFeedbackRequest) GetGoodsSpu() string {
	if x != nil && x.GoodsSpu != nil {
		return *x.GoodsSpu
	}
	return ""
}

func (x *UpdateObjectFeedbackRequest) GetSpecNo() string {
	if x != nil && x.SpecNo != nil {
		return *x.SpecNo
	}
	return ""
}

func (x *UpdateObjectFeedbackRequest) GetRfidCode() string {
	if x != nil && x.RfidCode != nil {
		return *x.RfidCode
	}
	return ""
}

func (x *UpdateObjectFeedbackRequest) GetSecurityCode() string {
	if x != nil && x.SecurityCode != nil {
		return *x.SecurityCode
	}
	return ""
}

func (x *UpdateObjectFeedbackRequest) GetFeedbackDesc() string {
	if x != nil && x.FeedbackDesc != nil {
		return *x.FeedbackDesc
	}
	return ""
}

func (x *UpdateObjectFeedbackRequest) GetServiceObject() int64 {
	if x != nil && x.ServiceObject != nil {
		return *x.ServiceObject
	}
	return 0
}

func (x *UpdateObjectFeedbackRequest) GetGoodsId() string {
	if x != nil && x.GoodsId != nil {
		return *x.GoodsId
	}
	return ""
}

func (x *UpdateObjectFeedbackRequest) GetGoodsName() string {
	if x != nil && x.GoodsName != nil {
		return *x.GoodsName
	}
	return ""
}

func (x *UpdateObjectFeedbackRequest) GetPartsCode() string {
	if x != nil && x.PartsCode != nil {
		return *x.PartsCode
	}
	return ""
}

func (x *UpdateObjectFeedbackRequest) GetPartsName() string {
	if x != nil && x.PartsName != nil {
		return *x.PartsName
	}
	return ""
}

func (x *UpdateObjectFeedbackRequest) GetMediaPath() string {
	if x != nil && x.MediaPath != nil {
		return *x.MediaPath
	}
	return ""
}

func (x *UpdateObjectFeedbackRequest) GetFeedbackReasons() string {
	if x != nil && x.FeedbackReasons != nil {
		return *x.FeedbackReasons
	}
	return ""
}

func (x *UpdateObjectFeedbackRequest) GetSpecName() string {
	if x != nil && x.SpecName != nil {
		return *x.SpecName
	}
	return ""
}

func (x *UpdateObjectFeedbackRequest) GetGoodsNo() string {
	if x != nil && x.GoodsNo != nil {
		return *x.GoodsNo
	}
	return ""
}

type UpdateObjectRepairRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Filters              string   `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
	XPartialUpdateFields []string `protobuf:"bytes,3,rep,name=_partial_update_fields,json=PartialUpdateFields,proto3" json:"_partial_update_fields,omitempty"`
	GoodsSpu             *string  `protobuf:"bytes,4,opt,name=goods_spu,json=goodsSpu,proto3,oneof" json:"goods_spu,omitempty"`
	SpecNo               *string  `protobuf:"bytes,5,opt,name=spec_no,json=specNo,proto3,oneof" json:"spec_no,omitempty"`
	RfidCode             *string  `protobuf:"bytes,6,opt,name=rfid_code,json=rfidCode,proto3,oneof" json:"rfid_code,omitempty"`
	SecurityCode         *string  `protobuf:"bytes,7,opt,name=security_code,json=securityCode,proto3,oneof" json:"security_code,omitempty"`
	RepairPartsCode      *string  `protobuf:"bytes,8,opt,name=repair_parts_code,json=repairPartsCode,proto3,oneof" json:"repair_parts_code,omitempty"`
	RepairPartsName      *string  `protobuf:"bytes,9,opt,name=repair_parts_name,json=repairPartsName,proto3,oneof" json:"repair_parts_name,omitempty"`
	RepairDesc           *string  `protobuf:"bytes,10,opt,name=repair_desc,json=repairDesc,proto3,oneof" json:"repair_desc,omitempty"`
	MediaPath            *string  `protobuf:"bytes,11,opt,name=media_path,json=mediaPath,proto3,oneof" json:"media_path,omitempty"`
	ServiceObject        *int64   `protobuf:"varint,12,opt,name=service_object,json=serviceObject,proto3,oneof" json:"service_object,omitempty"`
	GoodsId              *string  `protobuf:"bytes,13,opt,name=goods_id,json=goodsId,proto3,oneof" json:"goods_id,omitempty"`
	GoodsName            *string  `protobuf:"bytes,14,opt,name=goods_name,json=goodsName,proto3,oneof" json:"goods_name,omitempty"`
	RepairReasons        *string  `protobuf:"bytes,16,opt,name=repair_reasons,json=repairReasons,proto3,oneof" json:"repair_reasons,omitempty"`
	SpecName             *string  `protobuf:"bytes,17,opt,name=spec_name,json=specName,proto3,oneof" json:"spec_name,omitempty"`
	PlatformOrder        *string  `protobuf:"bytes,18,opt,name=platform_order,json=platformOrder,proto3,oneof" json:"platform_order,omitempty"`
	OmsOrder             *string  `protobuf:"bytes,19,opt,name=oms_order,json=omsOrder,proto3,oneof" json:"oms_order,omitempty"`
	OutPrice             *float64 `protobuf:"fixed64,20,opt,name=out_price,json=outPrice,proto3,oneof" json:"out_price,omitempty"`
	RetailPrice          *float64 `protobuf:"fixed64,21,opt,name=retail_price,json=retailPrice,proto3,oneof" json:"retail_price,omitempty"`
	GoodsNo              *string  `protobuf:"bytes,22,opt,name=goods_no,json=goodsNo,proto3,oneof" json:"goods_no,omitempty"`
	RepairExpired        *string  `protobuf:"bytes,23,opt,name=repair_expired,json=repairExpired,proto3,oneof" json:"repair_expired,omitempty"`
	SwapExpired          *string  `protobuf:"bytes,24,opt,name=swap_expired,json=swapExpired,proto3,oneof" json:"swap_expired,omitempty"`
}

func (x *UpdateObjectRepairRequest) Reset() {
	*x = UpdateObjectRepairRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateObjectRepairRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateObjectRepairRequest) ProtoMessage() {}

func (x *UpdateObjectRepairRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateObjectRepairRequest.ProtoReflect.Descriptor instead.
func (*UpdateObjectRepairRequest) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{96}
}

func (x *UpdateObjectRepairRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateObjectRepairRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *UpdateObjectRepairRequest) GetXPartialUpdateFields() []string {
	if x != nil {
		return x.XPartialUpdateFields
	}
	return nil
}

func (x *UpdateObjectRepairRequest) GetGoodsSpu() string {
	if x != nil && x.GoodsSpu != nil {
		return *x.GoodsSpu
	}
	return ""
}

func (x *UpdateObjectRepairRequest) GetSpecNo() string {
	if x != nil && x.SpecNo != nil {
		return *x.SpecNo
	}
	return ""
}

func (x *UpdateObjectRepairRequest) GetRfidCode() string {
	if x != nil && x.RfidCode != nil {
		return *x.RfidCode
	}
	return ""
}

func (x *UpdateObjectRepairRequest) GetSecurityCode() string {
	if x != nil && x.SecurityCode != nil {
		return *x.SecurityCode
	}
	return ""
}

func (x *UpdateObjectRepairRequest) GetRepairPartsCode() string {
	if x != nil && x.RepairPartsCode != nil {
		return *x.RepairPartsCode
	}
	return ""
}

func (x *UpdateObjectRepairRequest) GetRepairPartsName() string {
	if x != nil && x.RepairPartsName != nil {
		return *x.RepairPartsName
	}
	return ""
}

func (x *UpdateObjectRepairRequest) GetRepairDesc() string {
	if x != nil && x.RepairDesc != nil {
		return *x.RepairDesc
	}
	return ""
}

func (x *UpdateObjectRepairRequest) GetMediaPath() string {
	if x != nil && x.MediaPath != nil {
		return *x.MediaPath
	}
	return ""
}

func (x *UpdateObjectRepairRequest) GetServiceObject() int64 {
	if x != nil && x.ServiceObject != nil {
		return *x.ServiceObject
	}
	return 0
}

func (x *UpdateObjectRepairRequest) GetGoodsId() string {
	if x != nil && x.GoodsId != nil {
		return *x.GoodsId
	}
	return ""
}

func (x *UpdateObjectRepairRequest) GetGoodsName() string {
	if x != nil && x.GoodsName != nil {
		return *x.GoodsName
	}
	return ""
}

func (x *UpdateObjectRepairRequest) GetRepairReasons() string {
	if x != nil && x.RepairReasons != nil {
		return *x.RepairReasons
	}
	return ""
}

func (x *UpdateObjectRepairRequest) GetSpecName() string {
	if x != nil && x.SpecName != nil {
		return *x.SpecName
	}
	return ""
}

func (x *UpdateObjectRepairRequest) GetPlatformOrder() string {
	if x != nil && x.PlatformOrder != nil {
		return *x.PlatformOrder
	}
	return ""
}

func (x *UpdateObjectRepairRequest) GetOmsOrder() string {
	if x != nil && x.OmsOrder != nil {
		return *x.OmsOrder
	}
	return ""
}

func (x *UpdateObjectRepairRequest) GetOutPrice() float64 {
	if x != nil && x.OutPrice != nil {
		return *x.OutPrice
	}
	return 0
}

func (x *UpdateObjectRepairRequest) GetRetailPrice() float64 {
	if x != nil && x.RetailPrice != nil {
		return *x.RetailPrice
	}
	return 0
}

func (x *UpdateObjectRepairRequest) GetGoodsNo() string {
	if x != nil && x.GoodsNo != nil {
		return *x.GoodsNo
	}
	return ""
}

func (x *UpdateObjectRepairRequest) GetRepairExpired() string {
	if x != nil && x.RepairExpired != nil {
		return *x.RepairExpired
	}
	return ""
}

func (x *UpdateObjectRepairRequest) GetSwapExpired() string {
	if x != nil && x.SwapExpired != nil {
		return *x.SwapExpired
	}
	return ""
}

type UpdateObjectSwapRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Filters              string   `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
	XPartialUpdateFields []string `protobuf:"bytes,3,rep,name=_partial_update_fields,json=PartialUpdateFields,proto3" json:"_partial_update_fields,omitempty"`
	GoodsSpu             *string  `protobuf:"bytes,4,opt,name=goods_spu,json=goodsSpu,proto3,oneof" json:"goods_spu,omitempty"`
	SpecNo               *string  `protobuf:"bytes,5,opt,name=spec_no,json=specNo,proto3,oneof" json:"spec_no,omitempty"`
	RfidCode             *string  `protobuf:"bytes,6,opt,name=rfid_code,json=rfidCode,proto3,oneof" json:"rfid_code,omitempty"`
	SecurityCode         *string  `protobuf:"bytes,7,opt,name=security_code,json=securityCode,proto3,oneof" json:"security_code,omitempty"`
	RepairPartsCode      *string  `protobuf:"bytes,8,opt,name=repair_parts_code,json=repairPartsCode,proto3,oneof" json:"repair_parts_code,omitempty"`
	RepairPartsName      *string  `protobuf:"bytes,9,opt,name=repair_parts_name,json=repairPartsName,proto3,oneof" json:"repair_parts_name,omitempty"`
	RepairDesc           *string  `protobuf:"bytes,10,opt,name=repair_desc,json=repairDesc,proto3,oneof" json:"repair_desc,omitempty"`
	MediaPath            *string  `protobuf:"bytes,11,opt,name=media_path,json=mediaPath,proto3,oneof" json:"media_path,omitempty"`
	ServiceObject        *int64   `protobuf:"varint,12,opt,name=service_object,json=serviceObject,proto3,oneof" json:"service_object,omitempty"`
	GoodsId              *string  `protobuf:"bytes,13,opt,name=goods_id,json=goodsId,proto3,oneof" json:"goods_id,omitempty"`
	GoodsName            *string  `protobuf:"bytes,14,opt,name=goods_name,json=goodsName,proto3,oneof" json:"goods_name,omitempty"`
	RepairReasons        *string  `protobuf:"bytes,16,opt,name=repair_reasons,json=repairReasons,proto3,oneof" json:"repair_reasons,omitempty"`
	SpecName             *string  `protobuf:"bytes,17,opt,name=spec_name,json=specName,proto3,oneof" json:"spec_name,omitempty"`
	PlatformOrder        *string  `protobuf:"bytes,18,opt,name=platform_order,json=platformOrder,proto3,oneof" json:"platform_order,omitempty"`
	OmsOrder             *string  `protobuf:"bytes,19,opt,name=oms_order,json=omsOrder,proto3,oneof" json:"oms_order,omitempty"`
	OutPrice             *float64 `protobuf:"fixed64,20,opt,name=out_price,json=outPrice,proto3,oneof" json:"out_price,omitempty"`
	RetailPrice          *float64 `protobuf:"fixed64,21,opt,name=retail_price,json=retailPrice,proto3,oneof" json:"retail_price,omitempty"`
	GoodsNo              *string  `protobuf:"bytes,22,opt,name=goods_no,json=goodsNo,proto3,oneof" json:"goods_no,omitempty"`
	RepairExpired        *string  `protobuf:"bytes,23,opt,name=repair_expired,json=repairExpired,proto3,oneof" json:"repair_expired,omitempty"`
	SwapExpired          *string  `protobuf:"bytes,24,opt,name=swap_expired,json=swapExpired,proto3,oneof" json:"swap_expired,omitempty"`
}

func (x *UpdateObjectSwapRequest) Reset() {
	*x = UpdateObjectSwapRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateObjectSwapRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateObjectSwapRequest) ProtoMessage() {}

func (x *UpdateObjectSwapRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateObjectSwapRequest.ProtoReflect.Descriptor instead.
func (*UpdateObjectSwapRequest) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{97}
}

func (x *UpdateObjectSwapRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateObjectSwapRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *UpdateObjectSwapRequest) GetXPartialUpdateFields() []string {
	if x != nil {
		return x.XPartialUpdateFields
	}
	return nil
}

func (x *UpdateObjectSwapRequest) GetGoodsSpu() string {
	if x != nil && x.GoodsSpu != nil {
		return *x.GoodsSpu
	}
	return ""
}

func (x *UpdateObjectSwapRequest) GetSpecNo() string {
	if x != nil && x.SpecNo != nil {
		return *x.SpecNo
	}
	return ""
}

func (x *UpdateObjectSwapRequest) GetRfidCode() string {
	if x != nil && x.RfidCode != nil {
		return *x.RfidCode
	}
	return ""
}

func (x *UpdateObjectSwapRequest) GetSecurityCode() string {
	if x != nil && x.SecurityCode != nil {
		return *x.SecurityCode
	}
	return ""
}

func (x *UpdateObjectSwapRequest) GetRepairPartsCode() string {
	if x != nil && x.RepairPartsCode != nil {
		return *x.RepairPartsCode
	}
	return ""
}

func (x *UpdateObjectSwapRequest) GetRepairPartsName() string {
	if x != nil && x.RepairPartsName != nil {
		return *x.RepairPartsName
	}
	return ""
}

func (x *UpdateObjectSwapRequest) GetRepairDesc() string {
	if x != nil && x.RepairDesc != nil {
		return *x.RepairDesc
	}
	return ""
}

func (x *UpdateObjectSwapRequest) GetMediaPath() string {
	if x != nil && x.MediaPath != nil {
		return *x.MediaPath
	}
	return ""
}

func (x *UpdateObjectSwapRequest) GetServiceObject() int64 {
	if x != nil && x.ServiceObject != nil {
		return *x.ServiceObject
	}
	return 0
}

func (x *UpdateObjectSwapRequest) GetGoodsId() string {
	if x != nil && x.GoodsId != nil {
		return *x.GoodsId
	}
	return ""
}

func (x *UpdateObjectSwapRequest) GetGoodsName() string {
	if x != nil && x.GoodsName != nil {
		return *x.GoodsName
	}
	return ""
}

func (x *UpdateObjectSwapRequest) GetRepairReasons() string {
	if x != nil && x.RepairReasons != nil {
		return *x.RepairReasons
	}
	return ""
}

func (x *UpdateObjectSwapRequest) GetSpecName() string {
	if x != nil && x.SpecName != nil {
		return *x.SpecName
	}
	return ""
}

func (x *UpdateObjectSwapRequest) GetPlatformOrder() string {
	if x != nil && x.PlatformOrder != nil {
		return *x.PlatformOrder
	}
	return ""
}

func (x *UpdateObjectSwapRequest) GetOmsOrder() string {
	if x != nil && x.OmsOrder != nil {
		return *x.OmsOrder
	}
	return ""
}

func (x *UpdateObjectSwapRequest) GetOutPrice() float64 {
	if x != nil && x.OutPrice != nil {
		return *x.OutPrice
	}
	return 0
}

func (x *UpdateObjectSwapRequest) GetRetailPrice() float64 {
	if x != nil && x.RetailPrice != nil {
		return *x.RetailPrice
	}
	return 0
}

func (x *UpdateObjectSwapRequest) GetGoodsNo() string {
	if x != nil && x.GoodsNo != nil {
		return *x.GoodsNo
	}
	return ""
}

func (x *UpdateObjectSwapRequest) GetRepairExpired() string {
	if x != nil && x.RepairExpired != nil {
		return *x.RepairExpired
	}
	return ""
}

func (x *UpdateObjectSwapRequest) GetSwapExpired() string {
	if x != nil && x.SwapExpired != nil {
		return *x.SwapExpired
	}
	return ""
}

type UpdateObjectTailorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Filters              string   `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
	XPartialUpdateFields []string `protobuf:"bytes,3,rep,name=_partial_update_fields,json=PartialUpdateFields,proto3" json:"_partial_update_fields,omitempty"`
	GoodsSpu             *string  `protobuf:"bytes,4,opt,name=goods_spu,json=goodsSpu,proto3,oneof" json:"goods_spu,omitempty"`
	SpecNo               *string  `protobuf:"bytes,5,opt,name=spec_no,json=specNo,proto3,oneof" json:"spec_no,omitempty"`
	RfidCode             *string  `protobuf:"bytes,6,opt,name=rfid_code,json=rfidCode,proto3,oneof" json:"rfid_code,omitempty"`
	SecurityCode         *string  `protobuf:"bytes,7,opt,name=security_code,json=securityCode,proto3,oneof" json:"security_code,omitempty"`
	PlatformOrder        *string  `protobuf:"bytes,8,opt,name=platform_order,json=platformOrder,proto3,oneof" json:"platform_order,omitempty"`
	OmsOrder             *string  `protobuf:"bytes,9,opt,name=oms_order,json=omsOrder,proto3,oneof" json:"oms_order,omitempty"`
	PartId               *string  `protobuf:"bytes,10,opt,name=part_id,json=partId,proto3,oneof" json:"part_id,omitempty"`
	PartName             *string  `protobuf:"bytes,11,opt,name=part_name,json=partName,proto3,oneof" json:"part_name,omitempty"`
	Remark               *string  `protobuf:"bytes,12,opt,name=remark,proto3,oneof" json:"remark,omitempty"`
	Text                 *string  `protobuf:"bytes,13,opt,name=text,proto3,oneof" json:"text,omitempty"`
	TextColor            *string  `protobuf:"bytes,14,opt,name=text_color,json=textColor,proto3,oneof" json:"text_color,omitempty"`
	TextFont             *string  `protobuf:"bytes,15,opt,name=text_font,json=textFont,proto3,oneof" json:"text_font,omitempty"`
	TifPath              *string  `protobuf:"bytes,16,opt,name=tif_path,json=tifPath,proto3,oneof" json:"tif_path,omitempty"`
	ImgPath              *string  `protobuf:"bytes,17,opt,name=img_path,json=imgPath,proto3,oneof" json:"img_path,omitempty"`
	Deletable            *bool    `protobuf:"varint,18,opt,name=deletable,proto3,oneof" json:"deletable,omitempty"`
	ServiceObject        *int64   `protobuf:"varint,19,opt,name=service_object,json=serviceObject,proto3,oneof" json:"service_object,omitempty"`
	GoodsId              *string  `protobuf:"bytes,20,opt,name=goods_id,json=goodsId,proto3,oneof" json:"goods_id,omitempty"`
	GoodsName            *string  `protobuf:"bytes,21,opt,name=goods_name,json=goodsName,proto3,oneof" json:"goods_name,omitempty"`
	SpecName             *string  `protobuf:"bytes,22,opt,name=spec_name,json=specName,proto3,oneof" json:"spec_name,omitempty"`
	OutPrice             *float64 `protobuf:"fixed64,23,opt,name=out_price,json=outPrice,proto3,oneof" json:"out_price,omitempty"`
	RetailPrice          *float64 `protobuf:"fixed64,24,opt,name=retail_price,json=retailPrice,proto3,oneof" json:"retail_price,omitempty"`
	GoodsNo              *string  `protobuf:"bytes,25,opt,name=goods_no,json=goodsNo,proto3,oneof" json:"goods_no,omitempty"`
}

func (x *UpdateObjectTailorRequest) Reset() {
	*x = UpdateObjectTailorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateObjectTailorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateObjectTailorRequest) ProtoMessage() {}

func (x *UpdateObjectTailorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateObjectTailorRequest.ProtoReflect.Descriptor instead.
func (*UpdateObjectTailorRequest) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{98}
}

func (x *UpdateObjectTailorRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateObjectTailorRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *UpdateObjectTailorRequest) GetXPartialUpdateFields() []string {
	if x != nil {
		return x.XPartialUpdateFields
	}
	return nil
}

func (x *UpdateObjectTailorRequest) GetGoodsSpu() string {
	if x != nil && x.GoodsSpu != nil {
		return *x.GoodsSpu
	}
	return ""
}

func (x *UpdateObjectTailorRequest) GetSpecNo() string {
	if x != nil && x.SpecNo != nil {
		return *x.SpecNo
	}
	return ""
}

func (x *UpdateObjectTailorRequest) GetRfidCode() string {
	if x != nil && x.RfidCode != nil {
		return *x.RfidCode
	}
	return ""
}

func (x *UpdateObjectTailorRequest) GetSecurityCode() string {
	if x != nil && x.SecurityCode != nil {
		return *x.SecurityCode
	}
	return ""
}

func (x *UpdateObjectTailorRequest) GetPlatformOrder() string {
	if x != nil && x.PlatformOrder != nil {
		return *x.PlatformOrder
	}
	return ""
}

func (x *UpdateObjectTailorRequest) GetOmsOrder() string {
	if x != nil && x.OmsOrder != nil {
		return *x.OmsOrder
	}
	return ""
}

func (x *UpdateObjectTailorRequest) GetPartId() string {
	if x != nil && x.PartId != nil {
		return *x.PartId
	}
	return ""
}

func (x *UpdateObjectTailorRequest) GetPartName() string {
	if x != nil && x.PartName != nil {
		return *x.PartName
	}
	return ""
}

func (x *UpdateObjectTailorRequest) GetRemark() string {
	if x != nil && x.Remark != nil {
		return *x.Remark
	}
	return ""
}

func (x *UpdateObjectTailorRequest) GetText() string {
	if x != nil && x.Text != nil {
		return *x.Text
	}
	return ""
}

func (x *UpdateObjectTailorRequest) GetTextColor() string {
	if x != nil && x.TextColor != nil {
		return *x.TextColor
	}
	return ""
}

func (x *UpdateObjectTailorRequest) GetTextFont() string {
	if x != nil && x.TextFont != nil {
		return *x.TextFont
	}
	return ""
}

func (x *UpdateObjectTailorRequest) GetTifPath() string {
	if x != nil && x.TifPath != nil {
		return *x.TifPath
	}
	return ""
}

func (x *UpdateObjectTailorRequest) GetImgPath() string {
	if x != nil && x.ImgPath != nil {
		return *x.ImgPath
	}
	return ""
}

func (x *UpdateObjectTailorRequest) GetDeletable() bool {
	if x != nil && x.Deletable != nil {
		return *x.Deletable
	}
	return false
}

func (x *UpdateObjectTailorRequest) GetServiceObject() int64 {
	if x != nil && x.ServiceObject != nil {
		return *x.ServiceObject
	}
	return 0
}

func (x *UpdateObjectTailorRequest) GetGoodsId() string {
	if x != nil && x.GoodsId != nil {
		return *x.GoodsId
	}
	return ""
}

func (x *UpdateObjectTailorRequest) GetGoodsName() string {
	if x != nil && x.GoodsName != nil {
		return *x.GoodsName
	}
	return ""
}

func (x *UpdateObjectTailorRequest) GetSpecName() string {
	if x != nil && x.SpecName != nil {
		return *x.SpecName
	}
	return ""
}

func (x *UpdateObjectTailorRequest) GetOutPrice() float64 {
	if x != nil && x.OutPrice != nil {
		return *x.OutPrice
	}
	return 0
}

func (x *UpdateObjectTailorRequest) GetRetailPrice() float64 {
	if x != nil && x.RetailPrice != nil {
		return *x.RetailPrice
	}
	return 0
}

func (x *UpdateObjectTailorRequest) GetGoodsNo() string {
	if x != nil && x.GoodsNo != nil {
		return *x.GoodsNo
	}
	return ""
}

type UpdateObjectTradeInRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Filters              string   `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
	XPartialUpdateFields []string `protobuf:"bytes,3,rep,name=_partial_update_fields,json=PartialUpdateFields,proto3" json:"_partial_update_fields,omitempty"`
	CtmId                *int32   `protobuf:"varint,4,opt,name=ctm_id,json=ctmId,proto3,oneof" json:"ctm_id,omitempty"`
	CtmOpenId            *string  `protobuf:"bytes,5,opt,name=ctm_openId,json=ctmOpenId,proto3,oneof" json:"ctm_openId,omitempty"`
	CtmNickname          *string  `protobuf:"bytes,6,opt,name=ctm_nickname,json=ctmNickname,proto3,oneof" json:"ctm_nickname,omitempty"`
	CtmMobile            *string  `protobuf:"bytes,7,opt,name=ctm_mobile,json=ctmMobile,proto3,oneof" json:"ctm_mobile,omitempty"`
	CtmCardNo            *string  `protobuf:"bytes,8,opt,name=ctm_card_no,json=ctmCardNo,proto3,oneof" json:"ctm_card_no,omitempty"`
	CtmLevel             *int32   `protobuf:"varint,9,opt,name=ctm_level,json=ctmLevel,proto3,oneof" json:"ctm_level,omitempty"`
	TradeInBrand         *string  `protobuf:"bytes,10,opt,name=trade_in_brand,json=tradeInBrand,proto3,oneof" json:"trade_in_brand,omitempty"`
	TradeInModel         *string  `protobuf:"bytes,11,opt,name=trade_in_model,json=tradeInModel,proto3,oneof" json:"trade_in_model,omitempty"`
	TradeInDesc          *string  `protobuf:"bytes,12,opt,name=trade_in_desc,json=tradeInDesc,proto3,oneof" json:"trade_in_desc,omitempty"`
	TradeInPrice         *float64 `protobuf:"fixed64,13,opt,name=trade_in_price,json=tradeInPrice,proto3,oneof" json:"trade_in_price,omitempty"`
	ServiceObject        *int64   `protobuf:"varint,14,opt,name=service_object,json=serviceObject,proto3,oneof" json:"service_object,omitempty"`
	MediaPath            *string  `protobuf:"bytes,15,opt,name=media_path,json=mediaPath,proto3,oneof" json:"media_path,omitempty"`
	TradeInReasons       *string  `protobuf:"bytes,16,opt,name=trade_in_reasons,json=tradeInReasons,proto3,oneof" json:"trade_in_reasons,omitempty"`
}

func (x *UpdateObjectTradeInRequest) Reset() {
	*x = UpdateObjectTradeInRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_ito_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateObjectTradeInRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateObjectTradeInRequest) ProtoMessage() {}

func (x *UpdateObjectTradeInRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_ito_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateObjectTradeInRequest.ProtoReflect.Descriptor instead.
func (*UpdateObjectTradeInRequest) Descriptor() ([]byte, []int) {
	return file_service_ito_proto_rawDescGZIP(), []int{99}
}

func (x *UpdateObjectTradeInRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateObjectTradeInRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *UpdateObjectTradeInRequest) GetXPartialUpdateFields() []string {
	if x != nil {
		return x.XPartialUpdateFields
	}
	return nil
}

func (x *UpdateObjectTradeInRequest) GetCtmId() int32 {
	if x != nil && x.CtmId != nil {
		return *x.CtmId
	}
	return 0
}

func (x *UpdateObjectTradeInRequest) GetCtmOpenId() string {
	if x != nil && x.CtmOpenId != nil {
		return *x.CtmOpenId
	}
	return ""
}

func (x *UpdateObjectTradeInRequest) GetCtmNickname() string {
	if x != nil && x.CtmNickname != nil {
		return *x.CtmNickname
	}
	return ""
}

func (x *UpdateObjectTradeInRequest) GetCtmMobile() string {
	if x != nil && x.CtmMobile != nil {
		return *x.CtmMobile
	}
	return ""
}

func (x *UpdateObjectTradeInRequest) GetCtmCardNo() string {
	if x != nil && x.CtmCardNo != nil {
		return *x.CtmCardNo
	}
	return ""
}

func (x *UpdateObjectTradeInRequest) GetCtmLevel() int32 {
	if x != nil && x.CtmLevel != nil {
		return *x.CtmLevel
	}
	return 0
}

func (x *UpdateObjectTradeInRequest) GetTradeInBrand() string {
	if x != nil && x.TradeInBrand != nil {
		return *x.TradeInBrand
	}
	return ""
}

func (x *UpdateObjectTradeInRequest) GetTradeInModel() string {
	if x != nil && x.TradeInModel != nil {
		return *x.TradeInModel
	}
	return ""
}

func (x *UpdateObjectTradeInRequest) GetTradeInDesc() string {
	if x != nil && x.TradeInDesc != nil {
		return *x.TradeInDesc
	}
	return ""
}

func (x *UpdateObjectTradeInRequest) GetTradeInPrice() float64 {
	if x != nil && x.TradeInPrice != nil {
		return *x.TradeInPrice
	}
	return 0
}

func (x *UpdateObjectTradeInRequest) GetServiceObject() int64 {
	if x != nil && x.ServiceObject != nil {
		return *x.ServiceObject
	}
	return 0
}

func (x *UpdateObjectTradeInRequest) GetMediaPath() string {
	if x != nil && x.MediaPath != nil {
		return *x.MediaPath
	}
	return ""
}

func (x *UpdateObjectTradeInRequest) GetTradeInReasons() string {
	if x != nil && x.TradeInReasons != nil {
		return *x.TradeInReasons
	}
	return ""
}

var File_service_ito_proto protoreflect.FileDescriptor

var file_service_ito_proto_rawDesc = []byte{
	0x0a, 0x11, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x1d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69,
	0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x91, 0x01, 0x0a, 0x21, 0x42, 0x75, 0x6c, 0x6b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x6f,
	0x6f, 0x64, 0x73, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x56, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x97, 0x09, 0x0a, 0x1d, 0x42, 0x75, 0x6c, 0x6b, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12,
	0x20, 0x0a, 0x09, 0x63, 0x74, 0x6d, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x48, 0x00, 0x52, 0x08, 0x63, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x88, 0x01,
	0x01, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x61, 0x6e, 0x5f, 0x65, 0x64, 0x69, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x63, 0x61, 0x6e, 0x45, 0x64, 0x69, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x6e, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x5f, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x61, 0x64, 0x6a,
	0x75, 0x73, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0b, 0x73, 0x68, 0x61, 0x72, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x26, 0x0a, 0x0c, 0x64, 0x65, 0x62, 0x69, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x01, 0x48, 0x01, 0x52, 0x0b, 0x64, 0x65, 0x62, 0x69, 0x74, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x48, 0x02, 0x52, 0x0a,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a,
	0x0b, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x62, 0x61, 0x64, 0x67, 0x65, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x05, 0x48, 0x03, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x63, 0x65, 0x42, 0x61, 0x64, 0x67, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x74,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x48, 0x04, 0x52, 0x08, 0x70, 0x72, 0x69, 0x63, 0x65, 0x4e,
	0x75, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x05, 0x48, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88,
	0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x48, 0x06, 0x52, 0x0c, 0x72, 0x65, 0x66,
	0x75, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08,
	0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07,
	0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a,
	0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x08, 0x52, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x20, 0x0a, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x73, 0x70, 0x75, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x09, 0x52, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x53, 0x70, 0x75, 0x88,
	0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x6f, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x0a, 0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x4e, 0x6f, 0x88,
	0x01, 0x01, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x6e, 0x6f, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x70, 0x65, 0x63, 0x4e, 0x6f, 0x12, 0x20, 0x0a, 0x09, 0x73,
	0x70, 0x65, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0b,
	0x52, 0x08, 0x73, 0x70, 0x65, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a,
	0x09, 0x72, 0x66, 0x69, 0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x0c, 0x52, 0x08, 0x72, 0x66, 0x69, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x28, 0x0a, 0x0d, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0d, 0x52, 0x0c, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x63, 0x74, 0x6d,
	0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x18, 0x19, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0e, 0x52,
	0x09, 0x63, 0x74, 0x6d, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a,
	0x0b, 0x63, 0x74, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x1a, 0x20, 0x01,
	0x28, 0x03, 0x48, 0x0f, 0x52, 0x0a, 0x63, 0x74, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x73, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x03, 0x48, 0x10, 0x52, 0x0c, 0x72, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a,
	0x0a, 0x5f, 0x63, 0x74, 0x6d, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x0f, 0x0a, 0x0d, 0x5f,
	0x64, 0x65, 0x62, 0x69, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x0e, 0x0a, 0x0c,
	0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x42, 0x0e, 0x0a, 0x0c,
	0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x62, 0x61, 0x64, 0x67, 0x65, 0x42, 0x0c, 0x0a, 0x0a,
	0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x67, 0x6f, 0x6f, 0x64,
	0x73, 0x5f, 0x69, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x73, 0x70,
	0x75, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x6f, 0x42, 0x0c,
	0x0a, 0x0a, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0c, 0x0a, 0x0a,
	0x5f, 0x72, 0x66, 0x69, 0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x73,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x0d, 0x0a, 0x0b,
	0x5f, 0x63, 0x74, 0x6d, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x5f,
	0x63, 0x74, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f,
	0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x22, 0x8f, 0x01,
	0x0a, 0x20, 0x42, 0x75, 0x6c, 0x6b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x6f, 0x6f, 0x64,
	0x73, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x55, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x69, 0x74, 0x6f, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x6f,
	0x6f, 0x64, 0x73, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0xaf, 0x04, 0x0a, 0x1c, 0x42, 0x75, 0x6c, 0x6b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x6f,
	0x6f, 0x64, 0x73, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x61,
	0x6e, 0x5f, 0x65, 0x64, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x63, 0x61,
	0x6e, 0x45, 0x64, 0x69, 0x74, 0x12, 0x1e, 0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73,
	0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x09, 0x67, 0x6f, 0x6f,
	0x64, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x67, 0x6f, 0x6f,
	0x64, 0x73, 0x5f, 0x73, 0x70, 0x75, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x08,
	0x67, 0x6f, 0x6f, 0x64, 0x73, 0x53, 0x70, 0x75, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x67,
	0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52,
	0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x4e, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x07, 0x73,
	0x70, 0x65, 0x63, 0x5f, 0x6e, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x06,
	0x73, 0x70, 0x65, 0x63, 0x4e, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x73, 0x70, 0x65,
	0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x08,
	0x73, 0x70, 0x65, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x72,
	0x66, 0x69, 0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06,
	0x52, 0x08, 0x72, 0x66, 0x69, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a,
	0x0d, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x0c, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x63, 0x74, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x74, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x42, 0x0d, 0x0a,
	0x0b, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0c, 0x0a, 0x0a,
	0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x73, 0x70, 0x75, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x67,
	0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x6f, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x73, 0x70, 0x65, 0x63,
	0x5f, 0x6e, 0x6f, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x72, 0x66, 0x69, 0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42,
	0x10, 0x0a, 0x0e, 0x5f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x22, 0x93, 0x09, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x6f, 0x6f, 0x64,
	0x73, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x20, 0x0a, 0x09, 0x63, 0x74, 0x6d,
	0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x08,
	0x63, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x08, 0x63,
	0x61, 0x6e, 0x5f, 0x65, 0x64, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x63,
	0x61, 0x6e, 0x45, 0x64, 0x69, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x61, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x61, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x25, 0x0a, 0x0e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x73, 0x68, 0x61, 0x72, 0x65, 0x44, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0c, 0x64, 0x65, 0x62,
	0x69, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x48,
	0x01, 0x52, 0x0b, 0x64, 0x65, 0x62, 0x69, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x24, 0x0a, 0x0b, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x48, 0x02, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x63, 0x65, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x5f, 0x62, 0x61, 0x64, 0x67, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x48, 0x03, 0x52, 0x0a,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x42, 0x61, 0x64, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a,
	0x09, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05,
	0x48, 0x04, 0x52, 0x08, 0x70, 0x72, 0x69, 0x63, 0x65, 0x4e, 0x75, 0x74, 0x88, 0x01, 0x01, 0x12,
	0x1b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d,
	0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x05, 0x48, 0x06, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f,
	0x69, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64,
	0x73, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x09, 0x67, 0x6f,
	0x6f, 0x64, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x67, 0x6f,
	0x6f, 0x64, 0x73, 0x5f, 0x73, 0x70, 0x75, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52,
	0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x53, 0x70, 0x75, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x07,
	0x73, 0x70, 0x65, 0x63, 0x5f, 0x6e, 0x6f, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x70, 0x65, 0x63, 0x4e, 0x6f, 0x12, 0x22, 0x0a, 0x0a, 0x63, 0x74, 0x6d, 0x5f, 0x72, 0x65, 0x66,
	0x75, 0x6e, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0a, 0x52, 0x09, 0x63, 0x74, 0x6d,
	0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x63, 0x74, 0x6d,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0b,
	0x52, 0x0a, 0x63, 0x74, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x28, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73,
	0x18, 0x17, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0c, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x73, 0x70, 0x65,
	0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0d, 0x52, 0x08,
	0x73, 0x70, 0x65, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x72,
	0x66, 0x69, 0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0e,
	0x52, 0x08, 0x72, 0x66, 0x69, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a,
	0x0d, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x1a,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x0f, 0x52, 0x0c, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73,
	0x5f, 0x6e, 0x6f, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x10, 0x52, 0x07, 0x67, 0x6f, 0x6f,
	0x64, 0x73, 0x4e, 0x6f, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x63, 0x74, 0x6d, 0x5f,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x64, 0x65, 0x62, 0x69, 0x74, 0x5f,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x5f, 0x62, 0x61, 0x64, 0x67, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x5f, 0x6e, 0x75, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42,
	0x10, 0x0a, 0x0e, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x42, 0x0d,
	0x0a, 0x0b, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0c, 0x0a,
	0x0a, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x73, 0x70, 0x75, 0x42, 0x0d, 0x0a, 0x0b, 0x5f,
	0x63, 0x74, 0x6d, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x63,
	0x74, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x72,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x42, 0x0c, 0x0a, 0x0a,
	0x5f, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x72,
	0x66, 0x69, 0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x73, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x67,
	0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x6f, 0x22, 0xc8, 0x07, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12,
	0x20, 0x0a, 0x09, 0x63, 0x74, 0x6d, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x1f, 0x20, 0x01,
	0x28, 0x03, 0x48, 0x00, 0x52, 0x08, 0x63, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x88, 0x01,
	0x01, 0x12, 0x24, 0x0a, 0x0b, 0x63, 0x74, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x18, 0x21, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x0a, 0x63, 0x74, 0x6d, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x22, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x69,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61,
	0x79, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x23, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x70, 0x61, 0x79, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0a, 0x70, 0x61, 0x79,
	0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x24, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52,
	0x09, 0x70, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a,
	0x11, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f,
	0x6e, 0x6f, 0x18, 0x25, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x0f, 0x70, 0x61, 0x79, 0x65,
	0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x24,
	0x0a, 0x0b, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x26, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x0a, 0x70, 0x61, 0x79, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x27, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x0a, 0x70, 0x61, 0x79,
	0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x70, 0x61,
	0x79, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x28, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x06, 0x52, 0x0c, 0x70, 0x61, 0x79, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x62, 0x61,
	0x6e, 0x6b, 0x18, 0x29, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x09, 0x70, 0x61, 0x79, 0x65,
	0x72, 0x42, 0x61, 0x6e, 0x6b, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x70, 0x61, 0x79, 0x65,
	0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x08, 0x52, 0x0c, 0x70, 0x61, 0x79, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x88,
	0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x01, 0x48, 0x09, 0x52, 0x0d, 0x69, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x2a,
	0x0a, 0x0e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x18, 0x2c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0a, 0x52, 0x0d, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0a, 0x69,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x2e, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x0b, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x4e, 0x6f, 0x88, 0x01, 0x01, 0x12,
	0x26, 0x0a, 0x0c, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x2f, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0c, 0x52, 0x0b, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x18, 0x30, 0x20, 0x01, 0x28, 0x03, 0x48,
	0x0d, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x63, 0x74, 0x6d, 0x5f, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x63, 0x74, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x42, 0x14, 0x0a, 0x12, 0x5f, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x70, 0x61, 0x79, 0x65, 0x72,
	0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x70, 0x61, 0x79, 0x65, 0x72,
	0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x70, 0x61, 0x79, 0x65, 0x72,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x61, 0x79,
	0x65, 0x72, 0x5f, 0x62, 0x61, 0x6e, 0x6b, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x70, 0x61, 0x79, 0x65,
	0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x69, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x11, 0x0a, 0x0f,
	0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x42,
	0x0d, 0x0a, 0x0b, 0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x6f, 0x42, 0x0f,
	0x0a, 0x0d, 0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42,
	0x11, 0x0a, 0x0f, 0x5f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x22, 0x8a, 0x0d, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x6f, 0x6f,
	0x64, 0x73, 0x50, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x20, 0x0a, 0x09, 0x70, 0x72, 0x65, 0x70, 0x61, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x70, 0x72, 0x65,
	0x70, 0x61, 0x79, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x70, 0x72, 0x65, 0x70,
	0x61, 0x79, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x01, 0x52, 0x0d, 0x70, 0x72, 0x65, 0x70, 0x61, 0x79, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x09, 0x74, 0x72, 0x61, 0x64,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x64,
	0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52,
	0x0a, 0x74, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2d,
	0x0a, 0x10, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x65,
	0x73, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x64,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x44, 0x65, 0x73, 0x63, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a,
	0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a, 0x06, 0x61, 0x70, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x05, 0x61, 0x70, 0x70,
	0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a, 0x06, 0x6d, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x05, 0x6d, 0x63, 0x68, 0x49, 0x64, 0x88, 0x01,
	0x01, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0c, 0x6f, 0x75,
	0x74, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x08, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x88, 0x01,
	0x01, 0x12, 0x1b, 0x0a, 0x06, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x09, 0x52, 0x06, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x88, 0x01, 0x01, 0x12, 0x19,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x48, 0x0a, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x70, 0x61, 0x79,
	0x65, 0x72, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x48, 0x0b,
	0x52, 0x0a, 0x70, 0x61, 0x79, 0x65, 0x72, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x88, 0x01, 0x01, 0x12,
	0x1f, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x0c, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x88, 0x01, 0x01,
	0x12, 0x20, 0x0a, 0x09, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x0d, 0x52, 0x08, 0x62, 0x61, 0x6e, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0e, 0x52, 0x0b, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0d, 0x6f, 0x75,
	0x74, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x6e, 0x6f, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x0f, 0x52, 0x0b, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x4e, 0x6f,
	0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x10, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x88, 0x01, 0x01,
	0x12, 0x1b, 0x0a, 0x06, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x05,
	0x48, 0x11, 0x52, 0x06, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a,
	0x0c, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x18, 0x16, 0x20,
	0x01, 0x28, 0x05, 0x48, 0x12, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x11, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x18, 0x17, 0x20, 0x01, 0x28, 0x05,
	0x48, 0x13, 0x52, 0x10, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x88, 0x01, 0x01, 0x12, 0x2e, 0x0a, 0x10, 0x73, 0x65, 0x74, 0x74, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x18, 0x20, 0x01, 0x28,
	0x05, 0x48, 0x14, 0x52, 0x0f, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a, 0x0f, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x18, 0x19, 0x20, 0x01, 0x28, 0x05,
	0x48, 0x15, 0x52, 0x0e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f,
	0x66, 0x65, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x05, 0x48, 0x16, 0x52, 0x09, 0x72, 0x65, 0x66,
	0x75, 0x6e, 0x64, 0x46, 0x65, 0x65, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x72, 0x65, 0x66,
	0x75, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x17, 0x52, 0x08,
	0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x18, 0x52, 0x07,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x37, 0x0a, 0x15, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x5f, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x19, 0x52, 0x13, 0x75, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x1e, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x1a, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01,
	0x12, 0x20, 0x0a, 0x09, 0x63, 0x74, 0x6d, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x1f, 0x20,
	0x01, 0x28, 0x03, 0x48, 0x1b, 0x52, 0x08, 0x63, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x88,
	0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x63, 0x74, 0x6d, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64,
	0x18, 0x20, 0x20, 0x01, 0x28, 0x03, 0x48, 0x1c, 0x52, 0x09, 0x63, 0x74, 0x6d, 0x52, 0x65, 0x66,
	0x75, 0x6e, 0x64, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x63, 0x74, 0x6d, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x21, 0x20, 0x01, 0x28, 0x03, 0x48, 0x1d, 0x52, 0x0a, 0x63,
	0x74, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a,
	0x5f, 0x70, 0x72, 0x65, 0x70, 0x61, 0x79, 0x5f, 0x69, 0x64, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x70,
	0x72, 0x65, 0x70, 0x61, 0x79, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x42, 0x0d, 0x0a,
	0x0b, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x0e, 0x0a, 0x0c,
	0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x42, 0x13, 0x0a, 0x11,
	0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x65, 0x73,
	0x63, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x42,
	0x09, 0x0a, 0x07, 0x5f, 0x6d, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x6f,
	0x75, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x6e, 0x6f, 0x42, 0x09, 0x0a, 0x07, 0x5f,
	0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x42, 0x0c, 0x0a,
	0x0a, 0x5f, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x10, 0x0a, 0x0e,
	0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x6e, 0x6f, 0x42, 0x09,
	0x0a, 0x07, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x72,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x42, 0x13, 0x0a, 0x11, 0x5f,
	0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x42, 0x12, 0x0a, 0x10, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x72, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f,
	0x66, 0x65, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x69,
	0x64, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x42, 0x18, 0x0a,
	0x16, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x5f,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x63, 0x74, 0x6d, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x74, 0x6d, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x42,
	0x0e, 0x0a, 0x0c, 0x5f, 0x63, 0x74, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22,
	0xab, 0x04, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x1c, 0x0a, 0x07, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x6e,
	0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x73, 0x70, 0x65, 0x63, 0x4e,
	0x6f, 0x88, 0x01, 0x01, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x63, 0x74, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x63, 0x74, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x63, 0x61, 0x6e, 0x5f, 0x65, 0x64, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x63, 0x61, 0x6e, 0x45, 0x64, 0x69, 0x74, 0x12, 0x1e, 0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64,
	0x73, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x07, 0x67, 0x6f,
	0x6f, 0x64, 0x73, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x67, 0x6f, 0x6f, 0x64,
	0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x09,
	0x67, 0x6f, 0x6f, 0x64, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09,
	0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x73, 0x70, 0x75, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x03, 0x52, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x53, 0x70, 0x75, 0x88, 0x01, 0x01, 0x12, 0x20,
	0x0a, 0x09, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x04, 0x52, 0x08, 0x73, 0x70, 0x65, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x20, 0x0a, 0x09, 0x72, 0x66, 0x69, 0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x08, 0x72, 0x66, 0x69, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x0c, 0x73, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08,
	0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x6f, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07,
	0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x4e, 0x6f, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08,
	0x5f, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x6e, 0x6f, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x67, 0x6f, 0x6f,
	0x64, 0x73, 0x5f, 0x69, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x73,
	0x70, 0x75, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x72, 0x66, 0x69, 0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x10,
	0x0a, 0x0e, 0x5f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x6f, 0x22, 0x87, 0x08,
	0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f,
	0x6d, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x20, 0x0a, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73,
	0x5f, 0x73, 0x70, 0x75, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x67, 0x6f,
	0x6f, 0x64, 0x73, 0x53, 0x70, 0x75, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x07, 0x73, 0x70, 0x65,
	0x63, 0x5f, 0x6e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x06, 0x73, 0x70,
	0x65, 0x63, 0x4e, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x72, 0x66, 0x69, 0x64, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x08, 0x72, 0x66,
	0x69, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x73, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x03, 0x52, 0x0c, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x64, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x0d, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12,
	0x20, 0x0a, 0x09, 0x6f, 0x6d, 0x73, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x05, 0x52, 0x08, 0x6f, 0x6d, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x88, 0x01,
	0x01, 0x12, 0x2c, 0x0a, 0x0f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x72, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x0e, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x88, 0x01, 0x01, 0x12,
	0x22, 0x0a, 0x0a, 0x6f, 0x6d, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x09, 0x6f, 0x6d, 0x73, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x5f,
	0x64, 0x65, 0x73, 0x63, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x0c, 0x63, 0x6f,
	0x6d, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a,
	0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x03, 0x48, 0x09, 0x52, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x67, 0x6f, 0x6f,
	0x64, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0a, 0x52, 0x07, 0x67,
	0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x67, 0x6f, 0x6f,
	0x64, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0b, 0x52,
	0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a,
	0x0a, 0x70, 0x61, 0x72, 0x74, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x0c, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x22, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0d, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x73, 0x4e, 0x61,
	0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0e, 0x52, 0x09, 0x6d, 0x65, 0x64,
	0x69, 0x61, 0x50, 0x61, 0x74, 0x68, 0x88, 0x01, 0x01, 0x12, 0x2e, 0x0a, 0x10, 0x63, 0x6f, 0x6d,
	0x70, 0x6c, 0x61, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x0f, 0x52, 0x0f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x52,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x73, 0x70, 0x65,
	0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x48, 0x10, 0x52, 0x08,
	0x73, 0x70, 0x65, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x67,
	0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x6f, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x48, 0x11, 0x52,
	0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x4e, 0x6f, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f,
	0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x73, 0x70, 0x75, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x73, 0x70,
	0x65, 0x63, 0x5f, 0x6e, 0x6f, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x72, 0x66, 0x69, 0x64, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6f, 0x6d, 0x73,
	0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6f,
	0x6d, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x63, 0x6f,
	0x6d, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x42, 0x11, 0x0a, 0x0f, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x0b,
	0x0a, 0x09, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f,
	0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70,
	0x61, 0x72, 0x74, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x61,
	0x72, 0x74, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6d, 0x65, 0x64,
	0x69, 0x61, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x63, 0x6f, 0x6d, 0x70,
	0x6c, 0x61, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x42, 0x0c, 0x0a, 0x0a,
	0x5f, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x67,
	0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x6f, 0x22, 0xa3, 0x06, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x73, 0x12, 0x20, 0x0a, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x73, 0x70, 0x75, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x53, 0x70, 0x75,
	0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x07, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x6e, 0x6f, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x06, 0x73, 0x70, 0x65, 0x63, 0x4e, 0x6f, 0x88, 0x01,
	0x01, 0x12, 0x20, 0x0a, 0x09, 0x72, 0x66, 0x69, 0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x08, 0x72, 0x66, 0x69, 0x64, 0x43, 0x6f, 0x64, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x0c, 0x73, 0x65,
	0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a,
	0x0d, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x0c, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b,
	0x44, 0x65, 0x73, 0x63, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x48,
	0x05, 0x52, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73,
	0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x73,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x09, 0x70,
	0x61, 0x72, 0x74, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x70,
	0x61, 0x72, 0x74, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x09, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x22, 0x0a, 0x0a, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x0a, 0x52, 0x09, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x74, 0x68,
	0x88, 0x01, 0x01, 0x12, 0x2e, 0x0a, 0x10, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x5f,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0b, 0x52,
	0x0f, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73,
	0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0c, 0x52, 0x08, 0x73, 0x70, 0x65, 0x63, 0x4e, 0x61,
	0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e,
	0x6f, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0d, 0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73,
	0x4e, 0x6f, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f,
	0x73, 0x70, 0x75, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x6e, 0x6f, 0x42,
	0x0c, 0x0a, 0x0a, 0x5f, 0x72, 0x66, 0x69, 0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x10, 0x0a,
	0x0e, 0x5f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42,
	0x10, 0x0a, 0x0e, 0x5f, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x64, 0x65, 0x73,
	0x63, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69,
	0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42,
	0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0d,
	0x0a, 0x0b, 0x5f, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x42, 0x13, 0x0a,
	0x11, 0x5f, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x73, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x6f, 0x22, 0x8d, 0x09,
	0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x70, 0x61, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x20, 0x0a, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x73,
	0x70, 0x75, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x67, 0x6f, 0x6f, 0x64,
	0x73, 0x53, 0x70, 0x75, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x07, 0x73, 0x70, 0x65, 0x63, 0x5f,
	0x6e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x06, 0x73, 0x70, 0x65, 0x63,
	0x4e, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x72, 0x66, 0x69, 0x64, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x08, 0x72, 0x66, 0x69, 0x64,
	0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x73, 0x65, 0x63, 0x75, 0x72,
	0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03,
	0x52, 0x0c, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x2f, 0x0a, 0x11, 0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x5f, 0x70, 0x61, 0x72, 0x74,
	0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x0f,
	0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x50, 0x61, 0x72, 0x74, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x2f, 0x0a, 0x11, 0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x5f, 0x70, 0x61, 0x72,
	0x74, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52,
	0x0f, 0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x50, 0x61, 0x72, 0x74, 0x73, 0x4e, 0x61, 0x6d, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x5f, 0x64, 0x65,
	0x73, 0x63, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x61,
	0x69, 0x72, 0x44, 0x65, 0x73, 0x63, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x6d, 0x65, 0x64,
	0x69, 0x61, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52,
	0x09, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x74, 0x68, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a,
	0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x03, 0x48, 0x08, 0x52, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x67, 0x6f, 0x6f,
	0x64, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52, 0x07, 0x67,
	0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x67, 0x6f, 0x6f,
	0x64, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0a, 0x52,
	0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a,
	0x0e, 0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0b, 0x52, 0x0d, 0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x52,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x73, 0x70, 0x65,
	0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0c, 0x52, 0x08,
	0x73, 0x70, 0x65, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x0d, 0x52, 0x0d, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x6f, 0x6d, 0x73, 0x5f, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0e, 0x52, 0x08, 0x6f, 0x6d,
	0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x6f, 0x75, 0x74,
	0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x01, 0x48, 0x0f, 0x52, 0x08,
	0x6f, 0x75, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x72,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x01, 0x48, 0x10, 0x52, 0x0b, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x6f, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x09, 0x48, 0x11, 0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x4e, 0x6f,
	0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x5f, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x48, 0x12, 0x52, 0x0d, 0x72,
	0x65, 0x70, 0x61, 0x69, 0x72, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12,
	0x26, 0x0a, 0x0c, 0x73, 0x77, 0x61, 0x70, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x18,
	0x17, 0x20, 0x01, 0x28, 0x09, 0x48, 0x13, 0x52, 0x0b, 0x73, 0x77, 0x61, 0x70, 0x45, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x67, 0x6f, 0x6f, 0x64,
	0x73, 0x5f, 0x73, 0x70, 0x75, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x6e,
	0x6f, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x72, 0x66, 0x69, 0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42,
	0x10, 0x0a, 0x0e, 0x5f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x5f, 0x70, 0x61, 0x72,
	0x74, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x72, 0x65, 0x70, 0x61,
	0x69, 0x72, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0e, 0x0a,
	0x0c, 0x5f, 0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x42, 0x0d, 0x0a,
	0x0b, 0x5f, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x42, 0x11, 0x0a, 0x0f,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x42,
	0x0b, 0x0a, 0x09, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x42, 0x0d, 0x0a, 0x0b,
	0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x11, 0x0a, 0x0f, 0x5f,
	0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x42, 0x0c,
	0x0a, 0x0a, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x11, 0x0a, 0x0f,
	0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42,
	0x0c, 0x0a, 0x0a, 0x5f, 0x6f, 0x6d, 0x73, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x0c, 0x0a,
	0x0a, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f,
	0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x42, 0x0b, 0x0a, 0x09,
	0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x6f, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x72, 0x65,
	0x70, 0x61, 0x69, 0x72, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x42, 0x0f, 0x0a, 0x0d,
	0x5f, 0x73, 0x77, 0x61, 0x70, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x22, 0x8b, 0x09,
	0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x77,
	0x61, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x73, 0x12, 0x20, 0x0a, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x73, 0x70, 0x75,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x53,
	0x70, 0x75, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x07, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x6e, 0x6f,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x06, 0x73, 0x70, 0x65, 0x63, 0x4e, 0x6f,
	0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x72, 0x66, 0x69, 0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x08, 0x72, 0x66, 0x69, 0x64, 0x43, 0x6f,
	0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x0c,
	0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x2f, 0x0a, 0x11, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x73, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x0f, 0x64, 0x61,
	0x6d, 0x61, 0x67, 0x65, 0x50, 0x61, 0x72, 0x74, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x2f, 0x0a, 0x11, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x73,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x0f, 0x64,
	0x61, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x61, 0x72, 0x74, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x24, 0x0a, 0x0b, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x63,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x0a, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65,
	0x44, 0x65, 0x73, 0x63, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x6d, 0x65, 0x64, 0x69, 0x61,
	0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x09, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x74, 0x68, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x03, 0x48, 0x08, 0x52, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73,
	0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52, 0x07, 0x67, 0x6f, 0x6f,
	0x64, 0x73, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x67, 0x6f, 0x6f, 0x64, 0x73,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0a, 0x52, 0x09, 0x67,
	0x6f, 0x6f, 0x64, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x64,
	0x61, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x0b, 0x52, 0x0d, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x73, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x73, 0x70, 0x65, 0x63, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0c, 0x52, 0x08, 0x73, 0x70,
	0x65, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x0d, 0x52, 0x0d, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x6f, 0x6d, 0x73, 0x5f, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0e, 0x52, 0x08, 0x6f, 0x6d, 0x73, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x6f, 0x75, 0x74, 0x5f, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x01, 0x48, 0x0f, 0x52, 0x08, 0x6f, 0x75,
	0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x72, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x01, 0x48,
	0x10, 0x52, 0x0b, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x1e, 0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x6f, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x11, 0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x4e, 0x6f, 0x88, 0x01,
	0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x5f, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x48, 0x12, 0x52, 0x0d, 0x72, 0x65, 0x70,
	0x61, 0x69, 0x72, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a,
	0x0c, 0x73, 0x77, 0x61, 0x70, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x18, 0x17, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x13, 0x52, 0x0b, 0x73, 0x77, 0x61, 0x70, 0x45, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f,
	0x73, 0x70, 0x75, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x6e, 0x6f, 0x42,
	0x0c, 0x0a, 0x0a, 0x5f, 0x72, 0x66, 0x69, 0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x10, 0x0a,
	0x0e, 0x5f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42,
	0x14, 0x0a, 0x12, 0x5f, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x73,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65,
	0x5f, 0x70, 0x61, 0x72, 0x74, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f,
	0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x42, 0x0d, 0x0a, 0x0b, 0x5f,
	0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x0b, 0x0a,
	0x09, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x67,
	0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x64, 0x61,
	0x6d, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x42, 0x0c, 0x0a, 0x0a,
	0x5f, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x0c, 0x0a,
	0x0a, 0x5f, 0x6f, 0x6d, 0x73, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x0c, 0x0a, 0x0a, 0x5f,
	0x6f, 0x75, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x72, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x67,
	0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x6f, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x72, 0x65, 0x70, 0x61,
	0x69, 0x72, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x73,
	0x77, 0x61, 0x70, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x22, 0xf1, 0x08, 0x0a, 0x19,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x61, 0x69, 0x6c,
	0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x73, 0x12, 0x20, 0x0a, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x73, 0x70, 0x75,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x53,
	0x70, 0x75, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x07, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x6e, 0x6f,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x06, 0x73, 0x70, 0x65, 0x63, 0x4e, 0x6f,
	0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x72, 0x66, 0x69, 0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x08, 0x72, 0x66, 0x69, 0x64, 0x43, 0x6f,
	0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x0c,
	0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x2a, 0x0a, 0x0e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x0d, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x6f,
	0x6d, 0x73, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05,
	0x52, 0x08, 0x6f, 0x6d, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a,
	0x07, 0x70, 0x61, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06,
	0x52, 0x06, 0x70, 0x61, 0x72, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x70,
	0x61, 0x72, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07,
	0x52, 0x08, 0x70, 0x61, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a,
	0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52,
	0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x74, 0x65,
	0x78, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74,
	0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0a, 0x52, 0x09, 0x74, 0x65, 0x78, 0x74, 0x43,
	0x6f, 0x6c, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x74, 0x65, 0x78, 0x74, 0x5f,
	0x66, 0x6f, 0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0b, 0x52, 0x08, 0x74, 0x65,
	0x78, 0x74, 0x46, 0x6f, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x74, 0x69, 0x66,
	0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0c, 0x52, 0x07, 0x74,
	0x69, 0x66, 0x50, 0x61, 0x74, 0x68, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x69, 0x6d, 0x67,
	0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0d, 0x52, 0x07, 0x69,
	0x6d, 0x67, 0x50, 0x61, 0x74, 0x68, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x48, 0x0e, 0x52, 0x09,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x03, 0x48, 0x0f, 0x52, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64,
	0x73, 0x5f, 0x69, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x48, 0x10, 0x52, 0x07, 0x67, 0x6f,
	0x6f, 0x64, 0x73, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x67, 0x6f, 0x6f, 0x64,
	0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x48, 0x11, 0x52, 0x09,
	0x67, 0x6f, 0x6f, 0x64, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09,
	0x73, 0x70, 0x65, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x12, 0x52, 0x08, 0x73, 0x70, 0x65, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x20,
	0x0a, 0x09, 0x6f, 0x75, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28,
	0x01, 0x48, 0x13, 0x52, 0x08, 0x6f, 0x75, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x26, 0x0a, 0x0c, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x17, 0x20, 0x01, 0x28, 0x01, 0x48, 0x14, 0x52, 0x0b, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64,
	0x73, 0x5f, 0x6e, 0x6f, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x48, 0x15, 0x52, 0x07, 0x67, 0x6f,
	0x6f, 0x64, 0x73, 0x4e, 0x6f, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x67, 0x6f, 0x6f,
	0x64, 0x73, 0x5f, 0x73, 0x70, 0x75, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x5f,
	0x6e, 0x6f, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x72, 0x66, 0x69, 0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6f, 0x6d, 0x73, 0x5f, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x42,
	0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x09, 0x0a,
	0x07, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x74, 0x65, 0x78,
	0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
	0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x66, 0x6f, 0x6e, 0x74, 0x42, 0x0b,
	0x0a, 0x09, 0x5f, 0x74, 0x69, 0x66, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x42, 0x0b, 0x0a, 0x09, 0x5f,
	0x69, 0x6d, 0x67, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x67, 0x6f,
	0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x6f, 0x22,
	0x9c, 0x06, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x54, 0x72, 0x61, 0x64, 0x65, 0x49, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x1a, 0x0a, 0x06, 0x63, 0x74, 0x6d, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x05, 0x63, 0x74, 0x6d, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x63, 0x74, 0x6d, 0x5f, 0x6f, 0x70, 0x65, 0x6e,
	0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x09, 0x63, 0x74, 0x6d, 0x4f,
	0x70, 0x65, 0x6e, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x63, 0x74, 0x6d, 0x5f,
	0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02,
	0x52, 0x0b, 0x63, 0x74, 0x6d, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x22, 0x0a, 0x0a, 0x63, 0x74, 0x6d, 0x5f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x09, 0x63, 0x74, 0x6d, 0x4d, 0x6f, 0x62, 0x69, 0x6c,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0b, 0x63, 0x74, 0x6d, 0x5f, 0x63, 0x61, 0x72, 0x64,
	0x5f, 0x6e, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x09, 0x63, 0x74, 0x6d,
	0x43, 0x61, 0x72, 0x64, 0x4e, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x63, 0x74, 0x6d,
	0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x48, 0x05, 0x52, 0x08,
	0x63, 0x74, 0x6d, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x0e, 0x74,
	0x72, 0x61, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x64, 0x65, 0x49, 0x6e, 0x42, 0x72,
	0x61, 0x6e, 0x64, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f,
	0x69, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07,
	0x52, 0x0c, 0x74, 0x72, 0x61, 0x64, 0x65, 0x49, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x88, 0x01,
	0x01, 0x12, 0x27, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x64, 0x65,
	0x73, 0x63, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x64,
	0x65, 0x49, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x0e, 0x74, 0x72,
	0x61, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x01, 0x48, 0x09, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x64, 0x65, 0x49, 0x6e, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0a, 0x52,
	0x0d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x22, 0x0a, 0x0a, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0b, 0x52, 0x09, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61,
	0x74, 0x68, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x69,
	0x6e, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x0c, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x49, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x73, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x63, 0x74, 0x6d, 0x5f, 0x69, 0x64, 0x42,
	0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x74, 0x6d, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x42, 0x0f,
	0x0a, 0x0d, 0x5f, 0x63, 0x74, 0x6d, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x42,
	0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x74, 0x6d, 0x5f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x42, 0x0e,
	0x0a, 0x0c, 0x5f, 0x63, 0x74, 0x6d, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x6e, 0x6f, 0x42, 0x0c,
	0x0a, 0x0a, 0x5f, 0x63, 0x74, 0x6d, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x42, 0x11, 0x0a, 0x0f,
	0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x42,
	0x11, 0x0a, 0x0f, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x5f,
	0x64, 0x65, 0x73, 0x63, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x69,
	0x6e, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x74, 0x72,
	0x61, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x22, 0x2a,
	0x0a, 0x18, 0x43, 0x74, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x73, 0x74,
	0x72, 0x6f, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0xbc, 0x1c, 0x0a, 0x15, 0x43,
	0x74, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x5e,
	0x0a, 0x0e, 0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x70,
	0x61, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0d, 0x72, 0x65,
	0x70, 0x61, 0x69, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x58,
	0x0a, 0x0c, 0x73, 0x77, 0x61, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x77, 0x61, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x01, 0x52, 0x0b, 0x73, 0x77, 0x61, 0x70, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x5e, 0x0a, 0x0e, 0x74, 0x61, 0x69, 0x6c,
	0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x32, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f,
	0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x61, 0x69, 0x6c, 0x6f, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x48, 0x02, 0x52, 0x0d, 0x74, 0x61, 0x69, 0x6c, 0x6f, 0x72, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x64, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x70,
	0x6c, 0x61, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x34, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69,
	0x74, 0x6f, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x69,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x03, 0x52, 0x0f, 0x63, 0x6f, 0x6d, 0x70,
	0x6c, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x64,
	0x0a, 0x10, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x46,
	0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x04,
	0x52, 0x0f, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x88, 0x01, 0x01, 0x12, 0x62, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x69, 0x6e,
	0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x49, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x48, 0x05, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x49, 0x6e, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x59, 0x0a, 0x0b, 0x72, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x56, 0x0a, 0x09, 0x73, 0x77, 0x61, 0x70, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x6f,
	0x6f, 0x64, 0x73, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x08, 0x73, 0x77, 0x61, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x5b, 0x0a, 0x0b, 0x70,
	0x61, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x35, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f,
	0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x50, 0x61, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x06, 0x52, 0x0a, 0x70, 0x61, 0x79, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x26,
	0x0a, 0x0c, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52, 0x0b,
	0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x10,
	0x0a, 0x03, 0x73, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x69, 0x64,
	0x12, 0x22, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x05, 0x48, 0x0a, 0x52, 0x09, 0x74, 0x72, 0x61, 0x64, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x05, 0x48, 0x0b, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a,
	0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x05, 0x48, 0x0c, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x48, 0x0d, 0x52, 0x0d, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12,
	0x26, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x05, 0x48, 0x0e, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x05, 0x48, 0x0f, 0x52, 0x09, 0x70,
	0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x70,
	0x61, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x48, 0x10, 0x52,
	0x07, 0x70, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x18, 0x17, 0x20, 0x01,
	0x28, 0x05, 0x48, 0x11, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x65,
	0x72, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x6e,
	0x69, 0x63, 0x6b, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x48, 0x12, 0x52, 0x09, 0x62, 0x75, 0x79,
	0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x62, 0x75, 0x79,
	0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x13, 0x52, 0x0b, 0x62, 0x75, 0x79, 0x65, 0x72, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x28, 0x0a, 0x0d, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x14, 0x52, 0x0c, 0x62, 0x75, 0x79, 0x65,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x73,
	0x65, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x15, 0x52, 0x0a, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x24, 0x0a, 0x0b, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x6d, 0x6f,
	0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x16, 0x52, 0x0a, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72,
	0x4d, 0x65, 0x6d, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x07, 0x73, 0x68, 0x6f, 0x70, 0x5f,
	0x6e, 0x6f, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x17, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70,
	0x4e, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x18, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x70,
	0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x77, 0x61, 0x72, 0x65, 0x68,
	0x6f, 0x75, 0x73, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x48, 0x19, 0x52,
	0x0b, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x4e, 0x6f, 0x88, 0x01, 0x01, 0x12,
	0x2a, 0x0a, 0x0e, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x48, 0x1a, 0x52, 0x0d, 0x77, 0x61, 0x72, 0x65, 0x68,
	0x6f, 0x75, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x21, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x1b, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x11, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x22, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x1c, 0x52, 0x10, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x6e, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x5f, 0x63, 0x69, 0x74, 0x79, 0x18, 0x23, 0x20, 0x01, 0x28, 0x09, 0x48, 0x1d,
	0x52, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x43, 0x69, 0x74, 0x79, 0x88, 0x01,
	0x01, 0x12, 0x30, 0x0a, 0x11, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x64, 0x69,
	0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x18, 0x24, 0x20, 0x01, 0x28, 0x09, 0x48, 0x1e, 0x52, 0x10,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74,
	0x88, 0x01, 0x01, 0x12, 0x2e, 0x0a, 0x10, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x25, 0x20, 0x01, 0x28, 0x09, 0x48, 0x1f, 0x52,
	0x0f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a, 0x0f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f,
	0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x26, 0x20, 0x01, 0x28, 0x09, 0x48, 0x20, 0x52, 0x0e,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x24, 0x0a, 0x0b, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x27, 0x20, 0x01, 0x28, 0x01, 0x48, 0x21, 0x52, 0x0a, 0x70, 0x6f, 0x73, 0x74, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x6f, 0x74, 0x68, 0x65, 0x72,
	0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x28, 0x20, 0x01, 0x28, 0x01, 0x48, 0x22, 0x52,
	0x0b, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12,
	0x23, 0x0a, 0x0b, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x29,
	0x20, 0x01, 0x28, 0x01, 0x48, 0x23, 0x52, 0x09, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x64, 0x46, 0x65,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x70, 0x61, 0x69, 0x64, 0x18, 0x2a, 0x20, 0x01,
	0x28, 0x01, 0x48, 0x24, 0x52, 0x04, 0x70, 0x61, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a,
	0x0a, 0x63, 0x6f, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x2b, 0x20, 0x01, 0x28,
	0x01, 0x48, 0x25, 0x52, 0x09, 0x63, 0x6f, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x23, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x18,
	0x2c, 0x20, 0x01, 0x28, 0x01, 0x48, 0x26, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x61,
	0x62, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x01, 0x48, 0x27, 0x52, 0x08, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x69, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x2e, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x28, 0x52, 0x0d, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x11, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73,
	0x5f, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x31, 0x20, 0x01, 0x28, 0x09, 0x48, 0x29,
	0x52, 0x0f, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x49, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x11, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x5f, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x2a, 0x52, 0x0f, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x49, 0x6e, 0x43, 0x6f,
	0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x0f, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x73, 0x5f, 0x69, 0x6e, 0x5f, 0x6e, 0x6f, 0x18, 0x33, 0x20, 0x01, 0x28, 0x09, 0x48, 0x2b,
	0x52, 0x0d, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x49, 0x6e, 0x4e, 0x6f, 0x88,
	0x01, 0x01, 0x12, 0x2b, 0x0a, 0x0f, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f,
	0x69, 0x6e, 0x5f, 0x6e, 0x6f, 0x18, 0x34, 0x20, 0x01, 0x28, 0x09, 0x48, 0x2c, 0x52, 0x0d, 0x77,
	0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x49, 0x6e, 0x4e, 0x6f, 0x88, 0x01, 0x01, 0x12,
	0x2f, 0x0a, 0x11, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x69, 0x6e, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x35, 0x20, 0x01, 0x28, 0x09, 0x48, 0x2d, 0x52, 0x0f, 0x77, 0x61,
	0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x49, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x15, 0x0a, 0x03, 0x63, 0x74, 0x6d, 0x18, 0x36, 0x20, 0x01, 0x28, 0x03, 0x48, 0x2e, 0x52,
	0x03, 0x63, 0x74, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x67, 0x0a, 0x0f, 0x69, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x37, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x39, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f,
	0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x2f, 0x52, 0x0e, 0x69,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01,
	0x12, 0x2c, 0x0a, 0x0f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x5f, 0x72, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x73, 0x18, 0x38, 0x20, 0x01, 0x28, 0x09, 0x48, 0x30, 0x52, 0x0e, 0x61, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x88, 0x01, 0x01, 0x12, 0x2a,
	0x0a, 0x0e, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73,
	0x18, 0x39, 0x20, 0x01, 0x28, 0x09, 0x48, 0x31, 0x52, 0x0d, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x63, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x18, 0x3a, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x32, 0x52, 0x0d, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x73, 0x88, 0x01, 0x01, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x72, 0x65, 0x70, 0x61, 0x69,
	0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x73, 0x77,
	0x61, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x74,
	0x61, 0x69, 0x6c, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x13, 0x0a,
	0x11, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x5f,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x74, 0x72, 0x61, 0x64,
	0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x0e, 0x0a, 0x0c,
	0x5f, 0x70, 0x61, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x0e, 0x0a, 0x0c,
	0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0f, 0x0a, 0x0d,
	0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x0f, 0x0a,
	0x0d, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0d,
	0x0a, 0x0b, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x07, 0x0a,
	0x05, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x74, 0x72,
	0x61, 0x64, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70,
	0x61, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x61,
	0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x62, 0x75, 0x79,
	0x65, 0x72, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x62, 0x75, 0x79, 0x65,
	0x72, 0x5f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x62, 0x75, 0x79,
	0x65, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x73,
	0x65, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x73,
	0x65, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x73,
	0x68, 0x6f, 0x70, 0x5f, 0x6e, 0x6f, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x73, 0x68, 0x6f, 0x70, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75,
	0x73, 0x65, 0x5f, 0x6e, 0x6f, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f,
	0x75, 0x73, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65,
	0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x63, 0x69,
	0x74, 0x79, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f,
	0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x12, 0x0a,
	0x10, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x62, 0x69, 0x6c,
	0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x5f, 0x66,
	0x65, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x70, 0x61, 0x69, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f,
	0x63, 0x6f, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x6c, 0x6f,
	0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42,
	0x14, 0x0a, 0x12, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x69, 0x6e,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74,
	0x69, 0x63, 0x73, 0x5f, 0x69, 0x6e, 0x5f, 0x6e, 0x6f, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x77, 0x61,
	0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x6e, 0x6f, 0x42, 0x14, 0x0a,
	0x12, 0x5f, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x63, 0x74, 0x6d, 0x42, 0x12, 0x0a, 0x10, 0x5f,
	0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42,
	0x12, 0x0a, 0x10, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x5f, 0x72, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x73, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x63, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x22, 0x7b, 0x0a, 0x16, 0x43, 0x74, 0x6d,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xfa, 0x1c, 0x0a, 0x1e, 0x43, 0x74, 0x6d, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x73, 0x12, 0x5e, 0x0a, 0x0e, 0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x70, 0x61, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48,
	0x00, 0x52, 0x0d, 0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x88, 0x01, 0x01, 0x12, 0x58, 0x0a, 0x0c, 0x73, 0x77, 0x61, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x53, 0x77, 0x61, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x01, 0x52, 0x0b, 0x73,
	0x77, 0x61, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x5e, 0x0a,
	0x0e, 0x74, 0x61, 0x69, 0x6c, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x61, 0x69, 0x6c,
	0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x02, 0x52, 0x0d, 0x74, 0x61, 0x69,
	0x6c, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x64, 0x0a,
	0x10, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f,
	0x6d, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x03, 0x52,
	0x0f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x88, 0x01, 0x01, 0x12, 0x64, 0x0a, 0x10, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x5f,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x48, 0x04, 0x52, 0x0f, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x62, 0x0a, 0x10, 0x74, 0x72, 0x61,
	0x64, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x69, 0x74, 0x6f, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x49,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x05, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x64,
	0x65, 0x49, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x59, 0x0a,
	0x0b, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x09, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x38, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69,
	0x74, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x72, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x56, 0x0a, 0x09, 0x73, 0x77, 0x61, 0x70,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x08, 0x73, 0x77, 0x61, 0x70, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x5b, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x6f, 0x6f,
	0x64, 0x73, 0x50, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x06, 0x52, 0x0a,
	0x70, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x33, 0x0a,
	0x16, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x50,
	0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x73, 0x12, 0x24, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x61, 0x70, 0x70, 0x72,
	0x6f, 0x76, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08,
	0x52, 0x0b, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x26, 0x0a, 0x0c, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x64, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0a, 0x74, 0x72,
	0x61, 0x64, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x48, 0x0a,
	0x52, 0x09, 0x74, 0x72, 0x61, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x17,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x48, 0x0b, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x48, 0x0c, 0x52, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a,
	0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x05, 0x48, 0x0d, 0x52, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x74, 0x72, 0x61,
	0x64, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x0e, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01,
	0x01, 0x12, 0x22, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x16, 0x20, 0x01, 0x28, 0x05, 0x48, 0x0f, 0x52, 0x09, 0x70, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x70, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x48, 0x10, 0x52, 0x07, 0x70, 0x61, 0x79, 0x54, 0x69,
	0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x18, 0x18, 0x20, 0x01, 0x28, 0x05, 0x48, 0x11, 0x52, 0x0c,
	0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x65, 0x72, 0x6d, 0x88, 0x01, 0x01, 0x12,
	0x22, 0x0a, 0x0a, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x18, 0x19, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x12, 0x52, 0x09, 0x62, 0x75, 0x79, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b,
	0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x62,
	0x69, 0x6c, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x13, 0x52, 0x0b, 0x62, 0x75, 0x79,
	0x65, 0x72, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x62,
	0x75, 0x79, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x1b, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x14, 0x52, 0x0c, 0x62, 0x75, 0x79, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x15, 0x52, 0x0a, 0x73, 0x65,
	0x6c, 0x6c, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x73,
	0x65, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x16, 0x52, 0x0a, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x6f, 0x88, 0x01,
	0x01, 0x12, 0x1c, 0x0a, 0x07, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x6e, 0x6f, 0x18, 0x1e, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x17, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x4e, 0x6f, 0x88, 0x01, 0x01, 0x12,
	0x20, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x1f, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x18, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x26, 0x0a, 0x0c, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x6e,
	0x6f, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x48, 0x19, 0x52, 0x0b, 0x77, 0x61, 0x72, 0x65, 0x68,
	0x6f, 0x75, 0x73, 0x65, 0x4e, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x77, 0x61, 0x72,
	0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x21, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x1a, 0x52, 0x0d, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x22, 0x20, 0x01, 0x28, 0x09, 0x48, 0x1b, 0x52, 0x0c,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x30, 0x0a, 0x11, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x6e, 0x63, 0x65, 0x18, 0x23, 0x20, 0x01, 0x28, 0x09, 0x48, 0x1c, 0x52, 0x10, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x28, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x63, 0x69,
	0x74, 0x79, 0x18, 0x24, 0x20, 0x01, 0x28, 0x09, 0x48, 0x1d, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x43, 0x69, 0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x11, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74,
	0x18, 0x25, 0x20, 0x01, 0x28, 0x09, 0x48, 0x1e, 0x52, 0x10, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x88, 0x01, 0x01, 0x12, 0x2e, 0x0a,
	0x10, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x26, 0x20, 0x01, 0x28, 0x09, 0x48, 0x1f, 0x52, 0x0f, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a,
	0x0f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
	0x18, 0x27, 0x20, 0x01, 0x28, 0x09, 0x48, 0x20, 0x52, 0x0e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x70,
	0x6f, 0x73, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x28, 0x20, 0x01, 0x28, 0x01,
	0x48, 0x21, 0x52, 0x0a, 0x70, 0x6f, 0x73, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x26, 0x0a, 0x0c, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x29, 0x20, 0x01, 0x28, 0x01, 0x48, 0x22, 0x52, 0x0b, 0x6f, 0x74, 0x68, 0x65, 0x72,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0b, 0x65, 0x78, 0x74,
	0x5f, 0x63, 0x6f, 0x64, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x01, 0x48, 0x23,
	0x52, 0x09, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x64, 0x46, 0x65, 0x65, 0x88, 0x01, 0x01, 0x12, 0x17,
	0x0a, 0x04, 0x70, 0x61, 0x69, 0x64, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x01, 0x48, 0x24, 0x52, 0x04,
	0x70, 0x61, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x63, 0x6f, 0x64, 0x5f, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x01, 0x48, 0x25, 0x52, 0x09, 0x63,
	0x6f, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x01, 0x48,
	0x26, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x1f, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x2e, 0x20, 0x01,
	0x28, 0x01, 0x48, 0x27, 0x52, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x2f, 0x20, 0x01, 0x28, 0x05, 0x48, 0x28, 0x52, 0x0d, 0x69, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a,
	0x11, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x69, 0x6e, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x48, 0x29, 0x52, 0x0f, 0x6c, 0x6f, 0x67, 0x69,
	0x73, 0x74, 0x69, 0x63, 0x73, 0x49, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2f,
	0x0a, 0x11, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x69, 0x6e, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x33, 0x20, 0x01, 0x28, 0x09, 0x48, 0x2a, 0x52, 0x0f, 0x6c, 0x6f, 0x67,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x49, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x2b, 0x0a, 0x0f, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x69, 0x6e, 0x5f,
	0x6e, 0x6f, 0x18, 0x34, 0x20, 0x01, 0x28, 0x09, 0x48, 0x2b, 0x52, 0x0d, 0x6c, 0x6f, 0x67, 0x69,
	0x73, 0x74, 0x69, 0x63, 0x73, 0x49, 0x6e, 0x4e, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x0f,
	0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x6e, 0x6f, 0x18,
	0x35, 0x20, 0x01, 0x28, 0x09, 0x48, 0x2c, 0x52, 0x0d, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75,
	0x73, 0x65, 0x49, 0x6e, 0x4e, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x11, 0x77, 0x61, 0x72,
	0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x36,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x2d, 0x52, 0x0f, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73,
	0x65, 0x49, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x63, 0x74,
	0x6d, 0x18, 0x37, 0x20, 0x01, 0x28, 0x03, 0x48, 0x2e, 0x52, 0x03, 0x63, 0x74, 0x6d, 0x88, 0x01,
	0x01, 0x12, 0x67, 0x0a, 0x0f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x38, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x2f, 0x52, 0x0e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a, 0x0f, 0x61, 0x70,
	0x70, 0x72, 0x6f, 0x76, 0x65, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x18, 0x39, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x30, 0x52, 0x0e, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x52, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x73, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x72, 0x65, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x18, 0x3a, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x31, 0x52, 0x0d, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x73, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x5f, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x18, 0x3b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x32, 0x52, 0x0d,
	0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x88, 0x01, 0x01,
	0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x73, 0x77, 0x61, 0x70, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x74, 0x61, 0x69, 0x6c, 0x6f, 0x72, 0x5f,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x63, 0x6f, 0x6d, 0x70,
	0x6c, 0x61, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x13, 0x0a, 0x11,
	0x5f, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x61, 0x70, 0x70, 0x72,
	0x6f, 0x76, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x74, 0x72, 0x61,
	0x64, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x65,
	0x72, 0x6d, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x6e, 0x69, 0x63,
	0x6b, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x62, 0x69,
	0x6c, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x5f,
	0x6d, 0x65, 0x6d, 0x6f, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x6e, 0x6f,
	0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0f,
	0x0a, 0x0d, 0x5f, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x6e, 0x6f, 0x42,
	0x11, 0x0a, 0x0f, 0x5f, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x63, 0x69, 0x74, 0x79, 0x42, 0x14, 0x0a, 0x12,
	0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69,
	0x63, 0x74, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f,
	0x70, 0x6f, 0x73, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x0f, 0x0a, 0x0d, 0x5f,
	0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x0e, 0x0a, 0x0c,
	0x5f, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x5f, 0x66, 0x65, 0x65, 0x42, 0x07, 0x0a, 0x05,
	0x5f, 0x70, 0x61, 0x69, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x6f, 0x64, 0x5f, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x61,
	0x62, 0x6c, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x5f, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x6c, 0x6f,
	0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42,
	0x12, 0x0a, 0x10, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x69, 0x6e,
	0x5f, 0x6e, 0x6f, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73,
	0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x6e, 0x6f, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x77, 0x61, 0x72, 0x65,
	0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x06, 0x0a,
	0x04, 0x5f, 0x63, 0x74, 0x6d, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x61, 0x70,
	0x70, 0x72, 0x6f, 0x76, 0x65, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x42, 0x11, 0x0a,
	0x0f, 0x5f, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73,
	0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x5f, 0x72, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x73, 0x22, 0xb8, 0x1c, 0x0a, 0x11, 0x43, 0x74, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x73, 0x12, 0x5e, 0x0a, 0x0e, 0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x70, 0x61, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48,
	0x00, 0x52, 0x0d, 0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x88, 0x01, 0x01, 0x12, 0x58, 0x0a, 0x0c, 0x73, 0x77, 0x61, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x53, 0x77, 0x61, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x01, 0x52, 0x0b, 0x73,
	0x77, 0x61, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x5e, 0x0a,
	0x0e, 0x74, 0x61, 0x69, 0x6c, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x61, 0x69, 0x6c,
	0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x02, 0x52, 0x0d, 0x74, 0x61, 0x69,
	0x6c, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x64, 0x0a,
	0x10, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f,
	0x6d, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x03, 0x52,
	0x0f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x88, 0x01, 0x01, 0x12, 0x64, 0x0a, 0x10, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x5f,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x48, 0x04, 0x52, 0x0f, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x62, 0x0a, 0x10, 0x74, 0x72, 0x61,
	0x64, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x69, 0x74, 0x6f, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x49,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x05, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x64,
	0x65, 0x49, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x59, 0x0a,
	0x0b, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x09, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x38, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69,
	0x74, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x72, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x56, 0x0a, 0x09, 0x73, 0x77, 0x61, 0x70,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x08, 0x73, 0x77, 0x61, 0x70, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x5b, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x6f, 0x6f,
	0x64, 0x73, 0x50, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x06, 0x52, 0x0a,
	0x70, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a,
	0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x07, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x0b, 0x61, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x61,
	0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x09, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x73, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x48, 0x0a, 0x52, 0x09, 0x74, 0x72, 0x61,
	0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x48, 0x0b, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x48, 0x0c, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05,
	0x48, 0x0d, 0x52, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x48, 0x0e, 0x52, 0x0b, 0x74, 0x72,
	0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a,
	0x70, 0x61, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x05,
	0x48, 0x0f, 0x52, 0x09, 0x70, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01,
	0x12, 0x1e, 0x0a, 0x08, 0x70, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x16, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x10, 0x52, 0x07, 0x70, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x28, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x65, 0x72,
	0x6d, 0x18, 0x17, 0x20, 0x01, 0x28, 0x05, 0x48, 0x11, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x54, 0x65, 0x72, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x62, 0x75,
	0x79, 0x65, 0x72, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x48, 0x12,
	0x52, 0x09, 0x62, 0x75, 0x79, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x88, 0x01, 0x01, 0x12, 0x26,
	0x0a, 0x0c, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x19,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x13, 0x52, 0x0b, 0x62, 0x75, 0x79, 0x65, 0x72, 0x4d, 0x6f, 0x62,
	0x69, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x14, 0x52,
	0x0c, 0x62, 0x75, 0x79, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x24, 0x0a, 0x0b, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x1b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x15, 0x52, 0x0a, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72,
	0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x16, 0x52, 0x0a, 0x73,
	0x65, 0x6c, 0x6c, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x07,
	0x73, 0x68, 0x6f, 0x70, 0x5f, 0x6e, 0x6f, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x17, 0x52,
	0x06, 0x73, 0x68, 0x6f, 0x70, 0x4e, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x73, 0x68,
	0x6f, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x18, 0x52,
	0x08, 0x73, 0x68, 0x6f, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c,
	0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x1f, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x19, 0x52, 0x0b, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x4e,
	0x6f, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x48, 0x1a, 0x52, 0x0d,
	0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x28, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x21, 0x20, 0x01, 0x28, 0x09, 0x48, 0x1b, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x11, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18,
	0x22, 0x20, 0x01, 0x28, 0x09, 0x48, 0x1c, 0x52, 0x10, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x63, 0x69, 0x74, 0x79, 0x18, 0x23, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x1d, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x43,
	0x69, 0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x11, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x18, 0x24, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x1e, 0x52, 0x10, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x44, 0x69, 0x73,
	0x74, 0x72, 0x69, 0x63, 0x74, 0x88, 0x01, 0x01, 0x12, 0x2e, 0x0a, 0x10, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x25, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x1f, 0x52, 0x0f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a, 0x0f, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x26, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x20, 0x52, 0x0e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x4d, 0x6f, 0x62,
	0x69, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x27, 0x20, 0x01, 0x28, 0x01, 0x48, 0x21, 0x52, 0x0a, 0x70,
	0x6f, 0x73, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c,
	0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x28, 0x20, 0x01,
	0x28, 0x01, 0x48, 0x22, 0x52, 0x0b, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0b, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x5f,
	0x66, 0x65, 0x65, 0x18, 0x29, 0x20, 0x01, 0x28, 0x01, 0x48, 0x23, 0x52, 0x09, 0x65, 0x78, 0x74,
	0x43, 0x6f, 0x64, 0x46, 0x65, 0x65, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x70, 0x61, 0x69,
	0x64, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x01, 0x48, 0x24, 0x52, 0x04, 0x70, 0x61, 0x69, 0x64, 0x88,
	0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x63, 0x6f, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x2b, 0x20, 0x01, 0x28, 0x01, 0x48, 0x25, 0x52, 0x09, 0x63, 0x6f, 0x64, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x61, 0x62, 0x6c, 0x65, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x01, 0x48, 0x26, 0x52, 0x0a, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x01, 0x48, 0x27, 0x52,
	0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e,
	0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x2e,
	0x20, 0x01, 0x28, 0x05, 0x48, 0x28, 0x52, 0x0d, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x11, 0x6c, 0x6f, 0x67, 0x69,
	0x73, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x31, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x29, 0x52, 0x0f, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73,
	0x49, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x11, 0x6c, 0x6f, 0x67,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x32,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x2a, 0x52, 0x0f, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x49, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x0f, 0x6c, 0x6f,
	0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x69, 0x6e, 0x5f, 0x6e, 0x6f, 0x18, 0x33, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x2b, 0x52, 0x0d, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73,
	0x49, 0x6e, 0x4e, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x0f, 0x77, 0x61, 0x72, 0x65, 0x68,
	0x6f, 0x75, 0x73, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x6e, 0x6f, 0x18, 0x34, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x2c, 0x52, 0x0d, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x49, 0x6e, 0x4e,
	0x6f, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x11, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73,
	0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x35, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x2d, 0x52, 0x0f, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x49, 0x6e, 0x4e, 0x61,
	0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x63, 0x74, 0x6d, 0x18, 0x36, 0x20, 0x01,
	0x28, 0x03, 0x48, 0x2e, 0x52, 0x03, 0x63, 0x74, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x67, 0x0a, 0x0f,
	0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x37, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x6f, 0x6f,
	0x64, 0x73, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x48, 0x2f, 0x52, 0x0e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a, 0x0f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65,
	0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x18, 0x38, 0x20, 0x01, 0x28, 0x09, 0x48, 0x30,
	0x52, 0x0e, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73,
	0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x73, 0x18, 0x39, 0x20, 0x01, 0x28, 0x09, 0x48, 0x31, 0x52, 0x0d, 0x72,
	0x65, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x88, 0x01, 0x01, 0x12,
	0x2a, 0x0a, 0x0e, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x73, 0x18, 0x3a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x32, 0x52, 0x0d, 0x63, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x88, 0x01, 0x01, 0x42, 0x11, 0x0a, 0x0f, 0x5f,
	0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x0f,
	0x0a, 0x0d, 0x5f, 0x73, 0x77, 0x61, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42,
	0x11, 0x0a, 0x0f, 0x5f, 0x74, 0x61, 0x69, 0x6c, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x5f,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x66, 0x65, 0x65, 0x64,
	0x62, 0x61, 0x63, 0x6b, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x13, 0x0a, 0x11,
	0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x11, 0x0a, 0x0f, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x0f,
	0x0a, 0x0d, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42,
	0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x0b,
	0x0a, 0x09, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f,
	0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x42, 0x0d, 0x0a,
	0x0b, 0x5f, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x42, 0x0f, 0x0a, 0x0d,
	0x5f, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x42, 0x10, 0x0a,
	0x0e, 0x5f, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42,
	0x0e, 0x0a, 0x0c, 0x5f, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42,
	0x0e, 0x0a, 0x0c, 0x5f, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x42,
	0x0a, 0x0a, 0x08, 0x5f, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x6e, 0x6f, 0x42, 0x0c, 0x0a, 0x0a, 0x5f,
	0x73, 0x68, 0x6f, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x77, 0x61,
	0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x6e, 0x6f, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x77,
	0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x10, 0x0a,
	0x0e, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42,
	0x14, 0x0a, 0x12, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x6e, 0x63, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x5f, 0x63, 0x69, 0x74, 0x79, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x42, 0x13, 0x0a,
	0x11, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f,
	0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x5f,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x6f, 0x74, 0x68, 0x65, 0x72,
	0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x65, 0x78, 0x74, 0x5f,
	0x63, 0x6f, 0x64, 0x5f, 0x66, 0x65, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x70, 0x61, 0x69, 0x64,
	0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x6f, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42,
	0x0d, 0x0a, 0x0b, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x0b,
	0x0a, 0x09, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x11, 0x0a, 0x0f, 0x5f,
	0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x14,
	0x0a, 0x12, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x69, 0x6e, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x73, 0x5f, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x6c,
	0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x69, 0x6e, 0x5f, 0x6e, 0x6f, 0x42, 0x12,
	0x0a, 0x10, 0x5f, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x69, 0x6e, 0x5f,
	0x6e, 0x6f, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65,
	0x5f, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x63, 0x74, 0x6d,
	0x42, 0x12, 0x0a, 0x10, 0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65,
	0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x72, 0x65, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x42, 0x11, 0x0a, 0x0f, 0x5f,
	0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x22, 0x93,
	0x1f, 0x0a, 0x12, 0x43, 0x74, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x74, 0x72, 0x61, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x11, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x11, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x74, 0x6d, 0x5f, 0x6e, 0x69, 0x63, 0x6b,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x74, 0x6d, 0x4e,
	0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x74, 0x6d, 0x5f, 0x6d,
	0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x74, 0x6d,
	0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x74, 0x6d, 0x5f, 0x6f, 0x70,
	0x65, 0x6e, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x74, 0x6d, 0x4f,
	0x70, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x5a, 0x0a, 0x0e, 0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x5f,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x70, 0x61, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x0d, 0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x12, 0x54, 0x0a, 0x0c, 0x73, 0x77, 0x61, 0x70, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x77,
	0x61, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0b, 0x73, 0x77, 0x61, 0x70,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x5a, 0x0a, 0x0e, 0x74, 0x61, 0x69, 0x6c, 0x6f,
	0x72, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x33, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x61, 0x69, 0x6c, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0d, 0x74, 0x61, 0x69, 0x6c, 0x6f, 0x72, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x12, 0x60, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x5f,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x60, 0x0a, 0x10, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63,
	0x6b, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x35, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0f, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x5e, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x64, 0x65,
	0x5f, 0x69, 0x6e, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x34, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74,
	0x6f, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x49, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x49, 0x6e,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x68, 0x0a, 0x12, 0x73, 0x77, 0x61, 0x70, 0x5f,
	0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x10, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x69, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73,
	0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x10, 0x73, 0x77, 0x61, 0x70, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x12, 0x6b, 0x0a, 0x14, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x67, 0x6f, 0x6f, 0x64,
	0x73, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x11, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x39, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x12, 0x72, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x62,
	0x0a, 0x11, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x50, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x0f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x61, 0x70,
	0x70, 0x72, 0x6f, 0x76, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x01, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x72,
	0x6f, 0x76, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69,
	0x64, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0a,
	0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x05,
	0x48, 0x03, 0x52, 0x09, 0x74, 0x72, 0x61, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x17, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x05, 0x48, 0x04,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x05, 0x48, 0x05,
	0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x2a, 0x0a, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x05, 0x48, 0x06, 0x52, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x74,
	0x72, 0x61, 0x64, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x1d, 0x20, 0x01, 0x28,
	0x05, 0x48, 0x07, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x48, 0x08, 0x52, 0x09, 0x70, 0x61, 0x79, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x70, 0x61, 0x79, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52, 0x07, 0x70, 0x61, 0x79,
	0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x18, 0x20, 0x20, 0x01, 0x28, 0x05, 0x48, 0x0a,
	0x52, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x65, 0x72, 0x6d, 0x88, 0x01,
	0x01, 0x12, 0x22, 0x0a, 0x0a, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x18,
	0x21, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0b, 0x52, 0x09, 0x62, 0x75, 0x79, 0x65, 0x72, 0x4e, 0x69,
	0x63, 0x6b, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x6d,
	0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x22, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0c, 0x52, 0x0b, 0x62,
	0x75, 0x79, 0x65, 0x72, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a,
	0x0d, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x23,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x0d, 0x52, 0x0c, 0x62, 0x75, 0x79, 0x65, 0x72, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x73, 0x65, 0x6c, 0x6c, 0x65,
	0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x24, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0e, 0x52, 0x0a,
	0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a,
	0x0b, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x18, 0x25, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x0f, 0x52, 0x0a, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x6f,
	0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x07, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x6e, 0x6f, 0x18, 0x26,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x10, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x4e, 0x6f, 0x88, 0x01,
	0x01, 0x12, 0x20, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x27,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x11, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x70, 0x4e, 0x61, 0x6d, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65,
	0x5f, 0x6e, 0x6f, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x48, 0x12, 0x52, 0x0b, 0x77, 0x61, 0x72,
	0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x4e, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x77,
	0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x29, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x13, 0x52, 0x0d, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x14,
	0x52, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x30, 0x0a, 0x11, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x15, 0x52, 0x10,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f,
	0x63, 0x69, 0x74, 0x79, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x16, 0x52, 0x0c, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x43, 0x69, 0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a,
	0x11, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69,
	0x63, 0x74, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x17, 0x52, 0x10, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x88, 0x01, 0x01, 0x12,
	0x2e, 0x0a, 0x10, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x2e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x18, 0x52, 0x0f, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x88, 0x01, 0x01, 0x12,
	0x2c, 0x0a, 0x0f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x62, 0x69,
	0x6c, 0x65, 0x18, 0x2f, 0x20, 0x01, 0x28, 0x09, 0x48, 0x19, 0x52, 0x0e, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a,
	0x0b, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x30, 0x20, 0x01,
	0x28, 0x01, 0x48, 0x1a, 0x52, 0x0a, 0x70, 0x6f, 0x73, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x31, 0x20, 0x01, 0x28, 0x01, 0x48, 0x1b, 0x52, 0x0b, 0x6f, 0x74, 0x68,
	0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0b, 0x65,
	0x78, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x32, 0x20, 0x01, 0x28, 0x01,
	0x48, 0x1c, 0x52, 0x09, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x64, 0x46, 0x65, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x17, 0x0a, 0x04, 0x70, 0x61, 0x69, 0x64, 0x18, 0x33, 0x20, 0x01, 0x28, 0x01, 0x48, 0x1d,
	0x52, 0x04, 0x70, 0x61, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x63, 0x6f, 0x64,
	0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x34, 0x20, 0x01, 0x28, 0x01, 0x48, 0x1e, 0x52,
	0x09, 0x63, 0x6f, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a,
	0x0a, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x35, 0x20, 0x01, 0x28,
	0x01, 0x48, 0x1f, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x36,
	0x20, 0x01, 0x28, 0x01, 0x48, 0x20, 0x52, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x37, 0x20, 0x01, 0x28, 0x05, 0x48, 0x21, 0x52, 0x0d, 0x69,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12,
	0x2f, 0x0a, 0x11, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x69, 0x6e, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x3a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x22, 0x52, 0x0f, 0x6c, 0x6f,
	0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x49, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x2f, 0x0a, 0x11, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x69, 0x6e,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x3b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x23, 0x52, 0x0f, 0x6c,
	0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x49, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x2b, 0x0a, 0x0f, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x69,
	0x6e, 0x5f, 0x6e, 0x6f, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x24, 0x52, 0x0d, 0x6c, 0x6f,
	0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x49, 0x6e, 0x4e, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x2b,
	0x0a, 0x0f, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x6e,
	0x6f, 0x18, 0x3d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x25, 0x52, 0x0d, 0x77, 0x61, 0x72, 0x65, 0x68,
	0x6f, 0x75, 0x73, 0x65, 0x49, 0x6e, 0x4e, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x11, 0x77,
	0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x3e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x26, 0x52, 0x0f, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f,
	0x75, 0x73, 0x65, 0x49, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03,
	0x63, 0x74, 0x6d, 0x18, 0x3f, 0x20, 0x01, 0x28, 0x03, 0x48, 0x27, 0x52, 0x03, 0x63, 0x74, 0x6d,
	0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x61, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x40, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61,
	0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x41, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x54, 0x65, 0x72, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x6e, 0x0a, 0x15, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x18, 0x42, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x13, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x72, 0x61,
	0x64, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x43,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x0f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65,
	0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x18, 0x44, 0x20, 0x01, 0x28, 0x09, 0x48, 0x28,
	0x52, 0x0e, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73,
	0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x73, 0x18, 0x45, 0x20, 0x01, 0x28, 0x09, 0x48, 0x29, 0x52, 0x0d, 0x72,
	0x65, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x88, 0x01, 0x01, 0x12,
	0x2a, 0x0a, 0x0e, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x73, 0x18, 0x46, 0x20, 0x01, 0x28, 0x09, 0x48, 0x2a, 0x52, 0x0d, 0x63, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f,
	0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x0f, 0x0a, 0x0d,
	0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0d, 0x0a,
	0x0b, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x07, 0x0a, 0x05,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x74, 0x72, 0x61,
	0x64, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x61,
	0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x61, 0x79,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x62, 0x75, 0x79, 0x65,
	0x72, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x62, 0x75, 0x79, 0x65, 0x72,
	0x5f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x62, 0x75, 0x79, 0x65,
	0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x73, 0x65,
	0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x73, 0x65,
	0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x73, 0x68,
	0x6f, 0x70, 0x5f, 0x6e, 0x6f, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73,
	0x65, 0x5f, 0x6e, 0x6f, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75,
	0x73, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x42,
	0x10, 0x0a, 0x0e, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x63, 0x69, 0x74,
	0x79, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x64,
	0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x12, 0x0a, 0x10,
	0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
	0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x5f, 0x66, 0x65,
	0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x70, 0x61, 0x69, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63,
	0x6f, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x6c, 0x6f, 0x67,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x14,
	0x0a, 0x12, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x69, 0x6e, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x73, 0x5f, 0x69, 0x6e, 0x5f, 0x6e, 0x6f, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x77, 0x61, 0x72,
	0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x6e, 0x6f, 0x42, 0x14, 0x0a, 0x12,
	0x5f, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x63, 0x74, 0x6d, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x61,
	0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x42, 0x11,
	0x0a, 0x0f, 0x5f, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x73, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x5f, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x73, 0x22, 0x2b, 0x0a, 0x19, 0x43, 0x74, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x2c, 0x0a, 0x1a, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x47, 0x6f, 0x6f, 0x64,
	0x73, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x2c, 0x0a, 0x1a, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x28, 0x0a,
	0x16, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x50, 0x61, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2b, 0x0a, 0x19, 0x44, 0x65, 0x73, 0x74, 0x72,
	0x6f, 0x79, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x2e, 0x0a, 0x1c, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x2e, 0x0a, 0x1c, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x2c, 0x0a, 0x1a, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x70, 0x61, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x2a, 0x0a, 0x18, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x53, 0x77, 0x61, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2c,
	0x0a, 0x1a, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54,
	0x61, 0x69, 0x6c, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2d, 0x0a, 0x1b,
	0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x72, 0x61,
	0x64, 0x65, 0x49, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x33, 0x0a, 0x17, 0x4c,
	0x69, 0x73, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73,
	0x22, 0x33, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x73, 0x22, 0x2f, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x6f, 0x6f,
	0x64, 0x73, 0x50, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x22, 0x32, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x6f,
	0x6f, 0x64, 0x73, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x22, 0x35, 0x0a, 0x19, 0x4c, 0x69,
	0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x69, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x73, 0x22, 0x35, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x46,
	0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x22, 0x33, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x70, 0x61, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x22, 0x31, 0x0a,
	0x15, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x77, 0x61, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73,
	0x22, 0x33, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x61,
	0x69, 0x6c, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x73, 0x22, 0x34, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x49, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x22, 0x83, 0x01, 0x0a, 0x1a,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x07, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x81, 0x08, 0x0a, 0x15, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x20, 0x0a, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x73,
	0x70, 0x75, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x67, 0x6f, 0x6f, 0x64,
	0x73, 0x53, 0x70, 0x75, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x07, 0x73, 0x70, 0x65, 0x63, 0x5f,
	0x6e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x06, 0x73, 0x70, 0x65, 0x63,
	0x4e, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x72, 0x66, 0x69, 0x64, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x08, 0x72, 0x66, 0x69, 0x64,
	0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x73, 0x65, 0x63, 0x75, 0x72,
	0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03,
	0x52, 0x0c, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x0d, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a,
	0x09, 0x6f, 0x6d, 0x73, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x05, 0x52, 0x08, 0x6f, 0x6d, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12,
	0x2c, 0x0a, 0x0f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x72, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x0e, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a,
	0x0a, 0x6f, 0x6d, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x07, 0x52, 0x09, 0x6f, 0x6d, 0x73, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x88, 0x01,
	0x01, 0x12, 0x28, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x5f, 0x64, 0x65,
	0x73, 0x63, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x70,
	0x6c, 0x61, 0x69, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x03, 0x48, 0x09, 0x52, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73,
	0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0a, 0x52, 0x07, 0x67, 0x6f, 0x6f,
	0x64, 0x73, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x67, 0x6f, 0x6f, 0x64, 0x73,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0b, 0x52, 0x09, 0x67,
	0x6f, 0x6f, 0x64, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x70,
	0x61, 0x72, 0x74, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x0c, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x22, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x0d, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x73, 0x4e, 0x61, 0x6d, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0e, 0x52, 0x09, 0x6d, 0x65, 0x64, 0x69, 0x61,
	0x50, 0x61, 0x74, 0x68, 0x88, 0x01, 0x01, 0x12, 0x2e, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x70, 0x6c,
	0x61, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x0f, 0x52, 0x0f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x73, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x73, 0x70, 0x65, 0x63, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x48, 0x10, 0x52, 0x08, 0x73, 0x70,
	0x65, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x67, 0x6f, 0x6f,
	0x64, 0x73, 0x5f, 0x6e, 0x6f, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x48, 0x11, 0x52, 0x07, 0x67,
	0x6f, 0x6f, 0x64, 0x73, 0x4e, 0x6f, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x67, 0x6f,
	0x6f, 0x64, 0x73, 0x5f, 0x73, 0x70, 0x75, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x73, 0x70, 0x65, 0x63,
	0x5f, 0x6e, 0x6f, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x72, 0x66, 0x69, 0x64, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6f, 0x6d, 0x73, 0x5f, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6f, 0x6d, 0x73,
	0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x63, 0x6f, 0x6d, 0x70,
	0x6c, 0x61, 0x69, 0x6e, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x0b, 0x0a, 0x09,
	0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x67, 0x6f,
	0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x61, 0x72,
	0x74, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x61, 0x72, 0x74,
	0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6d, 0x65, 0x64, 0x69, 0x61,
	0x5f, 0x70, 0x61, 0x74, 0x68, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x61,
	0x69, 0x6e, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x73,
	0x70, 0x65, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x67, 0x6f, 0x6f,
	0x64, 0x73, 0x5f, 0x6e, 0x6f, 0x22, 0xaa, 0x08, 0x0a, 0x16, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x73, 0x70, 0x75, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x53, 0x70,
	0x75, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x07, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x6e, 0x6f, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x06, 0x73, 0x70, 0x65, 0x63, 0x4e, 0x6f, 0x88,
	0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x72, 0x66, 0x69, 0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x08, 0x72, 0x66, 0x69, 0x64, 0x43, 0x6f, 0x64,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x0c, 0x73,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2a,
	0x0a, 0x0e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x0d, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x6f, 0x6d,
	0x73, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52,
	0x08, 0x6f, 0x6d, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a, 0x0f,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x0e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x6f, 0x6d,
	0x73, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07,
	0x52, 0x09, 0x6f, 0x6d, 0x73, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x88, 0x01, 0x01, 0x12, 0x28,
	0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x69,
	0x6e, 0x44, 0x65, 0x73, 0x63, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03,
	0x48, 0x09, 0x52, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0a, 0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0b, 0x52, 0x09, 0x67, 0x6f, 0x6f, 0x64,
	0x73, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x74,
	0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0c, 0x52, 0x09,
	0x70, 0x61, 0x72, 0x74, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a,
	0x70, 0x61, 0x72, 0x74, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x0d, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x22, 0x0a, 0x0a, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x13,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x0e, 0x52, 0x09, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x74,
	0x68, 0x88, 0x01, 0x01, 0x12, 0x2e, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x69, 0x6e,
	0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0f,
	0x52, 0x0f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x73, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x48, 0x10, 0x52, 0x08, 0x73, 0x70, 0x65, 0x63, 0x4e,
	0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f,
	0x6e, 0x6f, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x48, 0x11, 0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64,
	0x73, 0x4e, 0x6f, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73,
	0x5f, 0x73, 0x70, 0x75, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x6e, 0x6f,
	0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x72, 0x66, 0x69, 0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x10,
	0x0a, 0x0e, 0x5f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6f, 0x6d, 0x73, 0x5f, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x72,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6f, 0x6d, 0x73, 0x5f, 0x72, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x69,
	0x6e, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x67, 0x6f,
	0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x73, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x73, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x70, 0x61,
	0x74, 0x68, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x5f,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x73, 0x70, 0x65, 0x63,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f,
	0x6e, 0x6f, 0x22, 0x83, 0x01, 0x0a, 0x1a, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x46, 0x65, 0x65,
	0x64, 0x62, 0x61, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4f, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x35, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69,
	0x74, 0x6f, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63,
	0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x9d, 0x06, 0x0a, 0x15, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x20, 0x0a, 0x09,
	0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x73, 0x70, 0x75, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x53, 0x70, 0x75, 0x88, 0x01, 0x01, 0x12, 0x1c,
	0x0a, 0x07, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x6e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x01, 0x52, 0x06, 0x73, 0x70, 0x65, 0x63, 0x4e, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09,
	0x72, 0x66, 0x69, 0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x02, 0x52, 0x08, 0x72, 0x66, 0x69, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x28,
	0x0a, 0x0d, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x0c, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x66, 0x65, 0x65, 0x64,
	0x62, 0x61, 0x63, 0x6b, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x04, 0x52, 0x0c, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x44, 0x65, 0x73, 0x63, 0x88,
	0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x48, 0x05, 0x52, 0x0d, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1e,
	0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x06, 0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22,
	0x0a, 0x0a, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x07, 0x52, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x73, 0x43,
	0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x73, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52, 0x09, 0x70, 0x61,
	0x72, 0x74, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0a,
	0x52, 0x09, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x74, 0x68, 0x88, 0x01, 0x01, 0x12, 0x2e,
	0x0a, 0x10, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0b, 0x52, 0x0f, 0x66, 0x65, 0x65, 0x64,
	0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x88, 0x01, 0x01, 0x12, 0x20,
	0x0a, 0x09, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x0c, 0x52, 0x08, 0x73, 0x70, 0x65, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x1e, 0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x6f, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x0d, 0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x4e, 0x6f, 0x88, 0x01, 0x01,
	0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x73, 0x70, 0x75, 0x42, 0x0a,
	0x0a, 0x08, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x6e, 0x6f, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x72,
	0x66, 0x69, 0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x73, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x66,
	0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x42, 0x11, 0x0a, 0x0f,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x42,
	0x0b, 0x0a, 0x09, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x42, 0x0d, 0x0a, 0x0b,
	0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f,
	0x70, 0x61, 0x72, 0x74, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70,
	0x61, 0x72, 0x74, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x66, 0x65, 0x65,
	0x64, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x42, 0x0c, 0x0a,
	0x0a, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f,
	0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x6f, 0x22, 0xc6, 0x06, 0x0a, 0x16, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x73,
	0x70, 0x75, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x67, 0x6f, 0x6f, 0x64,
	0x73, 0x53, 0x70, 0x75, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x07, 0x73, 0x70, 0x65, 0x63, 0x5f,
	0x6e, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x06, 0x73, 0x70, 0x65, 0x63,
	0x4e, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x72, 0x66, 0x69, 0x64, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x08, 0x72, 0x66, 0x69, 0x64,
	0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x73, 0x65, 0x63, 0x75, 0x72,
	0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03,
	0x52, 0x0c, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x28, 0x0a, 0x0d, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x64, 0x65,
	0x73, 0x63, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x0c, 0x66, 0x65, 0x65, 0x64,
	0x62, 0x61, 0x63, 0x6b, 0x44, 0x65, 0x73, 0x63, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x03, 0x48, 0x05, 0x52, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73,
	0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x07, 0x67, 0x6f, 0x6f,
	0x64, 0x73, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x67, 0x6f, 0x6f, 0x64, 0x73,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x09, 0x67,
	0x6f, 0x6f, 0x64, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x70,
	0x61, 0x72, 0x74, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x08, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x22, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x09, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x73, 0x4e, 0x61, 0x6d, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0a, 0x52, 0x09, 0x6d, 0x65, 0x64, 0x69, 0x61,
	0x50, 0x61, 0x74, 0x68, 0x88, 0x01, 0x01, 0x12, 0x2e, 0x0a, 0x10, 0x66, 0x65, 0x65, 0x64, 0x62,
	0x61, 0x63, 0x6b, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x0b, 0x52, 0x0f, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x73, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x73, 0x70, 0x65, 0x63, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0c, 0x52, 0x08, 0x73, 0x70,
	0x65, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x67, 0x6f, 0x6f,
	0x64, 0x73, 0x5f, 0x6e, 0x6f, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0d, 0x52, 0x07, 0x67,
	0x6f, 0x6f, 0x64, 0x73, 0x4e, 0x6f, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x67, 0x6f,
	0x6f, 0x64, 0x73, 0x5f, 0x73, 0x70, 0x75, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x73, 0x70, 0x65, 0x63,
	0x5f, 0x6e, 0x6f, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x72, 0x66, 0x69, 0x64, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b,
	0x5f, 0x64, 0x65, 0x73, 0x63, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x67, 0x6f, 0x6f,
	0x64, 0x73, 0x5f, 0x69, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x73, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x73, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x70, 0x61, 0x74,
	0x68, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e,
	0x6f, 0x22, 0x7f, 0x0a, 0x18, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x70, 0x61, 0x69,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a,
	0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x70, 0x61, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x87, 0x09, 0x0a, 0x13, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x70,
	0x61, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x73, 0x12, 0x20, 0x0a, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x73, 0x70,
	0x75, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73,
	0x53, 0x70, 0x75, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x07, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x6e,
	0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x06, 0x73, 0x70, 0x65, 0x63, 0x4e,
	0x6f, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x72, 0x66, 0x69, 0x64, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x08, 0x72, 0x66, 0x69, 0x64, 0x43,
	0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52,
	0x0c, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x2f, 0x0a, 0x11, 0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x73,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x0f, 0x72,
	0x65, 0x70, 0x61, 0x69, 0x72, 0x50, 0x61, 0x72, 0x74, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x2f, 0x0a, 0x11, 0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x5f, 0x70, 0x61, 0x72, 0x74,
	0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x0f,
	0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x50, 0x61, 0x72, 0x74, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x5f, 0x64, 0x65, 0x73,
	0x63, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x61, 0x69,
	0x72, 0x44, 0x65, 0x73, 0x63, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x6d, 0x65, 0x64, 0x69,
	0x61, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x09,
	0x6d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x74, 0x68, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x03, 0x48, 0x08, 0x52, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64,
	0x73, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52, 0x07, 0x67, 0x6f,
	0x6f, 0x64, 0x73, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x67, 0x6f, 0x6f, 0x64,
	0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0a, 0x52, 0x09,
	0x67, 0x6f, 0x6f, 0x64, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e,
	0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x0b, 0x52, 0x0d, 0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x52, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x73, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x73, 0x70, 0x65, 0x63,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0c, 0x52, 0x08, 0x73,
	0x70, 0x65, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x0d, 0x52, 0x0d, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x6f, 0x6d, 0x73, 0x5f, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0e, 0x52, 0x08, 0x6f, 0x6d, 0x73,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x6f, 0x75, 0x74, 0x5f,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x01, 0x48, 0x0f, 0x52, 0x08, 0x6f,
	0x75, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x72, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x01,
	0x48, 0x10, 0x52, 0x0b, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x6f, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x11, 0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x4e, 0x6f, 0x88,
	0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x5f, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x48, 0x12, 0x52, 0x0d, 0x72, 0x65,
	0x70, 0x61, 0x69, 0x72, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x26,
	0x0a, 0x0c, 0x73, 0x77, 0x61, 0x70, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x18, 0x17,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x13, 0x52, 0x0b, 0x73, 0x77, 0x61, 0x70, 0x45, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73,
	0x5f, 0x73, 0x70, 0x75, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x6e, 0x6f,
	0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x72, 0x66, 0x69, 0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x10,
	0x0a, 0x0e, 0x5f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x42, 0x14, 0x0a, 0x12, 0x5f, 0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x5f, 0x70, 0x61, 0x72, 0x74,
	0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x72, 0x65, 0x70, 0x61, 0x69,
	0x72, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0e, 0x0a, 0x0c,
	0x5f, 0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x42, 0x0d, 0x0a, 0x0b,
	0x5f, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x42, 0x11, 0x0a, 0x0f, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x0b,
	0x0a, 0x09, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f,
	0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x72,
	0x65, 0x70, 0x61, 0x69, 0x72, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x42, 0x0c, 0x0a,
	0x0a, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x11, 0x0a, 0x0f, 0x5f,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x0c,
	0x0a, 0x0a, 0x5f, 0x6f, 0x6d, 0x73, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x0c, 0x0a, 0x0a,
	0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x72,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f,
	0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x6f, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x72, 0x65, 0x70,
	0x61, 0x69, 0x72, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x42, 0x0f, 0x0a, 0x0d, 0x5f,
	0x73, 0x77, 0x61, 0x70, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x22, 0xb0, 0x09, 0x0a,
	0x14, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x70, 0x61, 0x69, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73,
	0x5f, 0x73, 0x70, 0x75, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x67, 0x6f,
	0x6f, 0x64, 0x73, 0x53, 0x70, 0x75, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x07, 0x73, 0x70, 0x65,
	0x63, 0x5f, 0x6e, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x06, 0x73, 0x70,
	0x65, 0x63, 0x4e, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x72, 0x66, 0x69, 0x64, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x08, 0x72, 0x66,
	0x69, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x73, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x03, 0x52, 0x0c, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x64, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x11, 0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x5f, 0x70, 0x61,
	0x72, 0x74, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04,
	0x52, 0x0f, 0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x50, 0x61, 0x72, 0x74, 0x73, 0x43, 0x6f, 0x64,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x11, 0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x5f, 0x70,
	0x61, 0x72, 0x74, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x05, 0x52, 0x0f, 0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x50, 0x61, 0x72, 0x74, 0x73, 0x4e, 0x61,
	0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x5f,
	0x64, 0x65, 0x73, 0x63, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x0a, 0x72, 0x65,
	0x70, 0x61, 0x69, 0x72, 0x44, 0x65, 0x73, 0x63, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x07, 0x52, 0x09, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x74, 0x68, 0x88, 0x01, 0x01, 0x12,
	0x2a, 0x0a, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x48, 0x08, 0x52, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x67,
	0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52,
	0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x67,
	0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x0a, 0x52, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x2a, 0x0a, 0x0e, 0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0b, 0x52, 0x0d, 0x72, 0x65, 0x70, 0x61, 0x69,
	0x72, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x73,
	0x70, 0x65, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0c,
	0x52, 0x08, 0x73, 0x70, 0x65, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a,
	0x0e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0d, 0x52, 0x0d, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x6f, 0x6d, 0x73,
	0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0e, 0x52, 0x08,
	0x6f, 0x6d, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x6f,
	0x75, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x01, 0x48, 0x0f,
	0x52, 0x08, 0x6f, 0x75, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a,
	0x0c, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x01, 0x48, 0x10, 0x52, 0x0b, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e,
	0x6f, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x48, 0x11, 0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73,
	0x4e, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x5f,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x48, 0x12, 0x52,
	0x0d, 0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x88, 0x01,
	0x01, 0x12, 0x26, 0x0a, 0x0c, 0x73, 0x77, 0x61, 0x70, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x64, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x48, 0x13, 0x52, 0x0b, 0x73, 0x77, 0x61, 0x70, 0x45,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x67, 0x6f,
	0x6f, 0x64, 0x73, 0x5f, 0x73, 0x70, 0x75, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x73, 0x70, 0x65, 0x63,
	0x5f, 0x6e, 0x6f, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x72, 0x66, 0x69, 0x64, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x5f, 0x70,
	0x61, 0x72, 0x74, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x72, 0x65,
	0x70, 0x61, 0x69, 0x72, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42,
	0x0e, 0x0a, 0x0c, 0x5f, 0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x42,
	0x0d, 0x0a, 0x0b, 0x5f, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x42, 0x11,
	0x0a, 0x0f, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x42, 0x0d,
	0x0a, 0x0b, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x11, 0x0a,
	0x0f, 0x5f, 0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73,
	0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x11,
	0x0a, 0x0f, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6f, 0x6d, 0x73, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42,
	0x0c, 0x0a, 0x0a, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x42, 0x0f, 0x0a,
	0x0d, 0x5f, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x42, 0x0b,
	0x0a, 0x09, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x6f, 0x42, 0x11, 0x0a, 0x0f, 0x5f,
	0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x42, 0x0f,
	0x0a, 0x0d, 0x5f, 0x73, 0x77, 0x61, 0x70, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x22,
	0x7b, 0x0a, 0x16, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x77, 0x61, 0x70, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x07, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x53, 0x77, 0x61, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x07, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x85, 0x09, 0x0a,
	0x11, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x77, 0x61, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x20, 0x0a, 0x09,
	0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x73, 0x70, 0x75, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x53, 0x70, 0x75, 0x88, 0x01, 0x01, 0x12, 0x1c,
	0x0a, 0x07, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x6e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x01, 0x52, 0x06, 0x73, 0x70, 0x65, 0x63, 0x4e, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09,
	0x72, 0x66, 0x69, 0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x02, 0x52, 0x08, 0x72, 0x66, 0x69, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x28,
	0x0a, 0x0d, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x0c, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x11, 0x64, 0x61, 0x6d, 0x61,
	0x67, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x0f, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x61, 0x72,
	0x74, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x11, 0x64, 0x61, 0x6d,
	0x61, 0x67, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x0f, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x61,
	0x72, 0x74, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x64, 0x61,
	0x6d, 0x61, 0x67, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x06, 0x52, 0x0a, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x44, 0x65, 0x73, 0x63, 0x88, 0x01, 0x01,
	0x12, 0x22, 0x0a, 0x0a, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x09, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x74,
	0x68, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x48, 0x08, 0x52, 0x0d,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x88, 0x01, 0x01,
	0x12, 0x1e, 0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x09, 0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x88, 0x01, 0x01,
	0x12, 0x22, 0x0a, 0x0a, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x0a, 0x52, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x4e, 0x61, 0x6d,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0b, 0x52, 0x0d,
	0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x88, 0x01, 0x01,
	0x12, 0x20, 0x0a, 0x09, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x0c, 0x52, 0x08, 0x73, 0x70, 0x65, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0d, 0x52, 0x0d, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x20,
	0x0a, 0x09, 0x6f, 0x6d, 0x73, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x0e, 0x52, 0x08, 0x6f, 0x6d, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01,
	0x12, 0x20, 0x0a, 0x09, 0x6f, 0x75, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x01, 0x48, 0x0f, 0x52, 0x08, 0x6f, 0x75, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x01, 0x48, 0x10, 0x52, 0x0b, 0x72, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x67, 0x6f,
	0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x6f, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x48, 0x11, 0x52, 0x07,
	0x67, 0x6f, 0x6f, 0x64, 0x73, 0x4e, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x72, 0x65,
	0x70, 0x61, 0x69, 0x72, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x18, 0x16, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x12, 0x52, 0x0d, 0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x45, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x73, 0x77, 0x61, 0x70, 0x5f, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x48, 0x13, 0x52, 0x0b,
	0x73, 0x77, 0x61, 0x70, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0c,
	0x0a, 0x0a, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x73, 0x70, 0x75, 0x42, 0x0a, 0x0a, 0x08,
	0x5f, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x6e, 0x6f, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x72, 0x66, 0x69,
	0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x73, 0x65, 0x63, 0x75, 0x72,
	0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x64, 0x61, 0x6d,
	0x61, 0x67, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x14,
	0x0a, 0x12, 0x5f, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x73, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x5f,
	0x64, 0x65, 0x73, 0x63, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x70,
	0x61, 0x74, 0x68, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73,
	0x5f, 0x69, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x73, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6f, 0x6d, 0x73, 0x5f, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x6f,
	0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x5f, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x64, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x73, 0x77, 0x61, 0x70, 0x5f, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x64, 0x22, 0xae, 0x09, 0x0a, 0x12, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53,
	0x77, 0x61, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x73, 0x70, 0x75, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x53, 0x70, 0x75, 0x88, 0x01, 0x01, 0x12,
	0x1c, 0x0a, 0x07, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x6e, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x01, 0x52, 0x06, 0x73, 0x70, 0x65, 0x63, 0x4e, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a,
	0x09, 0x72, 0x66, 0x69, 0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x02, 0x52, 0x08, 0x72, 0x66, 0x69, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x28, 0x0a, 0x0d, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x0c, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x11, 0x64, 0x61, 0x6d,
	0x61, 0x67, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x0f, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x61,
	0x72, 0x74, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x11, 0x64, 0x61,
	0x6d, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x0f, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x50,
	0x61, 0x72, 0x74, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x64,
	0x61, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x06, 0x52, 0x0a, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x44, 0x65, 0x73, 0x63, 0x88, 0x01,
	0x01, 0x12, 0x22, 0x0a, 0x0a, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x09, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61,
	0x74, 0x68, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x48, 0x08, 0x52,
	0x0d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x1e, 0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x09, 0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x88, 0x01,
	0x01, 0x12, 0x22, 0x0a, 0x0a, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0a, 0x52, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x4e, 0x61,
	0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x5f,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0b, 0x52,
	0x0d, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x88, 0x01,
	0x01, 0x12, 0x20, 0x0a, 0x09, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x0c, 0x52, 0x08, 0x73, 0x70, 0x65, 0x63, 0x4e, 0x61, 0x6d, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0d, 0x52, 0x0d, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12,
	0x20, 0x0a, 0x09, 0x6f, 0x6d, 0x73, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x0e, 0x52, 0x08, 0x6f, 0x6d, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x88, 0x01,
	0x01, 0x12, 0x20, 0x0a, 0x09, 0x6f, 0x75, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x01, 0x48, 0x0f, 0x52, 0x08, 0x6f, 0x75, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x01, 0x48, 0x10, 0x52, 0x0b, 0x72, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x67,
	0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x6f, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x48, 0x11, 0x52,
	0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x4e, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x72,
	0x65, 0x70, 0x61, 0x69, 0x72, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x18, 0x17, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x12, 0x52, 0x0d, 0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x45, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x73, 0x77, 0x61, 0x70, 0x5f,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x48, 0x13, 0x52,
	0x0b, 0x73, 0x77, 0x61, 0x70, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x88, 0x01, 0x01, 0x42,
	0x0c, 0x0a, 0x0a, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x73, 0x70, 0x75, 0x42, 0x0a, 0x0a,
	0x08, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x6e, 0x6f, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x72, 0x66,
	0x69, 0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x73, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x64, 0x61,
	0x6d, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42,
	0x14, 0x0a, 0x12, 0x5f, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x73,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65,
	0x5f, 0x64, 0x65, 0x73, 0x63, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f,
	0x70, 0x61, 0x74, 0x68, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x67, 0x6f, 0x6f, 0x64,
	0x73, 0x5f, 0x69, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6f, 0x6d, 0x73, 0x5f,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e,
	0x6f, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x5f, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x64, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x73, 0x77, 0x61, 0x70, 0x5f, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x64, 0x22, 0x7f, 0x0a, 0x18, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54,
	0x61, 0x69, 0x6c, 0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4d, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x33, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69,
	0x74, 0x6f, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x61, 0x69, 0x6c, 0x6f, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xeb, 0x08, 0x0a, 0x13, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x54, 0x61, 0x69, 0x6c, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x20, 0x0a, 0x09, 0x67, 0x6f, 0x6f, 0x64,
	0x73, 0x5f, 0x73, 0x70, 0x75, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x67,
	0x6f, 0x6f, 0x64, 0x73, 0x53, 0x70, 0x75, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x07, 0x73, 0x70,
	0x65, 0x63, 0x5f, 0x6e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x06, 0x73,
	0x70, 0x65, 0x63, 0x4e, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x72, 0x66, 0x69, 0x64,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x08, 0x72,
	0x66, 0x69, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x73, 0x65,
	0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x03, 0x52, 0x0c, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x64,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x0d,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01,
	0x12, 0x20, 0x0a, 0x09, 0x6f, 0x6d, 0x73, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x08, 0x6f, 0x6d, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x88,
	0x01, 0x01, 0x12, 0x1c, 0x0a, 0x07, 0x70, 0x61, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x06, 0x70, 0x61, 0x72, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01,
	0x12, 0x20, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x08, 0x70, 0x61, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x08, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x88, 0x01, 0x01, 0x12,
	0x17, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52,
	0x04, 0x74, 0x65, 0x78, 0x74, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x74, 0x65, 0x78, 0x74,
	0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0a, 0x52, 0x09,
	0x74, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09,
	0x74, 0x65, 0x78, 0x74, 0x5f, 0x66, 0x6f, 0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x0b, 0x52, 0x08, 0x74, 0x65, 0x78, 0x74, 0x46, 0x6f, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1e,
	0x0a, 0x08, 0x74, 0x69, 0x66, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x0c, 0x52, 0x07, 0x74, 0x69, 0x66, 0x50, 0x61, 0x74, 0x68, 0x88, 0x01, 0x01, 0x12, 0x1e,
	0x0a, 0x08, 0x69, 0x6d, 0x67, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x0d, 0x52, 0x07, 0x69, 0x6d, 0x67, 0x50, 0x61, 0x74, 0x68, 0x88, 0x01, 0x01, 0x12, 0x21,
	0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x08, 0x48, 0x0e, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0f, 0x52, 0x0d, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a,
	0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x10, 0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a,
	0x0a, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x11, 0x52, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x20, 0x0a, 0x09, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x12, 0x52, 0x08, 0x73, 0x70, 0x65, 0x63, 0x4e, 0x61, 0x6d, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x6f, 0x75, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x16, 0x20, 0x01, 0x28, 0x01, 0x48, 0x13, 0x52, 0x08, 0x6f, 0x75, 0x74, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x01, 0x48, 0x14, 0x52, 0x0b, 0x72,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a,
	0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x6f, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x15, 0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x4e, 0x6f, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a,
	0x0a, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x73, 0x70, 0x75, 0x42, 0x0a, 0x0a, 0x08, 0x5f,
	0x73, 0x70, 0x65, 0x63, 0x5f, 0x6e, 0x6f, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x72, 0x66, 0x69, 0x64,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6f,
	0x6d, 0x73, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x70, 0x61, 0x72,
	0x74, 0x5f, 0x69, 0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x42, 0x07, 0x0a,
	0x05, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x5f,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x66,
	0x6f, 0x6e, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x74, 0x69, 0x66, 0x5f, 0x70, 0x61, 0x74, 0x68,
	0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x69, 0x6d, 0x67, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x42, 0x0c, 0x0a,
	0x0a, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x11, 0x0a, 0x0f, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x0b,
	0x0a, 0x09, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f,
	0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x73,
	0x70, 0x65, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6f, 0x75, 0x74,
	0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x72, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x67, 0x6f, 0x6f, 0x64,
	0x73, 0x5f, 0x6e, 0x6f, 0x22, 0x94, 0x09, 0x0a, 0x14, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54,
	0x61, 0x69, 0x6c, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x73, 0x70, 0x75, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x53, 0x70, 0x75, 0x88, 0x01,
	0x01, 0x12, 0x1c, 0x0a, 0x07, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x6e, 0x6f, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x01, 0x52, 0x06, 0x73, 0x70, 0x65, 0x63, 0x4e, 0x6f, 0x88, 0x01, 0x01, 0x12,
	0x20, 0x0a, 0x09, 0x72, 0x66, 0x69, 0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x02, 0x52, 0x08, 0x72, 0x66, 0x69, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x28, 0x0a, 0x0d, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x0c, 0x73, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x0d, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x6f, 0x6d, 0x73, 0x5f, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x08, 0x6f, 0x6d,
	0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x07, 0x70, 0x61, 0x72,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x06, 0x70, 0x61,
	0x72, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x74, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x08, 0x70, 0x61,
	0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x72, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x06, 0x72, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x88, 0x01, 0x01, 0x12,
	0x22, 0x0a, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x0a, 0x52, 0x09, 0x74, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
	0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x66, 0x6f, 0x6e, 0x74,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0b, 0x52, 0x08, 0x74, 0x65, 0x78, 0x74, 0x46, 0x6f,
	0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x74, 0x69, 0x66, 0x5f, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0c, 0x52, 0x07, 0x74, 0x69, 0x66, 0x50, 0x61,
	0x74, 0x68, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x69, 0x6d, 0x67, 0x5f, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0d, 0x52, 0x07, 0x69, 0x6d, 0x67, 0x50, 0x61,
	0x74, 0x68, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x48, 0x0e, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03,
	0x48, 0x0f, 0x52, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x48, 0x10, 0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x48, 0x11, 0x52, 0x09, 0x67, 0x6f, 0x6f, 0x64,
	0x73, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x73, 0x70, 0x65, 0x63,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x48, 0x12, 0x52, 0x08, 0x73,
	0x70, 0x65, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x6f, 0x75,
	0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x01, 0x48, 0x13, 0x52,
	0x08, 0x6f, 0x75, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c,
	0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x18, 0x20, 0x01,
	0x28, 0x01, 0x48, 0x14, 0x52, 0x0b, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x6f,
	0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x48, 0x15, 0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x4e,
	0x6f, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x73,
	0x70, 0x75, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x6e, 0x6f, 0x42, 0x0c,
	0x0a, 0x0a, 0x5f, 0x72, 0x66, 0x69, 0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x10, 0x0a, 0x0e,
	0x5f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x11,
	0x0a, 0x0f, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6f, 0x6d, 0x73, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42,
	0x0a, 0x0a, 0x08, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x5f,
	0x70, 0x61, 0x72, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x42, 0x0d, 0x0a,
	0x0b, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x42, 0x0c, 0x0a, 0x0a,
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x66, 0x6f, 0x6e, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x74,
	0x69, 0x66, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x69, 0x6d, 0x67, 0x5f,
	0x70, 0x61, 0x74, 0x68, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f,
	0x69, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42,
	0x0c, 0x0a, 0x0a, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x42, 0x0f, 0x0a,
	0x0d, 0x5f, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x42, 0x0b,
	0x0a, 0x09, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x6f, 0x22, 0x81, 0x01, 0x0a, 0x19,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x49, 0x6e, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x07, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x49, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x96, 0x06, 0x0a, 0x14, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x49,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x73, 0x12, 0x1a, 0x0a, 0x06, 0x63, 0x74, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x48, 0x00, 0x52, 0x05, 0x63, 0x74, 0x6d, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22,
	0x0a, 0x0a, 0x63, 0x74, 0x6d, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x01, 0x52, 0x09, 0x63, 0x74, 0x6d, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x88,
	0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x63, 0x74, 0x6d, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0b, 0x63, 0x74, 0x6d, 0x4e,
	0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x63, 0x74,
	0x6d, 0x5f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03,
	0x52, 0x09, 0x63, 0x74, 0x6d, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x23,
	0x0a, 0x0b, 0x63, 0x74, 0x6d, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x6e, 0x6f, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x09, 0x63, 0x74, 0x6d, 0x43, 0x61, 0x72, 0x64, 0x4e, 0x6f,
	0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x63, 0x74, 0x6d, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x48, 0x05, 0x52, 0x08, 0x63, 0x74, 0x6d, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x69,
	0x6e, 0x5f, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52,
	0x0c, 0x74, 0x72, 0x61, 0x64, 0x65, 0x49, 0x6e, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x88, 0x01, 0x01,
	0x12, 0x29, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x64,
	0x65, 0x49, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0d, 0x74,
	0x72, 0x61, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x08, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x64, 0x65, 0x49, 0x6e, 0x44, 0x65, 0x73,
	0x63, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x69, 0x6e,
	0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x48, 0x09, 0x52, 0x0c,
	0x74, 0x72, 0x61, 0x64, 0x65, 0x49, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x2a, 0x0a, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0a, 0x52, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x0b, 0x52, 0x09, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x74, 0x68, 0x88, 0x01, 0x01, 0x12,
	0x2d, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0c, 0x52, 0x0e, 0x74, 0x72, 0x61,
	0x64, 0x65, 0x49, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x88, 0x01, 0x01, 0x42, 0x09,
	0x0a, 0x07, 0x5f, 0x63, 0x74, 0x6d, 0x5f, 0x69, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x74,
	0x6d, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x63, 0x74, 0x6d,
	0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x74,
	0x6d, 0x5f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x63, 0x74, 0x6d,
	0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x6e, 0x6f, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x63, 0x74, 0x6d,
	0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65,
	0x5f, 0x69, 0x6e, 0x5f, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x74, 0x72,
	0x61, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x42, 0x10, 0x0a, 0x0e,
	0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x42, 0x11,
	0x0a, 0x0f, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x70,
	0x61, 0x74, 0x68, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x69, 0x6e,
	0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x22, 0xbf, 0x06, 0x0a, 0x15, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x49, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x06, 0x63, 0x74, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x05, 0x63, 0x74, 0x6d, 0x49, 0x64, 0x88, 0x01, 0x01,
	0x12, 0x22, 0x0a, 0x0a, 0x63, 0x74, 0x6d, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x09, 0x63, 0x74, 0x6d, 0x4f, 0x70, 0x65, 0x6e, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x63, 0x74, 0x6d, 0x5f, 0x6e, 0x69, 0x63, 0x6b,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0b, 0x63, 0x74,
	0x6d, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a,
	0x63, 0x74, 0x6d, 0x5f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x03, 0x52, 0x09, 0x63, 0x74, 0x6d, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x23, 0x0a, 0x0b, 0x63, 0x74, 0x6d, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x6e, 0x6f, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x09, 0x63, 0x74, 0x6d, 0x43, 0x61, 0x72, 0x64,
	0x4e, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x63, 0x74, 0x6d, 0x5f, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x48, 0x05, 0x52, 0x08, 0x63, 0x74, 0x6d, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x64, 0x65,
	0x5f, 0x69, 0x6e, 0x5f, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x06, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x64, 0x65, 0x49, 0x6e, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x88,
	0x01, 0x01, 0x12, 0x29, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x0c, 0x74, 0x72,
	0x61, 0x64, 0x65, 0x49, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a,
	0x0d, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x64, 0x65, 0x49, 0x6e, 0x44,
	0x65, 0x73, 0x63, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f,
	0x69, 0x6e, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x01, 0x48, 0x09,
	0x52, 0x0c, 0x74, 0x72, 0x61, 0x64, 0x65, 0x49, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0a, 0x52, 0x0d, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a,
	0x0a, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x0b, 0x52, 0x09, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x74, 0x68, 0x88, 0x01,
	0x01, 0x12, 0x2d, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0c, 0x52, 0x0e, 0x74,
	0x72, 0x61, 0x64, 0x65, 0x49, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x88, 0x01, 0x01,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x63, 0x74, 0x6d, 0x5f, 0x69, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f,
	0x63, 0x74, 0x6d, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x63,
	0x74, 0x6d, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f,
	0x63, 0x74, 0x6d, 0x5f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x63,
	0x74, 0x6d, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x6e, 0x6f, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x63,
	0x74, 0x6d, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x74, 0x72, 0x61,
	0x64, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x42, 0x11, 0x0a, 0x0f, 0x5f,
	0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x42, 0x10,
	0x0a, 0x0e, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x64, 0x65, 0x73, 0x63,
	0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6d, 0x65, 0x64, 0x69, 0x61,
	0x5f, 0x70, 0x61, 0x74, 0x68, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f,
	0x69, 0x6e, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x22, 0x40, 0x0a, 0x12, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0x2d, 0x0a, 0x1b,
	0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2d, 0x0a, 0x1b, 0x52,
	0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x29, 0x0a, 0x17, 0x52, 0x65,
	0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x50, 0x61, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2c, 0x0a, 0x1a, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76,
	0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x2f, 0x0a, 0x1d, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x2f, 0x0a, 0x1d, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2d, 0x0a, 0x1b, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76,
	0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x70, 0x61, 0x69, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x2b, 0x0a, 0x19, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x77, 0x61, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x2d, 0x0a, 0x1b, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x54, 0x61, 0x69, 0x6c, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x2e, 0x0a, 0x1c, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x49, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x8d, 0x01, 0x0a, 0x1f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x6f, 0x6f, 0x64,
	0x73, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x6f, 0x6f,
	0x64, 0x73, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x94, 0x09, 0x0a, 0x1a, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x6f, 0x6f, 0x64,
	0x73, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x20, 0x0a, 0x09, 0x63, 0x74, 0x6d,
	0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x08,
	0x63, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x08, 0x63,
	0x61, 0x6e, 0x5f, 0x65, 0x64, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x63,
	0x61, 0x6e, 0x45, 0x64, 0x69, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x61, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x61, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x25, 0x0a, 0x0e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x73, 0x68, 0x61, 0x72, 0x65, 0x44, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0c, 0x64, 0x65, 0x62,
	0x69, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x48,
	0x01, 0x52, 0x0b, 0x64, 0x65, 0x62, 0x69, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x24, 0x0a, 0x0b, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x48, 0x02, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x63, 0x65, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x5f, 0x62, 0x61, 0x64, 0x67, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x48, 0x03, 0x52, 0x0a,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x42, 0x61, 0x64, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a,
	0x09, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05,
	0x48, 0x04, 0x52, 0x08, 0x70, 0x72, 0x69, 0x63, 0x65, 0x4e, 0x75, 0x74, 0x88, 0x01, 0x01, 0x12,
	0x1b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d,
	0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x05, 0x48, 0x06, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f,
	0x69, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64,
	0x73, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x09, 0x67, 0x6f,
	0x6f, 0x64, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x67, 0x6f,
	0x6f, 0x64, 0x73, 0x5f, 0x73, 0x70, 0x75, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52,
	0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x53, 0x70, 0x75, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x07,
	0x73, 0x70, 0x65, 0x63, 0x5f, 0x6e, 0x6f, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x70, 0x65, 0x63, 0x4e, 0x6f, 0x12, 0x22, 0x0a, 0x0a, 0x63, 0x74, 0x6d, 0x5f, 0x72, 0x65, 0x66,
	0x75, 0x6e, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0a, 0x52, 0x09, 0x63, 0x74, 0x6d,
	0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x63, 0x74, 0x6d,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0b,
	0x52, 0x0a, 0x63, 0x74, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x28, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73,
	0x18, 0x17, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0c, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x73, 0x70, 0x65,
	0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0d, 0x52, 0x08,
	0x73, 0x70, 0x65, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x72,
	0x66, 0x69, 0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0e,
	0x52, 0x08, 0x72, 0x66, 0x69, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a,
	0x0d, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x1a,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x0f, 0x52, 0x0c, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73,
	0x5f, 0x6e, 0x6f, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x10, 0x52, 0x07, 0x67, 0x6f, 0x6f,
	0x64, 0x73, 0x4e, 0x6f, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x63, 0x74, 0x6d, 0x5f,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x64, 0x65, 0x62, 0x69, 0x74, 0x5f,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x5f, 0x62, 0x61, 0x64, 0x67, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x5f, 0x6e, 0x75, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42,
	0x10, 0x0a, 0x0e, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x42, 0x0d,
	0x0a, 0x0b, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0c, 0x0a,
	0x0a, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x73, 0x70, 0x75, 0x42, 0x0d, 0x0a, 0x0b, 0x5f,
	0x63, 0x74, 0x6d, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x63,
	0x74, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x72,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x42, 0x0c, 0x0a, 0x0a,
	0x5f, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x72,
	0x66, 0x69, 0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x73, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x67,
	0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x6f, 0x22, 0x8c, 0x0a, 0x0a, 0x1b, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x72, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x09, 0x63, 0x74, 0x6d, 0x5f, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x08, 0x63, 0x74, 0x6d,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x61,
	0x6e, 0x5f, 0x65, 0x64, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x63, 0x61,
	0x6e, 0x45, 0x64, 0x69, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x61, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x61, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25,
	0x0a, 0x0e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x73, 0x68, 0x61, 0x72, 0x65, 0x44, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0c, 0x64, 0x65, 0x62, 0x69,
	0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x01, 0x48, 0x01,
	0x52, 0x0b, 0x64, 0x65, 0x62, 0x69, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01,
	0x12, 0x24, 0x0a, 0x0b, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x05, 0x48, 0x02, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x63, 0x65, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f,
	0x62, 0x61, 0x64, 0x67, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x48, 0x03, 0x52, 0x0a, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x42, 0x61, 0x64, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x04, 0x52, 0x08, 0x70, 0x72, 0x69, 0x63, 0x65, 0x4e, 0x75, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1b,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x48, 0x05,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x72,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x05, 0x48, 0x06, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69,
	0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73,
	0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x09, 0x67, 0x6f, 0x6f,
	0x64, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x67, 0x6f, 0x6f,
	0x64, 0x73, 0x5f, 0x73, 0x70, 0x75, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52, 0x08,
	0x67, 0x6f, 0x6f, 0x64, 0x73, 0x53, 0x70, 0x75, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x07, 0x73,
	0x70, 0x65, 0x63, 0x5f, 0x6e, 0x6f, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x70,
	0x65, 0x63, 0x4e, 0x6f, 0x12, 0x22, 0x0a, 0x0a, 0x63, 0x74, 0x6d, 0x5f, 0x72, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x18, 0x18, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0a, 0x52, 0x09, 0x63, 0x74, 0x6d, 0x52,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x63, 0x74, 0x6d, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0b, 0x52,
	0x0a, 0x63, 0x74, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x28,
	0x0a, 0x0d, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18,
	0x1a, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0c, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x73, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x73, 0x70, 0x65, 0x63,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0d, 0x52, 0x08, 0x73,
	0x70, 0x65, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x72, 0x66,
	0x69, 0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0e, 0x52,
	0x08, 0x72, 0x66, 0x69, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d,
	0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x1d, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x0f, 0x52, 0x0c, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x43,
	0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f,
	0x6e, 0x6f, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x10, 0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64,
	0x73, 0x4e, 0x6f, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x63, 0x74, 0x6d, 0x5f, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x64, 0x65, 0x62, 0x69, 0x74, 0x5f, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f,
	0x62, 0x61, 0x64, 0x67, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f,
	0x6e, 0x75, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x10,
	0x0a, 0x0e, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x42, 0x0d, 0x0a,
	0x0b, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0c, 0x0a, 0x0a,
	0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x73, 0x70, 0x75, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63,
	0x74, 0x6d, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x63, 0x74,
	0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x72, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x42, 0x0c, 0x0a, 0x0a, 0x5f,
	0x73, 0x70, 0x65, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x72, 0x66,
	0x69, 0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x73, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x67, 0x6f,
	0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x6f, 0x22, 0xf8, 0x08, 0x0a, 0x23, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x68,
	0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2a,
	0x0a, 0x11, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x69, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x61,
	0x79, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x61, 0x79, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x22, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x70, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x11, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x01, 0x52, 0x0f, 0x70, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x4e, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0a, 0x70, 0x61,
	0x79, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x70,
	0x61, 0x79, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x03, 0x52, 0x0a, 0x70, 0x61, 0x79, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x88, 0x01,
	0x01, 0x12, 0x28, 0x0a, 0x0d, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x0c, 0x70, 0x61, 0x79, 0x65,
	0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x70,
	0x61, 0x79, 0x65, 0x72, 0x5f, 0x62, 0x61, 0x6e, 0x6b, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x05, 0x52, 0x09, 0x70, 0x61, 0x79, 0x65, 0x72, 0x42, 0x61, 0x6e, 0x6b, 0x88, 0x01, 0x01, 0x12,
	0x28, 0x0a, 0x0d, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x0c, 0x70, 0x61, 0x79, 0x65, 0x72, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x69, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x01, 0x48, 0x07, 0x52, 0x0d, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x5f, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52,
	0x0d, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x88, 0x01,
	0x01, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x22, 0x0a, 0x0a, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x6f,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x4e, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0a, 0x52, 0x0b,
	0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x20,
	0x0a, 0x09, 0x63, 0x74, 0x6d, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x03, 0x48, 0x0b, 0x52, 0x08, 0x63, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01,
	0x12, 0x24, 0x0a, 0x0b, 0x63, 0x74, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18,
	0x16, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0c, 0x52, 0x0a, 0x63, 0x74, 0x6d, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0d,
	0x52, 0x0d, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x88,
	0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x70, 0x61, 0x79, 0x65,
	0x72, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x70, 0x61, 0x79, 0x65,
	0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x70, 0x61, 0x79, 0x65,
	0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x61,
	0x79, 0x65, 0x72, 0x5f, 0x62, 0x61, 0x6e, 0x6b, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x70, 0x61, 0x79,
	0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x69,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x11, 0x0a,
	0x0f, 0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x6f, 0x42,
	0x0f, 0x0a, 0x0d, 0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x63, 0x74, 0x6d, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x0e,
	0x0a, 0x0c, 0x5f, 0x63, 0x74, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x42, 0x11,
	0x0a, 0x0f, 0x5f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x22, 0x8d, 0x01, 0x0a, 0x1f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x6f, 0x6f,
	0x64, 0x73, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x6f,
	0x6f, 0x64, 0x73, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0xc9, 0x07, 0x0a, 0x1a, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x6f, 0x6f,
	0x64, 0x73, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x20, 0x0a, 0x09, 0x63, 0x74,
	0x6d, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52,
	0x08, 0x63, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b,
	0x63, 0x74, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x21, 0x20, 0x01, 0x28,
	0x03, 0x48, 0x01, 0x52, 0x0a, 0x63, 0x74, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x22, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x23, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x61, 0x79, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x24, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x09, 0x70, 0x61, 0x79, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x11, 0x70, 0x61, 0x79, 0x65,
	0x72, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x18, 0x25, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x0f, 0x70, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x70, 0x61, 0x79,
	0x65, 0x72, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x26, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04,
	0x52, 0x0a, 0x70, 0x61, 0x79, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x24, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x27,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x0a, 0x70, 0x61, 0x79, 0x65, 0x72, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x0c,
	0x70, 0x61, 0x79, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x88, 0x01, 0x01, 0x12,
	0x22, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x62, 0x61, 0x6e, 0x6b, 0x18, 0x29, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x09, 0x70, 0x61, 0x79, 0x65, 0x72, 0x42, 0x61, 0x6e, 0x6b,
	0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x0c, 0x70, 0x61,
	0x79, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a,
	0x0e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x2b, 0x20, 0x01, 0x28, 0x01, 0x48, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x69, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x2c, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x0a, 0x52, 0x0d, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0a, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x2e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0b, 0x52, 0x09, 0x69, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x4e, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x69, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x2f, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x0c, 0x52, 0x0b, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x18, 0x30, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0d, 0x52, 0x0d, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0c,
	0x0a, 0x0a, 0x5f, 0x63, 0x74, 0x6d, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x0e, 0x0a, 0x0c,
	0x5f, 0x63, 0x74, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x42, 0x0d, 0x0a, 0x0b,
	0x5f, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x14, 0x0a, 0x12, 0x5f,
	0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e,
	0x6f, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x62, 0x61,
	0x6e, 0x6b, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x69, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x69,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x6f, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x69, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x22, 0xd0, 0x09,
	0x0a, 0x1b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x09, 0x63, 0x74, 0x6d, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x22, 0x20, 0x01,
	0x28, 0x03, 0x48, 0x00, 0x52, 0x08, 0x63, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x88, 0x01,
	0x01, 0x12, 0x24, 0x0a, 0x0b, 0x63, 0x74, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x18, 0x24, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x0a, 0x63, 0x74, 0x6d, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x11, 0x69, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x25, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x26, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61,
	0x79, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x27, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x5e, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65,
	0x6e, 0x18, 0x28, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47,
	0x6f, 0x6f, 0x64, 0x73, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x68, 0x69, 0x6c, 0x64,
	0x72, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x63, 0x68, 0x69,
	0x6c, 0x64, 0x72, 0x65, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x29, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x69, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x65,
	0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x61,
	0x79, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x65, 0x72,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x09, 0x70,
	0x61, 0x79, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x11, 0x70,
	0x61, 0x79, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x6f,
	0x18, 0x2c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x0f, 0x70, 0x61, 0x79, 0x65, 0x72, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b,
	0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x2d, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x04, 0x52, 0x0a, 0x70, 0x61, 0x79, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x18, 0x2e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x0a, 0x70, 0x61, 0x79, 0x65, 0x72,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x70, 0x61, 0x79, 0x65,
	0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x2f, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x06, 0x52, 0x0c, 0x70, 0x61, 0x79, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x88,
	0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x62, 0x61, 0x6e, 0x6b,
	0x18, 0x30, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x09, 0x70, 0x61, 0x79, 0x65, 0x72, 0x42,
	0x61, 0x6e, 0x6b, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x31, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52,
	0x0c, 0x70, 0x61, 0x79, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01,
	0x12, 0x2a, 0x0a, 0x0e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x32, 0x20, 0x01, 0x28, 0x01, 0x48, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e,
	0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x33,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x0a, 0x52, 0x0d, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x34, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0a, 0x69, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x35, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0b, 0x52,
	0x09, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x4e, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a,
	0x0c, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x36, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x0c, 0x52, 0x0b, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x18, 0x37, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0d, 0x52,
	0x0d, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x88, 0x01,
	0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x63, 0x74, 0x6d, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42,
	0x0e, 0x0a, 0x0c, 0x5f, 0x63, 0x74, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x42,
	0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x14,
	0x0a, 0x12, 0x5f, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x5f, 0x6e, 0x6f, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x61, 0x79, 0x65, 0x72,
	0x5f, 0x62, 0x61, 0x6e, 0x6b, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x69, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x69,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x42, 0x0d, 0x0a,
	0x0b, 0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x6f, 0x42, 0x0f, 0x0a, 0x0d,
	0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x11, 0x0a,
	0x0f, 0x5f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x22, 0x85, 0x01, 0x0a, 0x1b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x6f, 0x6f, 0x64,
	0x73, 0x50, 0x61, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x50, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x36, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74,
	0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x50, 0x61,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x8b, 0x0d, 0x0a, 0x16, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x50, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x20, 0x0a,
	0x09, 0x70, 0x72, 0x65, 0x70, 0x61, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x08, 0x70, 0x72, 0x65, 0x70, 0x61, 0x79, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12,
	0x2a, 0x0a, 0x0e, 0x70, 0x72, 0x65, 0x70, 0x61, 0x79, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0d, 0x70, 0x72, 0x65, 0x70, 0x61,
	0x79, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x74,
	0x72, 0x61, 0x64, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x02, 0x52, 0x09, 0x74, 0x72, 0x61, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x24, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x04, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x44, 0x65, 0x73,
	0x63, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x0d,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x88, 0x01, 0x01,
	0x12, 0x1a, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x06, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a, 0x06,
	0x6d, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x05,
	0x6d, 0x63, 0x68, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x70, 0x65, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x49,
	0x64, 0x12, 0x25, 0x0a, 0x0c, 0x6f, 0x75, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x6e,
	0x6f, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x54, 0x72,
	0x61, 0x64, 0x65, 0x4e, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x61, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52, 0x06, 0x61, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x05, 0x48, 0x0a, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x88, 0x01, 0x01,
	0x12, 0x24, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x05, 0x48, 0x0b, 0x52, 0x0a, 0x70, 0x61, 0x79, 0x65, 0x72, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0c, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x62, 0x61, 0x6e, 0x6b, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0d, 0x52, 0x08, 0x62, 0x61,
	0x6e, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x0e, 0x52, 0x0b, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x27, 0x0a, 0x0d, 0x6f, 0x75, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f,
	0x6e, 0x6f, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0f, 0x52, 0x0b, 0x6f, 0x75, 0x74, 0x52,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x4e, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x48, 0x10, 0x52, 0x06, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x72, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x05, 0x48, 0x11, 0x52, 0x06, 0x72, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x72, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x05, 0x48, 0x12, 0x52, 0x0b, 0x70, 0x61,
	0x79, 0x65, 0x72, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x11,
	0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x18, 0x17, 0x20, 0x01, 0x28, 0x05, 0x48, 0x13, 0x52, 0x10, 0x73, 0x65, 0x74, 0x74, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x88, 0x01, 0x01, 0x12, 0x2e,
	0x0a, 0x10, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x18, 0x20, 0x01, 0x28, 0x05, 0x48, 0x14, 0x52, 0x0f, 0x73, 0x65, 0x74, 0x74,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x2c,
	0x0a, 0x0f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x18, 0x19, 0x20, 0x01, 0x28, 0x05, 0x48, 0x15, 0x52, 0x0e, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a,
	0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x05,
	0x48, 0x16, 0x52, 0x09, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x46, 0x65, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x20, 0x0a, 0x09, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x1b, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x17, 0x52, 0x08, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x49, 0x64, 0x88,
	0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x1c, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x18, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x88, 0x01,
	0x01, 0x12, 0x37, 0x0a, 0x15, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x64, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x19, 0x52, 0x13, 0x75, 0x73, 0x65, 0x72, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x1a, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x63, 0x74, 0x6d, 0x5f, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x03, 0x48, 0x1b, 0x52, 0x08, 0x63, 0x74,
	0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x63, 0x74, 0x6d,
	0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x18, 0x20, 0x20, 0x01, 0x28, 0x03, 0x48, 0x1c, 0x52,
	0x09, 0x63, 0x74, 0x6d, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a,
	0x0b, 0x63, 0x74, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x21, 0x20, 0x01,
	0x28, 0x03, 0x48, 0x1d, 0x52, 0x0a, 0x63, 0x74, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x72, 0x65, 0x70, 0x61, 0x79, 0x5f, 0x69,
	0x64, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x70, 0x72, 0x65, 0x70, 0x61, 0x79, 0x5f, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x5f,
	0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6d, 0x63, 0x68, 0x5f, 0x69,
	0x64, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f,
	0x6e, 0x6f, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x42, 0x08, 0x0a,
	0x06, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x70, 0x61, 0x79, 0x65,
	0x72, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x5f, 0x6e, 0x6f, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x42, 0x0f, 0x0a, 0x0d, 0x5f,
	0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x42, 0x14, 0x0a, 0x12,
	0x5f, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f,
	0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x66, 0x65, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x72,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x42, 0x18, 0x0a, 0x16, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x09,
	0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x63, 0x74,
	0x6d, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x74, 0x6d, 0x5f,
	0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x63, 0x74, 0x6d, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0x88, 0x0e, 0x0a, 0x17, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x50, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61,
	0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x72,
	0x61, 0x64, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x09, 0x70, 0x72, 0x65, 0x70,
	0x61, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x70,
	0x72, 0x65, 0x70, 0x61, 0x79, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x70, 0x72,
	0x65, 0x70, 0x61, 0x79, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x01, 0x52, 0x0d, 0x70, 0x72, 0x65, 0x70, 0x61, 0x79, 0x45, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x09, 0x74, 0x72,
	0x61, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x74, 0x72,
	0x61, 0x64, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x03, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x2d, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f,
	0x64, 0x65, 0x73, 0x63, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x0e, 0x74, 0x72,
	0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x44, 0x65, 0x73, 0x63, 0x88, 0x01, 0x01, 0x12,
	0x2a, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a, 0x06, 0x61,
	0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x05, 0x61,
	0x70, 0x70, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a, 0x06, 0x6d, 0x63, 0x68, 0x5f, 0x69,
	0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x05, 0x6d, 0x63, 0x68, 0x49, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0c,
	0x6f, 0x75, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x08, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f,
	0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x09, 0x52, 0x06, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x88, 0x01, 0x01,
	0x12, 0x19, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x0a, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x70,
	0x61, 0x79, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05,
	0x48, 0x0b, 0x52, 0x0a, 0x70, 0x61, 0x79, 0x65, 0x72, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x88, 0x01,
	0x01, 0x12, 0x1f, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x0c, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x88,
	0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0d, 0x52, 0x08, 0x62, 0x61, 0x6e, 0x6b, 0x54, 0x79, 0x70,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0e, 0x52, 0x0b, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0d,
	0x6f, 0x75, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x6e, 0x6f, 0x18, 0x16, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x0f, 0x52, 0x0b, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64,
	0x4e, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18,
	0x17, 0x20, 0x01, 0x28, 0x09, 0x48, 0x10, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x88,
	0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x18, 0x18, 0x20, 0x01,
	0x28, 0x05, 0x48, 0x11, 0x52, 0x06, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x88, 0x01, 0x01, 0x12,
	0x26, 0x0a, 0x0c, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x18,
	0x19, 0x20, 0x01, 0x28, 0x05, 0x48, 0x12, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x11, 0x73, 0x65, 0x74, 0x74, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x18, 0x1a, 0x20, 0x01,
	0x28, 0x05, 0x48, 0x13, 0x52, 0x10, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x88, 0x01, 0x01, 0x12, 0x2e, 0x0a, 0x10, 0x73, 0x65, 0x74,
	0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x1b, 0x20,
	0x01, 0x28, 0x05, 0x48, 0x14, 0x52, 0x0f, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a, 0x0f, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x18, 0x1c, 0x20, 0x01,
	0x28, 0x05, 0x48, 0x15, 0x52, 0x0e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x72, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x05, 0x48, 0x16, 0x52, 0x09, 0x72,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x46, 0x65, 0x65, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x72,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x17,
	0x52, 0x08, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a,
	0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x48, 0x18,
	0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x37, 0x0a, 0x15,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x5f, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x48, 0x19, 0x52, 0x13, 0x75,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x21, 0x20, 0x01, 0x28, 0x09, 0x48, 0x1a, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88,
	0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x63, 0x74, 0x6d, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18,
	0x22, 0x20, 0x01, 0x28, 0x03, 0x48, 0x1b, 0x52, 0x08, 0x63, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x63, 0x74, 0x6d, 0x5f, 0x72, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x18, 0x23, 0x20, 0x01, 0x28, 0x03, 0x48, 0x1c, 0x52, 0x09, 0x63, 0x74, 0x6d, 0x52,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x63, 0x74, 0x6d, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x24, 0x20, 0x01, 0x28, 0x03, 0x48, 0x1d, 0x52,
	0x0a, 0x63, 0x74, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0c,
	0x0a, 0x0a, 0x5f, 0x70, 0x72, 0x65, 0x70, 0x61, 0x79, 0x5f, 0x69, 0x64, 0x42, 0x11, 0x0a, 0x0f,
	0x5f, 0x70, 0x72, 0x65, 0x70, 0x61, 0x79, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x42,
	0x0d, 0x0a, 0x0b, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x0e,
	0x0a, 0x0c, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x42, 0x13,
	0x0a, 0x11, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x64,
	0x65, 0x73, 0x63, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x69,
	0x64, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6d, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x42, 0x0f, 0x0a, 0x0d,
	0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x6e, 0x6f, 0x42, 0x09, 0x0a,
	0x07, 0x5f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x42,
	0x0c, 0x0a, 0x0a, 0x5f, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x0f, 0x0a,
	0x0d, 0x5f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x10,
	0x0a, 0x0e, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x6e, 0x6f,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x42, 0x09, 0x0a, 0x07, 0x5f,
	0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x70, 0x61, 0x79, 0x65, 0x72,
	0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x73, 0x65, 0x74, 0x74,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x42, 0x13, 0x0a,
	0x11, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x5f, 0x66, 0x65, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64,
	0x5f, 0x69, 0x64, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x42,
	0x18, 0x0a, 0x16, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x64, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x63, 0x74, 0x6d, 0x5f, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x74, 0x6d, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x63, 0x74, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x22, 0x8b, 0x01, 0x0a, 0x1e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x6f, 0x6f,
	0x64, 0x73, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x6f, 0x6f,
	0x64, 0x73, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0xac, 0x04, 0x0a, 0x19, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73,
	0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x1c, 0x0a, 0x07, 0x73, 0x70, 0x65, 0x63, 0x5f,
	0x6e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x73, 0x70, 0x65, 0x63,
	0x4e, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x74, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x63, 0x74, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x63, 0x61, 0x6e, 0x5f, 0x65, 0x64, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x63, 0x61, 0x6e, 0x45, 0x64, 0x69, 0x74, 0x12, 0x1e, 0x0a, 0x08, 0x67, 0x6f, 0x6f,
	0x64, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x07, 0x67,
	0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x67, 0x6f, 0x6f,
	0x64, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52,
	0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a,
	0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x73, 0x70, 0x75, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x03, 0x52, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x53, 0x70, 0x75, 0x88, 0x01, 0x01, 0x12,
	0x20, 0x0a, 0x09, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x04, 0x52, 0x08, 0x73, 0x70, 0x65, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x20, 0x0a, 0x09, 0x72, 0x66, 0x69, 0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x08, 0x72, 0x66, 0x69, 0x64, 0x43, 0x6f, 0x64, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x0c, 0x73, 0x65,
	0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a,
	0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x6f, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x07, 0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x4e, 0x6f, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a,
	0x08, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x6e, 0x6f, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x67, 0x6f,
	0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f,
	0x73, 0x70, 0x75, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x72, 0x66, 0x69, 0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42,
	0x10, 0x0a, 0x0e, 0x5f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x6f, 0x22, 0xd5,
	0x04, 0x0a, 0x1a, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1c, 0x0a, 0x07, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x6e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x06, 0x73, 0x70, 0x65, 0x63, 0x4e, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x10, 0x0a,
	0x03, 0x6e, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x74, 0x6d, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x74, 0x6d, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x61, 0x6e, 0x5f, 0x65, 0x64,
	0x69, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x63, 0x61, 0x6e, 0x45, 0x64, 0x69,
	0x74, 0x12, 0x1e, 0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x88, 0x01,
	0x01, 0x12, 0x22, 0x0a, 0x0a, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x4e, 0x61,
	0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x73,
	0x70, 0x75, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x08, 0x67, 0x6f, 0x6f, 0x64,
	0x73, 0x53, 0x70, 0x75, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x73, 0x70, 0x65, 0x63, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x08, 0x73, 0x70,
	0x65, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x72, 0x66, 0x69,
	0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x08,
	0x72, 0x66, 0x69, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x73,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x06, 0x52, 0x0c, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x43, 0x6f,
	0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e,
	0x6f, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73,
	0x4e, 0x6f, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x6e,
	0x6f, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x42, 0x0d,
	0x0a, 0x0b, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0c, 0x0a,
	0x0a, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x73, 0x70, 0x75, 0x42, 0x0c, 0x0a, 0x0a, 0x5f,
	0x73, 0x70, 0x65, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x72, 0x66,
	0x69, 0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x73, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x67, 0x6f,
	0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x6f, 0x22, 0x17, 0x0a, 0x15, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x4e, 0x65, 0x78, 0x74, 0x53, 0x69, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x33, 0x0a, 0x16, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x65, 0x78, 0x74, 0x53, 0x69,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x65, 0x78,
	0x74, 0x5f, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x78,
	0x74, 0x53, 0x69, 0x64, 0x22, 0x17, 0x0a, 0x15, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x87, 0x04,
	0x0a, 0x16, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x64,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x09, 0x74, 0x72, 0x61, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x45, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x52, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x58, 0x0a, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x54, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x64, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x50, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x09, 0x70, 0x61,
	0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x8b, 0x01, 0x0a, 0x1e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x07, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x3a, 0x0a, 0x19, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x72, 0x61, 0x64, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x22, 0x59, 0x0a, 0x1a, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x25, 0x0a, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xc8, 0x09, 0x0a,
	0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x73, 0x12, 0x20, 0x0a, 0x09, 0x63, 0x74, 0x6d, 0x5f, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x08, 0x63, 0x74, 0x6d, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x33, 0x0a, 0x16, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69,
	0x61, 0x6c, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x63,
	0x61, 0x6e, 0x5f, 0x65, 0x64, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x63,
	0x61, 0x6e, 0x45, 0x64, 0x69, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x61, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x61, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x25, 0x0a, 0x0e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x73, 0x68, 0x61, 0x72, 0x65, 0x44, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0c, 0x64, 0x65, 0x62,
	0x69, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x48,
	0x01, 0x52, 0x0b, 0x64, 0x65, 0x62, 0x69, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x24, 0x0a, 0x0b, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x48, 0x02, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x63, 0x65, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x5f, 0x62, 0x61, 0x64, 0x67, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x48, 0x03, 0x52, 0x0a,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x42, 0x61, 0x64, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a,
	0x09, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05,
	0x48, 0x04, 0x52, 0x08, 0x70, 0x72, 0x69, 0x63, 0x65, 0x4e, 0x75, 0x74, 0x88, 0x01, 0x01, 0x12,
	0x1b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d,
	0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x05, 0x48, 0x06, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f,
	0x69, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64,
	0x73, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x09, 0x67, 0x6f,
	0x6f, 0x64, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x67, 0x6f,
	0x6f, 0x64, 0x73, 0x5f, 0x73, 0x70, 0x75, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52,
	0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x53, 0x70, 0x75, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x07,
	0x73, 0x70, 0x65, 0x63, 0x5f, 0x6e, 0x6f, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x70, 0x65, 0x63, 0x4e, 0x6f, 0x12, 0x22, 0x0a, 0x0a, 0x63, 0x74, 0x6d, 0x5f, 0x72, 0x65, 0x66,
	0x75, 0x6e, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0a, 0x52, 0x09, 0x63, 0x74, 0x6d,
	0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x63, 0x74, 0x6d,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0b,
	0x52, 0x0a, 0x63, 0x74, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x28, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73,
	0x18, 0x18, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0c, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x73, 0x70, 0x65,
	0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0d, 0x52, 0x08,
	0x73, 0x70, 0x65, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x72,
	0x66, 0x69, 0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0e,
	0x52, 0x08, 0x72, 0x66, 0x69, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a,
	0x0d, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x1b,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x0f, 0x52, 0x0c, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73,
	0x5f, 0x6e, 0x6f, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x10, 0x52, 0x07, 0x67, 0x6f, 0x6f,
	0x64, 0x73, 0x4e, 0x6f, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x63, 0x74, 0x6d, 0x5f,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x64, 0x65, 0x62, 0x69, 0x74, 0x5f,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x5f, 0x62, 0x61, 0x64, 0x67, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x5f, 0x6e, 0x75, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42,
	0x10, 0x0a, 0x0e, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x42, 0x0d,
	0x0a, 0x0b, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0c, 0x0a,
	0x0a, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x73, 0x70, 0x75, 0x42, 0x0d, 0x0a, 0x0b, 0x5f,
	0x63, 0x74, 0x6d, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x63,
	0x74, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x72,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x42, 0x0c, 0x0a, 0x0a,
	0x5f, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x72,
	0x66, 0x69, 0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x73, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x67,
	0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x6f, 0x22, 0xfd, 0x07, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12,
	0x33, 0x0a, 0x16, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x13, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x69, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x65, 0x72,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x61, 0x79,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x70, 0x61,
	0x79, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x11, 0x70, 0x61,
	0x79, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0f, 0x70, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x70,
	0x61, 0x79, 0x65, 0x72, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x02, 0x52, 0x0a, 0x70, 0x61, 0x79, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x24, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x0a, 0x70, 0x61, 0x79, 0x65, 0x72, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x70, 0x61, 0x79, 0x65, 0x72,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04,
	0x52, 0x0c, 0x70, 0x61, 0x79, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x88, 0x01,
	0x01, 0x12, 0x22, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x62, 0x61, 0x6e, 0x6b, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x09, 0x70, 0x61, 0x79, 0x65, 0x72, 0x42, 0x61,
	0x6e, 0x6b, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x0c,
	0x70, 0x61, 0x79, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12,
	0x2a, 0x0a, 0x0e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x17, 0x20, 0x01, 0x28, 0x01, 0x48, 0x07, 0x52, 0x0d, 0x69, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x69,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x18, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x0d, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0a, 0x69, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52, 0x09,
	0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x4e, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c,
	0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x1b, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x0a, 0x52, 0x0b, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x64,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x63, 0x74, 0x6d, 0x5f, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0b, 0x52, 0x08, 0x63, 0x74, 0x6d, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x63, 0x74, 0x6d, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0c, 0x52, 0x0a, 0x63,
	0x74, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x18, 0x1e,
	0x20, 0x01, 0x28, 0x03, 0x48, 0x0d, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x61, 0x79,
	0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x70, 0x61, 0x79, 0x65,
	0x72, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x42, 0x0e, 0x0a,
	0x0c, 0x5f, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x42, 0x0e, 0x0a,
	0x0c, 0x5f, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x42, 0x10, 0x0a,
	0x0e, 0x5f, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42,
	0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x62, 0x61, 0x6e, 0x6b, 0x42, 0x10,
	0x0a, 0x0e, 0x5f, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x5f, 0x6e, 0x6f, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x63, 0x74, 0x6d, 0x5f, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x63, 0x74, 0x6d, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x22, 0xbf, 0x0d, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x50, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x33, 0x0a, 0x16, 0x5f,
	0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x50, 0x61, 0x72,
	0x74, 0x69, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x12, 0x20, 0x0a, 0x09, 0x70, 0x72, 0x65, 0x70, 0x61, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x70, 0x72, 0x65, 0x70, 0x61, 0x79, 0x49, 0x64, 0x88,
	0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x70, 0x72, 0x65, 0x70, 0x61, 0x79, 0x5f, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0d, 0x70, 0x72,
	0x65, 0x70, 0x61, 0x79, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22,
	0x0a, 0x0a, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x02, 0x52, 0x09, 0x74, 0x72, 0x61, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x64, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x64,
	0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x04, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x44, 0x65, 0x73, 0x63, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x05, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12,
	0x1a, 0x0a, 0x06, 0x6d, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x07, 0x52, 0x05, 0x6d, 0x63, 0x68, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x07, 0x6f,
	0x70, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70,
	0x65, 0x6e, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0c, 0x6f, 0x75, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x64,
	0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x0a, 0x6f, 0x75,
	0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x61,
	0x74, 0x74, 0x61, 0x63, 0x68, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52, 0x06, 0x61,
	0x74, 0x74, 0x61, 0x63, 0x68, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x48, 0x0a, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x48, 0x0b, 0x52, 0x0a, 0x70, 0x61, 0x79, 0x65,
	0x72, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0c, 0x52, 0x08, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x62, 0x61,
	0x6e, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0d, 0x52,
	0x08, 0x62, 0x61, 0x6e, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x0e, 0x52, 0x0b, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x69, 0x6d,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0d, 0x6f, 0x75, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x5f, 0x6e, 0x6f, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0f, 0x52, 0x0b, 0x6f,
	0x75, 0x74, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x4e, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a,
	0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x48, 0x10, 0x52,
	0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x72, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x05, 0x48, 0x11, 0x52, 0x06, 0x72, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x70, 0x61, 0x79, 0x65, 0x72,
	0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x18, 0x17, 0x20, 0x01, 0x28, 0x05, 0x48, 0x12, 0x52,
	0x0b, 0x70, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x88, 0x01, 0x01, 0x12,
	0x30, 0x0a, 0x11, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x18, 0x18, 0x20, 0x01, 0x28, 0x05, 0x48, 0x13, 0x52, 0x10, 0x73, 0x65,
	0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x88, 0x01,
	0x01, 0x12, 0x2e, 0x0a, 0x10, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x19, 0x20, 0x01, 0x28, 0x05, 0x48, 0x14, 0x52, 0x0f, 0x73,
	0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x88, 0x01,
	0x01, 0x12, 0x2c, 0x0a, 0x0f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x72, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x05, 0x48, 0x15, 0x52, 0x0e, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x88, 0x01, 0x01, 0x12,
	0x22, 0x0a, 0x0a, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x1b, 0x20,
	0x01, 0x28, 0x05, 0x48, 0x16, 0x52, 0x09, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x46, 0x65, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x69, 0x64,
	0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x17, 0x52, 0x08, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64,
	0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x18, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x88, 0x01, 0x01, 0x12, 0x37, 0x0a, 0x15, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x64, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x1e, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x19, 0x52, 0x13, 0x75, 0x73, 0x65, 0x72, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x48, 0x1a, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x63, 0x74,
	0x6d, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x20, 0x20, 0x01, 0x28, 0x03, 0x48, 0x1b, 0x52,
	0x08, 0x63, 0x74, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a,
	0x63, 0x74, 0x6d, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x18, 0x21, 0x20, 0x01, 0x28, 0x03,
	0x48, 0x1c, 0x52, 0x09, 0x63, 0x74, 0x6d, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x88, 0x01, 0x01,
	0x12, 0x24, 0x0a, 0x0b, 0x63, 0x74, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18,
	0x22, 0x20, 0x01, 0x28, 0x03, 0x48, 0x1d, 0x52, 0x0a, 0x63, 0x74, 0x6d, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x72, 0x65, 0x70, 0x61,
	0x79, 0x5f, 0x69, 0x64, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x70, 0x72, 0x65, 0x70, 0x61, 0x79, 0x5f,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x74, 0x72, 0x61, 0x64,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x42, 0x11, 0x0a, 0x0f, 0x5f,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x42, 0x09,
	0x0a, 0x07, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6d, 0x63,
	0x68, 0x5f, 0x69, 0x64, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x74, 0x72, 0x61,
	0x64, 0x65, 0x5f, 0x6e, 0x6f, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x42, 0x08, 0x0a, 0x06, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x70,
	0x61, 0x79, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x62, 0x61, 0x6e, 0x6b,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x72,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x6e, 0x6f, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x42, 0x0f,
	0x0a, 0x0d, 0x5f, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x42,
	0x14, 0x0a, 0x12, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x42, 0x0d,
	0x0a, 0x0b, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x66, 0x65, 0x65, 0x42, 0x0c, 0x0a,
	0x0a, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x42, 0x0a, 0x0a, 0x08, 0x5f,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x42, 0x18, 0x0a, 0x16, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x0c, 0x0a, 0x0a,
	0x5f, 0x63, 0x74, 0x6d, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63,
	0x74, 0x6d, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x63, 0x74,
	0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0xe0, 0x04, 0x0a, 0x18, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73,
	0x12, 0x33, 0x0a, 0x16, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x13, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x1c, 0x0a, 0x07, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x6e, 0x6f,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x73, 0x70, 0x65, 0x63, 0x4e, 0x6f,
	0x88, 0x01, 0x01, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63,
	0x74, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x63, 0x74, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x63, 0x61, 0x6e, 0x5f, 0x65, 0x64, 0x69, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x63, 0x61, 0x6e, 0x45, 0x64, 0x69, 0x74, 0x12, 0x1e, 0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73,
	0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x07, 0x67, 0x6f, 0x6f,
	0x64, 0x73, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x67, 0x6f, 0x6f, 0x64, 0x73,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x09, 0x67,
	0x6f, 0x6f, 0x64, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x67,
	0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x73, 0x70, 0x75, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03,
	0x52, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x53, 0x70, 0x75, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a,
	0x09, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x04, 0x52, 0x08, 0x73, 0x70, 0x65, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x20, 0x0a, 0x09, 0x72, 0x66, 0x69, 0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x05, 0x52, 0x08, 0x72, 0x66, 0x69, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x28, 0x0a, 0x0d, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x0c, 0x73, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x67,
	0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x6f, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52,
	0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x4e, 0x6f, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f,
	0x73, 0x70, 0x65, 0x63, 0x5f, 0x6e, 0x6f, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x67, 0x6f, 0x6f, 0x64,
	0x73, 0x5f, 0x69, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x73, 0x70,
	0x75, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42,
	0x0c, 0x0a, 0x0a, 0x5f, 0x72, 0x66, 0x69, 0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x10, 0x0a,
	0x0e, 0x5f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42,
	0x0b, 0x0a, 0x09, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x6f, 0x22, 0xbc, 0x08, 0x0a,
	0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x33, 0x0a, 0x16, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69,
	0x61, 0x6c, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x20, 0x0a, 0x09, 0x67,
	0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x73, 0x70, 0x75, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x53, 0x70, 0x75, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a,
	0x07, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x6e, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01,
	0x52, 0x06, 0x73, 0x70, 0x65, 0x63, 0x4e, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x72,
	0x66, 0x69, 0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02,
	0x52, 0x08, 0x72, 0x66, 0x69, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a,
	0x0d, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x0c, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x04, 0x52, 0x0d, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x6f, 0x6d, 0x73, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x08, 0x6f, 0x6d, 0x73, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a, 0x0f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06,
	0x52, 0x0e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x6f, 0x6d, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x09, 0x6f, 0x6d, 0x73, 0x52, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x6c,
	0x61, 0x69, 0x6e, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08,
	0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x88, 0x01,
	0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x48, 0x09, 0x52, 0x0d, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a,
	0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x0a, 0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a,
	0x0a, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x0b, 0x52, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x22, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0c, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x73, 0x43, 0x6f,
	0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x73, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0d, 0x52, 0x09, 0x70, 0x61, 0x72,
	0x74, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x6d, 0x65, 0x64,
	0x69, 0x61, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0e, 0x52,
	0x09, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x74, 0x68, 0x88, 0x01, 0x01, 0x12, 0x2e, 0x0a,
	0x10, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0f, 0x52, 0x0f, 0x63, 0x6f, 0x6d, 0x70, 0x6c,
	0x61, 0x69, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a,
	0x09, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x10, 0x52, 0x08, 0x73, 0x70, 0x65, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x1e, 0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x6f, 0x18, 0x16, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x11, 0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x4e, 0x6f, 0x88, 0x01, 0x01, 0x42,
	0x0c, 0x0a, 0x0a, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x73, 0x70, 0x75, 0x42, 0x0a, 0x0a,
	0x08, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x6e, 0x6f, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x72, 0x66,
	0x69, 0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x73, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x0c, 0x0a, 0x0a,
	0x5f, 0x6f, 0x6d, 0x73, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x42, 0x0d,
	0x0a, 0x0b, 0x5f, 0x6f, 0x6d, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x42, 0x10, 0x0a,
	0x0e, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x42,
	0x11, 0x0a, 0x0f, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x42,
	0x0d, 0x0a, 0x0b, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0d,
	0x0a, 0x0b, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x0d, 0x0a,
	0x0b, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0d, 0x0a, 0x0b,
	0x5f, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x42, 0x13, 0x0a, 0x11, 0x5f,
	0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73,
	0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0b,
	0x0a, 0x09, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x6f, 0x22, 0xd8, 0x06, 0x0a, 0x1b,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x46, 0x65, 0x65, 0x64,
	0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x33, 0x0a, 0x16, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61,
	0x6c, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x20, 0x0a, 0x09, 0x67, 0x6f,
	0x6f, 0x64, 0x73, 0x5f, 0x73, 0x70, 0x75, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x53, 0x70, 0x75, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x07,
	0x73, 0x70, 0x65, 0x63, 0x5f, 0x6e, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52,
	0x06, 0x73, 0x70, 0x65, 0x63, 0x4e, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x72, 0x66,
	0x69, 0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52,
	0x08, 0x72, 0x66, 0x69, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d,
	0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x0c, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x43,
	0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61,
	0x63, 0x6b, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52,
	0x0c, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x44, 0x65, 0x73, 0x63, 0x88, 0x01, 0x01,
	0x12, 0x2a, 0x0a, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x48, 0x05, 0x52, 0x0d, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08,
	0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06,
	0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a,
	0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x07, 0x52, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x22, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x73, 0x43, 0x6f, 0x64,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x73, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74,
	0x73, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x6d, 0x65, 0x64, 0x69,
	0x61, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0a, 0x52, 0x09,
	0x6d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x74, 0x68, 0x88, 0x01, 0x01, 0x12, 0x2e, 0x0a, 0x10,
	0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0b, 0x52, 0x0f, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61,
	0x63, 0x6b, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09,
	0x73, 0x70, 0x65, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x0c, 0x52, 0x08, 0x73, 0x70, 0x65, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1e,
	0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x6f, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x0d, 0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x4e, 0x6f, 0x88, 0x01, 0x01, 0x42, 0x0c,
	0x0a, 0x0a, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x73, 0x70, 0x75, 0x42, 0x0a, 0x0a, 0x08,
	0x5f, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x6e, 0x6f, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x72, 0x66, 0x69,
	0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x73, 0x65, 0x63, 0x75, 0x72,
	0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x66, 0x65, 0x65,
	0x64, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x0b, 0x0a,
	0x09, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x67,
	0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x61,
	0x72, 0x74, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x61, 0x72,
	0x74, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6d, 0x65, 0x64, 0x69,
	0x61, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x66, 0x65, 0x65, 0x64, 0x62,
	0x61, 0x63, 0x6b, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x42, 0x0c, 0x0a, 0x0a, 0x5f,
	0x73, 0x70, 0x65, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x67, 0x6f,
	0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x6f, 0x22, 0xc2, 0x09, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x70, 0x61, 0x69, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x33,
	0x0a, 0x16, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x13,
	0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x73, 0x12, 0x20, 0x0a, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x73, 0x70, 0x75,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x53,
	0x70, 0x75, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x07, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x6e, 0x6f,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x06, 0x73, 0x70, 0x65, 0x63, 0x4e, 0x6f,
	0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x72, 0x66, 0x69, 0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x08, 0x72, 0x66, 0x69, 0x64, 0x43, 0x6f,
	0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x0c,
	0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x2f, 0x0a, 0x11, 0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x73, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x0f, 0x72, 0x65,
	0x70, 0x61, 0x69, 0x72, 0x50, 0x61, 0x72, 0x74, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x2f, 0x0a, 0x11, 0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x73,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x0f, 0x72,
	0x65, 0x70, 0x61, 0x69, 0x72, 0x50, 0x61, 0x72, 0x74, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x24, 0x0a, 0x0b, 0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x5f, 0x64, 0x65, 0x73, 0x63,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x61, 0x69, 0x72,
	0x44, 0x65, 0x73, 0x63, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x6d, 0x65, 0x64, 0x69, 0x61,
	0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x09, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x74, 0x68, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x03, 0x48, 0x08, 0x52, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73,
	0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52, 0x07, 0x67, 0x6f, 0x6f,
	0x64, 0x73, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x67, 0x6f, 0x6f, 0x64, 0x73,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0a, 0x52, 0x09, 0x67,
	0x6f, 0x6f, 0x64, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x72,
	0x65, 0x70, 0x61, 0x69, 0x72, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x0b, 0x52, 0x0d, 0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x52, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x73, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x73, 0x70, 0x65, 0x63, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0c, 0x52, 0x08, 0x73, 0x70,
	0x65, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x0d, 0x52, 0x0d, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x6f, 0x6d, 0x73, 0x5f, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0e, 0x52, 0x08, 0x6f, 0x6d, 0x73, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x6f, 0x75, 0x74, 0x5f, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x01, 0x48, 0x0f, 0x52, 0x08, 0x6f, 0x75,
	0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x72, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x01, 0x48,
	0x10, 0x52, 0x0b, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x1e, 0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x6f, 0x18, 0x16, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x11, 0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x4e, 0x6f, 0x88, 0x01,
	0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x5f, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x64, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x48, 0x12, 0x52, 0x0d, 0x72, 0x65, 0x70,
	0x61, 0x69, 0x72, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a,
	0x0c, 0x73, 0x77, 0x61, 0x70, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x18, 0x18, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x13, 0x52, 0x0b, 0x73, 0x77, 0x61, 0x70, 0x45, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f,
	0x73, 0x70, 0x75, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x6e, 0x6f, 0x42,
	0x0c, 0x0a, 0x0a, 0x5f, 0x72, 0x66, 0x69, 0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x10, 0x0a,
	0x0e, 0x5f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42,
	0x14, 0x0a, 0x12, 0x5f, 0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x73,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x72, 0x65, 0x70, 0x61, 0x69, 0x72,
	0x5f, 0x70, 0x61, 0x72, 0x74, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f,
	0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x42, 0x0d, 0x0a, 0x0b, 0x5f,
	0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x0b, 0x0a,
	0x09, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x67,
	0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x72, 0x65,
	0x70, 0x61, 0x69, 0x72, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x42, 0x0c, 0x0a, 0x0a,
	0x5f, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x0c, 0x0a,
	0x0a, 0x5f, 0x6f, 0x6d, 0x73, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x0c, 0x0a, 0x0a, 0x5f,
	0x6f, 0x75, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x72, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x67,
	0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x6f, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x72, 0x65, 0x70, 0x61,
	0x69, 0x72, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x73,
	0x77, 0x61, 0x70, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x22, 0xc0, 0x09, 0x0a, 0x17,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x77, 0x61, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x73, 0x12, 0x33, 0x0a, 0x16, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x13, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x20, 0x0a, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f,
	0x73, 0x70, 0x75, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x67, 0x6f, 0x6f,
	0x64, 0x73, 0x53, 0x70, 0x75, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x07, 0x73, 0x70, 0x65, 0x63,
	0x5f, 0x6e, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x06, 0x73, 0x70, 0x65,
	0x63, 0x4e, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x72, 0x66, 0x69, 0x64, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x08, 0x72, 0x66, 0x69,
	0x64, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x73, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x03, 0x52, 0x0c, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x2f, 0x0a, 0x11, 0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x5f, 0x70, 0x61, 0x72,
	0x74, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52,
	0x0f, 0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x50, 0x61, 0x72, 0x74, 0x73, 0x43, 0x6f, 0x64, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x11, 0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x5f, 0x70, 0x61,
	0x72, 0x74, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05,
	0x52, 0x0f, 0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x50, 0x61, 0x72, 0x74, 0x73, 0x4e, 0x61, 0x6d,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x5f, 0x64,
	0x65, 0x73, 0x63, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x0a, 0x72, 0x65, 0x70,
	0x61, 0x69, 0x72, 0x44, 0x65, 0x73, 0x63, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07,
	0x52, 0x09, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x74, 0x68, 0x88, 0x01, 0x01, 0x12, 0x2a,
	0x0a, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x48, 0x08, 0x52, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x67, 0x6f,
	0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52, 0x07,
	0x67, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x67, 0x6f,
	0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0a,
	0x52, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2a,
	0x0a, 0x0e, 0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0b, 0x52, 0x0d, 0x72, 0x65, 0x70, 0x61, 0x69, 0x72,
	0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x73, 0x70,
	0x65, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0c, 0x52,
	0x08, 0x73, 0x70, 0x65, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x0d, 0x52, 0x0d, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x6f, 0x6d, 0x73, 0x5f,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0e, 0x52, 0x08, 0x6f,
	0x6d, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x6f, 0x75,
	0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x01, 0x48, 0x0f, 0x52,
	0x08, 0x6f, 0x75, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c,
	0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x01, 0x48, 0x10, 0x52, 0x0b, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x6f,
	0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x48, 0x11, 0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x4e,
	0x6f, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x5f, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x48, 0x12, 0x52, 0x0d,
	0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x88, 0x01, 0x01,
	0x12, 0x26, 0x0a, 0x0c, 0x73, 0x77, 0x61, 0x70, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64,
	0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x48, 0x13, 0x52, 0x0b, 0x73, 0x77, 0x61, 0x70, 0x45, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x67, 0x6f, 0x6f,
	0x64, 0x73, 0x5f, 0x73, 0x70, 0x75, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x5f,
	0x6e, 0x6f, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x72, 0x66, 0x69, 0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x5f, 0x70, 0x61,
	0x72, 0x74, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x72, 0x65, 0x70,
	0x61, 0x69, 0x72, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0e,
	0x0a, 0x0c, 0x5f, 0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x42, 0x0d,
	0x0a, 0x0b, 0x5f, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x42, 0x11, 0x0a,
	0x0f, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x42, 0x0d, 0x0a,
	0x0b, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x11, 0x0a, 0x0f,
	0x5f, 0x72, 0x65, 0x70, 0x61, 0x69, 0x72, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x42,
	0x0c, 0x0a, 0x0a, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x11, 0x0a,
	0x0f, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6f, 0x6d, 0x73, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x0c,
	0x0a, 0x0a, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x42, 0x0f, 0x0a, 0x0d,
	0x5f, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x42, 0x0b, 0x0a,
	0x09, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x6f, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x72,
	0x65, 0x70, 0x61, 0x69, 0x72, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x42, 0x0f, 0x0a,
	0x0d, 0x5f, 0x73, 0x77, 0x61, 0x70, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x22, 0xa6,
	0x09, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54,
	0x61, 0x69, 0x6c, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x33, 0x0a, 0x16, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69,
	0x61, 0x6c, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x20, 0x0a, 0x09, 0x67,
	0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x73, 0x70, 0x75, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x53, 0x70, 0x75, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a,
	0x07, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x6e, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01,
	0x52, 0x06, 0x73, 0x70, 0x65, 0x63, 0x4e, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x72,
	0x66, 0x69, 0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02,
	0x52, 0x08, 0x72, 0x66, 0x69, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a,
	0x0d, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x0c, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x04, 0x52, 0x0d, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x6f, 0x6d, 0x73, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x08, 0x6f, 0x6d, 0x73, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x07, 0x70, 0x61, 0x72, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x06, 0x70, 0x61, 0x72, 0x74, 0x49, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x08, 0x70, 0x61, 0x72, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x88,
	0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x74,
	0x65, 0x78, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x0a, 0x52, 0x09, 0x74, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x12,
	0x20, 0x0a, 0x09, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x66, 0x6f, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x0b, 0x52, 0x08, 0x74, 0x65, 0x78, 0x74, 0x46, 0x6f, 0x6e, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x1e, 0x0a, 0x08, 0x74, 0x69, 0x66, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x0c, 0x52, 0x07, 0x74, 0x69, 0x66, 0x50, 0x61, 0x74, 0x68, 0x88, 0x01,
	0x01, 0x12, 0x1e, 0x0a, 0x08, 0x69, 0x6d, 0x67, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x0d, 0x52, 0x07, 0x69, 0x6d, 0x67, 0x50, 0x61, 0x74, 0x68, 0x88, 0x01,
	0x01, 0x12, 0x21, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x08, 0x48, 0x0e, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0f, 0x52, 0x0d,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x88, 0x01, 0x01,
	0x12, 0x1e, 0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x10, 0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x88, 0x01, 0x01,
	0x12, 0x22, 0x0a, 0x0a, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x11, 0x52, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x4e, 0x61, 0x6d,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x48, 0x12, 0x52, 0x08, 0x73, 0x70, 0x65, 0x63, 0x4e,
	0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x6f, 0x75, 0x74, 0x5f, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x01, 0x48, 0x13, 0x52, 0x08, 0x6f, 0x75, 0x74,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x72, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x01, 0x48, 0x14,
	0x52, 0x0b, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x1e, 0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x6f, 0x18, 0x19, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x15, 0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x4e, 0x6f, 0x88, 0x01, 0x01,
	0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x73, 0x70, 0x75, 0x42, 0x0a,
	0x0a, 0x08, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x6e, 0x6f, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x72,
	0x66, 0x69, 0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x73, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x0c, 0x0a,
	0x0a, 0x5f, 0x6f, 0x6d, 0x73, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x0a, 0x0a, 0x08, 0x5f,
	0x70, 0x61, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x61, 0x72, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x42, 0x07, 0x0a, 0x05, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x74, 0x65,
	0x78, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x74, 0x65, 0x78,
	0x74, 0x5f, 0x66, 0x6f, 0x6e, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x74, 0x69, 0x66, 0x5f, 0x70,
	0x61, 0x74, 0x68, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x69, 0x6d, 0x67, 0x5f, 0x70, 0x61, 0x74, 0x68,
	0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x11,
	0x0a, 0x0f, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x42, 0x0d,
	0x0a, 0x0b, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0c, 0x0a,
	0x0a, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f,
	0x6f, 0x75, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x72, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x67,
	0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6e, 0x6f, 0x22, 0xd1, 0x06, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x49, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73,
	0x12, 0x33, 0x0a, 0x16, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x13, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x06, 0x63, 0x74, 0x6d, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x05, 0x63, 0x74, 0x6d, 0x49, 0x64, 0x88, 0x01,
	0x01, 0x12, 0x22, 0x0a, 0x0a, 0x63, 0x74, 0x6d, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x09, 0x63, 0x74, 0x6d, 0x4f, 0x70, 0x65, 0x6e,
	0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x63, 0x74, 0x6d, 0x5f, 0x6e, 0x69, 0x63,
	0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0b, 0x63,
	0x74, 0x6d, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a,
	0x0a, 0x63, 0x74, 0x6d, 0x5f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x03, 0x52, 0x09, 0x63, 0x74, 0x6d, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x23, 0x0a, 0x0b, 0x63, 0x74, 0x6d, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x6e, 0x6f,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x09, 0x63, 0x74, 0x6d, 0x43, 0x61, 0x72,
	0x64, 0x4e, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x63, 0x74, 0x6d, 0x5f, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x48, 0x05, 0x52, 0x08, 0x63, 0x74, 0x6d,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x64,
	0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x06, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x64, 0x65, 0x49, 0x6e, 0x42, 0x72, 0x61, 0x6e, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x5f,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x0c, 0x74,
	0x72, 0x61, 0x64, 0x65, 0x49, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x27,
	0x0a, 0x0d, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x64, 0x65, 0x49, 0x6e,
	0x44, 0x65, 0x73, 0x63, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x64, 0x65,
	0x5f, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x01, 0x48,
	0x09, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x64, 0x65, 0x49, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0a, 0x52, 0x0d, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x88, 0x01, 0x01, 0x12, 0x22,
	0x0a, 0x0a, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x0b, 0x52, 0x09, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x61, 0x74, 0x68, 0x88,
	0x01, 0x01, 0x12, 0x2d, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0c, 0x52, 0x0e,
	0x74, 0x72, 0x61, 0x64, 0x65, 0x49, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x88, 0x01,
	0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x63, 0x74, 0x6d, 0x5f, 0x69, 0x64, 0x42, 0x0d, 0x0a, 0x0b,
	0x5f, 0x63, 0x74, 0x6d, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x42, 0x0f, 0x0a, 0x0d, 0x5f,
	0x63, 0x74, 0x6d, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0d, 0x0a, 0x0b,
	0x5f, 0x63, 0x74, 0x6d, 0x5f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f,
	0x63, 0x74, 0x6d, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x6e, 0x6f, 0x42, 0x0c, 0x0a, 0x0a, 0x5f,
	0x63, 0x74, 0x6d, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x74, 0x72,
	0x61, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x42, 0x11, 0x0a, 0x0f,
	0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x42,
	0x10, 0x0a, 0x0e, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x64, 0x65, 0x73,
	0x63, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6d, 0x65, 0x64, 0x69,
	0x61, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65,
	0x5f, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x32, 0x91, 0x3f, 0x0a, 0x17,
	0x43, 0x74, 0x6d, 0x49, 0x74, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x9c, 0x01, 0x0a, 0x16, 0x42, 0x75, 0x6c, 0x6b,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x12, 0x40, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69,
	0x74, 0x6f, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x6f, 0x6f,
	0x64, 0x73, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x3e, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x6f, 0x6f, 0x64,
	0x73, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x99, 0x01, 0x0a, 0x15, 0x42, 0x75, 0x6c, 0x6b, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x12, 0x3f, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f,
	0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73,
	0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x3d, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74,
	0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x6f, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x30, 0x2e, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43,
	0x74, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x8c, 0x01, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x6f,
	0x6f, 0x64, 0x73, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x12, 0x38, 0x2e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x6f, 0x6f, 0x64,
	0x73, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x8c, 0x01, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x6f, 0x6f,
	0x64, 0x73, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x38, 0x2e, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x69, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73,
	0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x80, 0x01, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x6f, 0x6f, 0x64,
	0x73, 0x50, 0x61, 0x79, 0x12, 0x34, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73,
	0x50, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x50, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x89, 0x01, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47,
	0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x37, 0x2e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x69, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73,
	0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x8b, 0x01, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x12, 0x3a, 0x2e, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x8b,
	0x01, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x46,
	0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x3a, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x69, 0x74, 0x6f, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61,
	0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x85, 0x01, 0x0a,
	0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x70,
	0x61, 0x69, 0x72, 0x12, 0x38, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x69, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x70, 0x61, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x70, 0x61, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x7f, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x53, 0x77, 0x61, 0x70, 0x12, 0x36, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x77, 0x61, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x31, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f,
	0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x77, 0x61, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x85, 0x01, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x61, 0x69, 0x6c, 0x6f, 0x72, 0x12, 0x38, 0x2e, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x61, 0x69, 0x6c, 0x6f, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x61, 0x69,
	0x6c, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x88, 0x01,
	0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x72,
	0x61, 0x64, 0x65, 0x49, 0x6e, 0x12, 0x39, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x49, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x34, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f,
	0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x49, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x07, 0x44, 0x65, 0x73, 0x74,
	0x72, 0x6f, 0x79, 0x12, 0x37, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65,
	0x73, 0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x6a, 0x0a, 0x13, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f,
	0x79, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x12, 0x39, 0x2e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x44, 0x65,
	0x73, 0x74, 0x72, 0x6f, 0x79, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x00, 0x12, 0x6a, 0x0a, 0x13, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x47, 0x6f, 0x6f,
	0x64, 0x73, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x39, 0x2e, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f,
	0x79, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x62,
	0x0a, 0x0f, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x50, 0x61,
	0x79, 0x12, 0x35, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74,
	0x6f, 0x2e, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x50, 0x61,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x00, 0x12, 0x68, 0x0a, 0x12, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x47, 0x6f, 0x6f,
	0x64, 0x73, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x38, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79,
	0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x6e, 0x0a, 0x15,
	0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x61, 0x69, 0x6e, 0x12, 0x3b, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x6e, 0x0a, 0x15,
	0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x46, 0x65, 0x65,
	0x64, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x3b, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x6a, 0x0a, 0x13,
	0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x70,
	0x61, 0x69, 0x72, 0x12, 0x39, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x69, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x70, 0x61, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x66, 0x0a, 0x11, 0x44, 0x65, 0x73, 0x74,
	0x72, 0x6f, 0x79, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x77, 0x61, 0x70, 0x12, 0x37, 0x2e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x44, 0x65,
	0x73, 0x74, 0x72, 0x6f, 0x79, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x77, 0x61, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00,
	0x12, 0x6a, 0x0a, 0x13, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x54, 0x61, 0x69, 0x6c, 0x6f, 0x72, 0x12, 0x39, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x61, 0x69, 0x6c, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x6c, 0x0a, 0x14,
	0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x72, 0x61,
	0x64, 0x65, 0x49, 0x6e, 0x12, 0x3a, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x49, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x75, 0x0a, 0x04, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x34, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69,
	0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x8c, 0x01, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x44,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x12, 0x36, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x73,
	0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3e,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x8c, 0x01, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x36, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3e, 0x2e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x80, 0x01, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x50, 0x61, 0x79,
	0x12, 0x32, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x50, 0x61, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x6f, 0x6f, 0x64,
	0x73, 0x50, 0x61, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x89, 0x01, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x73,
	0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x35, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x73,
	0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x8b,
	0x01, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x61, 0x69, 0x6e, 0x12, 0x38, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x39, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x8b, 0x01, 0x0a,
	0x12, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x46, 0x65, 0x65, 0x64, 0x62,
	0x61, 0x63, 0x6b, 0x12, 0x38, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x69, 0x74, 0x6f, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x46, 0x65,
	0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x85, 0x01, 0x0a, 0x10, 0x4c,
	0x69, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x70, 0x61, 0x69, 0x72, 0x12,
	0x36, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x70, 0x61, 0x69, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x70, 0x61, 0x69, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x7f, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x53, 0x77, 0x61, 0x70, 0x12, 0x34, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53,
	0x77, 0x61, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x53, 0x77, 0x61, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x85, 0x01, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x54, 0x61, 0x69, 0x6c, 0x6f, 0x72, 0x12, 0x36, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x54, 0x61, 0x69, 0x6c, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x37, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f,
	0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x61, 0x69, 0x6c, 0x6f, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x88, 0x01, 0x0a, 0x11,
	0x4c, 0x69, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x49,
	0x6e, 0x12, 0x37, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74,
	0x6f, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x72, 0x61, 0x64,
	0x65, 0x49, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x49, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x83, 0x01, 0x0a, 0x0d, 0x50, 0x61, 0x72, 0x74, 0x69,
	0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x3d, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x79, 0x0a, 0x08,
	0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x12, 0x38, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x31, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69,
	0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x90, 0x01, 0x0a, 0x14, 0x52, 0x65, 0x74, 0x72,
	0x69, 0x65, 0x76, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x12, 0x3a, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f,
	0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x90, 0x01, 0x0a, 0x14, 0x52,
	0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x12, 0x3a, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x69, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x47, 0x6f, 0x6f, 0x64,
	0x73, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x3a, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x84, 0x01,
	0x0a, 0x10, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x50,
	0x61, 0x79, 0x12, 0x36, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69,
	0x74, 0x6f, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73,
	0x50, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x50, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x8d, 0x01, 0x0a, 0x13, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76,
	0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x39, 0x2e, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x74,
	0x72, 0x69, 0x65, 0x76, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47,
	0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x8f, 0x01, 0x0a, 0x16, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76,
	0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x12,
	0x3c, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e,
	0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f,
	0x6d, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x8f, 0x01, 0x0a, 0x16, 0x52, 0x65, 0x74, 0x72, 0x69,
	0x65, 0x76, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63,
	0x6b, 0x12, 0x3c, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74,
	0x6f, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x35, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x89, 0x01, 0x0a, 0x14, 0x52, 0x65, 0x74,
	0x72, 0x69, 0x65, 0x76, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x70, 0x61, 0x69,
	0x72, 0x12, 0x3a, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74,
	0x6f, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x70, 0x61, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x70, 0x61, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x83, 0x01, 0x0a, 0x12, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76,
	0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x77, 0x61, 0x70, 0x12, 0x38, 0x2e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x74, 0x72,
	0x69, 0x65, 0x76, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x77, 0x61, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x77, 0x61, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x89, 0x01, 0x0a, 0x14, 0x52,
	0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x61, 0x69,
	0x6c, 0x6f, 0x72, 0x12, 0x3a, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x69, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x54, 0x61, 0x69, 0x6c, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x33, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x61, 0x69, 0x6c, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x8c, 0x01, 0x0a, 0x15, 0x52, 0x65, 0x74, 0x72, 0x69,
	0x65, 0x76, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x49, 0x6e,
	0x12, 0x3b, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f,
	0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54,
	0x72, 0x61, 0x64, 0x65, 0x49, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x49, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7f, 0x0a, 0x0e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x4e, 0x65, 0x78, 0x74, 0x53, 0x69, 0x64, 0x12, 0x34, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e,
	0x65, 0x78, 0x74, 0x53, 0x69, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x65, 0x78, 0x74, 0x53, 0x69, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7f, 0x0a, 0x0e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x34, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x8f, 0x01, 0x0a, 0x12, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x38,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6f, 0x0a, 0x06, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x30, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x43, 0x74, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x8c, 0x01, 0x0a, 0x12, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x12, 0x38, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74,
	0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x8c, 0x01, 0x0a, 0x12, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x12, 0x38, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x80, 0x01, 0x0a, 0x0e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x50, 0x61, 0x79, 0x12, 0x34, 0x2e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x50, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x36, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74,
	0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x50, 0x61,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x89, 0x01, 0x0a, 0x11,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x12, 0x37, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74,
	0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x8b, 0x01, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x69, 0x6e,
	0x12, 0x3a, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x8b, 0x01, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x3a,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x46, 0x65, 0x65, 0x64, 0x62,
	0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x85, 0x01, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x70, 0x61, 0x69, 0x72, 0x12, 0x38, 0x2e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x70, 0x61, 0x69, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x70, 0x61, 0x69,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7f, 0x0a, 0x10, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x77, 0x61, 0x70, 0x12,
	0x36, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x77, 0x61, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x77,
	0x61, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x85, 0x01, 0x0a,
	0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x61, 0x69,
	0x6c, 0x6f, 0x72, 0x12, 0x38, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x69, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x54, 0x61, 0x69, 0x6c, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x54, 0x61, 0x69, 0x6c, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x88, 0x01, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x49, 0x6e, 0x12, 0x39, 0x2e, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x49, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x72,
	0x61, 0x64, 0x65, 0x49, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42,
	0x11, 0x5a, 0x0f, 0x2e, 0x2e, 0x2f, 0x70, 0x62, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_service_ito_proto_rawDescOnce sync.Once
	file_service_ito_proto_rawDescData = file_service_ito_proto_rawDesc
)

func file_service_ito_proto_rawDescGZIP() []byte {
	file_service_ito_proto_rawDescOnce.Do(func() {
		file_service_ito_proto_rawDescData = protoimpl.X.CompressGZIP(file_service_ito_proto_rawDescData)
	})
	return file_service_ito_proto_rawDescData
}

var file_service_ito_proto_msgTypes = make([]protoimpl.MessageInfo, 100)
var file_service_ito_proto_goTypes = []interface{}{
	(*BulkCreateGoodsDeliverListRequest)(nil),   // 0: customer_service.customer_ito.BulkCreateGoodsDeliverListRequest
	(*BulkCreateGoodsDeliverRequest)(nil),       // 1: customer_service.customer_ito.BulkCreateGoodsDeliverRequest
	(*BulkCreateGoodsReturnListRequest)(nil),    // 2: customer_service.customer_ito.BulkCreateGoodsReturnListRequest
	(*BulkCreateGoodsReturnRequest)(nil),        // 3: customer_service.customer_ito.BulkCreateGoodsReturnRequest
	(*CreateGoodsDeliverRequest)(nil),           // 4: customer_service.customer_ito.CreateGoodsDeliverRequest
	(*CreateGoodsInvoiceRequest)(nil),           // 5: customer_service.customer_ito.CreateGoodsInvoiceRequest
	(*CreateGoodsPayRequest)(nil),               // 6: customer_service.customer_ito.CreateGoodsPayRequest
	(*CreateGoodsReturnRequest)(nil),            // 7: customer_service.customer_ito.CreateGoodsReturnRequest
	(*CreateObjectComplainRequest)(nil),         // 8: customer_service.customer_ito.CreateObjectComplainRequest
	(*CreateObjectFeedbackRequest)(nil),         // 9: customer_service.customer_ito.CreateObjectFeedbackRequest
	(*CreateObjectRepairRequest)(nil),           // 10: customer_service.customer_ito.CreateObjectRepairRequest
	(*CreateObjectSwapRequest)(nil),             // 11: customer_service.customer_ito.CreateObjectSwapRequest
	(*CreateObjectTailorRequest)(nil),           // 12: customer_service.customer_ito.CreateObjectTailorRequest
	(*CreateObjectTradeInRequest)(nil),          // 13: customer_service.customer_ito.CreateObjectTradeInRequest
	(*CtmServiceDestroyRequest)(nil),            // 14: customer_service.customer_ito.CtmServiceDestroyRequest
	(*CtmServiceListRequest)(nil),               // 15: customer_service.customer_ito.CtmServiceListRequest
	(*CtmServiceListResponse)(nil),              // 16: customer_service.customer_ito.CtmServiceListResponse
	(*CtmServicePartialUpdateRequest)(nil),      // 17: customer_service.customer_ito.CtmServicePartialUpdateRequest
	(*CtmServiceRequest)(nil),                   // 18: customer_service.customer_ito.CtmServiceRequest
	(*CtmServiceResponse)(nil),                  // 19: customer_service.customer_ito.CtmServiceResponse
	(*CtmServiceRetrieveRequest)(nil),           // 20: customer_service.customer_ito.CtmServiceRetrieveRequest
	(*DestroyGoodsDeliverRequest)(nil),          // 21: customer_service.customer_ito.DestroyGoodsDeliverRequest
	(*DestroyGoodsInvoiceRequest)(nil),          // 22: customer_service.customer_ito.DestroyGoodsInvoiceRequest
	(*DestroyGoodsPayRequest)(nil),              // 23: customer_service.customer_ito.DestroyGoodsPayRequest
	(*DestroyGoodsReturnRequest)(nil),           // 24: customer_service.customer_ito.DestroyGoodsReturnRequest
	(*DestroyObjectComplainRequest)(nil),        // 25: customer_service.customer_ito.DestroyObjectComplainRequest
	(*DestroyObjectFeedbackRequest)(nil),        // 26: customer_service.customer_ito.DestroyObjectFeedbackRequest
	(*DestroyObjectRepairRequest)(nil),          // 27: customer_service.customer_ito.DestroyObjectRepairRequest
	(*DestroyObjectSwapRequest)(nil),            // 28: customer_service.customer_ito.DestroyObjectSwapRequest
	(*DestroyObjectTailorRequest)(nil),          // 29: customer_service.customer_ito.DestroyObjectTailorRequest
	(*DestroyObjectTradeInRequest)(nil),         // 30: customer_service.customer_ito.DestroyObjectTradeInRequest
	(*ListGoodsDeliverRequest)(nil),             // 31: customer_service.customer_ito.ListGoodsDeliverRequest
	(*ListGoodsInvoiceRequest)(nil),             // 32: customer_service.customer_ito.ListGoodsInvoiceRequest
	(*ListGoodsPayRequest)(nil),                 // 33: customer_service.customer_ito.ListGoodsPayRequest
	(*ListGoodsReturnRequest)(nil),              // 34: customer_service.customer_ito.ListGoodsReturnRequest
	(*ListObjectComplainRequest)(nil),           // 35: customer_service.customer_ito.ListObjectComplainRequest
	(*ListObjectFeedbackRequest)(nil),           // 36: customer_service.customer_ito.ListObjectFeedbackRequest
	(*ListObjectRepairRequest)(nil),             // 37: customer_service.customer_ito.ListObjectRepairRequest
	(*ListObjectSwapRequest)(nil),               // 38: customer_service.customer_ito.ListObjectSwapRequest
	(*ListObjectTailorRequest)(nil),             // 39: customer_service.customer_ito.ListObjectTailorRequest
	(*ListObjectTradeInRequest)(nil),            // 40: customer_service.customer_ito.ListObjectTradeInRequest
	(*ObjectComplainListResponse)(nil),          // 41: customer_service.customer_ito.ObjectComplainListResponse
	(*ObjectComplainRequest)(nil),               // 42: customer_service.customer_ito.ObjectComplainRequest
	(*ObjectComplainResponse)(nil),              // 43: customer_service.customer_ito.ObjectComplainResponse
	(*ObjectFeedbackListResponse)(nil),          // 44: customer_service.customer_ito.ObjectFeedbackListResponse
	(*ObjectFeedbackRequest)(nil),               // 45: customer_service.customer_ito.ObjectFeedbackRequest
	(*ObjectFeedbackResponse)(nil),              // 46: customer_service.customer_ito.ObjectFeedbackResponse
	(*ObjectRepairListResponse)(nil),            // 47: customer_service.customer_ito.ObjectRepairListResponse
	(*ObjectRepairRequest)(nil),                 // 48: customer_service.customer_ito.ObjectRepairRequest
	(*ObjectRepairResponse)(nil),                // 49: customer_service.customer_ito.ObjectRepairResponse
	(*ObjectSwapListResponse)(nil),              // 50: customer_service.customer_ito.ObjectSwapListResponse
	(*ObjectSwapRequest)(nil),                   // 51: customer_service.customer_ito.ObjectSwapRequest
	(*ObjectSwapResponse)(nil),                  // 52: customer_service.customer_ito.ObjectSwapResponse
	(*ObjectTailorListResponse)(nil),            // 53: customer_service.customer_ito.ObjectTailorListResponse
	(*ObjectTailorRequest)(nil),                 // 54: customer_service.customer_ito.ObjectTailorRequest
	(*ObjectTailorResponse)(nil),                // 55: customer_service.customer_ito.ObjectTailorResponse
	(*ObjectTradeInListResponse)(nil),           // 56: customer_service.customer_ito.ObjectTradeInListResponse
	(*ObjectTradeInRequest)(nil),                // 57: customer_service.customer_ito.ObjectTradeInRequest
	(*ObjectTradeInResponse)(nil),               // 58: customer_service.customer_ito.ObjectTradeInResponse
	(*OptionItemResponse)(nil),                  // 59: customer_service.customer_ito.OptionItemResponse
	(*RetrieveGoodsDeliverRequest)(nil),         // 60: customer_service.customer_ito.RetrieveGoodsDeliverRequest
	(*RetrieveGoodsInvoiceRequest)(nil),         // 61: customer_service.customer_ito.RetrieveGoodsInvoiceRequest
	(*RetrieveGoodsPayRequest)(nil),             // 62: customer_service.customer_ito.RetrieveGoodsPayRequest
	(*RetrieveGoodsReturnRequest)(nil),          // 63: customer_service.customer_ito.RetrieveGoodsReturnRequest
	(*RetrieveObjectComplainRequest)(nil),       // 64: customer_service.customer_ito.RetrieveObjectComplainRequest
	(*RetrieveObjectFeedbackRequest)(nil),       // 65: customer_service.customer_ito.RetrieveObjectFeedbackRequest
	(*RetrieveObjectRepairRequest)(nil),         // 66: customer_service.customer_ito.RetrieveObjectRepairRequest
	(*RetrieveObjectSwapRequest)(nil),           // 67: customer_service.customer_ito.RetrieveObjectSwapRequest
	(*RetrieveObjectTailorRequest)(nil),         // 68: customer_service.customer_ito.RetrieveObjectTailorRequest
	(*RetrieveObjectTradeInRequest)(nil),        // 69: customer_service.customer_ito.RetrieveObjectTradeInRequest
	(*ServiceGoodsDeliverListResponse)(nil),     // 70: customer_service.customer_ito.ServiceGoodsDeliverListResponse
	(*ServiceGoodsDeliverRequest)(nil),          // 71: customer_service.customer_ito.ServiceGoodsDeliverRequest
	(*ServiceGoodsDeliverResponse)(nil),         // 72: customer_service.customer_ito.ServiceGoodsDeliverResponse
	(*ServiceGoodsInvoiceChildrenResponse)(nil), // 73: customer_service.customer_ito.ServiceGoodsInvoiceChildrenResponse
	(*ServiceGoodsInvoiceListResponse)(nil),     // 74: customer_service.customer_ito.ServiceGoodsInvoiceListResponse
	(*ServiceGoodsInvoiceRequest)(nil),          // 75: customer_service.customer_ito.ServiceGoodsInvoiceRequest
	(*ServiceGoodsInvoiceResponse)(nil),         // 76: customer_service.customer_ito.ServiceGoodsInvoiceResponse
	(*ServiceGoodsPayListResponse)(nil),         // 77: customer_service.customer_ito.ServiceGoodsPayListResponse
	(*ServiceGoodsPayRequest)(nil),              // 78: customer_service.customer_ito.ServiceGoodsPayRequest
	(*ServiceGoodsPayResponse)(nil),             // 79: customer_service.customer_ito.ServiceGoodsPayResponse
	(*ServiceGoodsReturnListResponse)(nil),      // 80: customer_service.customer_ito.ServiceGoodsReturnListResponse
	(*ServiceGoodsReturnRequest)(nil),           // 81: customer_service.customer_ito.ServiceGoodsReturnRequest
	(*ServiceGoodsReturnResponse)(nil),          // 82: customer_service.customer_ito.ServiceGoodsReturnResponse
	(*ServiceNextSidRequest)(nil),               // 83: customer_service.customer_ito.ServiceNextSidRequest
	(*ServiceNextSidResponse)(nil),              // 84: customer_service.customer_ito.ServiceNextSidResponse
	(*ServiceOptionsRequest)(nil),               // 85: customer_service.customer_ito.ServiceOptionsRequest
	(*ServiceOptionsResponse)(nil),              // 86: customer_service.customer_ito.ServiceOptionsResponse
	(*ServiceStatusCountListResponse)(nil),      // 87: customer_service.customer_ito.ServiceStatusCountListResponse
	(*ServiceStatusCountRequest)(nil),           // 88: customer_service.customer_ito.ServiceStatusCountRequest
	(*ServiceStatusCountResponse)(nil),          // 89: customer_service.customer_ito.ServiceStatusCountResponse
	(*UpdateGoodsDeliverRequest)(nil),           // 90: customer_service.customer_ito.UpdateGoodsDeliverRequest
	(*UpdateGoodsInvoiceRequest)(nil),           // 91: customer_service.customer_ito.UpdateGoodsInvoiceRequest
	(*UpdateGoodsPayRequest)(nil),               // 92: customer_service.customer_ito.UpdateGoodsPayRequest
	(*UpdateGoodsReturnRequest)(nil),            // 93: customer_service.customer_ito.UpdateGoodsReturnRequest
	(*UpdateObjectComplainRequest)(nil),         // 94: customer_service.customer_ito.UpdateObjectComplainRequest
	(*UpdateObjectFeedbackRequest)(nil),         // 95: customer_service.customer_ito.UpdateObjectFeedbackRequest
	(*UpdateObjectRepairRequest)(nil),           // 96: customer_service.customer_ito.UpdateObjectRepairRequest
	(*UpdateObjectSwapRequest)(nil),             // 97: customer_service.customer_ito.UpdateObjectSwapRequest
	(*UpdateObjectTailorRequest)(nil),           // 98: customer_service.customer_ito.UpdateObjectTailorRequest
	(*UpdateObjectTradeInRequest)(nil),          // 99: customer_service.customer_ito.UpdateObjectTradeInRequest
	(*emptypb.Empty)(nil),                       // 100: google.protobuf.Empty
}
var file_service_ito_proto_depIdxs = []int32{
	1,   // 0: customer_service.customer_ito.BulkCreateGoodsDeliverListRequest.results:type_name -> customer_service.customer_ito.BulkCreateGoodsDeliverRequest
	3,   // 1: customer_service.customer_ito.BulkCreateGoodsReturnListRequest.results:type_name -> customer_service.customer_ito.BulkCreateGoodsReturnRequest
	48,  // 2: customer_service.customer_ito.CtmServiceListRequest.repair_content:type_name -> customer_service.customer_ito.ObjectRepairRequest
	51,  // 3: customer_service.customer_ito.CtmServiceListRequest.swap_content:type_name -> customer_service.customer_ito.ObjectSwapRequest
	54,  // 4: customer_service.customer_ito.CtmServiceListRequest.tailor_content:type_name -> customer_service.customer_ito.ObjectTailorRequest
	42,  // 5: customer_service.customer_ito.CtmServiceListRequest.complain_content:type_name -> customer_service.customer_ito.ObjectComplainRequest
	45,  // 6: customer_service.customer_ito.CtmServiceListRequest.feedback_content:type_name -> customer_service.customer_ito.ObjectFeedbackRequest
	57,  // 7: customer_service.customer_ito.CtmServiceListRequest.trade_in_content:type_name -> customer_service.customer_ito.ObjectTradeInRequest
	81,  // 8: customer_service.customer_ito.CtmServiceListRequest.return_list:type_name -> customer_service.customer_ito.ServiceGoodsReturnRequest
	71,  // 9: customer_service.customer_ito.CtmServiceListRequest.swap_list:type_name -> customer_service.customer_ito.ServiceGoodsDeliverRequest
	78,  // 10: customer_service.customer_ito.CtmServiceListRequest.pay_content:type_name -> customer_service.customer_ito.ServiceGoodsPayRequest
	75,  // 11: customer_service.customer_ito.CtmServiceListRequest.invoice_content:type_name -> customer_service.customer_ito.ServiceGoodsInvoiceRequest
	19,  // 12: customer_service.customer_ito.CtmServiceListResponse.results:type_name -> customer_service.customer_ito.CtmServiceResponse
	48,  // 13: customer_service.customer_ito.CtmServicePartialUpdateRequest.repair_content:type_name -> customer_service.customer_ito.ObjectRepairRequest
	51,  // 14: customer_service.customer_ito.CtmServicePartialUpdateRequest.swap_content:type_name -> customer_service.customer_ito.ObjectSwapRequest
	54,  // 15: customer_service.customer_ito.CtmServicePartialUpdateRequest.tailor_content:type_name -> customer_service.customer_ito.ObjectTailorRequest
	42,  // 16: customer_service.customer_ito.CtmServicePartialUpdateRequest.complain_content:type_name -> customer_service.customer_ito.ObjectComplainRequest
	45,  // 17: customer_service.customer_ito.CtmServicePartialUpdateRequest.feedback_content:type_name -> customer_service.customer_ito.ObjectFeedbackRequest
	57,  // 18: customer_service.customer_ito.CtmServicePartialUpdateRequest.trade_in_content:type_name -> customer_service.customer_ito.ObjectTradeInRequest
	81,  // 19: customer_service.customer_ito.CtmServicePartialUpdateRequest.return_list:type_name -> customer_service.customer_ito.ServiceGoodsReturnRequest
	71,  // 20: customer_service.customer_ito.CtmServicePartialUpdateRequest.swap_list:type_name -> customer_service.customer_ito.ServiceGoodsDeliverRequest
	78,  // 21: customer_service.customer_ito.CtmServicePartialUpdateRequest.pay_content:type_name -> customer_service.customer_ito.ServiceGoodsPayRequest
	75,  // 22: customer_service.customer_ito.CtmServicePartialUpdateRequest.invoice_content:type_name -> customer_service.customer_ito.ServiceGoodsInvoiceRequest
	48,  // 23: customer_service.customer_ito.CtmServiceRequest.repair_content:type_name -> customer_service.customer_ito.ObjectRepairRequest
	51,  // 24: customer_service.customer_ito.CtmServiceRequest.swap_content:type_name -> customer_service.customer_ito.ObjectSwapRequest
	54,  // 25: customer_service.customer_ito.CtmServiceRequest.tailor_content:type_name -> customer_service.customer_ito.ObjectTailorRequest
	42,  // 26: customer_service.customer_ito.CtmServiceRequest.complain_content:type_name -> customer_service.customer_ito.ObjectComplainRequest
	45,  // 27: customer_service.customer_ito.CtmServiceRequest.feedback_content:type_name -> customer_service.customer_ito.ObjectFeedbackRequest
	57,  // 28: customer_service.customer_ito.CtmServiceRequest.trade_in_content:type_name -> customer_service.customer_ito.ObjectTradeInRequest
	81,  // 29: customer_service.customer_ito.CtmServiceRequest.return_list:type_name -> customer_service.customer_ito.ServiceGoodsReturnRequest
	71,  // 30: customer_service.customer_ito.CtmServiceRequest.swap_list:type_name -> customer_service.customer_ito.ServiceGoodsDeliverRequest
	78,  // 31: customer_service.customer_ito.CtmServiceRequest.pay_content:type_name -> customer_service.customer_ito.ServiceGoodsPayRequest
	75,  // 32: customer_service.customer_ito.CtmServiceRequest.invoice_content:type_name -> customer_service.customer_ito.ServiceGoodsInvoiceRequest
	49,  // 33: customer_service.customer_ito.CtmServiceResponse.repair_details:type_name -> customer_service.customer_ito.ObjectRepairResponse
	52,  // 34: customer_service.customer_ito.CtmServiceResponse.swap_details:type_name -> customer_service.customer_ito.ObjectSwapResponse
	55,  // 35: customer_service.customer_ito.CtmServiceResponse.tailor_details:type_name -> customer_service.customer_ito.ObjectTailorResponse
	43,  // 36: customer_service.customer_ito.CtmServiceResponse.complain_details:type_name -> customer_service.customer_ito.ObjectComplainResponse
	46,  // 37: customer_service.customer_ito.CtmServiceResponse.feedback_details:type_name -> customer_service.customer_ito.ObjectFeedbackResponse
	58,  // 38: customer_service.customer_ito.CtmServiceResponse.trade_in_details:type_name -> customer_service.customer_ito.ObjectTradeInResponse
	72,  // 39: customer_service.customer_ito.CtmServiceResponse.swap_goods_details:type_name -> customer_service.customer_ito.ServiceGoodsDeliverResponse
	82,  // 40: customer_service.customer_ito.CtmServiceResponse.return_goods_details:type_name -> customer_service.customer_ito.ServiceGoodsReturnResponse
	79,  // 41: customer_service.customer_ito.CtmServiceResponse.order_pay_details:type_name -> customer_service.customer_ito.ServiceGoodsPayResponse
	76,  // 42: customer_service.customer_ito.CtmServiceResponse.order_invoice_details:type_name -> customer_service.customer_ito.ServiceGoodsInvoiceResponse
	43,  // 43: customer_service.customer_ito.ObjectComplainListResponse.results:type_name -> customer_service.customer_ito.ObjectComplainResponse
	46,  // 44: customer_service.customer_ito.ObjectFeedbackListResponse.results:type_name -> customer_service.customer_ito.ObjectFeedbackResponse
	49,  // 45: customer_service.customer_ito.ObjectRepairListResponse.results:type_name -> customer_service.customer_ito.ObjectRepairResponse
	52,  // 46: customer_service.customer_ito.ObjectSwapListResponse.results:type_name -> customer_service.customer_ito.ObjectSwapResponse
	55,  // 47: customer_service.customer_ito.ObjectTailorListResponse.results:type_name -> customer_service.customer_ito.ObjectTailorResponse
	58,  // 48: customer_service.customer_ito.ObjectTradeInListResponse.results:type_name -> customer_service.customer_ito.ObjectTradeInResponse
	72,  // 49: customer_service.customer_ito.ServiceGoodsDeliverListResponse.results:type_name -> customer_service.customer_ito.ServiceGoodsDeliverResponse
	76,  // 50: customer_service.customer_ito.ServiceGoodsInvoiceListResponse.results:type_name -> customer_service.customer_ito.ServiceGoodsInvoiceResponse
	73,  // 51: customer_service.customer_ito.ServiceGoodsInvoiceResponse.children:type_name -> customer_service.customer_ito.ServiceGoodsInvoiceChildrenResponse
	79,  // 52: customer_service.customer_ito.ServiceGoodsPayListResponse.results:type_name -> customer_service.customer_ito.ServiceGoodsPayResponse
	82,  // 53: customer_service.customer_ito.ServiceGoodsReturnListResponse.results:type_name -> customer_service.customer_ito.ServiceGoodsReturnResponse
	59,  // 54: customer_service.customer_ito.ServiceOptionsResponse.trade_type:type_name -> customer_service.customer_ito.OptionItemResponse
	59,  // 55: customer_service.customer_ito.ServiceOptionsResponse.type:type_name -> customer_service.customer_ito.OptionItemResponse
	59,  // 56: customer_service.customer_ito.ServiceOptionsResponse.create_type:type_name -> customer_service.customer_ito.OptionItemResponse
	59,  // 57: customer_service.customer_ito.ServiceOptionsResponse.service_status:type_name -> customer_service.customer_ito.OptionItemResponse
	59,  // 58: customer_service.customer_ito.ServiceOptionsResponse.trade_status:type_name -> customer_service.customer_ito.OptionItemResponse
	59,  // 59: customer_service.customer_ito.ServiceOptionsResponse.pay_status:type_name -> customer_service.customer_ito.OptionItemResponse
	89,  // 60: customer_service.customer_ito.ServiceStatusCountListResponse.results:type_name -> customer_service.customer_ito.ServiceStatusCountResponse
	0,   // 61: customer_service.customer_ito.CtmItoServiceController.BulkCreateGoodsDeliver:input_type -> customer_service.customer_ito.BulkCreateGoodsDeliverListRequest
	2,   // 62: customer_service.customer_ito.CtmItoServiceController.BulkCreateGoodsReturn:input_type -> customer_service.customer_ito.BulkCreateGoodsReturnListRequest
	18,  // 63: customer_service.customer_ito.CtmItoServiceController.Create:input_type -> customer_service.customer_ito.CtmServiceRequest
	4,   // 64: customer_service.customer_ito.CtmItoServiceController.CreateGoodsDeliver:input_type -> customer_service.customer_ito.CreateGoodsDeliverRequest
	5,   // 65: customer_service.customer_ito.CtmItoServiceController.CreateGoodsInvoice:input_type -> customer_service.customer_ito.CreateGoodsInvoiceRequest
	6,   // 66: customer_service.customer_ito.CtmItoServiceController.CreateGoodsPay:input_type -> customer_service.customer_ito.CreateGoodsPayRequest
	7,   // 67: customer_service.customer_ito.CtmItoServiceController.CreateGoodsReturn:input_type -> customer_service.customer_ito.CreateGoodsReturnRequest
	8,   // 68: customer_service.customer_ito.CtmItoServiceController.CreateObjectComplain:input_type -> customer_service.customer_ito.CreateObjectComplainRequest
	9,   // 69: customer_service.customer_ito.CtmItoServiceController.CreateObjectFeedback:input_type -> customer_service.customer_ito.CreateObjectFeedbackRequest
	10,  // 70: customer_service.customer_ito.CtmItoServiceController.CreateObjectRepair:input_type -> customer_service.customer_ito.CreateObjectRepairRequest
	11,  // 71: customer_service.customer_ito.CtmItoServiceController.CreateObjectSwap:input_type -> customer_service.customer_ito.CreateObjectSwapRequest
	12,  // 72: customer_service.customer_ito.CtmItoServiceController.CreateObjectTailor:input_type -> customer_service.customer_ito.CreateObjectTailorRequest
	13,  // 73: customer_service.customer_ito.CtmItoServiceController.CreateObjectTradeIn:input_type -> customer_service.customer_ito.CreateObjectTradeInRequest
	14,  // 74: customer_service.customer_ito.CtmItoServiceController.Destroy:input_type -> customer_service.customer_ito.CtmServiceDestroyRequest
	21,  // 75: customer_service.customer_ito.CtmItoServiceController.DestroyGoodsDeliver:input_type -> customer_service.customer_ito.DestroyGoodsDeliverRequest
	22,  // 76: customer_service.customer_ito.CtmItoServiceController.DestroyGoodsInvoice:input_type -> customer_service.customer_ito.DestroyGoodsInvoiceRequest
	23,  // 77: customer_service.customer_ito.CtmItoServiceController.DestroyGoodsPay:input_type -> customer_service.customer_ito.DestroyGoodsPayRequest
	24,  // 78: customer_service.customer_ito.CtmItoServiceController.DestroyGoodsReturn:input_type -> customer_service.customer_ito.DestroyGoodsReturnRequest
	25,  // 79: customer_service.customer_ito.CtmItoServiceController.DestroyObjectComplain:input_type -> customer_service.customer_ito.DestroyObjectComplainRequest
	26,  // 80: customer_service.customer_ito.CtmItoServiceController.DestroyObjectFeedback:input_type -> customer_service.customer_ito.DestroyObjectFeedbackRequest
	27,  // 81: customer_service.customer_ito.CtmItoServiceController.DestroyObjectRepair:input_type -> customer_service.customer_ito.DestroyObjectRepairRequest
	28,  // 82: customer_service.customer_ito.CtmItoServiceController.DestroyObjectSwap:input_type -> customer_service.customer_ito.DestroyObjectSwapRequest
	29,  // 83: customer_service.customer_ito.CtmItoServiceController.DestroyObjectTailor:input_type -> customer_service.customer_ito.DestroyObjectTailorRequest
	30,  // 84: customer_service.customer_ito.CtmItoServiceController.DestroyObjectTradeIn:input_type -> customer_service.customer_ito.DestroyObjectTradeInRequest
	15,  // 85: customer_service.customer_ito.CtmItoServiceController.List:input_type -> customer_service.customer_ito.CtmServiceListRequest
	31,  // 86: customer_service.customer_ito.CtmItoServiceController.ListGoodsDeliver:input_type -> customer_service.customer_ito.ListGoodsDeliverRequest
	32,  // 87: customer_service.customer_ito.CtmItoServiceController.ListGoodsInvoice:input_type -> customer_service.customer_ito.ListGoodsInvoiceRequest
	33,  // 88: customer_service.customer_ito.CtmItoServiceController.ListGoodsPay:input_type -> customer_service.customer_ito.ListGoodsPayRequest
	34,  // 89: customer_service.customer_ito.CtmItoServiceController.ListGoodsReturn:input_type -> customer_service.customer_ito.ListGoodsReturnRequest
	35,  // 90: customer_service.customer_ito.CtmItoServiceController.ListObjectComplain:input_type -> customer_service.customer_ito.ListObjectComplainRequest
	36,  // 91: customer_service.customer_ito.CtmItoServiceController.ListObjectFeedback:input_type -> customer_service.customer_ito.ListObjectFeedbackRequest
	37,  // 92: customer_service.customer_ito.CtmItoServiceController.ListObjectRepair:input_type -> customer_service.customer_ito.ListObjectRepairRequest
	38,  // 93: customer_service.customer_ito.CtmItoServiceController.ListObjectSwap:input_type -> customer_service.customer_ito.ListObjectSwapRequest
	39,  // 94: customer_service.customer_ito.CtmItoServiceController.ListObjectTailor:input_type -> customer_service.customer_ito.ListObjectTailorRequest
	40,  // 95: customer_service.customer_ito.CtmItoServiceController.ListObjectTradeIn:input_type -> customer_service.customer_ito.ListObjectTradeInRequest
	17,  // 96: customer_service.customer_ito.CtmItoServiceController.PartialUpdate:input_type -> customer_service.customer_ito.CtmServicePartialUpdateRequest
	20,  // 97: customer_service.customer_ito.CtmItoServiceController.Retrieve:input_type -> customer_service.customer_ito.CtmServiceRetrieveRequest
	60,  // 98: customer_service.customer_ito.CtmItoServiceController.RetrieveGoodsDeliver:input_type -> customer_service.customer_ito.RetrieveGoodsDeliverRequest
	61,  // 99: customer_service.customer_ito.CtmItoServiceController.RetrieveGoodsInvoice:input_type -> customer_service.customer_ito.RetrieveGoodsInvoiceRequest
	62,  // 100: customer_service.customer_ito.CtmItoServiceController.RetrieveGoodsPay:input_type -> customer_service.customer_ito.RetrieveGoodsPayRequest
	63,  // 101: customer_service.customer_ito.CtmItoServiceController.RetrieveGoodsReturn:input_type -> customer_service.customer_ito.RetrieveGoodsReturnRequest
	64,  // 102: customer_service.customer_ito.CtmItoServiceController.RetrieveObjectComplain:input_type -> customer_service.customer_ito.RetrieveObjectComplainRequest
	65,  // 103: customer_service.customer_ito.CtmItoServiceController.RetrieveObjectFeedback:input_type -> customer_service.customer_ito.RetrieveObjectFeedbackRequest
	66,  // 104: customer_service.customer_ito.CtmItoServiceController.RetrieveObjectRepair:input_type -> customer_service.customer_ito.RetrieveObjectRepairRequest
	67,  // 105: customer_service.customer_ito.CtmItoServiceController.RetrieveObjectSwap:input_type -> customer_service.customer_ito.RetrieveObjectSwapRequest
	68,  // 106: customer_service.customer_ito.CtmItoServiceController.RetrieveObjectTailor:input_type -> customer_service.customer_ito.RetrieveObjectTailorRequest
	69,  // 107: customer_service.customer_ito.CtmItoServiceController.RetrieveObjectTradeIn:input_type -> customer_service.customer_ito.RetrieveObjectTradeInRequest
	83,  // 108: customer_service.customer_ito.CtmItoServiceController.ServiceNextSid:input_type -> customer_service.customer_ito.ServiceNextSidRequest
	85,  // 109: customer_service.customer_ito.CtmItoServiceController.ServiceOptions:input_type -> customer_service.customer_ito.ServiceOptionsRequest
	88,  // 110: customer_service.customer_ito.CtmItoServiceController.ServiceStatusCount:input_type -> customer_service.customer_ito.ServiceStatusCountRequest
	18,  // 111: customer_service.customer_ito.CtmItoServiceController.Update:input_type -> customer_service.customer_ito.CtmServiceRequest
	90,  // 112: customer_service.customer_ito.CtmItoServiceController.UpdateGoodsDeliver:input_type -> customer_service.customer_ito.UpdateGoodsDeliverRequest
	91,  // 113: customer_service.customer_ito.CtmItoServiceController.UpdateGoodsInvoice:input_type -> customer_service.customer_ito.UpdateGoodsInvoiceRequest
	92,  // 114: customer_service.customer_ito.CtmItoServiceController.UpdateGoodsPay:input_type -> customer_service.customer_ito.UpdateGoodsPayRequest
	93,  // 115: customer_service.customer_ito.CtmItoServiceController.UpdateGoodsReturn:input_type -> customer_service.customer_ito.UpdateGoodsReturnRequest
	94,  // 116: customer_service.customer_ito.CtmItoServiceController.UpdateObjectComplain:input_type -> customer_service.customer_ito.UpdateObjectComplainRequest
	95,  // 117: customer_service.customer_ito.CtmItoServiceController.UpdateObjectFeedback:input_type -> customer_service.customer_ito.UpdateObjectFeedbackRequest
	96,  // 118: customer_service.customer_ito.CtmItoServiceController.UpdateObjectRepair:input_type -> customer_service.customer_ito.UpdateObjectRepairRequest
	97,  // 119: customer_service.customer_ito.CtmItoServiceController.UpdateObjectSwap:input_type -> customer_service.customer_ito.UpdateObjectSwapRequest
	98,  // 120: customer_service.customer_ito.CtmItoServiceController.UpdateObjectTailor:input_type -> customer_service.customer_ito.UpdateObjectTailorRequest
	99,  // 121: customer_service.customer_ito.CtmItoServiceController.UpdateObjectTradeIn:input_type -> customer_service.customer_ito.UpdateObjectTradeInRequest
	70,  // 122: customer_service.customer_ito.CtmItoServiceController.BulkCreateGoodsDeliver:output_type -> customer_service.customer_ito.ServiceGoodsDeliverListResponse
	80,  // 123: customer_service.customer_ito.CtmItoServiceController.BulkCreateGoodsReturn:output_type -> customer_service.customer_ito.ServiceGoodsReturnListResponse
	19,  // 124: customer_service.customer_ito.CtmItoServiceController.Create:output_type -> customer_service.customer_ito.CtmServiceResponse
	72,  // 125: customer_service.customer_ito.CtmItoServiceController.CreateGoodsDeliver:output_type -> customer_service.customer_ito.ServiceGoodsDeliverResponse
	76,  // 126: customer_service.customer_ito.CtmItoServiceController.CreateGoodsInvoice:output_type -> customer_service.customer_ito.ServiceGoodsInvoiceResponse
	79,  // 127: customer_service.customer_ito.CtmItoServiceController.CreateGoodsPay:output_type -> customer_service.customer_ito.ServiceGoodsPayResponse
	82,  // 128: customer_service.customer_ito.CtmItoServiceController.CreateGoodsReturn:output_type -> customer_service.customer_ito.ServiceGoodsReturnResponse
	43,  // 129: customer_service.customer_ito.CtmItoServiceController.CreateObjectComplain:output_type -> customer_service.customer_ito.ObjectComplainResponse
	46,  // 130: customer_service.customer_ito.CtmItoServiceController.CreateObjectFeedback:output_type -> customer_service.customer_ito.ObjectFeedbackResponse
	49,  // 131: customer_service.customer_ito.CtmItoServiceController.CreateObjectRepair:output_type -> customer_service.customer_ito.ObjectRepairResponse
	52,  // 132: customer_service.customer_ito.CtmItoServiceController.CreateObjectSwap:output_type -> customer_service.customer_ito.ObjectSwapResponse
	55,  // 133: customer_service.customer_ito.CtmItoServiceController.CreateObjectTailor:output_type -> customer_service.customer_ito.ObjectTailorResponse
	58,  // 134: customer_service.customer_ito.CtmItoServiceController.CreateObjectTradeIn:output_type -> customer_service.customer_ito.ObjectTradeInResponse
	100, // 135: customer_service.customer_ito.CtmItoServiceController.Destroy:output_type -> google.protobuf.Empty
	100, // 136: customer_service.customer_ito.CtmItoServiceController.DestroyGoodsDeliver:output_type -> google.protobuf.Empty
	100, // 137: customer_service.customer_ito.CtmItoServiceController.DestroyGoodsInvoice:output_type -> google.protobuf.Empty
	100, // 138: customer_service.customer_ito.CtmItoServiceController.DestroyGoodsPay:output_type -> google.protobuf.Empty
	100, // 139: customer_service.customer_ito.CtmItoServiceController.DestroyGoodsReturn:output_type -> google.protobuf.Empty
	100, // 140: customer_service.customer_ito.CtmItoServiceController.DestroyObjectComplain:output_type -> google.protobuf.Empty
	100, // 141: customer_service.customer_ito.CtmItoServiceController.DestroyObjectFeedback:output_type -> google.protobuf.Empty
	100, // 142: customer_service.customer_ito.CtmItoServiceController.DestroyObjectRepair:output_type -> google.protobuf.Empty
	100, // 143: customer_service.customer_ito.CtmItoServiceController.DestroyObjectSwap:output_type -> google.protobuf.Empty
	100, // 144: customer_service.customer_ito.CtmItoServiceController.DestroyObjectTailor:output_type -> google.protobuf.Empty
	100, // 145: customer_service.customer_ito.CtmItoServiceController.DestroyObjectTradeIn:output_type -> google.protobuf.Empty
	16,  // 146: customer_service.customer_ito.CtmItoServiceController.List:output_type -> customer_service.customer_ito.CtmServiceListResponse
	70,  // 147: customer_service.customer_ito.CtmItoServiceController.ListGoodsDeliver:output_type -> customer_service.customer_ito.ServiceGoodsDeliverListResponse
	74,  // 148: customer_service.customer_ito.CtmItoServiceController.ListGoodsInvoice:output_type -> customer_service.customer_ito.ServiceGoodsInvoiceListResponse
	77,  // 149: customer_service.customer_ito.CtmItoServiceController.ListGoodsPay:output_type -> customer_service.customer_ito.ServiceGoodsPayListResponse
	80,  // 150: customer_service.customer_ito.CtmItoServiceController.ListGoodsReturn:output_type -> customer_service.customer_ito.ServiceGoodsReturnListResponse
	41,  // 151: customer_service.customer_ito.CtmItoServiceController.ListObjectComplain:output_type -> customer_service.customer_ito.ObjectComplainListResponse
	44,  // 152: customer_service.customer_ito.CtmItoServiceController.ListObjectFeedback:output_type -> customer_service.customer_ito.ObjectFeedbackListResponse
	47,  // 153: customer_service.customer_ito.CtmItoServiceController.ListObjectRepair:output_type -> customer_service.customer_ito.ObjectRepairListResponse
	50,  // 154: customer_service.customer_ito.CtmItoServiceController.ListObjectSwap:output_type -> customer_service.customer_ito.ObjectSwapListResponse
	53,  // 155: customer_service.customer_ito.CtmItoServiceController.ListObjectTailor:output_type -> customer_service.customer_ito.ObjectTailorListResponse
	56,  // 156: customer_service.customer_ito.CtmItoServiceController.ListObjectTradeIn:output_type -> customer_service.customer_ito.ObjectTradeInListResponse
	19,  // 157: customer_service.customer_ito.CtmItoServiceController.PartialUpdate:output_type -> customer_service.customer_ito.CtmServiceResponse
	19,  // 158: customer_service.customer_ito.CtmItoServiceController.Retrieve:output_type -> customer_service.customer_ito.CtmServiceResponse
	72,  // 159: customer_service.customer_ito.CtmItoServiceController.RetrieveGoodsDeliver:output_type -> customer_service.customer_ito.ServiceGoodsDeliverResponse
	76,  // 160: customer_service.customer_ito.CtmItoServiceController.RetrieveGoodsInvoice:output_type -> customer_service.customer_ito.ServiceGoodsInvoiceResponse
	79,  // 161: customer_service.customer_ito.CtmItoServiceController.RetrieveGoodsPay:output_type -> customer_service.customer_ito.ServiceGoodsPayResponse
	82,  // 162: customer_service.customer_ito.CtmItoServiceController.RetrieveGoodsReturn:output_type -> customer_service.customer_ito.ServiceGoodsReturnResponse
	43,  // 163: customer_service.customer_ito.CtmItoServiceController.RetrieveObjectComplain:output_type -> customer_service.customer_ito.ObjectComplainResponse
	46,  // 164: customer_service.customer_ito.CtmItoServiceController.RetrieveObjectFeedback:output_type -> customer_service.customer_ito.ObjectFeedbackResponse
	49,  // 165: customer_service.customer_ito.CtmItoServiceController.RetrieveObjectRepair:output_type -> customer_service.customer_ito.ObjectRepairResponse
	52,  // 166: customer_service.customer_ito.CtmItoServiceController.RetrieveObjectSwap:output_type -> customer_service.customer_ito.ObjectSwapResponse
	55,  // 167: customer_service.customer_ito.CtmItoServiceController.RetrieveObjectTailor:output_type -> customer_service.customer_ito.ObjectTailorResponse
	58,  // 168: customer_service.customer_ito.CtmItoServiceController.RetrieveObjectTradeIn:output_type -> customer_service.customer_ito.ObjectTradeInResponse
	84,  // 169: customer_service.customer_ito.CtmItoServiceController.ServiceNextSid:output_type -> customer_service.customer_ito.ServiceNextSidResponse
	86,  // 170: customer_service.customer_ito.CtmItoServiceController.ServiceOptions:output_type -> customer_service.customer_ito.ServiceOptionsResponse
	87,  // 171: customer_service.customer_ito.CtmItoServiceController.ServiceStatusCount:output_type -> customer_service.customer_ito.ServiceStatusCountListResponse
	19,  // 172: customer_service.customer_ito.CtmItoServiceController.Update:output_type -> customer_service.customer_ito.CtmServiceResponse
	72,  // 173: customer_service.customer_ito.CtmItoServiceController.UpdateGoodsDeliver:output_type -> customer_service.customer_ito.ServiceGoodsDeliverResponse
	76,  // 174: customer_service.customer_ito.CtmItoServiceController.UpdateGoodsInvoice:output_type -> customer_service.customer_ito.ServiceGoodsInvoiceResponse
	79,  // 175: customer_service.customer_ito.CtmItoServiceController.UpdateGoodsPay:output_type -> customer_service.customer_ito.ServiceGoodsPayResponse
	82,  // 176: customer_service.customer_ito.CtmItoServiceController.UpdateGoodsReturn:output_type -> customer_service.customer_ito.ServiceGoodsReturnResponse
	43,  // 177: customer_service.customer_ito.CtmItoServiceController.UpdateObjectComplain:output_type -> customer_service.customer_ito.ObjectComplainResponse
	46,  // 178: customer_service.customer_ito.CtmItoServiceController.UpdateObjectFeedback:output_type -> customer_service.customer_ito.ObjectFeedbackResponse
	49,  // 179: customer_service.customer_ito.CtmItoServiceController.UpdateObjectRepair:output_type -> customer_service.customer_ito.ObjectRepairResponse
	52,  // 180: customer_service.customer_ito.CtmItoServiceController.UpdateObjectSwap:output_type -> customer_service.customer_ito.ObjectSwapResponse
	55,  // 181: customer_service.customer_ito.CtmItoServiceController.UpdateObjectTailor:output_type -> customer_service.customer_ito.ObjectTailorResponse
	58,  // 182: customer_service.customer_ito.CtmItoServiceController.UpdateObjectTradeIn:output_type -> customer_service.customer_ito.ObjectTradeInResponse
	122, // [122:183] is the sub-list for method output_type
	61,  // [61:122] is the sub-list for method input_type
	61,  // [61:61] is the sub-list for extension type_name
	61,  // [61:61] is the sub-list for extension extendee
	0,   // [0:61] is the sub-list for field type_name
}

func init() { file_service_ito_proto_init() }
func file_service_ito_proto_init() {
	if File_service_ito_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_service_ito_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkCreateGoodsDeliverListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkCreateGoodsDeliverRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkCreateGoodsReturnListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkCreateGoodsReturnRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGoodsDeliverRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGoodsInvoiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGoodsPayRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGoodsReturnRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateObjectComplainRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateObjectFeedbackRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateObjectRepairRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateObjectSwapRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateObjectTailorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateObjectTradeInRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmServiceDestroyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmServiceListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmServiceListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmServicePartialUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmServiceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CtmServiceRetrieveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DestroyGoodsDeliverRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DestroyGoodsInvoiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DestroyGoodsPayRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DestroyGoodsReturnRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DestroyObjectComplainRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DestroyObjectFeedbackRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DestroyObjectRepairRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DestroyObjectSwapRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DestroyObjectTailorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DestroyObjectTradeInRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGoodsDeliverRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGoodsInvoiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGoodsPayRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGoodsReturnRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListObjectComplainRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListObjectFeedbackRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListObjectRepairRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListObjectSwapRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListObjectTailorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListObjectTradeInRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectComplainListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectComplainRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectComplainResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectFeedbackListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectFeedbackRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectFeedbackResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectRepairListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectRepairRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectRepairResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectSwapListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectSwapRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectSwapResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectTailorListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectTailorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectTailorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectTradeInListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectTradeInRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectTradeInResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OptionItemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveGoodsDeliverRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveGoodsInvoiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveGoodsPayRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveGoodsReturnRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveObjectComplainRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveObjectFeedbackRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveObjectRepairRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveObjectSwapRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveObjectTailorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveObjectTradeInRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceGoodsDeliverListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceGoodsDeliverRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceGoodsDeliverResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceGoodsInvoiceChildrenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceGoodsInvoiceListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceGoodsInvoiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceGoodsInvoiceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceGoodsPayListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceGoodsPayRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceGoodsPayResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceGoodsReturnListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceGoodsReturnRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceGoodsReturnResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceNextSidRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceNextSidResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceOptionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceOptionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceStatusCountListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceStatusCountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceStatusCountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGoodsDeliverRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGoodsInvoiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGoodsPayRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGoodsReturnRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateObjectComplainRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateObjectFeedbackRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateObjectRepairRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateObjectSwapRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateObjectTailorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_ito_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateObjectTradeInRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_service_ito_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_service_ito_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_service_ito_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_service_ito_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_service_ito_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_service_ito_proto_msgTypes[7].OneofWrappers = []interface{}{}
	file_service_ito_proto_msgTypes[8].OneofWrappers = []interface{}{}
	file_service_ito_proto_msgTypes[9].OneofWrappers = []interface{}{}
	file_service_ito_proto_msgTypes[10].OneofWrappers = []interface{}{}
	file_service_ito_proto_msgTypes[11].OneofWrappers = []interface{}{}
	file_service_ito_proto_msgTypes[12].OneofWrappers = []interface{}{}
	file_service_ito_proto_msgTypes[13].OneofWrappers = []interface{}{}
	file_service_ito_proto_msgTypes[15].OneofWrappers = []interface{}{}
	file_service_ito_proto_msgTypes[17].OneofWrappers = []interface{}{}
	file_service_ito_proto_msgTypes[18].OneofWrappers = []interface{}{}
	file_service_ito_proto_msgTypes[19].OneofWrappers = []interface{}{}
	file_service_ito_proto_msgTypes[42].OneofWrappers = []interface{}{}
	file_service_ito_proto_msgTypes[43].OneofWrappers = []interface{}{}
	file_service_ito_proto_msgTypes[45].OneofWrappers = []interface{}{}
	file_service_ito_proto_msgTypes[46].OneofWrappers = []interface{}{}
	file_service_ito_proto_msgTypes[48].OneofWrappers = []interface{}{}
	file_service_ito_proto_msgTypes[49].OneofWrappers = []interface{}{}
	file_service_ito_proto_msgTypes[51].OneofWrappers = []interface{}{}
	file_service_ito_proto_msgTypes[52].OneofWrappers = []interface{}{}
	file_service_ito_proto_msgTypes[54].OneofWrappers = []interface{}{}
	file_service_ito_proto_msgTypes[55].OneofWrappers = []interface{}{}
	file_service_ito_proto_msgTypes[57].OneofWrappers = []interface{}{}
	file_service_ito_proto_msgTypes[58].OneofWrappers = []interface{}{}
	file_service_ito_proto_msgTypes[71].OneofWrappers = []interface{}{}
	file_service_ito_proto_msgTypes[72].OneofWrappers = []interface{}{}
	file_service_ito_proto_msgTypes[73].OneofWrappers = []interface{}{}
	file_service_ito_proto_msgTypes[75].OneofWrappers = []interface{}{}
	file_service_ito_proto_msgTypes[76].OneofWrappers = []interface{}{}
	file_service_ito_proto_msgTypes[78].OneofWrappers = []interface{}{}
	file_service_ito_proto_msgTypes[79].OneofWrappers = []interface{}{}
	file_service_ito_proto_msgTypes[81].OneofWrappers = []interface{}{}
	file_service_ito_proto_msgTypes[82].OneofWrappers = []interface{}{}
	file_service_ito_proto_msgTypes[90].OneofWrappers = []interface{}{}
	file_service_ito_proto_msgTypes[91].OneofWrappers = []interface{}{}
	file_service_ito_proto_msgTypes[92].OneofWrappers = []interface{}{}
	file_service_ito_proto_msgTypes[93].OneofWrappers = []interface{}{}
	file_service_ito_proto_msgTypes[94].OneofWrappers = []interface{}{}
	file_service_ito_proto_msgTypes[95].OneofWrappers = []interface{}{}
	file_service_ito_proto_msgTypes[96].OneofWrappers = []interface{}{}
	file_service_ito_proto_msgTypes[97].OneofWrappers = []interface{}{}
	file_service_ito_proto_msgTypes[98].OneofWrappers = []interface{}{}
	file_service_ito_proto_msgTypes[99].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_service_ito_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   100,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_service_ito_proto_goTypes,
		DependencyIndexes: file_service_ito_proto_depIdxs,
		MessageInfos:      file_service_ito_proto_msgTypes,
	}.Build()
	File_service_ito_proto = out.File
	file_service_ito_proto_rawDesc = nil
	file_service_ito_proto_goTypes = nil
	file_service_ito_proto_depIdxs = nil
}
