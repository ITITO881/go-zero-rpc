// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v3.19.4
// source: service_ito.proto

package pbServiceIto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	CtmItoServiceController_BulkCreateGoodsDeliver_FullMethodName = "/customer_service.customer_ito.CtmItoServiceController/BulkCreateGoodsDeliver"
	CtmItoServiceController_BulkCreateGoodsReturn_FullMethodName  = "/customer_service.customer_ito.CtmItoServiceController/BulkCreateGoodsReturn"
	CtmItoServiceController_Create_FullMethodName                 = "/customer_service.customer_ito.CtmItoServiceController/Create"
	CtmItoServiceController_CreateGoodsDeliver_FullMethodName     = "/customer_service.customer_ito.CtmItoServiceController/CreateGoodsDeliver"
	CtmItoServiceController_CreateGoodsInvoice_FullMethodName     = "/customer_service.customer_ito.CtmItoServiceController/CreateGoodsInvoice"
	CtmItoServiceController_CreateGoodsPay_FullMethodName         = "/customer_service.customer_ito.CtmItoServiceController/CreateGoodsPay"
	CtmItoServiceController_CreateGoodsReturn_FullMethodName      = "/customer_service.customer_ito.CtmItoServiceController/CreateGoodsReturn"
	CtmItoServiceController_CreateObjectComplain_FullMethodName   = "/customer_service.customer_ito.CtmItoServiceController/CreateObjectComplain"
	CtmItoServiceController_CreateObjectFeedback_FullMethodName   = "/customer_service.customer_ito.CtmItoServiceController/CreateObjectFeedback"
	CtmItoServiceController_CreateObjectRepair_FullMethodName     = "/customer_service.customer_ito.CtmItoServiceController/CreateObjectRepair"
	CtmItoServiceController_CreateObjectSwap_FullMethodName       = "/customer_service.customer_ito.CtmItoServiceController/CreateObjectSwap"
	CtmItoServiceController_CreateObjectTailor_FullMethodName     = "/customer_service.customer_ito.CtmItoServiceController/CreateObjectTailor"
	CtmItoServiceController_CreateObjectTradeIn_FullMethodName    = "/customer_service.customer_ito.CtmItoServiceController/CreateObjectTradeIn"
	CtmItoServiceController_CreateStockIn_FullMethodName          = "/customer_service.customer_ito.CtmItoServiceController/CreateStockIn"
	CtmItoServiceController_CreateStockOut_FullMethodName         = "/customer_service.customer_ito.CtmItoServiceController/CreateStockOut"
	CtmItoServiceController_Destroy_FullMethodName                = "/customer_service.customer_ito.CtmItoServiceController/Destroy"
	CtmItoServiceController_DestroyGoodsDeliver_FullMethodName    = "/customer_service.customer_ito.CtmItoServiceController/DestroyGoodsDeliver"
	CtmItoServiceController_DestroyGoodsInvoice_FullMethodName    = "/customer_service.customer_ito.CtmItoServiceController/DestroyGoodsInvoice"
	CtmItoServiceController_DestroyGoodsPay_FullMethodName        = "/customer_service.customer_ito.CtmItoServiceController/DestroyGoodsPay"
	CtmItoServiceController_DestroyGoodsReturn_FullMethodName     = "/customer_service.customer_ito.CtmItoServiceController/DestroyGoodsReturn"
	CtmItoServiceController_DestroyObjectComplain_FullMethodName  = "/customer_service.customer_ito.CtmItoServiceController/DestroyObjectComplain"
	CtmItoServiceController_DestroyObjectFeedback_FullMethodName  = "/customer_service.customer_ito.CtmItoServiceController/DestroyObjectFeedback"
	CtmItoServiceController_DestroyObjectRepair_FullMethodName    = "/customer_service.customer_ito.CtmItoServiceController/DestroyObjectRepair"
	CtmItoServiceController_DestroyObjectSwap_FullMethodName      = "/customer_service.customer_ito.CtmItoServiceController/DestroyObjectSwap"
	CtmItoServiceController_DestroyObjectTailor_FullMethodName    = "/customer_service.customer_ito.CtmItoServiceController/DestroyObjectTailor"
	CtmItoServiceController_DestroyObjectTradeIn_FullMethodName   = "/customer_service.customer_ito.CtmItoServiceController/DestroyObjectTradeIn"
	CtmItoServiceController_DestroyStockIn_FullMethodName         = "/customer_service.customer_ito.CtmItoServiceController/DestroyStockIn"
	CtmItoServiceController_DestroyStockOut_FullMethodName        = "/customer_service.customer_ito.CtmItoServiceController/DestroyStockOut"
	CtmItoServiceController_List_FullMethodName                   = "/customer_service.customer_ito.CtmItoServiceController/List"
	CtmItoServiceController_ListGoodsDeliver_FullMethodName       = "/customer_service.customer_ito.CtmItoServiceController/ListGoodsDeliver"
	CtmItoServiceController_ListGoodsInvoice_FullMethodName       = "/customer_service.customer_ito.CtmItoServiceController/ListGoodsInvoice"
	CtmItoServiceController_ListGoodsPay_FullMethodName           = "/customer_service.customer_ito.CtmItoServiceController/ListGoodsPay"
	CtmItoServiceController_ListGoodsReturn_FullMethodName        = "/customer_service.customer_ito.CtmItoServiceController/ListGoodsReturn"
	CtmItoServiceController_ListObjectComplain_FullMethodName     = "/customer_service.customer_ito.CtmItoServiceController/ListObjectComplain"
	CtmItoServiceController_ListObjectFeedback_FullMethodName     = "/customer_service.customer_ito.CtmItoServiceController/ListObjectFeedback"
	CtmItoServiceController_ListObjectRepair_FullMethodName       = "/customer_service.customer_ito.CtmItoServiceController/ListObjectRepair"
	CtmItoServiceController_ListObjectSwap_FullMethodName         = "/customer_service.customer_ito.CtmItoServiceController/ListObjectSwap"
	CtmItoServiceController_ListObjectTailor_FullMethodName       = "/customer_service.customer_ito.CtmItoServiceController/ListObjectTailor"
	CtmItoServiceController_ListObjectTradeIn_FullMethodName      = "/customer_service.customer_ito.CtmItoServiceController/ListObjectTradeIn"
	CtmItoServiceController_ListStockIn_FullMethodName            = "/customer_service.customer_ito.CtmItoServiceController/ListStockIn"
	CtmItoServiceController_ListStockOut_FullMethodName           = "/customer_service.customer_ito.CtmItoServiceController/ListStockOut"
	CtmItoServiceController_PartialUpdate_FullMethodName          = "/customer_service.customer_ito.CtmItoServiceController/PartialUpdate"
	CtmItoServiceController_Retrieve_FullMethodName               = "/customer_service.customer_ito.CtmItoServiceController/Retrieve"
	CtmItoServiceController_RetrieveGoodsDeliver_FullMethodName   = "/customer_service.customer_ito.CtmItoServiceController/RetrieveGoodsDeliver"
	CtmItoServiceController_RetrieveGoodsInvoice_FullMethodName   = "/customer_service.customer_ito.CtmItoServiceController/RetrieveGoodsInvoice"
	CtmItoServiceController_RetrieveGoodsPay_FullMethodName       = "/customer_service.customer_ito.CtmItoServiceController/RetrieveGoodsPay"
	CtmItoServiceController_RetrieveGoodsReturn_FullMethodName    = "/customer_service.customer_ito.CtmItoServiceController/RetrieveGoodsReturn"
	CtmItoServiceController_RetrieveObjectComplain_FullMethodName = "/customer_service.customer_ito.CtmItoServiceController/RetrieveObjectComplain"
	CtmItoServiceController_RetrieveObjectFeedback_FullMethodName = "/customer_service.customer_ito.CtmItoServiceController/RetrieveObjectFeedback"
	CtmItoServiceController_RetrieveObjectRepair_FullMethodName   = "/customer_service.customer_ito.CtmItoServiceController/RetrieveObjectRepair"
	CtmItoServiceController_RetrieveObjectSwap_FullMethodName     = "/customer_service.customer_ito.CtmItoServiceController/RetrieveObjectSwap"
	CtmItoServiceController_RetrieveObjectTailor_FullMethodName   = "/customer_service.customer_ito.CtmItoServiceController/RetrieveObjectTailor"
	CtmItoServiceController_RetrieveObjectTradeIn_FullMethodName  = "/customer_service.customer_ito.CtmItoServiceController/RetrieveObjectTradeIn"
	CtmItoServiceController_RetrieveStockIn_FullMethodName        = "/customer_service.customer_ito.CtmItoServiceController/RetrieveStockIn"
	CtmItoServiceController_RetrieveStockOut_FullMethodName       = "/customer_service.customer_ito.CtmItoServiceController/RetrieveStockOut"
	CtmItoServiceController_ServiceNextSid_FullMethodName         = "/customer_service.customer_ito.CtmItoServiceController/ServiceNextSid"
	CtmItoServiceController_ServiceOptions_FullMethodName         = "/customer_service.customer_ito.CtmItoServiceController/ServiceOptions"
	CtmItoServiceController_ServiceStatusCount_FullMethodName     = "/customer_service.customer_ito.CtmItoServiceController/ServiceStatusCount"
	CtmItoServiceController_Update_FullMethodName                 = "/customer_service.customer_ito.CtmItoServiceController/Update"
	CtmItoServiceController_UpdateGoodsDeliver_FullMethodName     = "/customer_service.customer_ito.CtmItoServiceController/UpdateGoodsDeliver"
	CtmItoServiceController_UpdateGoodsInvoice_FullMethodName     = "/customer_service.customer_ito.CtmItoServiceController/UpdateGoodsInvoice"
	CtmItoServiceController_UpdateGoodsPay_FullMethodName         = "/customer_service.customer_ito.CtmItoServiceController/UpdateGoodsPay"
	CtmItoServiceController_UpdateGoodsReturn_FullMethodName      = "/customer_service.customer_ito.CtmItoServiceController/UpdateGoodsReturn"
	CtmItoServiceController_UpdateObjectComplain_FullMethodName   = "/customer_service.customer_ito.CtmItoServiceController/UpdateObjectComplain"
	CtmItoServiceController_UpdateObjectFeedback_FullMethodName   = "/customer_service.customer_ito.CtmItoServiceController/UpdateObjectFeedback"
	CtmItoServiceController_UpdateObjectRepair_FullMethodName     = "/customer_service.customer_ito.CtmItoServiceController/UpdateObjectRepair"
	CtmItoServiceController_UpdateObjectSwap_FullMethodName       = "/customer_service.customer_ito.CtmItoServiceController/UpdateObjectSwap"
	CtmItoServiceController_UpdateObjectTailor_FullMethodName     = "/customer_service.customer_ito.CtmItoServiceController/UpdateObjectTailor"
	CtmItoServiceController_UpdateObjectTradeIn_FullMethodName    = "/customer_service.customer_ito.CtmItoServiceController/UpdateObjectTradeIn"
	CtmItoServiceController_UpdateStockIn_FullMethodName          = "/customer_service.customer_ito.CtmItoServiceController/UpdateStockIn"
	CtmItoServiceController_UpdateStockOut_FullMethodName         = "/customer_service.customer_ito.CtmItoServiceController/UpdateStockOut"
)

// CtmItoServiceControllerClient is the client API for CtmItoServiceController service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type CtmItoServiceControllerClient interface {
	BulkCreateGoodsDeliver(ctx context.Context, in *BulkCreateGoodsDeliverListRequest, opts ...grpc.CallOption) (*ServiceGoodsDeliverListResponse, error)
	BulkCreateGoodsReturn(ctx context.Context, in *BulkCreateGoodsReturnListRequest, opts ...grpc.CallOption) (*ServiceGoodsReturnListResponse, error)
	Create(ctx context.Context, in *CtmServiceRequest, opts ...grpc.CallOption) (*CtmServiceResponse, error)
	CreateGoodsDeliver(ctx context.Context, in *CreateGoodsDeliverRequest, opts ...grpc.CallOption) (*ServiceGoodsDeliverResponse, error)
	CreateGoodsInvoice(ctx context.Context, in *CreateGoodsInvoiceRequest, opts ...grpc.CallOption) (*ServiceGoodsInvoiceResponse, error)
	CreateGoodsPay(ctx context.Context, in *CreateGoodsPayRequest, opts ...grpc.CallOption) (*ServiceGoodsPayResponse, error)
	CreateGoodsReturn(ctx context.Context, in *CreateGoodsReturnRequest, opts ...grpc.CallOption) (*ServiceGoodsReturnResponse, error)
	CreateObjectComplain(ctx context.Context, in *CreateObjectComplainRequest, opts ...grpc.CallOption) (*ObjectComplainResponse, error)
	CreateObjectFeedback(ctx context.Context, in *CreateObjectFeedbackRequest, opts ...grpc.CallOption) (*ObjectFeedbackResponse, error)
	CreateObjectRepair(ctx context.Context, in *CreateObjectRepairRequest, opts ...grpc.CallOption) (*ObjectRepairResponse, error)
	CreateObjectSwap(ctx context.Context, in *CreateObjectSwapRequest, opts ...grpc.CallOption) (*ObjectSwapResponse, error)
	CreateObjectTailor(ctx context.Context, in *CreateObjectTailorRequest, opts ...grpc.CallOption) (*ObjectTailorResponse, error)
	CreateObjectTradeIn(ctx context.Context, in *CreateObjectTradeInRequest, opts ...grpc.CallOption) (*ObjectTradeInResponse, error)
	CreateStockIn(ctx context.Context, in *CreateStockInRequest, opts ...grpc.CallOption) (*ServiceStockInResponse, error)
	CreateStockOut(ctx context.Context, in *CreateStockOutRequest, opts ...grpc.CallOption) (*ServiceStockOutResponse, error)
	Destroy(ctx context.Context, in *CtmServiceDestroyRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	DestroyGoodsDeliver(ctx context.Context, in *DestroyGoodsDeliverRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	DestroyGoodsInvoice(ctx context.Context, in *DestroyGoodsInvoiceRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	DestroyGoodsPay(ctx context.Context, in *DestroyGoodsPayRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	DestroyGoodsReturn(ctx context.Context, in *DestroyGoodsReturnRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	DestroyObjectComplain(ctx context.Context, in *DestroyObjectComplainRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	DestroyObjectFeedback(ctx context.Context, in *DestroyObjectFeedbackRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	DestroyObjectRepair(ctx context.Context, in *DestroyObjectRepairRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	DestroyObjectSwap(ctx context.Context, in *DestroyObjectSwapRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	DestroyObjectTailor(ctx context.Context, in *DestroyObjectTailorRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	DestroyObjectTradeIn(ctx context.Context, in *DestroyObjectTradeInRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	DestroyStockIn(ctx context.Context, in *DestroyStockInRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	DestroyStockOut(ctx context.Context, in *DestroyStockOutRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	List(ctx context.Context, in *CtmServiceListRequest, opts ...grpc.CallOption) (*CtmServiceListResponse, error)
	ListGoodsDeliver(ctx context.Context, in *ListGoodsDeliverRequest, opts ...grpc.CallOption) (*ServiceGoodsDeliverListResponse, error)
	ListGoodsInvoice(ctx context.Context, in *ListGoodsInvoiceRequest, opts ...grpc.CallOption) (*ServiceGoodsInvoiceListResponse, error)
	ListGoodsPay(ctx context.Context, in *ListGoodsPayRequest, opts ...grpc.CallOption) (*ServiceGoodsPayListResponse, error)
	ListGoodsReturn(ctx context.Context, in *ListGoodsReturnRequest, opts ...grpc.CallOption) (*ServiceGoodsReturnListResponse, error)
	ListObjectComplain(ctx context.Context, in *ListObjectComplainRequest, opts ...grpc.CallOption) (*ObjectComplainListResponse, error)
	ListObjectFeedback(ctx context.Context, in *ListObjectFeedbackRequest, opts ...grpc.CallOption) (*ObjectFeedbackListResponse, error)
	ListObjectRepair(ctx context.Context, in *ListObjectRepairRequest, opts ...grpc.CallOption) (*ObjectRepairListResponse, error)
	ListObjectSwap(ctx context.Context, in *ListObjectSwapRequest, opts ...grpc.CallOption) (*ObjectSwapListResponse, error)
	ListObjectTailor(ctx context.Context, in *ListObjectTailorRequest, opts ...grpc.CallOption) (*ObjectTailorListResponse, error)
	ListObjectTradeIn(ctx context.Context, in *ListObjectTradeInRequest, opts ...grpc.CallOption) (*ObjectTradeInListResponse, error)
	ListStockIn(ctx context.Context, in *ListStockInRequest, opts ...grpc.CallOption) (*ServiceStockInListResponse, error)
	ListStockOut(ctx context.Context, in *ListStockOutRequest, opts ...grpc.CallOption) (*ServiceStockOutListResponse, error)
	PartialUpdate(ctx context.Context, in *CtmServicePartialUpdateRequest, opts ...grpc.CallOption) (*CtmServiceResponse, error)
	Retrieve(ctx context.Context, in *CtmServiceRetrieveRequest, opts ...grpc.CallOption) (*CtmServiceResponse, error)
	RetrieveGoodsDeliver(ctx context.Context, in *RetrieveGoodsDeliverRequest, opts ...grpc.CallOption) (*ServiceGoodsDeliverResponse, error)
	RetrieveGoodsInvoice(ctx context.Context, in *RetrieveGoodsInvoiceRequest, opts ...grpc.CallOption) (*ServiceGoodsInvoiceResponse, error)
	RetrieveGoodsPay(ctx context.Context, in *RetrieveGoodsPayRequest, opts ...grpc.CallOption) (*ServiceGoodsPayResponse, error)
	RetrieveGoodsReturn(ctx context.Context, in *RetrieveGoodsReturnRequest, opts ...grpc.CallOption) (*ServiceGoodsReturnResponse, error)
	RetrieveObjectComplain(ctx context.Context, in *RetrieveObjectComplainRequest, opts ...grpc.CallOption) (*ObjectComplainResponse, error)
	RetrieveObjectFeedback(ctx context.Context, in *RetrieveObjectFeedbackRequest, opts ...grpc.CallOption) (*ObjectFeedbackResponse, error)
	RetrieveObjectRepair(ctx context.Context, in *RetrieveObjectRepairRequest, opts ...grpc.CallOption) (*ObjectRepairResponse, error)
	RetrieveObjectSwap(ctx context.Context, in *RetrieveObjectSwapRequest, opts ...grpc.CallOption) (*ObjectSwapResponse, error)
	RetrieveObjectTailor(ctx context.Context, in *RetrieveObjectTailorRequest, opts ...grpc.CallOption) (*ObjectTailorResponse, error)
	RetrieveObjectTradeIn(ctx context.Context, in *RetrieveObjectTradeInRequest, opts ...grpc.CallOption) (*ObjectTradeInResponse, error)
	RetrieveStockIn(ctx context.Context, in *RetrieveStockInRequest, opts ...grpc.CallOption) (*ServiceStockInResponse, error)
	RetrieveStockOut(ctx context.Context, in *RetrieveStockOutRequest, opts ...grpc.CallOption) (*ServiceStockOutResponse, error)
	ServiceNextSid(ctx context.Context, in *ServiceNextSidRequest, opts ...grpc.CallOption) (*ServiceNextSidResponse, error)
	ServiceOptions(ctx context.Context, in *ServiceOptionsRequest, opts ...grpc.CallOption) (*ServiceOptionsResponse, error)
	ServiceStatusCount(ctx context.Context, in *ServiceStatusCountRequest, opts ...grpc.CallOption) (*ServiceStatusCountListResponse, error)
	Update(ctx context.Context, in *CtmServiceRequest, opts ...grpc.CallOption) (*CtmServiceResponse, error)
	UpdateGoodsDeliver(ctx context.Context, in *UpdateGoodsDeliverRequest, opts ...grpc.CallOption) (*ServiceGoodsDeliverResponse, error)
	UpdateGoodsInvoice(ctx context.Context, in *UpdateGoodsInvoiceRequest, opts ...grpc.CallOption) (*ServiceGoodsInvoiceResponse, error)
	UpdateGoodsPay(ctx context.Context, in *UpdateGoodsPayRequest, opts ...grpc.CallOption) (*ServiceGoodsPayResponse, error)
	UpdateGoodsReturn(ctx context.Context, in *UpdateGoodsReturnRequest, opts ...grpc.CallOption) (*ServiceGoodsReturnResponse, error)
	UpdateObjectComplain(ctx context.Context, in *UpdateObjectComplainRequest, opts ...grpc.CallOption) (*ObjectComplainResponse, error)
	UpdateObjectFeedback(ctx context.Context, in *UpdateObjectFeedbackRequest, opts ...grpc.CallOption) (*ObjectFeedbackResponse, error)
	UpdateObjectRepair(ctx context.Context, in *UpdateObjectRepairRequest, opts ...grpc.CallOption) (*ObjectRepairResponse, error)
	UpdateObjectSwap(ctx context.Context, in *UpdateObjectSwapRequest, opts ...grpc.CallOption) (*ObjectSwapResponse, error)
	UpdateObjectTailor(ctx context.Context, in *UpdateObjectTailorRequest, opts ...grpc.CallOption) (*ObjectTailorResponse, error)
	UpdateObjectTradeIn(ctx context.Context, in *UpdateObjectTradeInRequest, opts ...grpc.CallOption) (*ObjectTradeInResponse, error)
	UpdateStockIn(ctx context.Context, in *UpdateStockInRequest, opts ...grpc.CallOption) (*ServiceStockInResponse, error)
	UpdateStockOut(ctx context.Context, in *UpdateStockOutRequest, opts ...grpc.CallOption) (*ServiceStockOutResponse, error)
}

type ctmItoServiceControllerClient struct {
	cc grpc.ClientConnInterface
}

func NewCtmItoServiceControllerClient(cc grpc.ClientConnInterface) CtmItoServiceControllerClient {
	return &ctmItoServiceControllerClient{cc}
}

func (c *ctmItoServiceControllerClient) BulkCreateGoodsDeliver(ctx context.Context, in *BulkCreateGoodsDeliverListRequest, opts ...grpc.CallOption) (*ServiceGoodsDeliverListResponse, error) {
	out := new(ServiceGoodsDeliverListResponse)
	err := c.cc.Invoke(ctx, CtmItoServiceController_BulkCreateGoodsDeliver_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoServiceControllerClient) BulkCreateGoodsReturn(ctx context.Context, in *BulkCreateGoodsReturnListRequest, opts ...grpc.CallOption) (*ServiceGoodsReturnListResponse, error) {
	out := new(ServiceGoodsReturnListResponse)
	err := c.cc.Invoke(ctx, CtmItoServiceController_BulkCreateGoodsReturn_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoServiceControllerClient) Create(ctx context.Context, in *CtmServiceRequest, opts ...grpc.CallOption) (*CtmServiceResponse, error) {
	out := new(CtmServiceResponse)
	err := c.cc.Invoke(ctx, CtmItoServiceController_Create_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoServiceControllerClient) CreateGoodsDeliver(ctx context.Context, in *CreateGoodsDeliverRequest, opts ...grpc.CallOption) (*ServiceGoodsDeliverResponse, error) {
	out := new(ServiceGoodsDeliverResponse)
	err := c.cc.Invoke(ctx, CtmItoServiceController_CreateGoodsDeliver_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoServiceControllerClient) CreateGoodsInvoice(ctx context.Context, in *CreateGoodsInvoiceRequest, opts ...grpc.CallOption) (*ServiceGoodsInvoiceResponse, error) {
	out := new(ServiceGoodsInvoiceResponse)
	err := c.cc.Invoke(ctx, CtmItoServiceController_CreateGoodsInvoice_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoServiceControllerClient) CreateGoodsPay(ctx context.Context, in *CreateGoodsPayRequest, opts ...grpc.CallOption) (*ServiceGoodsPayResponse, error) {
	out := new(ServiceGoodsPayResponse)
	err := c.cc.Invoke(ctx, CtmItoServiceController_CreateGoodsPay_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoServiceControllerClient) CreateGoodsReturn(ctx context.Context, in *CreateGoodsReturnRequest, opts ...grpc.CallOption) (*ServiceGoodsReturnResponse, error) {
	out := new(ServiceGoodsReturnResponse)
	err := c.cc.Invoke(ctx, CtmItoServiceController_CreateGoodsReturn_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoServiceControllerClient) CreateObjectComplain(ctx context.Context, in *CreateObjectComplainRequest, opts ...grpc.CallOption) (*ObjectComplainResponse, error) {
	out := new(ObjectComplainResponse)
	err := c.cc.Invoke(ctx, CtmItoServiceController_CreateObjectComplain_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoServiceControllerClient) CreateObjectFeedback(ctx context.Context, in *CreateObjectFeedbackRequest, opts ...grpc.CallOption) (*ObjectFeedbackResponse, error) {
	out := new(ObjectFeedbackResponse)
	err := c.cc.Invoke(ctx, CtmItoServiceController_CreateObjectFeedback_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoServiceControllerClient) CreateObjectRepair(ctx context.Context, in *CreateObjectRepairRequest, opts ...grpc.CallOption) (*ObjectRepairResponse, error) {
	out := new(ObjectRepairResponse)
	err := c.cc.Invoke(ctx, CtmItoServiceController_CreateObjectRepair_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoServiceControllerClient) CreateObjectSwap(ctx context.Context, in *CreateObjectSwapRequest, opts ...grpc.CallOption) (*ObjectSwapResponse, error) {
	out := new(ObjectSwapResponse)
	err := c.cc.Invoke(ctx, CtmItoServiceController_CreateObjectSwap_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoServiceControllerClient) CreateObjectTailor(ctx context.Context, in *CreateObjectTailorRequest, opts ...grpc.CallOption) (*ObjectTailorResponse, error) {
	out := new(ObjectTailorResponse)
	err := c.cc.Invoke(ctx, CtmItoServiceController_CreateObjectTailor_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoServiceControllerClient) CreateObjectTradeIn(ctx context.Context, in *CreateObjectTradeInRequest, opts ...grpc.CallOption) (*ObjectTradeInResponse, error) {
	out := new(ObjectTradeInResponse)
	err := c.cc.Invoke(ctx, CtmItoServiceController_CreateObjectTradeIn_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoServiceControllerClient) CreateStockIn(ctx context.Context, in *CreateStockInRequest, opts ...grpc.CallOption) (*ServiceStockInResponse, error) {
	out := new(ServiceStockInResponse)
	err := c.cc.Invoke(ctx, CtmItoServiceController_CreateStockIn_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoServiceControllerClient) CreateStockOut(ctx context.Context, in *CreateStockOutRequest, opts ...grpc.CallOption) (*ServiceStockOutResponse, error) {
	out := new(ServiceStockOutResponse)
	err := c.cc.Invoke(ctx, CtmItoServiceController_CreateStockOut_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoServiceControllerClient) Destroy(ctx context.Context, in *CtmServiceDestroyRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, CtmItoServiceController_Destroy_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoServiceControllerClient) DestroyGoodsDeliver(ctx context.Context, in *DestroyGoodsDeliverRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, CtmItoServiceController_DestroyGoodsDeliver_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoServiceControllerClient) DestroyGoodsInvoice(ctx context.Context, in *DestroyGoodsInvoiceRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, CtmItoServiceController_DestroyGoodsInvoice_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoServiceControllerClient) DestroyGoodsPay(ctx context.Context, in *DestroyGoodsPayRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, CtmItoServiceController_DestroyGoodsPay_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoServiceControllerClient) DestroyGoodsReturn(ctx context.Context, in *DestroyGoodsReturnRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, CtmItoServiceController_DestroyGoodsReturn_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoServiceControllerClient) DestroyObjectComplain(ctx context.Context, in *DestroyObjectComplainRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, CtmItoServiceController_DestroyObjectComplain_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoServiceControllerClient) DestroyObjectFeedback(ctx context.Context, in *DestroyObjectFeedbackRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, CtmItoServiceController_DestroyObjectFeedback_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoServiceControllerClient) DestroyObjectRepair(ctx context.Context, in *DestroyObjectRepairRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, CtmItoServiceController_DestroyObjectRepair_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoServiceControllerClient) DestroyObjectSwap(ctx context.Context, in *DestroyObjectSwapRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, CtmItoServiceController_DestroyObjectSwap_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoServiceControllerClient) DestroyObjectTailor(ctx context.Context, in *DestroyObjectTailorRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, CtmItoServiceController_DestroyObjectTailor_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoServiceControllerClient) DestroyObjectTradeIn(ctx context.Context, in *DestroyObjectTradeInRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, CtmItoServiceController_DestroyObjectTradeIn_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoServiceControllerClient) DestroyStockIn(ctx context.Context, in *DestroyStockInRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, CtmItoServiceController_DestroyStockIn_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoServiceControllerClient) DestroyStockOut(ctx context.Context, in *DestroyStockOutRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, CtmItoServiceController_DestroyStockOut_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoServiceControllerClient) List(ctx context.Context, in *CtmServiceListRequest, opts ...grpc.CallOption) (*CtmServiceListResponse, error) {
	out := new(CtmServiceListResponse)
	err := c.cc.Invoke(ctx, CtmItoServiceController_List_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoServiceControllerClient) ListGoodsDeliver(ctx context.Context, in *ListGoodsDeliverRequest, opts ...grpc.CallOption) (*ServiceGoodsDeliverListResponse, error) {
	out := new(ServiceGoodsDeliverListResponse)
	err := c.cc.Invoke(ctx, CtmItoServiceController_ListGoodsDeliver_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoServiceControllerClient) ListGoodsInvoice(ctx context.Context, in *ListGoodsInvoiceRequest, opts ...grpc.CallOption) (*ServiceGoodsInvoiceListResponse, error) {
	out := new(ServiceGoodsInvoiceListResponse)
	err := c.cc.Invoke(ctx, CtmItoServiceController_ListGoodsInvoice_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoServiceControllerClient) ListGoodsPay(ctx context.Context, in *ListGoodsPayRequest, opts ...grpc.CallOption) (*ServiceGoodsPayListResponse, error) {
	out := new(ServiceGoodsPayListResponse)
	err := c.cc.Invoke(ctx, CtmItoServiceController_ListGoodsPay_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoServiceControllerClient) ListGoodsReturn(ctx context.Context, in *ListGoodsReturnRequest, opts ...grpc.CallOption) (*ServiceGoodsReturnListResponse, error) {
	out := new(ServiceGoodsReturnListResponse)
	err := c.cc.Invoke(ctx, CtmItoServiceController_ListGoodsReturn_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoServiceControllerClient) ListObjectComplain(ctx context.Context, in *ListObjectComplainRequest, opts ...grpc.CallOption) (*ObjectComplainListResponse, error) {
	out := new(ObjectComplainListResponse)
	err := c.cc.Invoke(ctx, CtmItoServiceController_ListObjectComplain_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoServiceControllerClient) ListObjectFeedback(ctx context.Context, in *ListObjectFeedbackRequest, opts ...grpc.CallOption) (*ObjectFeedbackListResponse, error) {
	out := new(ObjectFeedbackListResponse)
	err := c.cc.Invoke(ctx, CtmItoServiceController_ListObjectFeedback_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoServiceControllerClient) ListObjectRepair(ctx context.Context, in *ListObjectRepairRequest, opts ...grpc.CallOption) (*ObjectRepairListResponse, error) {
	out := new(ObjectRepairListResponse)
	err := c.cc.Invoke(ctx, CtmItoServiceController_ListObjectRepair_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoServiceControllerClient) ListObjectSwap(ctx context.Context, in *ListObjectSwapRequest, opts ...grpc.CallOption) (*ObjectSwapListResponse, error) {
	out := new(ObjectSwapListResponse)
	err := c.cc.Invoke(ctx, CtmItoServiceController_ListObjectSwap_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoServiceControllerClient) ListObjectTailor(ctx context.Context, in *ListObjectTailorRequest, opts ...grpc.CallOption) (*ObjectTailorListResponse, error) {
	out := new(ObjectTailorListResponse)
	err := c.cc.Invoke(ctx, CtmItoServiceController_ListObjectTailor_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoServiceControllerClient) ListObjectTradeIn(ctx context.Context, in *ListObjectTradeInRequest, opts ...grpc.CallOption) (*ObjectTradeInListResponse, error) {
	out := new(ObjectTradeInListResponse)
	err := c.cc.Invoke(ctx, CtmItoServiceController_ListObjectTradeIn_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoServiceControllerClient) ListStockIn(ctx context.Context, in *ListStockInRequest, opts ...grpc.CallOption) (*ServiceStockInListResponse, error) {
	out := new(ServiceStockInListResponse)
	err := c.cc.Invoke(ctx, CtmItoServiceController_ListStockIn_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoServiceControllerClient) ListStockOut(ctx context.Context, in *ListStockOutRequest, opts ...grpc.CallOption) (*ServiceStockOutListResponse, error) {
	out := new(ServiceStockOutListResponse)
	err := c.cc.Invoke(ctx, CtmItoServiceController_ListStockOut_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoServiceControllerClient) PartialUpdate(ctx context.Context, in *CtmServicePartialUpdateRequest, opts ...grpc.CallOption) (*CtmServiceResponse, error) {
	out := new(CtmServiceResponse)
	err := c.cc.Invoke(ctx, CtmItoServiceController_PartialUpdate_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoServiceControllerClient) Retrieve(ctx context.Context, in *CtmServiceRetrieveRequest, opts ...grpc.CallOption) (*CtmServiceResponse, error) {
	out := new(CtmServiceResponse)
	err := c.cc.Invoke(ctx, CtmItoServiceController_Retrieve_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoServiceControllerClient) RetrieveGoodsDeliver(ctx context.Context, in *RetrieveGoodsDeliverRequest, opts ...grpc.CallOption) (*ServiceGoodsDeliverResponse, error) {
	out := new(ServiceGoodsDeliverResponse)
	err := c.cc.Invoke(ctx, CtmItoServiceController_RetrieveGoodsDeliver_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoServiceControllerClient) RetrieveGoodsInvoice(ctx context.Context, in *RetrieveGoodsInvoiceRequest, opts ...grpc.CallOption) (*ServiceGoodsInvoiceResponse, error) {
	out := new(ServiceGoodsInvoiceResponse)
	err := c.cc.Invoke(ctx, CtmItoServiceController_RetrieveGoodsInvoice_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoServiceControllerClient) RetrieveGoodsPay(ctx context.Context, in *RetrieveGoodsPayRequest, opts ...grpc.CallOption) (*ServiceGoodsPayResponse, error) {
	out := new(ServiceGoodsPayResponse)
	err := c.cc.Invoke(ctx, CtmItoServiceController_RetrieveGoodsPay_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoServiceControllerClient) RetrieveGoodsReturn(ctx context.Context, in *RetrieveGoodsReturnRequest, opts ...grpc.CallOption) (*ServiceGoodsReturnResponse, error) {
	out := new(ServiceGoodsReturnResponse)
	err := c.cc.Invoke(ctx, CtmItoServiceController_RetrieveGoodsReturn_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoServiceControllerClient) RetrieveObjectComplain(ctx context.Context, in *RetrieveObjectComplainRequest, opts ...grpc.CallOption) (*ObjectComplainResponse, error) {
	out := new(ObjectComplainResponse)
	err := c.cc.Invoke(ctx, CtmItoServiceController_RetrieveObjectComplain_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoServiceControllerClient) RetrieveObjectFeedback(ctx context.Context, in *RetrieveObjectFeedbackRequest, opts ...grpc.CallOption) (*ObjectFeedbackResponse, error) {
	out := new(ObjectFeedbackResponse)
	err := c.cc.Invoke(ctx, CtmItoServiceController_RetrieveObjectFeedback_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoServiceControllerClient) RetrieveObjectRepair(ctx context.Context, in *RetrieveObjectRepairRequest, opts ...grpc.CallOption) (*ObjectRepairResponse, error) {
	out := new(ObjectRepairResponse)
	err := c.cc.Invoke(ctx, CtmItoServiceController_RetrieveObjectRepair_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoServiceControllerClient) RetrieveObjectSwap(ctx context.Context, in *RetrieveObjectSwapRequest, opts ...grpc.CallOption) (*ObjectSwapResponse, error) {
	out := new(ObjectSwapResponse)
	err := c.cc.Invoke(ctx, CtmItoServiceController_RetrieveObjectSwap_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoServiceControllerClient) RetrieveObjectTailor(ctx context.Context, in *RetrieveObjectTailorRequest, opts ...grpc.CallOption) (*ObjectTailorResponse, error) {
	out := new(ObjectTailorResponse)
	err := c.cc.Invoke(ctx, CtmItoServiceController_RetrieveObjectTailor_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoServiceControllerClient) RetrieveObjectTradeIn(ctx context.Context, in *RetrieveObjectTradeInRequest, opts ...grpc.CallOption) (*ObjectTradeInResponse, error) {
	out := new(ObjectTradeInResponse)
	err := c.cc.Invoke(ctx, CtmItoServiceController_RetrieveObjectTradeIn_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoServiceControllerClient) RetrieveStockIn(ctx context.Context, in *RetrieveStockInRequest, opts ...grpc.CallOption) (*ServiceStockInResponse, error) {
	out := new(ServiceStockInResponse)
	err := c.cc.Invoke(ctx, CtmItoServiceController_RetrieveStockIn_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoServiceControllerClient) RetrieveStockOut(ctx context.Context, in *RetrieveStockOutRequest, opts ...grpc.CallOption) (*ServiceStockOutResponse, error) {
	out := new(ServiceStockOutResponse)
	err := c.cc.Invoke(ctx, CtmItoServiceController_RetrieveStockOut_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoServiceControllerClient) ServiceNextSid(ctx context.Context, in *ServiceNextSidRequest, opts ...grpc.CallOption) (*ServiceNextSidResponse, error) {
	out := new(ServiceNextSidResponse)
	err := c.cc.Invoke(ctx, CtmItoServiceController_ServiceNextSid_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoServiceControllerClient) ServiceOptions(ctx context.Context, in *ServiceOptionsRequest, opts ...grpc.CallOption) (*ServiceOptionsResponse, error) {
	out := new(ServiceOptionsResponse)
	err := c.cc.Invoke(ctx, CtmItoServiceController_ServiceOptions_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoServiceControllerClient) ServiceStatusCount(ctx context.Context, in *ServiceStatusCountRequest, opts ...grpc.CallOption) (*ServiceStatusCountListResponse, error) {
	out := new(ServiceStatusCountListResponse)
	err := c.cc.Invoke(ctx, CtmItoServiceController_ServiceStatusCount_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoServiceControllerClient) Update(ctx context.Context, in *CtmServiceRequest, opts ...grpc.CallOption) (*CtmServiceResponse, error) {
	out := new(CtmServiceResponse)
	err := c.cc.Invoke(ctx, CtmItoServiceController_Update_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoServiceControllerClient) UpdateGoodsDeliver(ctx context.Context, in *UpdateGoodsDeliverRequest, opts ...grpc.CallOption) (*ServiceGoodsDeliverResponse, error) {
	out := new(ServiceGoodsDeliverResponse)
	err := c.cc.Invoke(ctx, CtmItoServiceController_UpdateGoodsDeliver_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoServiceControllerClient) UpdateGoodsInvoice(ctx context.Context, in *UpdateGoodsInvoiceRequest, opts ...grpc.CallOption) (*ServiceGoodsInvoiceResponse, error) {
	out := new(ServiceGoodsInvoiceResponse)
	err := c.cc.Invoke(ctx, CtmItoServiceController_UpdateGoodsInvoice_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoServiceControllerClient) UpdateGoodsPay(ctx context.Context, in *UpdateGoodsPayRequest, opts ...grpc.CallOption) (*ServiceGoodsPayResponse, error) {
	out := new(ServiceGoodsPayResponse)
	err := c.cc.Invoke(ctx, CtmItoServiceController_UpdateGoodsPay_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoServiceControllerClient) UpdateGoodsReturn(ctx context.Context, in *UpdateGoodsReturnRequest, opts ...grpc.CallOption) (*ServiceGoodsReturnResponse, error) {
	out := new(ServiceGoodsReturnResponse)
	err := c.cc.Invoke(ctx, CtmItoServiceController_UpdateGoodsReturn_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoServiceControllerClient) UpdateObjectComplain(ctx context.Context, in *UpdateObjectComplainRequest, opts ...grpc.CallOption) (*ObjectComplainResponse, error) {
	out := new(ObjectComplainResponse)
	err := c.cc.Invoke(ctx, CtmItoServiceController_UpdateObjectComplain_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoServiceControllerClient) UpdateObjectFeedback(ctx context.Context, in *UpdateObjectFeedbackRequest, opts ...grpc.CallOption) (*ObjectFeedbackResponse, error) {
	out := new(ObjectFeedbackResponse)
	err := c.cc.Invoke(ctx, CtmItoServiceController_UpdateObjectFeedback_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoServiceControllerClient) UpdateObjectRepair(ctx context.Context, in *UpdateObjectRepairRequest, opts ...grpc.CallOption) (*ObjectRepairResponse, error) {
	out := new(ObjectRepairResponse)
	err := c.cc.Invoke(ctx, CtmItoServiceController_UpdateObjectRepair_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoServiceControllerClient) UpdateObjectSwap(ctx context.Context, in *UpdateObjectSwapRequest, opts ...grpc.CallOption) (*ObjectSwapResponse, error) {
	out := new(ObjectSwapResponse)
	err := c.cc.Invoke(ctx, CtmItoServiceController_UpdateObjectSwap_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoServiceControllerClient) UpdateObjectTailor(ctx context.Context, in *UpdateObjectTailorRequest, opts ...grpc.CallOption) (*ObjectTailorResponse, error) {
	out := new(ObjectTailorResponse)
	err := c.cc.Invoke(ctx, CtmItoServiceController_UpdateObjectTailor_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoServiceControllerClient) UpdateObjectTradeIn(ctx context.Context, in *UpdateObjectTradeInRequest, opts ...grpc.CallOption) (*ObjectTradeInResponse, error) {
	out := new(ObjectTradeInResponse)
	err := c.cc.Invoke(ctx, CtmItoServiceController_UpdateObjectTradeIn_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoServiceControllerClient) UpdateStockIn(ctx context.Context, in *UpdateStockInRequest, opts ...grpc.CallOption) (*ServiceStockInResponse, error) {
	out := new(ServiceStockInResponse)
	err := c.cc.Invoke(ctx, CtmItoServiceController_UpdateStockIn_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ctmItoServiceControllerClient) UpdateStockOut(ctx context.Context, in *UpdateStockOutRequest, opts ...grpc.CallOption) (*ServiceStockOutResponse, error) {
	out := new(ServiceStockOutResponse)
	err := c.cc.Invoke(ctx, CtmItoServiceController_UpdateStockOut_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CtmItoServiceControllerServer is the server API for CtmItoServiceController service.
// All implementations must embed UnimplementedCtmItoServiceControllerServer
// for forward compatibility
type CtmItoServiceControllerServer interface {
	BulkCreateGoodsDeliver(context.Context, *BulkCreateGoodsDeliverListRequest) (*ServiceGoodsDeliverListResponse, error)
	BulkCreateGoodsReturn(context.Context, *BulkCreateGoodsReturnListRequest) (*ServiceGoodsReturnListResponse, error)
	Create(context.Context, *CtmServiceRequest) (*CtmServiceResponse, error)
	CreateGoodsDeliver(context.Context, *CreateGoodsDeliverRequest) (*ServiceGoodsDeliverResponse, error)
	CreateGoodsInvoice(context.Context, *CreateGoodsInvoiceRequest) (*ServiceGoodsInvoiceResponse, error)
	CreateGoodsPay(context.Context, *CreateGoodsPayRequest) (*ServiceGoodsPayResponse, error)
	CreateGoodsReturn(context.Context, *CreateGoodsReturnRequest) (*ServiceGoodsReturnResponse, error)
	CreateObjectComplain(context.Context, *CreateObjectComplainRequest) (*ObjectComplainResponse, error)
	CreateObjectFeedback(context.Context, *CreateObjectFeedbackRequest) (*ObjectFeedbackResponse, error)
	CreateObjectRepair(context.Context, *CreateObjectRepairRequest) (*ObjectRepairResponse, error)
	CreateObjectSwap(context.Context, *CreateObjectSwapRequest) (*ObjectSwapResponse, error)
	CreateObjectTailor(context.Context, *CreateObjectTailorRequest) (*ObjectTailorResponse, error)
	CreateObjectTradeIn(context.Context, *CreateObjectTradeInRequest) (*ObjectTradeInResponse, error)
	CreateStockIn(context.Context, *CreateStockInRequest) (*ServiceStockInResponse, error)
	CreateStockOut(context.Context, *CreateStockOutRequest) (*ServiceStockOutResponse, error)
	Destroy(context.Context, *CtmServiceDestroyRequest) (*emptypb.Empty, error)
	DestroyGoodsDeliver(context.Context, *DestroyGoodsDeliverRequest) (*emptypb.Empty, error)
	DestroyGoodsInvoice(context.Context, *DestroyGoodsInvoiceRequest) (*emptypb.Empty, error)
	DestroyGoodsPay(context.Context, *DestroyGoodsPayRequest) (*emptypb.Empty, error)
	DestroyGoodsReturn(context.Context, *DestroyGoodsReturnRequest) (*emptypb.Empty, error)
	DestroyObjectComplain(context.Context, *DestroyObjectComplainRequest) (*emptypb.Empty, error)
	DestroyObjectFeedback(context.Context, *DestroyObjectFeedbackRequest) (*emptypb.Empty, error)
	DestroyObjectRepair(context.Context, *DestroyObjectRepairRequest) (*emptypb.Empty, error)
	DestroyObjectSwap(context.Context, *DestroyObjectSwapRequest) (*emptypb.Empty, error)
	DestroyObjectTailor(context.Context, *DestroyObjectTailorRequest) (*emptypb.Empty, error)
	DestroyObjectTradeIn(context.Context, *DestroyObjectTradeInRequest) (*emptypb.Empty, error)
	DestroyStockIn(context.Context, *DestroyStockInRequest) (*emptypb.Empty, error)
	DestroyStockOut(context.Context, *DestroyStockOutRequest) (*emptypb.Empty, error)
	List(context.Context, *CtmServiceListRequest) (*CtmServiceListResponse, error)
	ListGoodsDeliver(context.Context, *ListGoodsDeliverRequest) (*ServiceGoodsDeliverListResponse, error)
	ListGoodsInvoice(context.Context, *ListGoodsInvoiceRequest) (*ServiceGoodsInvoiceListResponse, error)
	ListGoodsPay(context.Context, *ListGoodsPayRequest) (*ServiceGoodsPayListResponse, error)
	ListGoodsReturn(context.Context, *ListGoodsReturnRequest) (*ServiceGoodsReturnListResponse, error)
	ListObjectComplain(context.Context, *ListObjectComplainRequest) (*ObjectComplainListResponse, error)
	ListObjectFeedback(context.Context, *ListObjectFeedbackRequest) (*ObjectFeedbackListResponse, error)
	ListObjectRepair(context.Context, *ListObjectRepairRequest) (*ObjectRepairListResponse, error)
	ListObjectSwap(context.Context, *ListObjectSwapRequest) (*ObjectSwapListResponse, error)
	ListObjectTailor(context.Context, *ListObjectTailorRequest) (*ObjectTailorListResponse, error)
	ListObjectTradeIn(context.Context, *ListObjectTradeInRequest) (*ObjectTradeInListResponse, error)
	ListStockIn(context.Context, *ListStockInRequest) (*ServiceStockInListResponse, error)
	ListStockOut(context.Context, *ListStockOutRequest) (*ServiceStockOutListResponse, error)
	PartialUpdate(context.Context, *CtmServicePartialUpdateRequest) (*CtmServiceResponse, error)
	Retrieve(context.Context, *CtmServiceRetrieveRequest) (*CtmServiceResponse, error)
	RetrieveGoodsDeliver(context.Context, *RetrieveGoodsDeliverRequest) (*ServiceGoodsDeliverResponse, error)
	RetrieveGoodsInvoice(context.Context, *RetrieveGoodsInvoiceRequest) (*ServiceGoodsInvoiceResponse, error)
	RetrieveGoodsPay(context.Context, *RetrieveGoodsPayRequest) (*ServiceGoodsPayResponse, error)
	RetrieveGoodsReturn(context.Context, *RetrieveGoodsReturnRequest) (*ServiceGoodsReturnResponse, error)
	RetrieveObjectComplain(context.Context, *RetrieveObjectComplainRequest) (*ObjectComplainResponse, error)
	RetrieveObjectFeedback(context.Context, *RetrieveObjectFeedbackRequest) (*ObjectFeedbackResponse, error)
	RetrieveObjectRepair(context.Context, *RetrieveObjectRepairRequest) (*ObjectRepairResponse, error)
	RetrieveObjectSwap(context.Context, *RetrieveObjectSwapRequest) (*ObjectSwapResponse, error)
	RetrieveObjectTailor(context.Context, *RetrieveObjectTailorRequest) (*ObjectTailorResponse, error)
	RetrieveObjectTradeIn(context.Context, *RetrieveObjectTradeInRequest) (*ObjectTradeInResponse, error)
	RetrieveStockIn(context.Context, *RetrieveStockInRequest) (*ServiceStockInResponse, error)
	RetrieveStockOut(context.Context, *RetrieveStockOutRequest) (*ServiceStockOutResponse, error)
	ServiceNextSid(context.Context, *ServiceNextSidRequest) (*ServiceNextSidResponse, error)
	ServiceOptions(context.Context, *ServiceOptionsRequest) (*ServiceOptionsResponse, error)
	ServiceStatusCount(context.Context, *ServiceStatusCountRequest) (*ServiceStatusCountListResponse, error)
	Update(context.Context, *CtmServiceRequest) (*CtmServiceResponse, error)
	UpdateGoodsDeliver(context.Context, *UpdateGoodsDeliverRequest) (*ServiceGoodsDeliverResponse, error)
	UpdateGoodsInvoice(context.Context, *UpdateGoodsInvoiceRequest) (*ServiceGoodsInvoiceResponse, error)
	UpdateGoodsPay(context.Context, *UpdateGoodsPayRequest) (*ServiceGoodsPayResponse, error)
	UpdateGoodsReturn(context.Context, *UpdateGoodsReturnRequest) (*ServiceGoodsReturnResponse, error)
	UpdateObjectComplain(context.Context, *UpdateObjectComplainRequest) (*ObjectComplainResponse, error)
	UpdateObjectFeedback(context.Context, *UpdateObjectFeedbackRequest) (*ObjectFeedbackResponse, error)
	UpdateObjectRepair(context.Context, *UpdateObjectRepairRequest) (*ObjectRepairResponse, error)
	UpdateObjectSwap(context.Context, *UpdateObjectSwapRequest) (*ObjectSwapResponse, error)
	UpdateObjectTailor(context.Context, *UpdateObjectTailorRequest) (*ObjectTailorResponse, error)
	UpdateObjectTradeIn(context.Context, *UpdateObjectTradeInRequest) (*ObjectTradeInResponse, error)
	UpdateStockIn(context.Context, *UpdateStockInRequest) (*ServiceStockInResponse, error)
	UpdateStockOut(context.Context, *UpdateStockOutRequest) (*ServiceStockOutResponse, error)
	mustEmbedUnimplementedCtmItoServiceControllerServer()
}

// UnimplementedCtmItoServiceControllerServer must be embedded to have forward compatible implementations.
type UnimplementedCtmItoServiceControllerServer struct {
}

func (UnimplementedCtmItoServiceControllerServer) BulkCreateGoodsDeliver(context.Context, *BulkCreateGoodsDeliverListRequest) (*ServiceGoodsDeliverListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BulkCreateGoodsDeliver not implemented")
}
func (UnimplementedCtmItoServiceControllerServer) BulkCreateGoodsReturn(context.Context, *BulkCreateGoodsReturnListRequest) (*ServiceGoodsReturnListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BulkCreateGoodsReturn not implemented")
}
func (UnimplementedCtmItoServiceControllerServer) Create(context.Context, *CtmServiceRequest) (*CtmServiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (UnimplementedCtmItoServiceControllerServer) CreateGoodsDeliver(context.Context, *CreateGoodsDeliverRequest) (*ServiceGoodsDeliverResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateGoodsDeliver not implemented")
}
func (UnimplementedCtmItoServiceControllerServer) CreateGoodsInvoice(context.Context, *CreateGoodsInvoiceRequest) (*ServiceGoodsInvoiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateGoodsInvoice not implemented")
}
func (UnimplementedCtmItoServiceControllerServer) CreateGoodsPay(context.Context, *CreateGoodsPayRequest) (*ServiceGoodsPayResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateGoodsPay not implemented")
}
func (UnimplementedCtmItoServiceControllerServer) CreateGoodsReturn(context.Context, *CreateGoodsReturnRequest) (*ServiceGoodsReturnResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateGoodsReturn not implemented")
}
func (UnimplementedCtmItoServiceControllerServer) CreateObjectComplain(context.Context, *CreateObjectComplainRequest) (*ObjectComplainResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateObjectComplain not implemented")
}
func (UnimplementedCtmItoServiceControllerServer) CreateObjectFeedback(context.Context, *CreateObjectFeedbackRequest) (*ObjectFeedbackResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateObjectFeedback not implemented")
}
func (UnimplementedCtmItoServiceControllerServer) CreateObjectRepair(context.Context, *CreateObjectRepairRequest) (*ObjectRepairResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateObjectRepair not implemented")
}
func (UnimplementedCtmItoServiceControllerServer) CreateObjectSwap(context.Context, *CreateObjectSwapRequest) (*ObjectSwapResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateObjectSwap not implemented")
}
func (UnimplementedCtmItoServiceControllerServer) CreateObjectTailor(context.Context, *CreateObjectTailorRequest) (*ObjectTailorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateObjectTailor not implemented")
}
func (UnimplementedCtmItoServiceControllerServer) CreateObjectTradeIn(context.Context, *CreateObjectTradeInRequest) (*ObjectTradeInResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateObjectTradeIn not implemented")
}
func (UnimplementedCtmItoServiceControllerServer) CreateStockIn(context.Context, *CreateStockInRequest) (*ServiceStockInResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateStockIn not implemented")
}
func (UnimplementedCtmItoServiceControllerServer) CreateStockOut(context.Context, *CreateStockOutRequest) (*ServiceStockOutResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateStockOut not implemented")
}
func (UnimplementedCtmItoServiceControllerServer) Destroy(context.Context, *CtmServiceDestroyRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Destroy not implemented")
}
func (UnimplementedCtmItoServiceControllerServer) DestroyGoodsDeliver(context.Context, *DestroyGoodsDeliverRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DestroyGoodsDeliver not implemented")
}
func (UnimplementedCtmItoServiceControllerServer) DestroyGoodsInvoice(context.Context, *DestroyGoodsInvoiceRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DestroyGoodsInvoice not implemented")
}
func (UnimplementedCtmItoServiceControllerServer) DestroyGoodsPay(context.Context, *DestroyGoodsPayRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DestroyGoodsPay not implemented")
}
func (UnimplementedCtmItoServiceControllerServer) DestroyGoodsReturn(context.Context, *DestroyGoodsReturnRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DestroyGoodsReturn not implemented")
}
func (UnimplementedCtmItoServiceControllerServer) DestroyObjectComplain(context.Context, *DestroyObjectComplainRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DestroyObjectComplain not implemented")
}
func (UnimplementedCtmItoServiceControllerServer) DestroyObjectFeedback(context.Context, *DestroyObjectFeedbackRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DestroyObjectFeedback not implemented")
}
func (UnimplementedCtmItoServiceControllerServer) DestroyObjectRepair(context.Context, *DestroyObjectRepairRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DestroyObjectRepair not implemented")
}
func (UnimplementedCtmItoServiceControllerServer) DestroyObjectSwap(context.Context, *DestroyObjectSwapRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DestroyObjectSwap not implemented")
}
func (UnimplementedCtmItoServiceControllerServer) DestroyObjectTailor(context.Context, *DestroyObjectTailorRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DestroyObjectTailor not implemented")
}
func (UnimplementedCtmItoServiceControllerServer) DestroyObjectTradeIn(context.Context, *DestroyObjectTradeInRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DestroyObjectTradeIn not implemented")
}
func (UnimplementedCtmItoServiceControllerServer) DestroyStockIn(context.Context, *DestroyStockInRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DestroyStockIn not implemented")
}
func (UnimplementedCtmItoServiceControllerServer) DestroyStockOut(context.Context, *DestroyStockOutRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DestroyStockOut not implemented")
}
func (UnimplementedCtmItoServiceControllerServer) List(context.Context, *CtmServiceListRequest) (*CtmServiceListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (UnimplementedCtmItoServiceControllerServer) ListGoodsDeliver(context.Context, *ListGoodsDeliverRequest) (*ServiceGoodsDeliverListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListGoodsDeliver not implemented")
}
func (UnimplementedCtmItoServiceControllerServer) ListGoodsInvoice(context.Context, *ListGoodsInvoiceRequest) (*ServiceGoodsInvoiceListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListGoodsInvoice not implemented")
}
func (UnimplementedCtmItoServiceControllerServer) ListGoodsPay(context.Context, *ListGoodsPayRequest) (*ServiceGoodsPayListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListGoodsPay not implemented")
}
func (UnimplementedCtmItoServiceControllerServer) ListGoodsReturn(context.Context, *ListGoodsReturnRequest) (*ServiceGoodsReturnListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListGoodsReturn not implemented")
}
func (UnimplementedCtmItoServiceControllerServer) ListObjectComplain(context.Context, *ListObjectComplainRequest) (*ObjectComplainListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListObjectComplain not implemented")
}
func (UnimplementedCtmItoServiceControllerServer) ListObjectFeedback(context.Context, *ListObjectFeedbackRequest) (*ObjectFeedbackListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListObjectFeedback not implemented")
}
func (UnimplementedCtmItoServiceControllerServer) ListObjectRepair(context.Context, *ListObjectRepairRequest) (*ObjectRepairListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListObjectRepair not implemented")
}
func (UnimplementedCtmItoServiceControllerServer) ListObjectSwap(context.Context, *ListObjectSwapRequest) (*ObjectSwapListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListObjectSwap not implemented")
}
func (UnimplementedCtmItoServiceControllerServer) ListObjectTailor(context.Context, *ListObjectTailorRequest) (*ObjectTailorListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListObjectTailor not implemented")
}
func (UnimplementedCtmItoServiceControllerServer) ListObjectTradeIn(context.Context, *ListObjectTradeInRequest) (*ObjectTradeInListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListObjectTradeIn not implemented")
}
func (UnimplementedCtmItoServiceControllerServer) ListStockIn(context.Context, *ListStockInRequest) (*ServiceStockInListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListStockIn not implemented")
}
func (UnimplementedCtmItoServiceControllerServer) ListStockOut(context.Context, *ListStockOutRequest) (*ServiceStockOutListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListStockOut not implemented")
}
func (UnimplementedCtmItoServiceControllerServer) PartialUpdate(context.Context, *CtmServicePartialUpdateRequest) (*CtmServiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PartialUpdate not implemented")
}
func (UnimplementedCtmItoServiceControllerServer) Retrieve(context.Context, *CtmServiceRetrieveRequest) (*CtmServiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Retrieve not implemented")
}
func (UnimplementedCtmItoServiceControllerServer) RetrieveGoodsDeliver(context.Context, *RetrieveGoodsDeliverRequest) (*ServiceGoodsDeliverResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RetrieveGoodsDeliver not implemented")
}
func (UnimplementedCtmItoServiceControllerServer) RetrieveGoodsInvoice(context.Context, *RetrieveGoodsInvoiceRequest) (*ServiceGoodsInvoiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RetrieveGoodsInvoice not implemented")
}
func (UnimplementedCtmItoServiceControllerServer) RetrieveGoodsPay(context.Context, *RetrieveGoodsPayRequest) (*ServiceGoodsPayResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RetrieveGoodsPay not implemented")
}
func (UnimplementedCtmItoServiceControllerServer) RetrieveGoodsReturn(context.Context, *RetrieveGoodsReturnRequest) (*ServiceGoodsReturnResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RetrieveGoodsReturn not implemented")
}
func (UnimplementedCtmItoServiceControllerServer) RetrieveObjectComplain(context.Context, *RetrieveObjectComplainRequest) (*ObjectComplainResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RetrieveObjectComplain not implemented")
}
func (UnimplementedCtmItoServiceControllerServer) RetrieveObjectFeedback(context.Context, *RetrieveObjectFeedbackRequest) (*ObjectFeedbackResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RetrieveObjectFeedback not implemented")
}
func (UnimplementedCtmItoServiceControllerServer) RetrieveObjectRepair(context.Context, *RetrieveObjectRepairRequest) (*ObjectRepairResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RetrieveObjectRepair not implemented")
}
func (UnimplementedCtmItoServiceControllerServer) RetrieveObjectSwap(context.Context, *RetrieveObjectSwapRequest) (*ObjectSwapResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RetrieveObjectSwap not implemented")
}
func (UnimplementedCtmItoServiceControllerServer) RetrieveObjectTailor(context.Context, *RetrieveObjectTailorRequest) (*ObjectTailorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RetrieveObjectTailor not implemented")
}
func (UnimplementedCtmItoServiceControllerServer) RetrieveObjectTradeIn(context.Context, *RetrieveObjectTradeInRequest) (*ObjectTradeInResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RetrieveObjectTradeIn not implemented")
}
func (UnimplementedCtmItoServiceControllerServer) RetrieveStockIn(context.Context, *RetrieveStockInRequest) (*ServiceStockInResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RetrieveStockIn not implemented")
}
func (UnimplementedCtmItoServiceControllerServer) RetrieveStockOut(context.Context, *RetrieveStockOutRequest) (*ServiceStockOutResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RetrieveStockOut not implemented")
}
func (UnimplementedCtmItoServiceControllerServer) ServiceNextSid(context.Context, *ServiceNextSidRequest) (*ServiceNextSidResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ServiceNextSid not implemented")
}
func (UnimplementedCtmItoServiceControllerServer) ServiceOptions(context.Context, *ServiceOptionsRequest) (*ServiceOptionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ServiceOptions not implemented")
}
func (UnimplementedCtmItoServiceControllerServer) ServiceStatusCount(context.Context, *ServiceStatusCountRequest) (*ServiceStatusCountListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ServiceStatusCount not implemented")
}
func (UnimplementedCtmItoServiceControllerServer) Update(context.Context, *CtmServiceRequest) (*CtmServiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (UnimplementedCtmItoServiceControllerServer) UpdateGoodsDeliver(context.Context, *UpdateGoodsDeliverRequest) (*ServiceGoodsDeliverResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateGoodsDeliver not implemented")
}
func (UnimplementedCtmItoServiceControllerServer) UpdateGoodsInvoice(context.Context, *UpdateGoodsInvoiceRequest) (*ServiceGoodsInvoiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateGoodsInvoice not implemented")
}
func (UnimplementedCtmItoServiceControllerServer) UpdateGoodsPay(context.Context, *UpdateGoodsPayRequest) (*ServiceGoodsPayResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateGoodsPay not implemented")
}
func (UnimplementedCtmItoServiceControllerServer) UpdateGoodsReturn(context.Context, *UpdateGoodsReturnRequest) (*ServiceGoodsReturnResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateGoodsReturn not implemented")
}
func (UnimplementedCtmItoServiceControllerServer) UpdateObjectComplain(context.Context, *UpdateObjectComplainRequest) (*ObjectComplainResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateObjectComplain not implemented")
}
func (UnimplementedCtmItoServiceControllerServer) UpdateObjectFeedback(context.Context, *UpdateObjectFeedbackRequest) (*ObjectFeedbackResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateObjectFeedback not implemented")
}
func (UnimplementedCtmItoServiceControllerServer) UpdateObjectRepair(context.Context, *UpdateObjectRepairRequest) (*ObjectRepairResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateObjectRepair not implemented")
}
func (UnimplementedCtmItoServiceControllerServer) UpdateObjectSwap(context.Context, *UpdateObjectSwapRequest) (*ObjectSwapResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateObjectSwap not implemented")
}
func (UnimplementedCtmItoServiceControllerServer) UpdateObjectTailor(context.Context, *UpdateObjectTailorRequest) (*ObjectTailorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateObjectTailor not implemented")
}
func (UnimplementedCtmItoServiceControllerServer) UpdateObjectTradeIn(context.Context, *UpdateObjectTradeInRequest) (*ObjectTradeInResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateObjectTradeIn not implemented")
}
func (UnimplementedCtmItoServiceControllerServer) UpdateStockIn(context.Context, *UpdateStockInRequest) (*ServiceStockInResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateStockIn not implemented")
}
func (UnimplementedCtmItoServiceControllerServer) UpdateStockOut(context.Context, *UpdateStockOutRequest) (*ServiceStockOutResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateStockOut not implemented")
}
func (UnimplementedCtmItoServiceControllerServer) mustEmbedUnimplementedCtmItoServiceControllerServer() {
}

// UnsafeCtmItoServiceControllerServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to CtmItoServiceControllerServer will
// result in compilation errors.
type UnsafeCtmItoServiceControllerServer interface {
	mustEmbedUnimplementedCtmItoServiceControllerServer()
}

func RegisterCtmItoServiceControllerServer(s grpc.ServiceRegistrar, srv CtmItoServiceControllerServer) {
	s.RegisterService(&CtmItoServiceController_ServiceDesc, srv)
}

func _CtmItoServiceController_BulkCreateGoodsDeliver_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BulkCreateGoodsDeliverListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoServiceControllerServer).BulkCreateGoodsDeliver(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoServiceController_BulkCreateGoodsDeliver_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoServiceControllerServer).BulkCreateGoodsDeliver(ctx, req.(*BulkCreateGoodsDeliverListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoServiceController_BulkCreateGoodsReturn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BulkCreateGoodsReturnListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoServiceControllerServer).BulkCreateGoodsReturn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoServiceController_BulkCreateGoodsReturn_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoServiceControllerServer).BulkCreateGoodsReturn(ctx, req.(*BulkCreateGoodsReturnListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoServiceController_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CtmServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoServiceControllerServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoServiceController_Create_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoServiceControllerServer).Create(ctx, req.(*CtmServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoServiceController_CreateGoodsDeliver_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateGoodsDeliverRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoServiceControllerServer).CreateGoodsDeliver(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoServiceController_CreateGoodsDeliver_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoServiceControllerServer).CreateGoodsDeliver(ctx, req.(*CreateGoodsDeliverRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoServiceController_CreateGoodsInvoice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateGoodsInvoiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoServiceControllerServer).CreateGoodsInvoice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoServiceController_CreateGoodsInvoice_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoServiceControllerServer).CreateGoodsInvoice(ctx, req.(*CreateGoodsInvoiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoServiceController_CreateGoodsPay_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateGoodsPayRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoServiceControllerServer).CreateGoodsPay(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoServiceController_CreateGoodsPay_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoServiceControllerServer).CreateGoodsPay(ctx, req.(*CreateGoodsPayRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoServiceController_CreateGoodsReturn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateGoodsReturnRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoServiceControllerServer).CreateGoodsReturn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoServiceController_CreateGoodsReturn_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoServiceControllerServer).CreateGoodsReturn(ctx, req.(*CreateGoodsReturnRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoServiceController_CreateObjectComplain_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateObjectComplainRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoServiceControllerServer).CreateObjectComplain(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoServiceController_CreateObjectComplain_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoServiceControllerServer).CreateObjectComplain(ctx, req.(*CreateObjectComplainRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoServiceController_CreateObjectFeedback_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateObjectFeedbackRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoServiceControllerServer).CreateObjectFeedback(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoServiceController_CreateObjectFeedback_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoServiceControllerServer).CreateObjectFeedback(ctx, req.(*CreateObjectFeedbackRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoServiceController_CreateObjectRepair_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateObjectRepairRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoServiceControllerServer).CreateObjectRepair(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoServiceController_CreateObjectRepair_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoServiceControllerServer).CreateObjectRepair(ctx, req.(*CreateObjectRepairRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoServiceController_CreateObjectSwap_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateObjectSwapRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoServiceControllerServer).CreateObjectSwap(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoServiceController_CreateObjectSwap_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoServiceControllerServer).CreateObjectSwap(ctx, req.(*CreateObjectSwapRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoServiceController_CreateObjectTailor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateObjectTailorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoServiceControllerServer).CreateObjectTailor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoServiceController_CreateObjectTailor_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoServiceControllerServer).CreateObjectTailor(ctx, req.(*CreateObjectTailorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoServiceController_CreateObjectTradeIn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateObjectTradeInRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoServiceControllerServer).CreateObjectTradeIn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoServiceController_CreateObjectTradeIn_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoServiceControllerServer).CreateObjectTradeIn(ctx, req.(*CreateObjectTradeInRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoServiceController_CreateStockIn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateStockInRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoServiceControllerServer).CreateStockIn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoServiceController_CreateStockIn_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoServiceControllerServer).CreateStockIn(ctx, req.(*CreateStockInRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoServiceController_CreateStockOut_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateStockOutRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoServiceControllerServer).CreateStockOut(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoServiceController_CreateStockOut_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoServiceControllerServer).CreateStockOut(ctx, req.(*CreateStockOutRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoServiceController_Destroy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CtmServiceDestroyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoServiceControllerServer).Destroy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoServiceController_Destroy_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoServiceControllerServer).Destroy(ctx, req.(*CtmServiceDestroyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoServiceController_DestroyGoodsDeliver_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DestroyGoodsDeliverRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoServiceControllerServer).DestroyGoodsDeliver(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoServiceController_DestroyGoodsDeliver_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoServiceControllerServer).DestroyGoodsDeliver(ctx, req.(*DestroyGoodsDeliverRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoServiceController_DestroyGoodsInvoice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DestroyGoodsInvoiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoServiceControllerServer).DestroyGoodsInvoice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoServiceController_DestroyGoodsInvoice_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoServiceControllerServer).DestroyGoodsInvoice(ctx, req.(*DestroyGoodsInvoiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoServiceController_DestroyGoodsPay_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DestroyGoodsPayRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoServiceControllerServer).DestroyGoodsPay(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoServiceController_DestroyGoodsPay_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoServiceControllerServer).DestroyGoodsPay(ctx, req.(*DestroyGoodsPayRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoServiceController_DestroyGoodsReturn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DestroyGoodsReturnRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoServiceControllerServer).DestroyGoodsReturn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoServiceController_DestroyGoodsReturn_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoServiceControllerServer).DestroyGoodsReturn(ctx, req.(*DestroyGoodsReturnRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoServiceController_DestroyObjectComplain_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DestroyObjectComplainRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoServiceControllerServer).DestroyObjectComplain(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoServiceController_DestroyObjectComplain_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoServiceControllerServer).DestroyObjectComplain(ctx, req.(*DestroyObjectComplainRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoServiceController_DestroyObjectFeedback_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DestroyObjectFeedbackRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoServiceControllerServer).DestroyObjectFeedback(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoServiceController_DestroyObjectFeedback_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoServiceControllerServer).DestroyObjectFeedback(ctx, req.(*DestroyObjectFeedbackRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoServiceController_DestroyObjectRepair_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DestroyObjectRepairRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoServiceControllerServer).DestroyObjectRepair(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoServiceController_DestroyObjectRepair_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoServiceControllerServer).DestroyObjectRepair(ctx, req.(*DestroyObjectRepairRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoServiceController_DestroyObjectSwap_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DestroyObjectSwapRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoServiceControllerServer).DestroyObjectSwap(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoServiceController_DestroyObjectSwap_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoServiceControllerServer).DestroyObjectSwap(ctx, req.(*DestroyObjectSwapRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoServiceController_DestroyObjectTailor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DestroyObjectTailorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoServiceControllerServer).DestroyObjectTailor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoServiceController_DestroyObjectTailor_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoServiceControllerServer).DestroyObjectTailor(ctx, req.(*DestroyObjectTailorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoServiceController_DestroyObjectTradeIn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DestroyObjectTradeInRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoServiceControllerServer).DestroyObjectTradeIn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoServiceController_DestroyObjectTradeIn_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoServiceControllerServer).DestroyObjectTradeIn(ctx, req.(*DestroyObjectTradeInRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoServiceController_DestroyStockIn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DestroyStockInRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoServiceControllerServer).DestroyStockIn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoServiceController_DestroyStockIn_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoServiceControllerServer).DestroyStockIn(ctx, req.(*DestroyStockInRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoServiceController_DestroyStockOut_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DestroyStockOutRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoServiceControllerServer).DestroyStockOut(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoServiceController_DestroyStockOut_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoServiceControllerServer).DestroyStockOut(ctx, req.(*DestroyStockOutRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoServiceController_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CtmServiceListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoServiceControllerServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoServiceController_List_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoServiceControllerServer).List(ctx, req.(*CtmServiceListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoServiceController_ListGoodsDeliver_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListGoodsDeliverRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoServiceControllerServer).ListGoodsDeliver(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoServiceController_ListGoodsDeliver_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoServiceControllerServer).ListGoodsDeliver(ctx, req.(*ListGoodsDeliverRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoServiceController_ListGoodsInvoice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListGoodsInvoiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoServiceControllerServer).ListGoodsInvoice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoServiceController_ListGoodsInvoice_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoServiceControllerServer).ListGoodsInvoice(ctx, req.(*ListGoodsInvoiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoServiceController_ListGoodsPay_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListGoodsPayRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoServiceControllerServer).ListGoodsPay(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoServiceController_ListGoodsPay_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoServiceControllerServer).ListGoodsPay(ctx, req.(*ListGoodsPayRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoServiceController_ListGoodsReturn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListGoodsReturnRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoServiceControllerServer).ListGoodsReturn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoServiceController_ListGoodsReturn_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoServiceControllerServer).ListGoodsReturn(ctx, req.(*ListGoodsReturnRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoServiceController_ListObjectComplain_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListObjectComplainRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoServiceControllerServer).ListObjectComplain(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoServiceController_ListObjectComplain_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoServiceControllerServer).ListObjectComplain(ctx, req.(*ListObjectComplainRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoServiceController_ListObjectFeedback_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListObjectFeedbackRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoServiceControllerServer).ListObjectFeedback(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoServiceController_ListObjectFeedback_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoServiceControllerServer).ListObjectFeedback(ctx, req.(*ListObjectFeedbackRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoServiceController_ListObjectRepair_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListObjectRepairRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoServiceControllerServer).ListObjectRepair(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoServiceController_ListObjectRepair_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoServiceControllerServer).ListObjectRepair(ctx, req.(*ListObjectRepairRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoServiceController_ListObjectSwap_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListObjectSwapRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoServiceControllerServer).ListObjectSwap(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoServiceController_ListObjectSwap_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoServiceControllerServer).ListObjectSwap(ctx, req.(*ListObjectSwapRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoServiceController_ListObjectTailor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListObjectTailorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoServiceControllerServer).ListObjectTailor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoServiceController_ListObjectTailor_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoServiceControllerServer).ListObjectTailor(ctx, req.(*ListObjectTailorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoServiceController_ListObjectTradeIn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListObjectTradeInRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoServiceControllerServer).ListObjectTradeIn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoServiceController_ListObjectTradeIn_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoServiceControllerServer).ListObjectTradeIn(ctx, req.(*ListObjectTradeInRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoServiceController_ListStockIn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListStockInRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoServiceControllerServer).ListStockIn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoServiceController_ListStockIn_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoServiceControllerServer).ListStockIn(ctx, req.(*ListStockInRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoServiceController_ListStockOut_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListStockOutRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoServiceControllerServer).ListStockOut(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoServiceController_ListStockOut_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoServiceControllerServer).ListStockOut(ctx, req.(*ListStockOutRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoServiceController_PartialUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CtmServicePartialUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoServiceControllerServer).PartialUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoServiceController_PartialUpdate_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoServiceControllerServer).PartialUpdate(ctx, req.(*CtmServicePartialUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoServiceController_Retrieve_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CtmServiceRetrieveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoServiceControllerServer).Retrieve(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoServiceController_Retrieve_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoServiceControllerServer).Retrieve(ctx, req.(*CtmServiceRetrieveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoServiceController_RetrieveGoodsDeliver_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RetrieveGoodsDeliverRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoServiceControllerServer).RetrieveGoodsDeliver(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoServiceController_RetrieveGoodsDeliver_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoServiceControllerServer).RetrieveGoodsDeliver(ctx, req.(*RetrieveGoodsDeliverRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoServiceController_RetrieveGoodsInvoice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RetrieveGoodsInvoiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoServiceControllerServer).RetrieveGoodsInvoice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoServiceController_RetrieveGoodsInvoice_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoServiceControllerServer).RetrieveGoodsInvoice(ctx, req.(*RetrieveGoodsInvoiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoServiceController_RetrieveGoodsPay_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RetrieveGoodsPayRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoServiceControllerServer).RetrieveGoodsPay(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoServiceController_RetrieveGoodsPay_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoServiceControllerServer).RetrieveGoodsPay(ctx, req.(*RetrieveGoodsPayRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoServiceController_RetrieveGoodsReturn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RetrieveGoodsReturnRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoServiceControllerServer).RetrieveGoodsReturn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoServiceController_RetrieveGoodsReturn_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoServiceControllerServer).RetrieveGoodsReturn(ctx, req.(*RetrieveGoodsReturnRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoServiceController_RetrieveObjectComplain_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RetrieveObjectComplainRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoServiceControllerServer).RetrieveObjectComplain(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoServiceController_RetrieveObjectComplain_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoServiceControllerServer).RetrieveObjectComplain(ctx, req.(*RetrieveObjectComplainRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoServiceController_RetrieveObjectFeedback_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RetrieveObjectFeedbackRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoServiceControllerServer).RetrieveObjectFeedback(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoServiceController_RetrieveObjectFeedback_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoServiceControllerServer).RetrieveObjectFeedback(ctx, req.(*RetrieveObjectFeedbackRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoServiceController_RetrieveObjectRepair_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RetrieveObjectRepairRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoServiceControllerServer).RetrieveObjectRepair(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoServiceController_RetrieveObjectRepair_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoServiceControllerServer).RetrieveObjectRepair(ctx, req.(*RetrieveObjectRepairRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoServiceController_RetrieveObjectSwap_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RetrieveObjectSwapRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoServiceControllerServer).RetrieveObjectSwap(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoServiceController_RetrieveObjectSwap_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoServiceControllerServer).RetrieveObjectSwap(ctx, req.(*RetrieveObjectSwapRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoServiceController_RetrieveObjectTailor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RetrieveObjectTailorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoServiceControllerServer).RetrieveObjectTailor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoServiceController_RetrieveObjectTailor_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoServiceControllerServer).RetrieveObjectTailor(ctx, req.(*RetrieveObjectTailorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoServiceController_RetrieveObjectTradeIn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RetrieveObjectTradeInRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoServiceControllerServer).RetrieveObjectTradeIn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoServiceController_RetrieveObjectTradeIn_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoServiceControllerServer).RetrieveObjectTradeIn(ctx, req.(*RetrieveObjectTradeInRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoServiceController_RetrieveStockIn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RetrieveStockInRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoServiceControllerServer).RetrieveStockIn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoServiceController_RetrieveStockIn_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoServiceControllerServer).RetrieveStockIn(ctx, req.(*RetrieveStockInRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoServiceController_RetrieveStockOut_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RetrieveStockOutRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoServiceControllerServer).RetrieveStockOut(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoServiceController_RetrieveStockOut_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoServiceControllerServer).RetrieveStockOut(ctx, req.(*RetrieveStockOutRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoServiceController_ServiceNextSid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ServiceNextSidRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoServiceControllerServer).ServiceNextSid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoServiceController_ServiceNextSid_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoServiceControllerServer).ServiceNextSid(ctx, req.(*ServiceNextSidRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoServiceController_ServiceOptions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ServiceOptionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoServiceControllerServer).ServiceOptions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoServiceController_ServiceOptions_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoServiceControllerServer).ServiceOptions(ctx, req.(*ServiceOptionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoServiceController_ServiceStatusCount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ServiceStatusCountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoServiceControllerServer).ServiceStatusCount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoServiceController_ServiceStatusCount_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoServiceControllerServer).ServiceStatusCount(ctx, req.(*ServiceStatusCountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoServiceController_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CtmServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoServiceControllerServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoServiceController_Update_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoServiceControllerServer).Update(ctx, req.(*CtmServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoServiceController_UpdateGoodsDeliver_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateGoodsDeliverRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoServiceControllerServer).UpdateGoodsDeliver(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoServiceController_UpdateGoodsDeliver_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoServiceControllerServer).UpdateGoodsDeliver(ctx, req.(*UpdateGoodsDeliverRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoServiceController_UpdateGoodsInvoice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateGoodsInvoiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoServiceControllerServer).UpdateGoodsInvoice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoServiceController_UpdateGoodsInvoice_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoServiceControllerServer).UpdateGoodsInvoice(ctx, req.(*UpdateGoodsInvoiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoServiceController_UpdateGoodsPay_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateGoodsPayRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoServiceControllerServer).UpdateGoodsPay(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoServiceController_UpdateGoodsPay_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoServiceControllerServer).UpdateGoodsPay(ctx, req.(*UpdateGoodsPayRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoServiceController_UpdateGoodsReturn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateGoodsReturnRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoServiceControllerServer).UpdateGoodsReturn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoServiceController_UpdateGoodsReturn_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoServiceControllerServer).UpdateGoodsReturn(ctx, req.(*UpdateGoodsReturnRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoServiceController_UpdateObjectComplain_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateObjectComplainRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoServiceControllerServer).UpdateObjectComplain(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoServiceController_UpdateObjectComplain_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoServiceControllerServer).UpdateObjectComplain(ctx, req.(*UpdateObjectComplainRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoServiceController_UpdateObjectFeedback_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateObjectFeedbackRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoServiceControllerServer).UpdateObjectFeedback(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoServiceController_UpdateObjectFeedback_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoServiceControllerServer).UpdateObjectFeedback(ctx, req.(*UpdateObjectFeedbackRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoServiceController_UpdateObjectRepair_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateObjectRepairRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoServiceControllerServer).UpdateObjectRepair(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoServiceController_UpdateObjectRepair_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoServiceControllerServer).UpdateObjectRepair(ctx, req.(*UpdateObjectRepairRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoServiceController_UpdateObjectSwap_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateObjectSwapRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoServiceControllerServer).UpdateObjectSwap(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoServiceController_UpdateObjectSwap_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoServiceControllerServer).UpdateObjectSwap(ctx, req.(*UpdateObjectSwapRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoServiceController_UpdateObjectTailor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateObjectTailorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoServiceControllerServer).UpdateObjectTailor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoServiceController_UpdateObjectTailor_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoServiceControllerServer).UpdateObjectTailor(ctx, req.(*UpdateObjectTailorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoServiceController_UpdateObjectTradeIn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateObjectTradeInRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoServiceControllerServer).UpdateObjectTradeIn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoServiceController_UpdateObjectTradeIn_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoServiceControllerServer).UpdateObjectTradeIn(ctx, req.(*UpdateObjectTradeInRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoServiceController_UpdateStockIn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateStockInRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoServiceControllerServer).UpdateStockIn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoServiceController_UpdateStockIn_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoServiceControllerServer).UpdateStockIn(ctx, req.(*UpdateStockInRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CtmItoServiceController_UpdateStockOut_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateStockOutRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CtmItoServiceControllerServer).UpdateStockOut(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CtmItoServiceController_UpdateStockOut_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CtmItoServiceControllerServer).UpdateStockOut(ctx, req.(*UpdateStockOutRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// CtmItoServiceController_ServiceDesc is the grpc.ServiceDesc for CtmItoServiceController service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var CtmItoServiceController_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "customer_service.customer_ito.CtmItoServiceController",
	HandlerType: (*CtmItoServiceControllerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "BulkCreateGoodsDeliver",
			Handler:    _CtmItoServiceController_BulkCreateGoodsDeliver_Handler,
		},
		{
			MethodName: "BulkCreateGoodsReturn",
			Handler:    _CtmItoServiceController_BulkCreateGoodsReturn_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _CtmItoServiceController_Create_Handler,
		},
		{
			MethodName: "CreateGoodsDeliver",
			Handler:    _CtmItoServiceController_CreateGoodsDeliver_Handler,
		},
		{
			MethodName: "CreateGoodsInvoice",
			Handler:    _CtmItoServiceController_CreateGoodsInvoice_Handler,
		},
		{
			MethodName: "CreateGoodsPay",
			Handler:    _CtmItoServiceController_CreateGoodsPay_Handler,
		},
		{
			MethodName: "CreateGoodsReturn",
			Handler:    _CtmItoServiceController_CreateGoodsReturn_Handler,
		},
		{
			MethodName: "CreateObjectComplain",
			Handler:    _CtmItoServiceController_CreateObjectComplain_Handler,
		},
		{
			MethodName: "CreateObjectFeedback",
			Handler:    _CtmItoServiceController_CreateObjectFeedback_Handler,
		},
		{
			MethodName: "CreateObjectRepair",
			Handler:    _CtmItoServiceController_CreateObjectRepair_Handler,
		},
		{
			MethodName: "CreateObjectSwap",
			Handler:    _CtmItoServiceController_CreateObjectSwap_Handler,
		},
		{
			MethodName: "CreateObjectTailor",
			Handler:    _CtmItoServiceController_CreateObjectTailor_Handler,
		},
		{
			MethodName: "CreateObjectTradeIn",
			Handler:    _CtmItoServiceController_CreateObjectTradeIn_Handler,
		},
		{
			MethodName: "CreateStockIn",
			Handler:    _CtmItoServiceController_CreateStockIn_Handler,
		},
		{
			MethodName: "CreateStockOut",
			Handler:    _CtmItoServiceController_CreateStockOut_Handler,
		},
		{
			MethodName: "Destroy",
			Handler:    _CtmItoServiceController_Destroy_Handler,
		},
		{
			MethodName: "DestroyGoodsDeliver",
			Handler:    _CtmItoServiceController_DestroyGoodsDeliver_Handler,
		},
		{
			MethodName: "DestroyGoodsInvoice",
			Handler:    _CtmItoServiceController_DestroyGoodsInvoice_Handler,
		},
		{
			MethodName: "DestroyGoodsPay",
			Handler:    _CtmItoServiceController_DestroyGoodsPay_Handler,
		},
		{
			MethodName: "DestroyGoodsReturn",
			Handler:    _CtmItoServiceController_DestroyGoodsReturn_Handler,
		},
		{
			MethodName: "DestroyObjectComplain",
			Handler:    _CtmItoServiceController_DestroyObjectComplain_Handler,
		},
		{
			MethodName: "DestroyObjectFeedback",
			Handler:    _CtmItoServiceController_DestroyObjectFeedback_Handler,
		},
		{
			MethodName: "DestroyObjectRepair",
			Handler:    _CtmItoServiceController_DestroyObjectRepair_Handler,
		},
		{
			MethodName: "DestroyObjectSwap",
			Handler:    _CtmItoServiceController_DestroyObjectSwap_Handler,
		},
		{
			MethodName: "DestroyObjectTailor",
			Handler:    _CtmItoServiceController_DestroyObjectTailor_Handler,
		},
		{
			MethodName: "DestroyObjectTradeIn",
			Handler:    _CtmItoServiceController_DestroyObjectTradeIn_Handler,
		},
		{
			MethodName: "DestroyStockIn",
			Handler:    _CtmItoServiceController_DestroyStockIn_Handler,
		},
		{
			MethodName: "DestroyStockOut",
			Handler:    _CtmItoServiceController_DestroyStockOut_Handler,
		},
		{
			MethodName: "List",
			Handler:    _CtmItoServiceController_List_Handler,
		},
		{
			MethodName: "ListGoodsDeliver",
			Handler:    _CtmItoServiceController_ListGoodsDeliver_Handler,
		},
		{
			MethodName: "ListGoodsInvoice",
			Handler:    _CtmItoServiceController_ListGoodsInvoice_Handler,
		},
		{
			MethodName: "ListGoodsPay",
			Handler:    _CtmItoServiceController_ListGoodsPay_Handler,
		},
		{
			MethodName: "ListGoodsReturn",
			Handler:    _CtmItoServiceController_ListGoodsReturn_Handler,
		},
		{
			MethodName: "ListObjectComplain",
			Handler:    _CtmItoServiceController_ListObjectComplain_Handler,
		},
		{
			MethodName: "ListObjectFeedback",
			Handler:    _CtmItoServiceController_ListObjectFeedback_Handler,
		},
		{
			MethodName: "ListObjectRepair",
			Handler:    _CtmItoServiceController_ListObjectRepair_Handler,
		},
		{
			MethodName: "ListObjectSwap",
			Handler:    _CtmItoServiceController_ListObjectSwap_Handler,
		},
		{
			MethodName: "ListObjectTailor",
			Handler:    _CtmItoServiceController_ListObjectTailor_Handler,
		},
		{
			MethodName: "ListObjectTradeIn",
			Handler:    _CtmItoServiceController_ListObjectTradeIn_Handler,
		},
		{
			MethodName: "ListStockIn",
			Handler:    _CtmItoServiceController_ListStockIn_Handler,
		},
		{
			MethodName: "ListStockOut",
			Handler:    _CtmItoServiceController_ListStockOut_Handler,
		},
		{
			MethodName: "PartialUpdate",
			Handler:    _CtmItoServiceController_PartialUpdate_Handler,
		},
		{
			MethodName: "Retrieve",
			Handler:    _CtmItoServiceController_Retrieve_Handler,
		},
		{
			MethodName: "RetrieveGoodsDeliver",
			Handler:    _CtmItoServiceController_RetrieveGoodsDeliver_Handler,
		},
		{
			MethodName: "RetrieveGoodsInvoice",
			Handler:    _CtmItoServiceController_RetrieveGoodsInvoice_Handler,
		},
		{
			MethodName: "RetrieveGoodsPay",
			Handler:    _CtmItoServiceController_RetrieveGoodsPay_Handler,
		},
		{
			MethodName: "RetrieveGoodsReturn",
			Handler:    _CtmItoServiceController_RetrieveGoodsReturn_Handler,
		},
		{
			MethodName: "RetrieveObjectComplain",
			Handler:    _CtmItoServiceController_RetrieveObjectComplain_Handler,
		},
		{
			MethodName: "RetrieveObjectFeedback",
			Handler:    _CtmItoServiceController_RetrieveObjectFeedback_Handler,
		},
		{
			MethodName: "RetrieveObjectRepair",
			Handler:    _CtmItoServiceController_RetrieveObjectRepair_Handler,
		},
		{
			MethodName: "RetrieveObjectSwap",
			Handler:    _CtmItoServiceController_RetrieveObjectSwap_Handler,
		},
		{
			MethodName: "RetrieveObjectTailor",
			Handler:    _CtmItoServiceController_RetrieveObjectTailor_Handler,
		},
		{
			MethodName: "RetrieveObjectTradeIn",
			Handler:    _CtmItoServiceController_RetrieveObjectTradeIn_Handler,
		},
		{
			MethodName: "RetrieveStockIn",
			Handler:    _CtmItoServiceController_RetrieveStockIn_Handler,
		},
		{
			MethodName: "RetrieveStockOut",
			Handler:    _CtmItoServiceController_RetrieveStockOut_Handler,
		},
		{
			MethodName: "ServiceNextSid",
			Handler:    _CtmItoServiceController_ServiceNextSid_Handler,
		},
		{
			MethodName: "ServiceOptions",
			Handler:    _CtmItoServiceController_ServiceOptions_Handler,
		},
		{
			MethodName: "ServiceStatusCount",
			Handler:    _CtmItoServiceController_ServiceStatusCount_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _CtmItoServiceController_Update_Handler,
		},
		{
			MethodName: "UpdateGoodsDeliver",
			Handler:    _CtmItoServiceController_UpdateGoodsDeliver_Handler,
		},
		{
			MethodName: "UpdateGoodsInvoice",
			Handler:    _CtmItoServiceController_UpdateGoodsInvoice_Handler,
		},
		{
			MethodName: "UpdateGoodsPay",
			Handler:    _CtmItoServiceController_UpdateGoodsPay_Handler,
		},
		{
			MethodName: "UpdateGoodsReturn",
			Handler:    _CtmItoServiceController_UpdateGoodsReturn_Handler,
		},
		{
			MethodName: "UpdateObjectComplain",
			Handler:    _CtmItoServiceController_UpdateObjectComplain_Handler,
		},
		{
			MethodName: "UpdateObjectFeedback",
			Handler:    _CtmItoServiceController_UpdateObjectFeedback_Handler,
		},
		{
			MethodName: "UpdateObjectRepair",
			Handler:    _CtmItoServiceController_UpdateObjectRepair_Handler,
		},
		{
			MethodName: "UpdateObjectSwap",
			Handler:    _CtmItoServiceController_UpdateObjectSwap_Handler,
		},
		{
			MethodName: "UpdateObjectTailor",
			Handler:    _CtmItoServiceController_UpdateObjectTailor_Handler,
		},
		{
			MethodName: "UpdateObjectTradeIn",
			Handler:    _CtmItoServiceController_UpdateObjectTradeIn_Handler,
		},
		{
			MethodName: "UpdateStockIn",
			Handler:    _CtmItoServiceController_UpdateStockIn_Handler,
		},
		{
			MethodName: "UpdateStockOut",
			Handler:    _CtmItoServiceController_UpdateStockOut_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service_ito.proto",
}
