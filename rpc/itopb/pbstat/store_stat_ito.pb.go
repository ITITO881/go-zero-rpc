// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.19.4
// source: store_stat_ito.proto

package pbstat

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StatHmxSalesListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatMonth      *string `protobuf:"bytes,1,opt,name=stat_month,json=statMonth,proto3,oneof" json:"stat_month,omitempty"`
	TradeDate      *string `protobuf:"bytes,2,opt,name=trade_date,json=tradeDate,proto3,oneof" json:"trade_date,omitempty"`
	RetailAmount   float32 `protobuf:"fixed32,3,opt,name=retail_amount,json=retailAmount,proto3" json:"retail_amount,omitempty"`
	Num            int32   `protobuf:"varint,4,opt,name=num,proto3" json:"num,omitempty"`
	ColName        *string `protobuf:"bytes,5,opt,name=col_name,json=colName,proto3,oneof" json:"col_name,omitempty"`
	Filters        *string `protobuf:"bytes,6,opt,name=filters,proto3,oneof" json:"filters,omitempty"`
	DiscountAmount float32 `protobuf:"fixed32,7,opt,name=discount_amount,json=discountAmount,proto3" json:"discount_amount,omitempty"`
}

func (x *StatHmxSalesListRequest) Reset() {
	*x = StatHmxSalesListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_stat_ito_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatHmxSalesListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatHmxSalesListRequest) ProtoMessage() {}

func (x *StatHmxSalesListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_store_stat_ito_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatHmxSalesListRequest.ProtoReflect.Descriptor instead.
func (*StatHmxSalesListRequest) Descriptor() ([]byte, []int) {
	return file_store_stat_ito_proto_rawDescGZIP(), []int{0}
}

func (x *StatHmxSalesListRequest) GetStatMonth() string {
	if x != nil && x.StatMonth != nil {
		return *x.StatMonth
	}
	return ""
}

func (x *StatHmxSalesListRequest) GetTradeDate() string {
	if x != nil && x.TradeDate != nil {
		return *x.TradeDate
	}
	return ""
}

func (x *StatHmxSalesListRequest) GetRetailAmount() float32 {
	if x != nil {
		return x.RetailAmount
	}
	return 0
}

func (x *StatHmxSalesListRequest) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *StatHmxSalesListRequest) GetColName() string {
	if x != nil && x.ColName != nil {
		return *x.ColName
	}
	return ""
}

func (x *StatHmxSalesListRequest) GetFilters() string {
	if x != nil && x.Filters != nil {
		return *x.Filters
	}
	return ""
}

func (x *StatHmxSalesListRequest) GetDiscountAmount() float32 {
	if x != nil {
		return x.DiscountAmount
	}
	return 0
}

type StatHmxSalesListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*StatHmxSalesResponse `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Count   int32                   `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *StatHmxSalesListResponse) Reset() {
	*x = StatHmxSalesListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_stat_ito_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatHmxSalesListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatHmxSalesListResponse) ProtoMessage() {}

func (x *StatHmxSalesListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_store_stat_ito_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatHmxSalesListResponse.ProtoReflect.Descriptor instead.
func (*StatHmxSalesListResponse) Descriptor() ([]byte, []int) {
	return file_store_stat_ito_proto_rawDescGZIP(), []int{1}
}

func (x *StatHmxSalesListResponse) GetResults() []*StatHmxSalesResponse {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *StatHmxSalesListResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type StatHmxSalesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatMonth      *string `protobuf:"bytes,1,opt,name=stat_month,json=statMonth,proto3,oneof" json:"stat_month,omitempty"`
	TradeDate      *string `protobuf:"bytes,2,opt,name=trade_date,json=tradeDate,proto3,oneof" json:"trade_date,omitempty"`
	RetailAmount   float32 `protobuf:"fixed32,3,opt,name=retail_amount,json=retailAmount,proto3" json:"retail_amount,omitempty"`
	Num            int32   `protobuf:"varint,4,opt,name=num,proto3" json:"num,omitempty"`
	ColName        *string `protobuf:"bytes,5,opt,name=col_name,json=colName,proto3,oneof" json:"col_name,omitempty"`
	DiscountAmount float32 `protobuf:"fixed32,6,opt,name=discount_amount,json=discountAmount,proto3" json:"discount_amount,omitempty"`
}

func (x *StatHmxSalesResponse) Reset() {
	*x = StatHmxSalesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_stat_ito_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatHmxSalesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatHmxSalesResponse) ProtoMessage() {}

func (x *StatHmxSalesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_store_stat_ito_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatHmxSalesResponse.ProtoReflect.Descriptor instead.
func (*StatHmxSalesResponse) Descriptor() ([]byte, []int) {
	return file_store_stat_ito_proto_rawDescGZIP(), []int{2}
}

func (x *StatHmxSalesResponse) GetStatMonth() string {
	if x != nil && x.StatMonth != nil {
		return *x.StatMonth
	}
	return ""
}

func (x *StatHmxSalesResponse) GetTradeDate() string {
	if x != nil && x.TradeDate != nil {
		return *x.TradeDate
	}
	return ""
}

func (x *StatHmxSalesResponse) GetRetailAmount() float32 {
	if x != nil {
		return x.RetailAmount
	}
	return 0
}

func (x *StatHmxSalesResponse) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *StatHmxSalesResponse) GetColName() string {
	if x != nil && x.ColName != nil {
		return *x.ColName
	}
	return ""
}

func (x *StatHmxSalesResponse) GetDiscountAmount() float32 {
	if x != nil {
		return x.DiscountAmount
	}
	return 0
}

type StoreTradesListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*StoreTradesResponse `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Count   int32                  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *StoreTradesListResponse) Reset() {
	*x = StoreTradesListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_stat_ito_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreTradesListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreTradesListResponse) ProtoMessage() {}

func (x *StoreTradesListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_store_stat_ito_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreTradesListResponse.ProtoReflect.Descriptor instead.
func (*StoreTradesListResponse) Descriptor() ([]byte, []int) {
	return file_store_stat_ito_proto_rawDescGZIP(), []int{3}
}

func (x *StoreTradesListResponse) GetResults() []*StoreTradesResponse {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *StoreTradesListResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type StoreTradesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters *string `protobuf:"bytes,1,opt,name=filters,proto3,oneof" json:"filters,omitempty"`
}

func (x *StoreTradesRequest) Reset() {
	*x = StoreTradesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_stat_ito_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreTradesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreTradesRequest) ProtoMessage() {}

func (x *StoreTradesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_store_stat_ito_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreTradesRequest.ProtoReflect.Descriptor instead.
func (*StoreTradesRequest) Descriptor() ([]byte, []int) {
	return file_store_stat_ito_proto_rawDescGZIP(), []int{4}
}

func (x *StoreTradesRequest) GetFilters() string {
	if x != nil && x.Filters != nil {
		return *x.Filters
	}
	return ""
}

type StoreTradesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int32                     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TradeEmployees []*TradeEmployeesResponse `protobuf:"bytes,2,rep,name=trade_employees,json=tradeEmployees,proto3" json:"trade_employees,omitempty"`
	TradeDetails   []*TradeDetailsResponse   `protobuf:"bytes,3,rep,name=trade_details,json=tradeDetails,proto3" json:"trade_details,omitempty"`
	Created        string                    `protobuf:"bytes,4,opt,name=created,proto3" json:"created,omitempty"`
	Tid            string                    `protobuf:"bytes,5,opt,name=tid,proto3" json:"tid,omitempty"`
	TradeDate      string                    `protobuf:"bytes,6,opt,name=trade_date,json=tradeDate,proto3" json:"trade_date,omitempty"`
	StoreNo        string                    `protobuf:"bytes,7,opt,name=store_no,json=storeNo,proto3" json:"store_no,omitempty"`
	StoreName      string                    `protobuf:"bytes,8,opt,name=store_name,json=storeName,proto3" json:"store_name,omitempty"`
}

func (x *StoreTradesResponse) Reset() {
	*x = StoreTradesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_stat_ito_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreTradesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreTradesResponse) ProtoMessage() {}

func (x *StoreTradesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_store_stat_ito_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreTradesResponse.ProtoReflect.Descriptor instead.
func (*StoreTradesResponse) Descriptor() ([]byte, []int) {
	return file_store_stat_ito_proto_rawDescGZIP(), []int{5}
}

func (x *StoreTradesResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *StoreTradesResponse) GetTradeEmployees() []*TradeEmployeesResponse {
	if x != nil {
		return x.TradeEmployees
	}
	return nil
}

func (x *StoreTradesResponse) GetTradeDetails() []*TradeDetailsResponse {
	if x != nil {
		return x.TradeDetails
	}
	return nil
}

func (x *StoreTradesResponse) GetCreated() string {
	if x != nil {
		return x.Created
	}
	return ""
}

func (x *StoreTradesResponse) GetTid() string {
	if x != nil {
		return x.Tid
	}
	return ""
}

func (x *StoreTradesResponse) GetTradeDate() string {
	if x != nil {
		return x.TradeDate
	}
	return ""
}

func (x *StoreTradesResponse) GetStoreNo() string {
	if x != nil {
		return x.StoreNo
	}
	return ""
}

func (x *StoreTradesResponse) GetStoreName() string {
	if x != nil {
		return x.StoreName
	}
	return ""
}

type TradeDetailsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ProdCode     *string `protobuf:"bytes,2,opt,name=prod_code,json=prodCode,proto3,oneof" json:"prod_code,omitempty"`
	SpecCode     *string `protobuf:"bytes,3,opt,name=spec_code,json=specCode,proto3,oneof" json:"spec_code,omitempty"`
	ProdName     *string `protobuf:"bytes,4,opt,name=prod_name,json=prodName,proto3,oneof" json:"prod_name,omitempty"`
	RetailPrice  float32 `protobuf:"fixed32,5,opt,name=retail_price,json=retailPrice,proto3" json:"retail_price,omitempty"`
	RetailAmount float32 `protobuf:"fixed32,6,opt,name=retail_amount,json=retailAmount,proto3" json:"retail_amount,omitempty"`
	Num          int32   `protobuf:"varint,7,opt,name=num,proto3" json:"num,omitempty"`
	Status       string  `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`
	Style        *string `protobuf:"bytes,9,opt,name=style,proto3,oneof" json:"style,omitempty"`
	Trade        int64   `protobuf:"varint,10,opt,name=trade,proto3" json:"trade,omitempty"`
}

func (x *TradeDetailsResponse) Reset() {
	*x = TradeDetailsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_stat_ito_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TradeDetailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeDetailsResponse) ProtoMessage() {}

func (x *TradeDetailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_store_stat_ito_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeDetailsResponse.ProtoReflect.Descriptor instead.
func (*TradeDetailsResponse) Descriptor() ([]byte, []int) {
	return file_store_stat_ito_proto_rawDescGZIP(), []int{6}
}

func (x *TradeDetailsResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TradeDetailsResponse) GetProdCode() string {
	if x != nil && x.ProdCode != nil {
		return *x.ProdCode
	}
	return ""
}

func (x *TradeDetailsResponse) GetSpecCode() string {
	if x != nil && x.SpecCode != nil {
		return *x.SpecCode
	}
	return ""
}

func (x *TradeDetailsResponse) GetProdName() string {
	if x != nil && x.ProdName != nil {
		return *x.ProdName
	}
	return ""
}

func (x *TradeDetailsResponse) GetRetailPrice() float32 {
	if x != nil {
		return x.RetailPrice
	}
	return 0
}

func (x *TradeDetailsResponse) GetRetailAmount() float32 {
	if x != nil {
		return x.RetailAmount
	}
	return 0
}

func (x *TradeDetailsResponse) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *TradeDetailsResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *TradeDetailsResponse) GetStyle() string {
	if x != nil && x.Style != nil {
		return *x.Style
	}
	return ""
}

func (x *TradeDetailsResponse) GetTrade() int64 {
	if x != nil {
		return x.Trade
	}
	return 0
}

type TradeEmployeesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	EmployeeNo   string  `protobuf:"bytes,2,opt,name=employee_no,json=employeeNo,proto3" json:"employee_no,omitempty"`
	EmployeeName string  `protobuf:"bytes,3,opt,name=employee_name,json=employeeName,proto3" json:"employee_name,omitempty"`
	SharePercent float32 `protobuf:"fixed32,4,opt,name=share_percent,json=sharePercent,proto3" json:"share_percent,omitempty"`
	Trade        int64   `protobuf:"varint,5,opt,name=trade,proto3" json:"trade,omitempty"`
}

func (x *TradeEmployeesResponse) Reset() {
	*x = TradeEmployeesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_stat_ito_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TradeEmployeesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeEmployeesResponse) ProtoMessage() {}

func (x *TradeEmployeesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_store_stat_ito_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeEmployeesResponse.ProtoReflect.Descriptor instead.
func (*TradeEmployeesResponse) Descriptor() ([]byte, []int) {
	return file_store_stat_ito_proto_rawDescGZIP(), []int{7}
}

func (x *TradeEmployeesResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TradeEmployeesResponse) GetEmployeeNo() string {
	if x != nil {
		return x.EmployeeNo
	}
	return ""
}

func (x *TradeEmployeesResponse) GetEmployeeName() string {
	if x != nil {
		return x.EmployeeName
	}
	return ""
}

func (x *TradeEmployeesResponse) GetSharePercent() float32 {
	if x != nil {
		return x.SharePercent
	}
	return 0
}

func (x *TradeEmployeesResponse) GetTrade() int64 {
	if x != nil {
		return x.Trade
	}
	return 0
}

var File_store_stat_ito_proto protoreflect.FileDescriptor

var file_store_stat_ito_proto_rawDesc = []byte{
	0x0a, 0x14, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x5f, 0x69, 0x74, 0x6f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1c, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x5f, 0x69, 0x74, 0x6f, 0x22, 0xb7, 0x02, 0x0a, 0x17, 0x53, 0x74, 0x61, 0x74, 0x48, 0x6d, 0x78,
	0x53, 0x61, 0x6c, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x22, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x5f, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x4d, 0x6f, 0x6e, 0x74,
	0x68, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x09, 0x74, 0x72, 0x61, 0x64,
	0x65, 0x44, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x0c, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x6e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12,
	0x1e, 0x0a, 0x08, 0x63, 0x6f, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x02, 0x52, 0x07, 0x63, 0x6f, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x1d, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x03, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x88, 0x01, 0x01, 0x12, 0x27,
	0x0a, 0x0f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x5f, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x63, 0x6f, 0x6c, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x22, 0x7e,
	0x0a, 0x18, 0x53, 0x74, 0x61, 0x74, 0x48, 0x6d, 0x78, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x07, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x48,
	0x6d, 0x78, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x89,
	0x02, 0x0a, 0x14, 0x53, 0x74, 0x61, 0x74, 0x48, 0x6d, 0x78, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x5f,
	0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x74, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x74,
	0x72, 0x61, 0x64, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x01, 0x52, 0x09, 0x74, 0x72, 0x61, 0x64, 0x65, 0x44, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x23, 0x0a, 0x0d, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x1e, 0x0a, 0x08, 0x63, 0x6f, 0x6c, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x07, 0x63, 0x6f, 0x6c, 0x4e,
	0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x0e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42,
	0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x5f, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x42, 0x0d,
	0x0a, 0x0b, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x42, 0x0b, 0x0a,
	0x09, 0x5f, 0x63, 0x6f, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x7c, 0x0a, 0x17, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x3f, 0x0a, 0x12, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a,
	0x08, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x22, 0xe2, 0x02, 0x0a, 0x13, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x5d, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x65, 0x6d, 0x70, 0x6c, 0x6f,
	0x79, 0x65, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x45,
	0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x0e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x73,
	0x12, 0x57, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0c, 0x74, 0x72, 0x61,
	0x64, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x74, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x72, 0x61, 0x64, 0x65,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x6e, 0x6f,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x4e, 0x6f, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xe3,
	0x02, 0x0a, 0x14, 0x54, 0x72, 0x61, 0x64, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x70, 0x72,
	0x6f, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x73, 0x70, 0x65,
	0x63, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x08,
	0x73, 0x70, 0x65, 0x63, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x70,
	0x72, 0x6f, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02,
	0x52, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a,
	0x0c, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x0b, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x19, 0x0a, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03,
	0x52, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x72,
	0x61, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x72, 0x61, 0x64, 0x65,
	0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x0c,
	0x0a, 0x0a, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x0c, 0x0a, 0x0a,
	0x5f, 0x70, 0x72, 0x6f, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x73,
	0x74, 0x79, 0x6c, 0x65, 0x22, 0xa9, 0x01, 0x0a, 0x16, 0x54, 0x72, 0x61, 0x64, 0x65, 0x45, 0x6d,
	0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x4e, 0x6f,
	0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x70,
	0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x72,
	0x61, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x72, 0x61, 0x64, 0x65,
	0x32, 0x8c, 0x02, 0x0a, 0x16, 0x53, 0x74, 0x61, 0x74, 0x48, 0x6d, 0x78, 0x53, 0x61, 0x6c, 0x65,
	0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x77, 0x0a, 0x04, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x35, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x5f, 0x69,
	0x74, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x48, 0x6d, 0x78, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x48, 0x6d,
	0x78, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x79, 0x0a, 0x0c, 0x54, 0x72, 0x61, 0x64, 0x65, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x12, 0x30, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x5f,
	0x69, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x5f, 0x69, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65,
	0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42,
	0x0b, 0x5a, 0x09, 0x2e, 0x2e, 0x2f, 0x70, 0x62, 0x73, 0x74, 0x61, 0x74, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_store_stat_ito_proto_rawDescOnce sync.Once
	file_store_stat_ito_proto_rawDescData = file_store_stat_ito_proto_rawDesc
)

func file_store_stat_ito_proto_rawDescGZIP() []byte {
	file_store_stat_ito_proto_rawDescOnce.Do(func() {
		file_store_stat_ito_proto_rawDescData = protoimpl.X.CompressGZIP(file_store_stat_ito_proto_rawDescData)
	})
	return file_store_stat_ito_proto_rawDescData
}

var file_store_stat_ito_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_store_stat_ito_proto_goTypes = []interface{}{
	(*StatHmxSalesListRequest)(nil),  // 0: store_service.store_stat_ito.StatHmxSalesListRequest
	(*StatHmxSalesListResponse)(nil), // 1: store_service.store_stat_ito.StatHmxSalesListResponse
	(*StatHmxSalesResponse)(nil),     // 2: store_service.store_stat_ito.StatHmxSalesResponse
	(*StoreTradesListResponse)(nil),  // 3: store_service.store_stat_ito.StoreTradesListResponse
	(*StoreTradesRequest)(nil),       // 4: store_service.store_stat_ito.StoreTradesRequest
	(*StoreTradesResponse)(nil),      // 5: store_service.store_stat_ito.StoreTradesResponse
	(*TradeDetailsResponse)(nil),     // 6: store_service.store_stat_ito.TradeDetailsResponse
	(*TradeEmployeesResponse)(nil),   // 7: store_service.store_stat_ito.TradeEmployeesResponse
}
var file_store_stat_ito_proto_depIdxs = []int32{
	2, // 0: store_service.store_stat_ito.StatHmxSalesListResponse.results:type_name -> store_service.store_stat_ito.StatHmxSalesResponse
	5, // 1: store_service.store_stat_ito.StoreTradesListResponse.results:type_name -> store_service.store_stat_ito.StoreTradesResponse
	7, // 2: store_service.store_stat_ito.StoreTradesResponse.trade_employees:type_name -> store_service.store_stat_ito.TradeEmployeesResponse
	6, // 3: store_service.store_stat_ito.StoreTradesResponse.trade_details:type_name -> store_service.store_stat_ito.TradeDetailsResponse
	0, // 4: store_service.store_stat_ito.StatHmxSalesController.List:input_type -> store_service.store_stat_ito.StatHmxSalesListRequest
	4, // 5: store_service.store_stat_ito.StatHmxSalesController.TradeDetails:input_type -> store_service.store_stat_ito.StoreTradesRequest
	1, // 6: store_service.store_stat_ito.StatHmxSalesController.List:output_type -> store_service.store_stat_ito.StatHmxSalesListResponse
	3, // 7: store_service.store_stat_ito.StatHmxSalesController.TradeDetails:output_type -> store_service.store_stat_ito.StoreTradesListResponse
	6, // [6:8] is the sub-list for method output_type
	4, // [4:6] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_store_stat_ito_proto_init() }
func file_store_stat_ito_proto_init() {
	if File_store_stat_ito_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_store_stat_ito_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatHmxSalesListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_store_stat_ito_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatHmxSalesListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_store_stat_ito_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatHmxSalesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_store_stat_ito_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreTradesListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_store_stat_ito_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreTradesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_store_stat_ito_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreTradesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_store_stat_ito_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TradeDetailsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_store_stat_ito_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TradeEmployeesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_store_stat_ito_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_store_stat_ito_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_store_stat_ito_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_store_stat_ito_proto_msgTypes[6].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_store_stat_ito_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_store_stat_ito_proto_goTypes,
		DependencyIndexes: file_store_stat_ito_proto_depIdxs,
		MessageInfos:      file_store_stat_ito_proto_msgTypes,
	}.Build()
	File_store_stat_ito_proto = out.File
	file_store_stat_ito_proto_rawDesc = nil
	file_store_stat_ito_proto_goTypes = nil
	file_store_stat_ito_proto_depIdxs = nil
}
